{"section_id": "1.0", "title": "1.0 Initial release Revision 1.0 5 July, 2012", "content": "", "page_start": 10, "page_end": 9, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1.0", "title": "1.1 Including errata through 31-October-2012 31 October 2012", "content": "", "page_start": 10, "page_end": 9, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1.0", "title": "1.2 Including errata through 26-June-2013 26 June, 2013", "content": "", "page_start": 10, "page_end": 9, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1.0", "title": "1.3 Including errata through 11-March-2014 11 March 2014", "content": "", "page_start": 10, "page_end": 9, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2.0", "title": "1.0 Initial release Revision 2.0 11 August 2014", "content": "", "page_start": 10, "page_end": 9, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2.0", "title": "1.1 Including errata through 7-May 2015 7 May 2015", "content": "", "page_start": 10, "page_end": 9, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2.0", "title": "1.2 Including errata through 25-March-2016 25 March 2016", "content": "Including errata through 11-January-2017", "page_start": 10, "page_end": 9, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": []}
{"section_id": "2.0", "title": "1.3 11 January 2017", "content": "", "page_start": 10, "page_end": 9, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3.0", "title": "1.0 Initial release Revision 3.0 11 December 2015", "content": "", "page_start": 10, "page_end": 9, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3.0", "title": "1.0a Including errata through 25-March-2016 25 March 2016", "content": "", "page_start": 10, "page_end": 9, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3.0", "title": "1.1 Including errata through 12-January-2016 12 January 2017", "content": "Page 10 USB Power Delivery Specification Revision 3.0, Version 1.1 INTELLECTUAL PROPERTY DISCLAIMER THIS SPECIFICATION IS PROVIDED TO YOU “AS IS” WITH NO WARRANTIES WHATSOEVER, INCLUDING ANY WARRANTY OF MERCHANTABILITY, NON-INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE. THE AUTHORS OF THIS SPECIFICATION DISCLAIM ALL LIABILITY, INCLUDING LIABILITY FOR INFRINGEMENT OF ANY PROPRIETARY RIGHTS, RELATING TO USE OR IMPLEMENTATION OF INFORMATION IN THIS SPECIFICATION. THE PROVISION OF THIS SPECIFICATION TO YOU DOES NOT PROVIDE YOU WITH ANY LICENSE, EXPRESS OR IMPLIED, BY ESTOPPEL OR OTHERWISE, TO ANY INTELLECTUAL PROPERTY RIGHTS. Please send comments via electronic mail to techsup@usb.org For industry information, refer to the USB Implementers Forum web page at http://www.usb.org All product names are trademarks, registered trademarks, or service marks of their respective owners. Copyright © 2010-2017 Apple Inc, Hewlett-Packard Company, Intel Corporation, Microsoft Corporation, Renesas, STMicroelectronics, and Texas Instruments All rights reserved. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 11 Table of Contents Editors ....................................................................................................................... 2 Contributors .............................................................................................................. 2 Revision History ........................................................................................................10 INTELLECTUAL PROPERTY DISCLAIMER ......................................................................11 Table of Contents .....................................................................................................12 List of Tables ............................................................................................................21 List of Figures ...........................................................................................................27 1. Introduction .......................................................................................................35 1.1 Overview ......................................................................................................................................................................................... 35 1.2 Purpose ............................................................................................................................................................................................ 36 1.3 Scope ................................................................................................................................................................................................. 36 1.4 Conventions ................................................................................................................................................................................... 36 1.4.1 Precedence................................................................................................................................................................................ 36 1.4.2 Keywords................................................................................................................................................................................... 36 1.4.3 Numbering ................................................................................................................................................................................ 38 1.5 Related Documents .................................................................................................................................................................... 38 1.6 Terms and Abbreviations........................................................................................................................................................ 39 1.7 Parameter Values ........................................................................................................................................................................ 45 1.8 Changes From Revision 2.0 .................................................................................................................................................... 46 1.9 Compatibility with Revision 2.0 ........................................................................................................................................... 46 2. Overview ...........................................................................................................47 2.1 Introduction................................................................................................................................................................................... 47 2.2 Section Overview ........................................................................................................................................................................ 48 2.3 Revision 2.0 Changes and Compatibility ......................................................................................................................... 49 2.3.1 Changes From Revision 2.0 .............................................................................................................................................. 49 2.3.2 Compatibility with Revision 2.0 ..................................................................................................................................... 49 2.4 USB Power Delivery Capable Devices ............................................................................................................................... 50 2.5 SOP* Communication ................................................................................................................................................................ 51 2.5.1 Introduction ............................................................................................................................................................................. 51 Page 12 USB Power Delivery Specification Revision 3.0, Version 1.1 2.5.2 SOP* Collision Avoidance .................................................................................................................................................. 51 2.5.3 SOP Communication ............................................................................................................................................................. 51 2.5.4 SOP’/SOP’’ Communication with Cable Plugs .......................................................................................................... 51 2.6 Operational Overview ............................................................................................................................................................... 53 2.6.1 Source Operation ................................................................................................................................................................... 53 2.6.2 Sink Operation ........................................................................................................................................................................ 55 2.6.3 Cable Plugs ................................................................................................................................................................................ 56 2.7 Architectural Overview ............................................................................................................................................................ 58 2.7.1 Policy ........................................................................................................................................................................................... 60 2.7.2 Message Formation and Transmission ....................................................................................................................... 61 2.7.3 Collision Avoidance .............................................................................................................................................................. 61 2.7.4 Power supply ........................................................................................................................................................................... 62 2.7.5 DFP/UFP .................................................................................................................................................................................... 62 2.7.6 VCONN Source ........................................................................................................................................................................... 62 2.7.7 Cable and Connectors .......................................................................................................................................................... 63 2.7.8 Interactions between Non-PD, BC and PD devices................................................................................................ 63 2.7.9 Power Rules ............................................................................................................................................................................. 63 3. USB Type-A and USB Type-B Cable Assemblies and Connectors ...........................64 4. Electrical Requirements ......................................................................................65 4.1 Interoperability with other USB Specifications ........................................................................................................... 65 4.2 Dead Battery Detection / Unpowered Port Detection .............................................................................................. 65 4.3 Cable IR Ground Drop (IR Drop) ......................................................................................................................................... 65 4.4 Cable Type Detection ................................................................................................................................................................ 65 5. Physical Layer .....................................................................................................66 5.1 Physical Layer Overview ......................................................................................................................................................... 66 5.2 Physical Layer Functions......................................................................................................................................................... 66 5.3 Symbol Encoding ......................................................................................................................................................................... 67 5.4 Ordered Sets .................................................................................................................................................................................. 68 5.5 Transmitted Bit Ordering ....................................................................................................................................................... 69 5.6 Packet Format ............................................................................................................................................................................... 70 5.6.1 Packet Framing ....................................................................................................................................................................... 70 5.6.2 CRC ............................................................................................................................................................................................... 72 5.6.3 Packet Detection Errors ..................................................................................................................................................... 74 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 13 5.6.4 Hard Reset................................................................................................................................................................................. 74 5.6.5 Cable Reset ............................................................................................................................................................................... 75 5.7 Collision Avoidance .................................................................................................................................................................... 75 5.8 Biphase Mark Coding (BMC) Signaling Scheme ........................................................................................................... 76 5.8.1 Encoding and signaling ....................................................................................................................................................... 76 5.8.2 Transmit and Receive Masks ........................................................................................................................................... 79 5.8.3 Transmitter Load Model .................................................................................................................................................... 86 5.8.4 BMC Common specifications ............................................................................................................................................ 87 5.8.5 BMC Transmitter Specifications ..................................................................................................................................... 87 5.8.6 BMC Receiver Specifications ............................................................................................................................................ 90 5.9 Built in Self-Test (BIST) ........................................................................................................................................................... 94 5.9.1 BIST Carrier Mode ................................................................................................................................................................. 94 5.9.2 BIST Test Data ......................................................................................................................................................................... 94 6. Protocol Layer ....................................................................................................95 6.1 Overview ......................................................................................................................................................................................... 95 6.2 Messages ......................................................................................................................................................................................... 95 6.2.1 Message Construction ......................................................................................................................................................... 95 6.3 Control Message ........................................................................................................................................................................ 106 6.3.1 GoodCRC Message ............................................................................................................................................................... 107 6.3.2 GotoMin Message ................................................................................................................................................................. 107 6.3.3 Accept Message .................................................................................................................................................................... 107 6.3.4 Reject Message ...................................................................................................................................................................... 108 6.3.5 Ping Message ......................................................................................................................................................................... 108 6.3.6 PS_RDY Message .................................................................................................................................................................. 108 6.3.7 Get_Source_Cap Message ................................................................................................................................................. 108 6.3.8 Get_Sink_Cap Message ....................................................................................................................................................... 108 6.3.9 DR_Swap Message ............................................................................................................................................................... 109 6.3.10 PR_Swap Message................................................................................................................................................................ 109 6.3.11 VCONN_Swap Message...................................................................................................................................................... 110 6.3.12 Wait Message ......................................................................................................................................................................... 110 6.3.13 Soft Reset Message .............................................................................................................................................................. 111 6.3.14 Not_Supported Message ................................................................................................................................................... 112 6.3.15 Get_Source_Cap_Extended Message ........................................................................................................................... 112 Page 14 USB Power Delivery Specification Revision 3.0, Version 1.1 6.3.16 Get_Status Message ............................................................................................................................................................. 112 6.3.17 FR_Swap Message ................................................................................................................................................................ 112 6.3.18 Get_PPS_Status ...................................................................................................................................................................... 113 6.3.19 Get_Country_Codes ............................................................................................................................................................. 113 6.4 Data Message .............................................................................................................................................................................. 113 6.4.1 Capabilities Message .......................................................................................................................................................... 114 6.4.2 Request Message .................................................................................................................................................................. 123 6.4.3 BIST Message ......................................................................................................................................................................... 128 6.4.4 Vendor Defined Message ................................................................................................................................................. 129 6.4.5 Battery_Status Message .................................................................................................................................................... 152 6.4.6 Alert Message ........................................................................................................................................................................ 153 6.4.7 Get_Country_Info Message .............................................................................................................................................. 155 6.5 Extended Message .................................................................................................................................................................... 155 6.5.1 Source_Capabilities_Extended Message ................................................................................................................... 156 6.5.2 Status Message ...................................................................................................................................................................... 160 6.5.3 Get_Battery_Cap Message ................................................................................................................................................ 162 6.5.4 Get_Battery_Status Message ........................................................................................................................................... 162 6.5.5 Battery_Capabilities Message ........................................................................................................................................ 163 6.5.6 Get_Manufacturer_Info Message .................................................................................................................................. 164 6.5.7 Manufacturer_Info Message ........................................................................................................................................... 164 6.5.8 Security Messages ............................................................................................................................................................... 165 6.5.9 Firmware Update Messages ........................................................................................................................................... 166 6.5.10 PPS_Status Message ............................................................................................................................................................ 166 6.5.11 Country_Codes Message ................................................................................................................................................... 168 6.5.12 Country_Info Message ....................................................................................................................................................... 168 6.6 Timers ............................................................................................................................................................................................ 169 6.6.1 CRCReceiveTimer ................................................................................................................................................................ 169 6.6.2 SenderResponseTimer ...................................................................................................................................................... 169 6.6.3 Capability Timers ................................................................................................................................................................ 170 6.6.4 Wait Timers and Times .................................................................................................................................................... 170 6.6.5 Power Supply Timers ........................................................................................................................................................ 171 6.6.6 NoResponseTimer ............................................................................................................................................................... 172 6.6.7 BIST Timers ............................................................................................................................................................................ 173 6.6.8 Power Role Swap Timers ................................................................................................................................................. 173 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 15 6.6.9 Soft Reset Timers ................................................................................................................................................................. 173 6.6.10 Hard Reset Timers .............................................................................................................................................................. 173 6.6.11 Structured VDM Timers ................................................................................................................................................... 174 6.6.12 VCONN Timers ........................................................................................................................................................................ 175 6.6.13 tCableMessage....................................................................................................................................................................... 176 6.6.14 DiscoverIdentityTimer...................................................................................................................................................... 176 6.6.15 Collision Avoidance Timers ............................................................................................................................................ 176 6.6.16 tFRSwapInit ............................................................................................................................................................................ 176 6.6.17 Chunking Timers.................................................................................................................................................................. 176 6.6.18 Programmable Power Supply Timers ....................................................................................................................... 177 6.6.19 Time Values and Timers................................................................................................................................................... 178 6.7 Counters ........................................................................................................................................................................................ 181 6.7.1 MessageID Counter ............................................................................................................................................................. 181 6.7.2 Retry Counter ........................................................................................................................................................................ 181 6.7.3 Hard Reset Counter ............................................................................................................................................................ 182 6.7.4 Capabilities Counter ........................................................................................................................................................... 182 6.7.5 Discover Identity Counter ............................................................................................................................................... 182 6.7.6 VDMBusyCounter ................................................................................................................................................................ 182 6.7.7 Counter Values and Counters ........................................................................................................................................ 182 6.8 Reset ................................................................................................................................................................................................ 183 6.8.1 Soft Reset and Protocol Error ........................................................................................................................................ 183 6.8.2 Hard Reset............................................................................................................................................................................... 185 6.8.3 Cable Reset ............................................................................................................................................................................. 185 6.9 Collision Avoidance .................................................................................................................................................................. 186 6.10 Message Discarding ................................................................................................................................................................. 186 6.11 State behavior ............................................................................................................................................................................. 187 6.11.1 Introduction to state diagrams used in Chapter 6 ............................................................................................... 187 6.11.2 State Operation ..................................................................................................................................................................... 187 6.11.3 List of Protocol Layer States........................................................................................................................................... 210 6.12 Message Applicability ............................................................................................................................................................. 212 6.12.1 Applicability of Control Messages ............................................................................................................................... 213 6.12.2 Applicability of Data Messages ..................................................................................................................................... 214 6.12.3 Applicability of Extended Messages ........................................................................................................................... 215 6.12.4 Applicability of Structured VDM Commands ......................................................................................................... 216 Page 16 USB Power Delivery Specification Revision 3.0, Version 1.1 6.12.5 Applicability of Reset Signaling .................................................................................................................................... 217 6.12.6 Applicability of Fast Role Swap signal ....................................................................................................................... 217 6.13 Value Parameters ...................................................................................................................................................................... 218 7. Power Supply ................................................................................................... 219 7.1 Source Requirements .............................................................................................................................................................. 219 7.1.1 Behavioral Aspects ............................................................................................................................................................. 219 7.1.2 Source Bulk Capacitance .................................................................................................................................................. 219 7.1.3 Types of Sources .................................................................................................................................................................. 219 7.1.4 Source Transitions .............................................................................................................................................................. 220 7.1.5 Response to Hard Resets ................................................................................................................................................. 224 7.1.6 Changing the Output Power Capability..................................................................................................................... 225 7.1.7 Robust Source Operation ................................................................................................................................................. 225 7.1.8 Output Voltage Tolerance and Range ........................................................................................................................ 226 7.1.9 Charging and Discharging the Bulk Capacitance on V ................................................................................. 227 BUS 7.1.10 Swap Standby for Sources ............................................................................................................................................... 227 7.1.11 Source Peak Current Operation .................................................................................................................................... 228 7.1.12 Source Capabilities Extended Parameters .............................................................................................................. 229 7.1.13 Fast Role Swap ...................................................................................................................................................................... 231 7.1.14 Non-application of V Slew Rate Limits ................................................................................................................ 232 BUS 7.2 Sink Requirements ................................................................................................................................................................... 233 7.2.1 Behavioral Aspects ............................................................................................................................................................. 233 7.2.2 Sink Bulk Capacitance ....................................................................................................................................................... 233 7.2.3 Sink Standby .......................................................................................................................................................................... 233 7.2.4 Suspend Power Consumption ....................................................................................................................................... 234 7.2.5 Zero Negotiated Current .................................................................................................................................................. 234 7.2.6 Transient Load Behavior ................................................................................................................................................. 234 7.2.7 Swap Standby for Sinks .................................................................................................................................................... 234 7.2.8 Sink Peak Current Operation ......................................................................................................................................... 234 7.2.9 Robust Sink Operation ...................................................................................................................................................... 235 7.2.10 Fast Role Swap ...................................................................................................................................................................... 236 7.3 Transitions ................................................................................................................................................................................... 237 7.3.1 Increasing the Current ...................................................................................................................................................... 238 7.3.2 Increasing the Voltage ....................................................................................................................................................... 240 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 17 7.3.3 Increasing the Voltage and Current ............................................................................................................................ 242 7.3.4 Increasing the Voltage and Decreasing the Current ........................................................................................... 244 7.3.5 Decreasing the Voltage and Increasing the Current ........................................................................................... 246 7.3.6 Decreasing the Current ..................................................................................................................................................... 248 7.3.7 Decreasing the Voltage ..................................................................................................................................................... 250 7.3.8 Decreasing the Voltage and the Current .................................................................................................................. 252 7.3.9 Sink Requested Power Role Swap ............................................................................................................................... 254 7.3.10 Source Requested Power Role Swap .......................................................................................................................... 257 7.3.11 GotoMin Current Decrease.............................................................................................................................................. 260 7.3.12 Source Initiated Hard Reset............................................................................................................................................ 262 7.3.13 Sink Initiated Hard Reset ................................................................................................................................................. 264 7.3.14 No change in Current or Voltage .................................................................................................................................. 266 7.3.15 Fast Role Swap ...................................................................................................................................................................... 268 7.3.16 Increasing the Programmable Power Supply Voltage ....................................................................................... 270 7.3.17 Decreasing the Programmable Power Supply Voltage ...................................................................................... 272 7.3.18 Changing the Source PDO or APDO............................................................................................................................. 274 7.4 Electrical Parameters .............................................................................................................................................................. 276 7.4.1 Source Electrical Parameters ......................................................................................................................................... 276 7.4.2 Sink Electrical Parameters .............................................................................................................................................. 280 7.4.3 Common Electrical Parameters .................................................................................................................................... 281 8. Device Policy .................................................................................................... 282 8.1 Overview ....................................................................................................................................................................................... 282 8.2 Device Policy Manager ........................................................................................................................................................... 282 8.2.1 Capabilities ............................................................................................................................................................................. 283 8.2.2 System Policy ......................................................................................................................................................................... 283 8.2.3 Control of Source/Sink ..................................................................................................................................................... 283 8.2.4 Cable Detection ..................................................................................................................................................................... 283 8.2.5 Managing Power Requirements ................................................................................................................................... 284 8.2.6 Use of “Unconstrained Power” bit with Batteries and AC supplies............................................................. 286 8.2.7 Interface to the Policy Engine ........................................................................................................................................ 288 8.3 Policy Engine ............................................................................................................................................................................... 289 8.3.1 Introduction ........................................................................................................................................................................... 289 8.3.2 Atomic Message Sequence Diagrams ......................................................................................................................... 289 Page 18 USB Power Delivery Specification Revision 3.0, Version 1.1 8.3.3 State Diagrams ...................................................................................................................................................................... 428 9. States and Status Reporting .............................................................................. 513 9.1 Overview ....................................................................................................................................................................................... 513 9.1.1 PDUSB Device and Hub Requirements ..................................................................................................................... 515 9.1.2 Mapping to USB Device States ....................................................................................................................................... 515 9.1.3 PD Software Stack ............................................................................................................................................................... 518 9.1.4 PDUSB Device Enumeration ........................................................................................................................................... 518 9.2 PD Specific Descriptors .......................................................................................................................................................... 520 9.2.1 USB Power Delivery Capability Descriptor ............................................................................................................. 520 9.2.2 Battery Info Capability Descriptor .............................................................................................................................. 521 9.2.3 PD Consumer Port Capability Descriptor ................................................................................................................ 522 9.2.4 PD Provider Port Capability Descriptor ................................................................................................................... 522 9.3 PD Specific Requests and Events ....................................................................................................................................... 524 9.3.1 PD Specific Requests .......................................................................................................................................................... 524 9.4 PDUSB Hub and PDUSB Peripheral Device Requests .............................................................................................. 525 9.4.1 GetBatteryStatus .................................................................................................................................................................. 525 9.4.2 SetPDFeature ......................................................................................................................................................................... 526 10. Power Rules .................................................................................................. 528 10.1 Introduction................................................................................................................................................................................. 528 10.2 Source Power Rules ................................................................................................................................................................. 528 10.2.1 Source Power Rule Considerations............................................................................................................................. 528 10.2.2 Normative Voltages and Currents ............................................................................................................................... 529 10.2.3 Optional Voltages/Currents ........................................................................................................................................... 532 10.2.4 Power sharing between ports ....................................................................................................................................... 533 10.3 Sink Power Rules ...................................................................................................................................................................... 533 10.3.1 Sink Power Rule Considerations .................................................................................................................................. 533 10.3.2 Normative Sink Rules ........................................................................................................................................................ 534 A. CRC calculation................................................................................................. 535 A.1 C code example........................................................................................................................................................................... 535 A.2 Table showing the full calculation over one Message ............................................................................................. 537 B. PD Message Sequence Examples ...................................................................... 538 B.1 External power is supplied downstream ...................................................................................................................... 538 B.2 External power is supplied upstream ............................................................................................................................. 542 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 19 B.3 Giving back power .................................................................................................................................................................... 549 C. VDM Command Examples ................................................................................ 561 C.1 Discover Identity Example ................................................................................................................................................... 561 C.1.1 Discover Identity Command request ......................................................................................................................... 561 C.1.2 Discover Identity Command response – Active Cable ....................................................................................... 561 C.1.3 Discover Identity Command response – Hub ........................................................................................................ 562 C.2 Discover SVIDs Example ........................................................................................................................................................ 564 C.2.1 Discover SVIDs Command request ............................................................................................................................. 564 C.2.1 Discover SVIDs Command response .......................................................................................................................... 564 C.3 Discover Modes Example ...................................................................................................................................................... 566 C.3.1 Discover Modes Command request ............................................................................................................................ 566 C.3.2 Discover Modes Command response ......................................................................................................................... 566 C.4 Enter Mode Example ............................................................................................................................................................... 568 C.4.1 Enter Mode Command request ..................................................................................................................................... 568 C.4.2 Enter Mode Command response .................................................................................................................................. 568 C.4.1 Enter Mode Command request with additional VDO ......................................................................................... 569 C.5 Exit Mode Example ................................................................................................................................................................... 570 C.5.1 Exit Mode Command request ........................................................................................................................................ 570 C.5.2 Exit Mode Command response ..................................................................................................................................... 570 C.6 Attention Example .................................................................................................................................................................... 572 C.6.1 Attention Command request .......................................................................................................................................... 572 C.6.2 Attention Command request with additional VDO ............................................................................................. 572 D. BMC Receiver Design Examples ..................................................................... 574 D.1 Finite Difference Scheme ...................................................................................................................................................... 574 D.1.1 Sample Circuitry................................................................................................................................................................... 574 D.1.2 Theory ....................................................................................................................................................................................... 574 D.1.3 Data Recovery ....................................................................................................................................................................... 576 D.1.4 Noise Zone and Detection Zone .................................................................................................................................... 577 D.2 Subtraction Scheme ................................................................................................................................................................. 578 D.2.1 Sample Circuitry................................................................................................................................................................... 578 D.2.2 Output of Each Circuit Block .......................................................................................................................................... 578 D.2.3 Subtractor Output at Power Source and Power Sink ......................................................................................... 578 D.2.4 Noise Zone and Detection Zone .................................................................................................................................... 579 Page 20 USB Power Delivery Specification Revision 3.0, Version 1.1 List of Tables Table 1-1 Terms and Abbreviations .......................................................................................................................................................................... 39 Table 5-1 4b5b Symbol Encoding Table .................................................................................................................................................................. 67 Table 5-2 Ordered Sets..................................................................................................................................................................................................... 68 Table 5-3 Validation of Ordered Sets ........................................................................................................................................................................ 68 Table 5-4 Data Size ............................................................................................................................................................................................................. 69 Table 5-5 SOP ordered set .............................................................................................................................................................................................. 70 Table 5-6 SOP’ ordered set ............................................................................................................................................................................................. 71 Table 5-7 SOP’’ ordered set ............................................................................................................................................................................................ 71 Table 5-8 SOP’_Debug ordered set ............................................................................................................................................................................. 72 Table 5-9 SOP’’_Debug ordered set ............................................................................................................................................................................ 72 Table 5-10 CRC-32 Mapping .......................................................................................................................................................................................... 73 Table 5-11 Hard Reset ordered set ............................................................................................................................................................................ 74 Table 5-12 Cable Reset ordered set ........................................................................................................................................................................... 75 Table 5-13 Rp values used for Collision Avoidance ........................................................................................................................................... 76 Table 5-14 BMC Tx Mask Definition, X Values ...................................................................................................................................................... 81 Table 5-15 BMC Tx Mask Definition, Y Values ...................................................................................................................................................... 81 Table 5-16 BMC Rx Mask Definition .......................................................................................................................................................................... 86 Table 5-17 BMC Common Normative Requirements ........................................................................................................................................ 87 Table 5-18 BMC Transmitter Normative Requirements ................................................................................................................................. 88 Table 5-19 BMC Receiver Normative Requirements ......................................................................................................................................... 90 Table 6-1 Message Header ............................................................................................................................................................................................. 96 Table 6-2 Revision Interoperability during an Explicit Contract ................................................................................................................ 99 Table 6-3 Extended Message Header ..................................................................................................................................................................... 100 Table 6-4 Use of Unchunked Message Supported bit ..................................................................................................................................... 102 Table 6-5 Control Message Types ............................................................................................................................................................................ 106 Table 6-6 Data Message Types .................................................................................................................................................................................. 113 Table 6-7 Power Data Object...................................................................................................................................................................................... 115 Table 6-8 Augmented Power Data Object ............................................................................................................................................................ 115 Table 6-9 Fixed Supply PDO - Source ..................................................................................................................................................................... 117 Table 6-10 Fixed Power Source Peak Current Capability ............................................................................................................................ 119 Table 6-11 Variable Supply (non-Battery) PDO - Source ............................................................................................................................. 119 Table 6-12 Battery Supply PDO - Source .............................................................................................................................................................. 119 Table 6-13 Programmable Power Supply APDO - Source ............................................................................................................................ 120 Table 6-14 Fixed Supply PDO - Sink ....................................................................................................................................................................... 121 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 21 Table 6-15 Variable Supply (non-Battery) PDO - Sink .................................................................................................................................. 122 Table 6-16 Battery Supply PDO - Sink ................................................................................................................................................................... 122 Table 6-17 Programmable Power Supply APDO - Sink ................................................................................................................................. 123 Table 6-18 Fixed and Variable Request Data Object....................................................................................................................................... 123 Table 6-19 Fixed and Variable Request Data Object with GiveBack Support..................................................................................... 123 Table 6-20 Battery Request Data Object .............................................................................................................................................................. 124 Table 6-21 Battery Request Data Object with GiveBack Support ............................................................................................................ 125 Table 6-22 Programmable Request Data Object .............................................................................................................................................. 125 Table 6-23 BIST Data Object....................................................................................................................................................................................... 129 Table 6-24 Unstructured VDM Header .................................................................................................................................................................. 130 Table 6-25 Structured VDM Header ....................................................................................................................................................................... 131 Table 6-26 Structured VDM Commands ............................................................................................................................................................... 132 Table 6-27 SVID Values ................................................................................................................................................................................................. 132 Table 6-28 Commands and Responses .................................................................................................................................................................. 134 Table 6-29 ID Header VDO .......................................................................................................................................................................................... 135 Table 6-30 Product Types (UFP) .............................................................................................................................................................................. 136 Table 6-31 Product Types (Cable Plug) ................................................................................................................................................................ 137 Table 6-32 Product Types (DFP) .............................................................................................................................................................................. 137 Table 6-33 Cert Stat VDO ............................................................................................................................................................................................. 137 Table 6-34 Product VDO ............................................................................................................................................................................................... 138 Table 6-35 Passive Cable VDO ................................................................................................................................................................................... 138 Table 6-36 Active Cable VDO...................................................................................................................................................................................... 140 Table 6-37 AMA VDO ..................................................................................................................................................................................................... 142 Table 6-38 Discover SVIDs Responder VDO ....................................................................................................................................................... 143 Table 6-39 Battery Status Data Object (BSDO) ................................................................................................................................................ 152 Table 6-40 Alert Data Object ..................................................................................................................................................................................... 153 Table 6-41 Country Code Data Object .................................................................................................................................................................... 155 Table 6-42 Extended Message Types ..................................................................................................................................................................... 155 Table 6-43 Source Capabilities Extended Data Block (SCEDB) ................................................................................................................. 156 Table 6-44 Status Data Block (SDB) ....................................................................................................................................................................... 160 Table 6-45 Get Battery Cap Data Block (GBCDB) ............................................................................................................................................ 162 Table 6-46 Get Battery Status Data Block (GBSDB) ....................................................................................................................................... 163 Table 6-47 Battery Capability Data Block (BCDB) .......................................................................................................................................... 163 Table 6-48 Get Manufacturer Info Data Block (GMIDB) .............................................................................................................................. 164 Table 6-49 Manufacturer Info Data Block (MIDB) ......................................................................................................................................... 165 Table 6-50 PPS Status Data Block (PPSSDB) ..................................................................................................................................................... 167 Page 22 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 6-51 Country Codes Data Block (CCDB) ................................................................................................................................................. 168 Table 6-52 Country Info Data Block (CIDB) ....................................................................................................................................................... 168 Table 6-53 Time Values ................................................................................................................................................................................................ 179 Table 6-54 Timers ........................................................................................................................................................................................................... 180 Table 6-55 Counter parameters ............................................................................................................................................................................... 182 Table 6-56 Counters ....................................................................................................................................................................................................... 183 Table 6-57 Response to an incoming Message (except VDM).................................................................................................................... 184 Table 6-58 Response to an incoming VDM .......................................................................................................................................................... 184 Table 6-59 Message discarding ................................................................................................................................................................................. 186 Table 6-60 Protocol Layer States ............................................................................................................................................................................. 210 Table 6-61 Applicability of Control Messages ................................................................................................................................................... 213 Table 6-62 Applicability of Data Messages .......................................................................................................................................................... 214 Table 6-63 Applicability of Extended Messages ............................................................................................................................................... 215 Table 6-64 Applicability of Structured VDM Commands ............................................................................................................................. 216 Table 6-65 Applicability of Reset Signaling ........................................................................................................................................................ 217 Table 6-66 Applicability of Fast Role Swap signal ........................................................................................................................................... 217 Table 6-67 Value Parameters..................................................................................................................................................................................... 218 Table 7-1 Sequence Description for Increasing the Current ...................................................................................................................... 239 Table 7-2 Sequence Description for Increasing the Voltage ....................................................................................................................... 241 Table 7-3 Sequence Diagram for Increasing the Voltage and Current ................................................................................................... 243 Table 7-4 Sequence Description for Increasing the Voltage and Decreasing the Current ........................................................... 245 Table 7-5 Sequence Description for Decreasing the Voltage and Increasing the Current ........................................................... 247 Table 7-6 Sequence Description for Decreasing the Current ..................................................................................................................... 249 Table 7-7 Sequence Description for Decreasing the Voltage ...................................................................................................................... 251 Table 7-8 Sequence Description for Decreasing the Voltage and the Current ................................................................................... 253 Table 7-9 Sequence Description for a Sink Requested Power Role Swap ............................................................................................ 255 Table 7-10 Sequence Description for a Source Requested Power Role Swap .................................................................................... 258 Table 7-11 Sequence Description for a GotoMin Current Decrease........................................................................................................ 261 Table 7-12 Sequence Description for a Source Initiated Hard Reset...................................................................................................... 263 Table 7-13 Sequence Description for a Sink Initiated Hard Reset ........................................................................................................... 265 Table 7-14 Sequence Description for no change in Current or Voltage ................................................................................................ 267 Table 7-15 Sequence Description for Fast Role Swap ................................................................................................................................... 268 Table 7-16 Sequence Description for Increasing the Programmable Power Supply Voltage .................................................... 270 Table 7-17 Sequence Description for Decreasing the Programmable Power Supply Voltage ................................................... 272 Table 7-18 Sequence Description for Changing the Source PDO or APDO .......................................................................................... 274 Table 7-19 Source Electrical Parameters ............................................................................................................................................................. 276 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 23 Table 7-20 Sink Electrical Parameters .................................................................................................................................................................. 280 Table 7-21 Common Source/Sink Electrical Parameters ............................................................................................................................. 281 Table 8-1 Basic Message Flow ................................................................................................................................................................................... 290 Table 8-2 Potential issues in Basic Message Flow ........................................................................................................................................... 291 Table 8-3 Basic Message Flow with CRC failure ............................................................................................................................................... 292 Table 8-4 Interruptible and Non-interruptible AMS ...................................................................................................................................... 294 Table 8-5 Steps for a successful Power Negotiation ....................................................................................................................................... 296 Table 8-6 Steps for a GotoMin Negotiation ......................................................................................................................................................... 299 Table 8-7 Steps for a Soft Reset ................................................................................................................................................................................ 301 Table 8-8 Steps for Source initiated Hard Reset ............................................................................................................................................... 304 Table 8-9 Steps for Sink initiated Hard Reset .................................................................................................................................................... 307 Table 8-10 Steps for Source initiated Hard Reset – Sink long reset ........................................................................................................ 310 Table 8-11 Steps for a Successful Source Initiated Power Role Swap Sequence .............................................................................. 314 Table 8-12 Steps for a Successful Sink Initiated Power Role Swap Sequence ................................................................................... 319 Table 8-13 Steps for a Successful Fast Role Swap Sequence ...................................................................................................................... 324 Table 8-14 Steps for Data Role Swap, UFP operating as Sink initiates .................................................................................................. 328 Table 8-15 Steps for Data Role Swap, UFP operating as Source initiates ............................................................................................. 330 Table 8-16 Steps for Data Role Swap, DFP operating as Source initiates ............................................................................................. 332 Table 8-17 Steps for Data Role Swap, DFP operating as Sink initiates .................................................................................................. 334 Table 8-18 Steps for Source to Sink VCONN Source Swap ............................................................................................................................. 337 Table 8-19 Steps for Sink to Source VCONN Source Swap ............................................................................................................................. 340 Table 8-20 Steps for Source Alert to Sink ............................................................................................................................................................ 342 Table 8-21 Steps for Sink Alert to Source ............................................................................................................................................................ 344 Table 8-22 Steps for a Sink getting Source status Sequence....................................................................................................................... 346 Table 8-23 Steps for a Source getting Sink status Sequence....................................................................................................................... 348 Table 8-24 Steps for a Sink getting Source PPS status Sequence ............................................................................................................. 350 Table 8-25 Steps for a Sink getting Source capabilities Sequence ........................................................................................................... 352 Table 8-26 Steps for a Dual-Role Source getting Dual-Role Sink’s capabilities as a Source Sequence .................................. 354 Table 8-27 Steps for a Source getting Sink capabilities Sequence ........................................................................................................... 356 Table 8-28 Steps for a Dual-Role Sink getting Dual-Role Source capabilities as a Sink Sequence ........................................... 358 Table 8-29 Steps for a Sink getting Source extended capabilities Sequence ...................................................................................... 360 Table 8-30 Steps for a Dual-Role Source getting Dual-Role Sink extended capabilities Sequence .......................................... 362 Table 8-31 Steps for a Sink getting Source Battery capabilities Sequence .......................................................................................... 364 Table 8-32 Steps for a Source getting Sink Battery capabilities Sequence .......................................................................................... 366 Table 8-33 Steps for a Sink getting Source Battery status Sequence ..................................................................................................... 368 Table 8-34 Steps for a Source getting Sink Battery status Sequence ..................................................................................................... 370 Page 24 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 8-35 Steps for a Source getting Sink’s Port Manufacturer information Sequence .............................................................. 372 Table 8-36 Steps for a Source getting Sink’s Port Manufacturer information Sequence .............................................................. 374 Table 8-37 Steps for a Source getting Sink’s Battery Manufacturer information Sequence ....................................................... 376 Table 8-38 Steps for a Source getting Sink’s Battery Manufacturer information Sequence ....................................................... 378 Table 8-39 Steps for a VCONN Source getting Sink’s Port Manufacturer information Sequence ............................................... 380 Table 8-40 Steps for a Source getting Country Codes Sequence............................................................................................................... 382 Table 8-41 Steps for a Source getting Sink’s Country Codes Sequence ................................................................................................. 384 Table 8-42 Steps for a VCONN Source getting Sink’s Country Codes Sequence .................................................................................. 386 Table 8-43 Steps for a Source getting Country Information Sequence.................................................................................................. 388 Table 8-44 Steps for a Source getting Sink’s Country Information Sequence .................................................................................... 390 Table 8-45 Steps for a VCONN Source getting Sink’s Country Information Sequence...................................................................... 392 Table 8-46 Steps for a Source requesting a security exchange with a Sink Sequence ................................................................... 394 Table 8-47 Steps for a Sink requesting a security exchange with a Source Sequence ................................................................... 396 Table 8-48 Steps for a Vconn Source requesting a security exchange with a Cable Plug Sequence ........................................ 398 Table 8-49 Steps for a Source requesting a firmware update exchange with a Sink Sequence................................................. 400 Table 8-50 Steps for a Sink requesting a firmware update exchange with a Source Sequence................................................. 402 Table 8-51 Steps for a Vconn Source requesting a firmware update exchange with a Cable Plug Sequence ..................... 404 Table 8-52 Steps for DFP to UFP Discover Identity ........................................................................................................................................ 406 Table 8-53 Steps for Source Port to Cable Plug Discover Identity ........................................................................................................... 408 Table 8-54 Steps for DFP to Cable Plug Discover Identity ........................................................................................................................... 410 Table 8-55 Steps for DFP to UFP Enter Mode .................................................................................................................................................... 412 Table 8-56 Steps for DFP to UFP Exit Mode ........................................................................................................................................................ 414 Table 8-57 Steps for DFP to Cable Plug Enter Mode ....................................................................................................................................... 417 Table 8-58 Steps for DFP to Cable Plug Exit Mode .......................................................................................................................................... 419 Table 8-59 Steps for UFP to DFP Attention ......................................................................................................................................................... 421 Table 8-60 Steps for BIST Carrier Mode Test..................................................................................................................................................... 424 Table 8-61 Steps for BIST Test Data Test ............................................................................................................................................................. 426 Table 8-62 Policy Engine States ................................................................................................................................................................................ 506 Table 9-1 USB Power Delivery Type Codes......................................................................................................................................................... 520 Table 9-2 USB Power Delivery Capability Descriptor .................................................................................................................................... 520 Table 9-3 Battery Info Capability Descriptor ..................................................................................................................................................... 521 Table 9-4 PD Consumer Port Descriptor .............................................................................................................................................................. 522 Table 9-5 PD Provider Port Descriptor ................................................................................................................................................................. 523 Table 9-6 PD Requests .................................................................................................................................................................................................. 524 Table 9-7 PD Request Codes ....................................................................................................................................................................................... 524 Table 9-8 PD Feature Selectors ................................................................................................................................................................................. 524 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 25 Table 9-9 Battery Status Structure .......................................................................................................................................................................... 525 Table 9-10 Battery Wake Mask ................................................................................................................................................................................. 526 Table 9-11 Charging Policy Encoding .................................................................................................................................................................... 527 Table 10-1 Considerations for Sources ................................................................................................................................................................. 528 Table 10-2 Normative Voltages and Currents ................................................................................................................................................... 529 Table 10-3 Fixed Supply PDO – Source 5V .......................................................................................................................................................... 530 Table 10-4 Fixed Supply PDO – Source 9V .......................................................................................................................................................... 531 Table 10-5 Fixed Supply PDO – Source 15V ....................................................................................................................................................... 531 Table 10-6 Fixed Supply PDO – Source 20V ....................................................................................................................................................... 531 Table 10-7 Programmable Power Supply PDOs and APDOs based on the PDP ................................................................................ 532 Table 10-8 Programmable Power Supply Voltage Ranges .......................................................................................................................... 533 Table B-1 External power is supplied downstream ........................................................................................................................................ 539 Table B-2 External power is supplied upstream .............................................................................................................................................. 542 Table B-3 Giving back power ..................................................................................................................................................................................... 549 Table C-1 Discover Identity Command request from Initiator Example .............................................................................................. 561 Table C-2 Discover Identity Command response from Active Cable Responder Example .......................................................... 561 Table C-3 Discover Identity Command response from Hub Responder Example............................................................................ 563 Table C-4 Discover SVIDs Command request from Initiator Example................................................................................................... 564 Table C-5 Discover SVIDs Command response from Responder Example .......................................................................................... 564 Table C-6 Discover Modes Command request from Initiator Example ................................................................................................. 566 Table C-7 Discover Modes Command response from Responder Example ........................................................................................ 566 Table C-8 Enter Mode Command request from Initiator Example .......................................................................................................... 568 Table C-9 Enter Mode Command response from Responder Example ................................................................................................. 568 Table C-10 Enter Mode Command request from Initiator Example ....................................................................................................... 569 Table C-11 Exit Mode Command request from Initiator Example ........................................................................................................... 570 Table C-12 Exit Mode Command response from Responder Example .................................................................................................. 570 Table C-13 Attention Command request from Initiator Example ............................................................................................................ 572 Table C-14 Attention Command request from Initiator with additional VDO Example ................................................................ 572 Page 26 USB Power Delivery Specification Revision 3.0, Version 1.1 List of Figures Figure 2-1 Logical Structure of USB Power Delivery Capable Devices ..................................................................................................... 50 Figure 2-2 Example SOP’ Communication between VCONN Source and Cable Plug(s) ...................................................................... 52 Figure 2-3 USB Power Delivery Communications Stack .................................................................................................................................. 58 Figure 2-4 USB Power Delivery Communication Over USB ........................................................................................................................... 59 Figure 2-5 High Level Architecture View ................................................................................................................................................................ 60 Figure 5-1 Interpretation of ordered sets ............................................................................................................................................................... 68 Figure 5-2 Transmit Order for Various Sizes of Data ........................................................................................................................................ 69 Figure 5-3 USB Power Delivery Packet Format ................................................................................................................................................... 70 Figure 5-4 CRC 32 generation ....................................................................................................................................................................................... 73 Figure 5-5 Line format of Hard Reset ....................................................................................................................................................................... 75 Figure 5-6 Line format of Cable Reset ...................................................................................................................................................................... 75 Figure 5-7 BMC Example ................................................................................................................................................................................................. 76 Figure 5-8 BMC Transmitter Block Diagram ......................................................................................................................................................... 77 Figure 5-9 BMC Receiver Block Diagram ................................................................................................................................................................ 77 Figure 5-10 BMC Encoded Start of Preamble ........................................................................................................................................................ 77 Figure 5-11 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with High-to-Low Last Transition .. 78 Figure 5-12 Transmitting or Receiving BMC Encoded Frame Terminated by One with High-to-Low Last Transition .... 78 Figure 5-13 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with Low to High Last Transition.... 79 Figure 5-14 Transmitting or Receiving BMC Encoded Frame Terminated by One with Low to High Last Transition ..... 79 Figure 5-15 BMC Tx ‘ONE’ Mask .................................................................................................................................................................................. 80 Figure 5-16 BMC Tx ‘ZERO’ Mask................................................................................................................................................................................ 80 Figure 5-17 BMC Rx ‘ONE’ Mask when Sourcing Power .................................................................................................................................. 83 Figure 5-18 BMC Rx ‘ZERO’ Mask when Sourcing Power................................................................................................................................ 83 Figure 5-19 BMC Rx ‘ONE’ Mask when Power neutral ..................................................................................................................................... 84 Figure 5-20 BMC Rx ‘ZERO’ Mask when Power neutral ................................................................................................................................... 84 Figure 5-21 BMC Rx ‘ONE’ Mask when Sinking Power ..................................................................................................................................... 85 Figure 5-22 BMC Rx ‘ZERO’ Mask when Sinking Power .................................................................................................................................. 85 Figure 5-23 Transmitter Load Model for BMC Tx from a Source ................................................................................................................ 86 Figure 5-24 Transmitter Load Model for BMC Tx from a Sink ..................................................................................................................... 87 Figure 5-25 Transmitter diagram illustrating zDriver ..................................................................................................................................... 89 Figure 5-26 Inter-Frame Gap Timings ...................................................................................................................................................................... 89 Figure 5-27 Example Multi-Drop Configuration showing two DRPs ......................................................................................................... 92 Figure 5-28 Example Multi-Drop Configuration showing a DFP and UFP .............................................................................................. 92 Figure 5-29 Test Data Frame ........................................................................................................................................................................................ 94 Figure 6-1 USB Power Delivery Packet Format including Control Message Payload ........................................................................ 95 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 27 Figure 6-2 USB Power Delivery Packet Format including Data Message Payload .............................................................................. 96 Figure 6-3 USB Power Delivery Packet Format including an Extended Message Header and Payload ................................... 96 Figure 6-4 Example Security_Request sequence Unchunked (Chunked bit = 0) .............................................................................. 102 Figure 6-5 Example byte transmission for Security_Request Message of Data Size 7 (Chunked bit is set to 0) ............... 102 Figure 6-6 Example byte transmission for Security_Response Message of Data Size 7 (Chunked bit is set to 0) ............ 103 Figure 6-7 Example Security_Request sequence Chunked (Chunked bit = 1) ................................................................................... 104 Figure 6-8 Example Security_Request Message of Data Size 7 (Chunked bit set to 1) .................................................................. 105 Figure 6-9 Example Chunk 0 of Security_Response Message of Data Size 30 (Chunked bit set to 1)..................................... 105 Figure 6-10 Example byte transmission for a Security_Request Message Chunk request (Chunked bit is set to 1) ...... 105 Figure 6-11 Example Chunk 1 of Security_Response Message of Data Size 30 (Chunked bit set to 1) .................................. 106 Figure 6-12 Example Capabilities Message with 2 Power Data Objects ............................................................................................... 114 Figure 6-13 BIST Message ........................................................................................................................................................................................... 128 Figure 6-14 Vendor Defined Message .................................................................................................................................................................... 129 Figure 6-15 Discover Identity Command response ........................................................................................................................................ 135 Figure 6-16 Example Discover SVIDs response with 3 SVIDs .................................................................................................................... 143 Figure 6-17 Example Discover SVIDs response with 4 SVIDs .................................................................................................................... 143 Figure 6-18 Example Discover SVIDs response with 12 SVIDs followed by an empty response ............................................. 144 Figure 6-19 Example Discover Modes response for a given SVID with 3 Modes.............................................................................. 144 Figure 6-20 Successful Enter Mode sequence ................................................................................................................................................... 145 Figure 6-21 Enter Mode sequence Interrupted by Source Capabilities and then Re-run ............................................................ 146 Figure 6-22 Unsuccessful Enter Mode sequence due to NAK .................................................................................................................... 146 Figure 6-23 Exit Mode sequence .............................................................................................................................................................................. 148 Figure 6-24 Attention Command request/response sequence ................................................................................................................. 148 Figure 6-25 Command request/response sequence ...................................................................................................................................... 149 Figure 6-26 Enter/Exit Mode Process ................................................................................................................................................................... 151 Figure 6-27 Battery_Status Message ...................................................................................................................................................................... 152 Figure 6-28 Alert Message ........................................................................................................................................................................................... 153 Figure 6-29 Get_Country_Info Message................................................................................................................................................................. 155 Figure 6-30 Source_Capabilities_Extended Message ...................................................................................................................................... 156 Figure 6-31 Status Message ........................................................................................................................................................................................ 160 Figure 6-32 Get_Battery_Cap Message .................................................................................................................................................................. 162 Figure 6-33 Get_Battery_Status Message ............................................................................................................................................................. 162 Figure 6-34 Battery_Capabilities Message........................................................................................................................................................... 163 Figure 6-35 Get_Manufacturer_Info Message..................................................................................................................................................... 164 Figure 6-36 Manufacturer_Info Message .............................................................................................................................................................. 164 Figure 6-37 Security_Request Message................................................................................................................................................................. 165 Page 28 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 6-38 Security_Response Message ............................................................................................................................................................. 166 Figure 6-39 Firmware_Update_Request Message ............................................................................................................................................ 166 Figure 6-40 Firmware_Update_Response Message ......................................................................................................................................... 166 Figure 6-41 PPS_Status Message .............................................................................................................................................................................. 167 Figure 6-42 Country_Codes Message ..................................................................................................................................................................... 168 Figure 6-43 Country_Info Message.......................................................................................................................................................................... 168 Figure 6-44 Outline of States ...................................................................................................................................................................................... 187 Figure 6-45 References to states .............................................................................................................................................................................. 187 Figure 6-46 Chunking architecture Showing Message and Control Flow ............................................................................................ 188 Figure 6-47 Chunked Rx State Diagram ................................................................................................................................................................ 190 Figure 6-48 Chunked Tx State Diagram ................................................................................................................................................................ 193 Figure 6-49 Chunked Message Router State Diagram ................................................................................................................................... 197 Figure 6-50 Common Protocol Layer Message transmission State Diagram ..................................................................................... 199 Figure 6-51 Source Protocol Layer Message transmission State Diagram .......................................................................................... 202 Figure 6-52 Sink Protocol Layer Message transmission State Diagram ............................................................................................... 204 Figure 6-53 Protocol layer Message reception .................................................................................................................................................. 205 Figure 6-54 Hard/Cable Reset ................................................................................................................................................................................... 207 Figure 7-1 Placement of Source Bulk Capacitance .......................................................................................................................................... 219 Figure 7-2 Transition Envelope for Positive Voltage Transitions ............................................................................................................ 220 Figure 7-3 Transition Envelope for Negative Voltage Transitions .......................................................................................................... 221 Figure 7-4 PPS Positive Voltage Transitions ...................................................................................................................................................... 222 Figure 7-5 PPS Negative Voltage Transitions..................................................................................................................................................... 223 Figure 7-6 Expected PPS Ripple Relative to an LSB ........................................................................................................................................ 223 Figure 7-7 PPS Programmable Voltage and Foldback ................................................................................................................................... 224 Figure 7-8 Source V BUS and VCONN Response to Hard Reset ........................................................................................................................ 225 Figure 7-9 Application of vSrcNew and vSrcValid limits after tSrcReady ............................................................................................ 227 Figure 7-10 Source Peak Current Overload ........................................................................................................................................................ 228 Figure 7-11 Holdup Time Measurement .............................................................................................................................................................. 230 Figure 7-12 V Power during Fast Role Swap ................................................................................................................................................ 231 BUS Figure 7-13 V detection and timing during Fast Role Swap .................................................................................................................. 232 BUS Figure 7-14 Placement of Sink Bulk Capacitance ............................................................................................................................................. 233 Figure 7-15 Transition Diagram for Increasing the Current ...................................................................................................................... 238 Figure 7-16 Transition Diagram for Increasing the Voltage ....................................................................................................................... 240 Figure 7-17 Transition Diagram for Increasing the Voltage and Current ............................................................................................ 242 Figure 7-18 Transition Diagram for Increasing the Voltage and Decreasing the Current ........................................................... 244 Figure 7-19 Transition Diagram for Decreasing the Voltage and Increasing the Current ........................................................... 246 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 29 Figure 7-20 Transition Diagram for Decreasing the Current ..................................................................................................................... 248 Figure 7-21 Transition Diagram for Decreasing the Voltage...................................................................................................................... 250 Figure 7-22 Transition Diagram for Decreasing the Voltage and the Current ................................................................................... 252 Figure 7-23 Transition Diagram for a Sink Requested Power Role Swap ............................................................................................ 254 Figure 7-24 Transition Diagram for a Source Requested Power Role Swap ...................................................................................... 257 Figure 7-25 Transition Diagram for a GotoMin Current Decrease .......................................................................................................... 260 Figure 7-26 Transition Diagram for a Source Initiated Hard Reset ........................................................................................................ 262 Figure 7-27 Transition Diagram for a Sink Initiated Hard Reset.............................................................................................................. 264 Figure 7-28 Transition Diagram for no change in Current or Voltage ................................................................................................... 266 Figure 7-29 Transition Diagram for Fast Role Swap ...................................................................................................................................... 268 Figure 7-30 Transition Diagram for Increasing the Programmable Power Supply Voltage ....................................................... 270 Figure 7-31 Transition Diagram for Decreasing the Programmable Power Supply Voltage ...................................................... 272 Figure 7-32 Transition Diagram for Changing the Source PDO or APDO ............................................................................................. 274 Figure 8-1 Example of daisy chained displays ................................................................................................................................................... 287 Figure 8-2 Basic Message Exchange (Successful) ............................................................................................................................................ 289 Figure 8-3 Basic Message flow indicating possible errors ........................................................................................................................... 290 Figure 8-4 Basic Message Flow with Bad CRC followed by a Retry ......................................................................................................... 292 Figure 8-5 Successful Power Negotiation ............................................................................................................................................................ 295 Figure 8-6 Successful GotoMin operation ............................................................................................................................................................ 299 Figure 8-7 Soft Reset ...................................................................................................................................................................................................... 301 Figure 8-8 Source initiated Hard Reset ................................................................................................................................................................. 303 Figure 8-9 Sink Initiated Hard Reset ...................................................................................................................................................................... 306 Figure 8-10 Source initiated reset - Sink long reset........................................................................................................................................ 309 Figure 8-11 Successful Power Role Swap Sequence Initiated by the Source ..................................................................................... 313 Figure 8-12 Successful Power Role Swap Sequence Initiated by the Sink ........................................................................................... 318 Figure 8-13 Successful Fast Role Swap Sequence ............................................................................................................................................ 323 Figure 8-14 Data Role Swap, UFP operating as Sink initiates .................................................................................................................... 327 Figure 8-15 Data Role Swap, UFP operating as Source initiates ............................................................................................................... 330 Figure 8-16 Data Role Swap, DFP operating as Source initiates ............................................................................................................... 332 Figure 8-17 Data Role Swap, DFP operating as Sink initiates .................................................................................................................... 334 Figure 8-18 Source to Sink VCONN Source Swap ............................................................................................................................................... 336 Figure 8-19 Sink to Source VCONN Source Swap ............................................................................................................................................... 339 Figure 8-20 Source Alert to Sink .............................................................................................................................................................................. 342 Figure 8-21 Sink Alert to Source .............................................................................................................................................................................. 344 Figure 8-22 Sink Gets Source Status ....................................................................................................................................................................... 346 Figure 8-23 Source Gets Sink Status ....................................................................................................................................................................... 348 Page 30 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-24 Sink Gets Source PPS Status.............................................................................................................................................................. 350 Figure 8-25 Sink Gets Source’s Capabilities ........................................................................................................................................................ 352 Figure 8-26 Dual-Role Source Gets Dual-Role Sink’s Capabilities as a Source .................................................................................. 354 Figure 8-27 Source Gets Sink’s Capabilities ........................................................................................................................................................ 356 Figure 8-28 Dual-Role Sink Gets Dual-Role Source’s Capabilities as a Sink ........................................................................................ 358 Figure 8-29 Sink Gets Source’s Extended Capabilities .................................................................................................................................. 360 Figure 8-30 Dual-Role Source Gets Dual-Role Sink’s Extended Capabilities ...................................................................................... 362 Figure 8-31 Sink Gets Source’s Battery Capabilities ....................................................................................................................................... 364 Figure 8-32 Source Gets Sink’s Battery Capabilities ....................................................................................................................................... 366 Figure 8-33 Sink Gets Source’s Battery Status................................................................................................................................................... 368 Figure 8-34 Source Gets Sink’s Battery Status................................................................................................................................................... 370 Figure 8-35 Source Gets Sink’s Port Manufacturer Information .............................................................................................................. 372 Figure 8-36 Sink Gets Source’s Port Manufacturer Information .............................................................................................................. 374 Figure 8-37 Source Gets Sink’s Battery Manufacturer Information ........................................................................................................ 376 Figure 8-38 Sink Gets Source’s Battery Manufacturer Information ........................................................................................................ 378 Figure 8-39 VCONN Source Gets Cable Plug’s Manufacturer Information ............................................................................................. 380 Figure 8-40 Source Gets Sink’s Country Codes.................................................................................................................................................. 382 Figure 8-41 Sink Gets Source’s Country Codes.................................................................................................................................................. 384 Figure 8-42 VCONN Source Gets Cable Plug’s Country Codes ...................................................................................................................... 386 Figure 8-43 Source Gets Sink’s Country Information ..................................................................................................................................... 388 Figure 8-44 Sink Gets Source’s Country Information ..................................................................................................................................... 390 Figure 8-45 VCONN Source Gets Cable Plug’s Country Information ......................................................................................................... 392 Figure 8-46 Source requests security exchange with Sink .......................................................................................................................... 394 Figure 8-47 Sink requests security exchange with Source .......................................................................................................................... 396 Figure 8-48 Vconn Source requests security exchange with Cable Plug .............................................................................................. 398 Figure 8-49 Source requests firmware update exchange with Sink ....................................................................................................... 400 Figure 8-50 Sink requests firmware update exchange with Source ....................................................................................................... 402 Figure 8-51 Vconn Source requests firmware update exchange with Cable Plug............................................................................ 404 Figure 8-52 DFP to UFP Discover Identity........................................................................................................................................................... 406 Figure 8-53 Source Port to Cable Plug Discover Identity ............................................................................................................................. 408 Figure 8-54 DFP to Cable Plug Discover Identity ............................................................................................................................................. 410 Figure 8-55 DFP to UFP Enter Mode ...................................................................................................................................................................... 412 Figure 8-56 DFP to UFP Exit Mode .......................................................................................................................................................................... 414 Figure 8-57 DFP to Cable Plug Enter Mode ......................................................................................................................................................... 416 Figure 8-58 DFP to Cable Plug Exit Mode ............................................................................................................................................................ 419 Figure 8-59 UFP to DFP Attention ........................................................................................................................................................................... 421 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 31 Figure 8-60 BIST Carrier Mode Test ....................................................................................................................................................................... 423 Figure 8-61 BIST Test Data Test ............................................................................................................................................................................... 425 Figure 8-62 Outline of States ...................................................................................................................................................................................... 428 Figure 8-63 References to states .............................................................................................................................................................................. 428 Figure 8-64 Example of state reference with conditions ............................................................................................................................. 428 Figure 8-65 Example of state reference with the same entry and exit .................................................................................................. 429 Figure 8-66 Source Port Policy Engine State Diagram................................................................................................................................... 430 Figure 8-67 Sink Port State Diagram ...................................................................................................................................................................... 436 Figure 8-68 Source Port Soft Reset and Protocol Error State Diagram ................................................................................................. 441 Figure 8-69 Sink Port Soft Reset and Protocol Error Diagram .................................................................................................................. 442 Figure 8-70 Source Port Not Supported Message State Diagram ............................................................................................................. 444 Figure 8-71 Sink Port Not Supported Message State Diagram .................................................................................................................. 445 Figure 8-72 Source Port Ping State Diagram ...................................................................................................................................................... 446 Figure 8-73 Source Port Source Alert State Diagram ..................................................................................................................................... 446 Figure 8-74 Sink Port Source Alert State Diagram .......................................................................................................................................... 447 Figure 8-75 Sink Port Sink Alert State Diagram................................................................................................................................................ 447 Figure 8-76 Source Port Sink Alert State Diagram .......................................................................................................................................... 448 Figure 8-77 Sink Port Get Source Capabilities Extended State Diagram .............................................................................................. 448 Figure 8-78 Source Give Source Capabilities Extended State Diagram ................................................................................................. 449 Figure 8-79 Sink Port Get Source Status State Diagram ............................................................................................................................... 449 Figure 8-80 Source Give Source Status State Diagram .................................................................................................................................. 450 Figure 8-81 Source Port Get Sink Status State Diagram ............................................................................................................................... 450 Figure 8-82 Sink Give Sink Status State Diagram ............................................................................................................................................. 451 Figure 8-83 Sink Port Get Source PPS Status State Diagram ...................................................................................................................... 451 Figure 8-84 Source Give Source PPS Status State Diagram ......................................................................................................................... 452 Figure 8-85 Get Battery Capabilities State Diagram ....................................................................................................................................... 452 Figure 8-86 Give Battery Capabilities State Diagram ..................................................................................................................................... 453 Figure 8-87 Get Battery Status State Diagram ................................................................................................................................................... 453 Figure 8-88 Give Battery Status State Diagram ................................................................................................................................................. 454 Figure 8-89 Get Manufacturer Information State Diagram ......................................................................................................................... 454 Figure 8-90 Give Manufacturer Information State Diagram ....................................................................................................................... 455 Figure 8-91 Get Country Codes State Diagram .................................................................................................................................................. 455 Figure 8-92 Give Country Codes State Diagram ................................................................................................................................................ 456 Figure 8-93 Get Country Information State Diagram ..................................................................................................................................... 456 Figure 8-94 Give Country Information State Diagram ................................................................................................................................... 457 Figure 8-95 Send security request State Diagram ........................................................................................................................................... 457 Page 32 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-96 Send security response State Diagram ........................................................................................................................................ 458 Figure 8-97 Security response received State Diagram ................................................................................................................................ 458 Figure 8-98 Send firmware update request State Diagram ........................................................................................................................ 459 Figure 8-99 Send firmware update response State Diagram ..................................................................................................................... 459 Figure 8-100 Firmware update response received State Diagram.......................................................................................................... 460 Figure 8-101: DFP to UFP Data Role Swap State Diagram ........................................................................................................................... 461 Figure 8-102: UFP to DFP Data Role Swap State Diagram ........................................................................................................................... 463 Figure 8-103: Dual-Role Port in Source to Sink Power Role Swap State Diagram ........................................................................... 466 Figure 8-104: Dual-role Port in Sink to Source Power Role Swap State Diagram ............................................................................ 469 Figure 8-105: Dual-Role Port in Source to Sink Fast Role Swap State Diagram ................................................................................ 472 Figure 8-106: Dual-role Port in Sink to Source Fast Role Swap State Diagram ................................................................................. 475 Figure 8-107 Dual-Role (Source) Get Source Capabilities diagram ........................................................................................................ 477 Figure 8-108 Dual-Role (Source) Give Sink Capabilities diagram ........................................................................................................... 478 Figure 8-109 Dual-Role (Sink) Get Sink Capabilities State Diagram ...................................................................................................... 478 Figure 8-110 Dual-Role (Sink) Give Source Capabilities State Diagram ............................................................................................... 479 Figure 8-111 Dual-Role (Source) Get Source Capabilities Extended State Diagram....................................................................... 479 Figure 8-112 Dual-Role (Source) Give Sink Capabilities diagram ........................................................................................................... 480 Figure 8-113 VCONN Swap State Diagram .......................................................................................................................................................... 481 Figure 8-114 Initiator to Port VDM Discover Identity State Diagram .................................................................................................... 484 Figure 8-115 Initiator VDM Discover SVIDs State Diagram ........................................................................................................................ 485 Figure 8-116 Initiator VDM Discover Modes State Diagram ...................................................................................................................... 486 Figure 8-117 Initiator VDM Attention State Diagram .................................................................................................................................... 487 Figure 8-118 Responder Structured VDM Discover Identity State Diagram ...................................................................................... 488 Figure 8-119 Responder Structured VDM Discover SVIDs State Diagram .......................................................................................... 489 Figure 8-120 Responder Structured VDM Discover Modes State Diagram ......................................................................................... 490 Figure 8-121 Receiving a Structured VDM Attention State Diagram ..................................................................................................... 491 Figure 8-122 DFP VDM Mode Entry State Diagram ........................................................................................................................................ 492 Figure 8-123 DFP VDM Mode Exit State Diagram ............................................................................................................................................ 493 Figure 8-124 UFP Structured VDM Enter Mode State Diagram ................................................................................................................ 494 Figure 8-125 UFP Structured VDM Exit Mode State Diagram .................................................................................................................... 495 Figure 8-126 Cable Ready VDM State Diagram ................................................................................................................................................. 496 Figure 8-127 Cable Plug Soft Reset State Diagram .......................................................................................................................................... 497 Figure 8-128 Cable Plug Hard Reset State Diagram........................................................................................................................................ 497 Figure 8-129 DFP Soft Reset or Cable Reset of a Cable Plug State Diagram........................................................................................ 498 Figure 8-130 UFP Source Soft Reset of a Cable Plug State Diagram........................................................................................................ 499 Figure 8-131 Source Startup Structured VDM Discover Identity State Diagram.............................................................................. 500 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 33 Figure 8-132 Cable Plug Structured VDM Enter Mode State Diagram ................................................................................................... 502 Figure 8-133 Cable Plug Structured VDM Exit Mode State Diagram ...................................................................................................... 503 Figure 8-134 BIST Carrier Mode State Diagram ............................................................................................................................................... 504 Figure 9-1 Example PD Topology ............................................................................................................................................................................ 514 Figure 9-2 Mapping of PD Topology to USB ........................................................................................................................................................ 515 Figure 9-3 USB Attached to USB Powered State Transition........................................................................................................................ 516 Figure 9-4 Any USB State to USB Attached State Transition (When operating as a Consumer) ............................................... 517 Figure 9-5 Any USB State to USB Attached State Transition (When operating as a Provider) .................................................. 517 Figure 9-6 Any USB State to USB Attached State Transition (After a USB Type-C Data Role Swap) ....................................... 518 Figure 9-7 Software stack on a PD aware OS ..................................................................................................................................................... 518 Figure 9-8 Enumeration of a PDUSB Device ....................................................................................................................................................... 519 Figure 10-1 Source Power Rule Illustration ....................................................................................................................................................... 529 Figure 10-2 Source Power Rule Example ............................................................................................................................................................. 530 Figure B-1 External Power supplied downstream .......................................................................................................................................... 538 Figure B-2 External Power supplied upstream ................................................................................................................................................. 542 Figure B-3 Giving Back Power ................................................................................................................................................................................... 549 Figure D-1 Circuit Block of BMC Finite Difference Receiver ....................................................................................................................... 574 Figure D-2 BMC AC and DC noise from VBUS at Power Sink ...................................................................................................................... 575 Figure D-3 Sample BMC Signals (a) without [USB 2.0] SE0 Noise (b) with [USB 2.0] SE0 Noise............................................... 575 Figure D-4 Scaled BMC Signal Derivative with 50ns Sampling Rate....................................................................................................... 576 Figure D-5 BMC Signal and Finite Difference Output with Various Time Steps ................................................................................ 576 Figure D-6 Output of Finite Difference in dash line and Edge Detector in solid line ...................................................................... 577 Figure D-7 Noise Zone and Detect Zone of BMC Receiver ........................................................................................................................... 577 Figure D-8 Circuit Block of BMC Subtraction Receiver ................................................................................................................................. 578 Figure D-9 (a) Output of LPF1 and LPF2 (b) Subtraction of LPF1 and LPF2 Output ...................................................................... 578 Figure D-10 Output of the BMC LPF1 in blue dash curve and the Subtractor in red solid curve.............................................. 579 Page 34 USB Power Delivery Specification Revision 3.0, Version 1.1 1. Introduction USB has evolved from a data interface capable of supplying limited power to a primary provider of power with a data interface. Today many devices charge or get their power from USB ports contained in laptops, cars, aircraft or even wall sockets. USB has become a ubiquitous power socket for many small devices such as cell phones, MP3 players and other hand-held devices. Users need USB to fulfill their requirements not only in terms of data but also to provide power to, or charge, their devices simply, often without the need to load a driver, in order to carry out “traditional” USB functions. There are however, still many devices which either require an additional power connection to the wall, or exceed the USB rated current in order to operate. Increasingly, international regulations require better energy management due to ecological and practical concerns relating to the availability of power. Regulations limit the amount of power available from the wall which has led to a pressing need to optimize power usage. The USB Power Delivery Specification has the potential to minimize waste as it becomes a standard for charging devices that are not satisfied by [USBBC 1.2]. Wider usage of wireless solutions is an attempt to remove data cabling but the need for “tethered” charging remains. In addition, industrial design requirements drive wired connectivity to do much more over the same connector. USB Power Delivery is designed to enable the maximum functionality of USB by providing more flexible power delivery along with data over a single cable. Its aim is to operate with and build on the existing USB ecosystem; increasing power levels from existing USB standards, for example Battery Charging, enabling new higher power use cases such as USB powered Hard Disk Drives (HDDs) and printers. With USB Power Delivery the power direction is no longer fixed. This enables the product with the power (Host or Peripheral) to provide the power. For example, a display with a supply from the wall can power, or charge, a laptop. Alternatively, USB power bricks or chargers are able to supply power to laptops and other battery powered devices through their, traditionally power providing, USB ports. USB Power Delivery enables hubs to become the means to optimize power management across multiple peripherals by allowing each device to take only the power it requires, and to get more power when required for a given application. For example battery powered devices can get increased charging current and then give it back temporarily when the user’s HDD requires spinning up. Optionally the hubs can communicate with the PC to enable even more intelligent and flexible management of power either automatically or with some level of user intervention. USB Power Delivery allows Low Power cases such as headsets to negotiate for only the power they require. This provides a simple solution that enables USB devices to operate at their optimal power levels. The Power Delivery Specification, in addition to providing mechanisms to negotiate power also can be used as a side- band channel for standard and vendor defined messaging. Power Delivery enables alternative modes of operation by providing the mechanisms to discover, enter and exit Alternate Modes. The specification also enables discovery of cable capabilities such as supported speeds and current levels.", "page_start": 10, "page_end": 34, "content_type": "text", "tables": [{"table_id": "Table of Contents .....................................................................................................12", "caption": "Table of Contents .....................................................................................................12", "page": 12, "data": []}, {"table_id": "List of Tables ............................................................................................................21", "caption": "List of Tables ............................................................................................................21", "page": 12, "data": []}, {"table_id": "A.2 Table showing the full calculation over one Message ............................................................................................. 537", "caption": "A.2 Table showing the full calculation over one Message ............................................................................................. 537", "page": 19, "data": []}, {"table_id": "Table 1-1 Terms and Abbreviations .......................................................................................................................................................................... 39", "caption": "Table 1-1 Terms and Abbreviations .......................................................................................................................................................................... 39", "page": 21, "data": []}, {"table_id": "Table 5-1 4b5b Symbol Encoding Table .................................................................................................................................................................. 67", "caption": "Table 5-1 4b5b Symbol Encoding Table .................................................................................................................................................................. 67", "page": 21, "data": []}, {"table_id": "Table 5-2 Ordered Sets..................................................................................................................................................................................................... 68", "caption": "Table 5-2 Ordered Sets..................................................................................................................................................................................................... 68", "page": 21, "data": []}, {"table_id": "Table 5-3 Validation of Ordered Sets ........................................................................................................................................................................ 68", "caption": "Table 5-3 Validation of Ordered Sets ........................................................................................................................................................................ 68", "page": 21, "data": []}, {"table_id": "Table 5-4 Data Size ............................................................................................................................................................................................................. 69", "caption": "Table 5-4 Data Size ............................................................................................................................................................................................................. 69", "page": 21, "data": []}, {"table_id": "Table 5-5 SOP ordered set .............................................................................................................................................................................................. 70", "caption": "Table 5-5 SOP ordered set .............................................................................................................................................................................................. 70", "page": 21, "data": []}, {"table_id": "Table 5-6 SOP’ ordered set ............................................................................................................................................................................................. 71", "caption": "Table 5-6 SOP’ ordered set ............................................................................................................................................................................................. 71", "page": 21, "data": []}, {"table_id": "Table 5-7 SOP’’ ordered set ............................................................................................................................................................................................ 71", "caption": "Table 5-7 SOP’’ ordered set ............................................................................................................................................................................................ 71", "page": 21, "data": []}, {"table_id": "Table 5-8 SOP’_Debug ordered set ............................................................................................................................................................................. 72", "caption": "Table 5-8 SOP’_Debug ordered set ............................................................................................................................................................................. 72", "page": 21, "data": []}, {"table_id": "Table 5-9 SOP’’_Debug ordered set ............................................................................................................................................................................ 72", "caption": "Table 5-9 SOP’’_Debug ordered set ............................................................................................................................................................................ 72", "page": 21, "data": []}, {"table_id": "Table 5-10 CRC-32 Mapping .......................................................................................................................................................................................... 73", "caption": "Table 5-10 CRC-32 Mapping .......................................................................................................................................................................................... 73", "page": 21, "data": []}, {"table_id": "Table 5-11 Hard Reset ordered set ............................................................................................................................................................................ 74", "caption": "Table 5-11 Hard Reset ordered set ............................................................................................................................................................................ 74", "page": 21, "data": []}, {"table_id": "Table 5-12 Cable Reset ordered set ........................................................................................................................................................................... 75", "caption": "Table 5-12 Cable Reset ordered set ........................................................................................................................................................................... 75", "page": 21, "data": []}, {"table_id": "Table 5-13 Rp values used for Collision Avoidance ........................................................................................................................................... 76", "caption": "Table 5-13 Rp values used for Collision Avoidance ........................................................................................................................................... 76", "page": 21, "data": []}, {"table_id": "Table 5-14 BMC Tx Mask Definition, X Values ...................................................................................................................................................... 81", "caption": "Table 5-14 BMC Tx Mask Definition, X Values ...................................................................................................................................................... 81", "page": 21, "data": []}, {"table_id": "Table 5-15 BMC Tx Mask Definition, Y Values ...................................................................................................................................................... 81", "caption": "Table 5-15 BMC Tx Mask Definition, Y Values ...................................................................................................................................................... 81", "page": 21, "data": []}, {"table_id": "Table 5-16 BMC Rx Mask Definition .......................................................................................................................................................................... 86", "caption": "Table 5-16 BMC Rx Mask Definition .......................................................................................................................................................................... 86", "page": 21, "data": []}, {"table_id": "Table 5-17 BMC Common Normative Requirements ........................................................................................................................................ 87", "caption": "Table 5-17 BMC Common Normative Requirements ........................................................................................................................................ 87", "page": 21, "data": []}, {"table_id": "Table 5-18 BMC Transmitter Normative Requirements ................................................................................................................................. 88", "caption": "Table 5-18 BMC Transmitter Normative Requirements ................................................................................................................................. 88", "page": 21, "data": []}, {"table_id": "Table 5-19 BMC Receiver Normative Requirements ......................................................................................................................................... 90", "caption": "Table 5-19 BMC Receiver Normative Requirements ......................................................................................................................................... 90", "page": 21, "data": []}, {"table_id": "Table 6-1 Message Header ............................................................................................................................................................................................. 96", "caption": "Table 6-1 Message Header ............................................................................................................................................................................................. 96", "page": 21, "data": []}, {"table_id": "Table 6-2 Revision Interoperability during an Explicit Contract ................................................................................................................ 99", "caption": "Table 6-2 Revision Interoperability during an Explicit Contract ................................................................................................................ 99", "page": 21, "data": []}, {"table_id": "Table 6-3 Extended Message Header ..................................................................................................................................................................... 100", "caption": "Table 6-3 Extended Message Header ..................................................................................................................................................................... 100", "page": 21, "data": []}, {"table_id": "Table 6-4 Use of Unchunked Message Supported bit ..................................................................................................................................... 102", "caption": "Table 6-4 Use of Unchunked Message Supported bit ..................................................................................................................................... 102", "page": 21, "data": []}, {"table_id": "Table 6-5 Control Message Types ............................................................................................................................................................................ 106", "caption": "Table 6-5 Control Message Types ............................................................................................................................................................................ 106", "page": 21, "data": []}, {"table_id": "Table 6-6 Data Message Types .................................................................................................................................................................................. 113", "caption": "Table 6-6 Data Message Types .................................................................................................................................................................................. 113", "page": 21, "data": []}, {"table_id": "Table 6-7 Power Data Object...................................................................................................................................................................................... 115", "caption": "Table 6-7 Power Data Object...................................................................................................................................................................................... 115", "page": 21, "data": []}, {"table_id": "Table 6-8 Augmented Power Data Object ............................................................................................................................................................ 115", "caption": "Table 6-8 Augmented Power Data Object ............................................................................................................................................................ 115", "page": 21, "data": []}, {"table_id": "Table 6-9 Fixed Supply PDO - Source ..................................................................................................................................................................... 117", "caption": "Table 6-9 Fixed Supply PDO - Source ..................................................................................................................................................................... 117", "page": 21, "data": []}, {"table_id": "Table 6-10 Fixed Power Source Peak Current Capability ............................................................................................................................ 119", "caption": "Table 6-10 Fixed Power Source Peak Current Capability ............................................................................................................................ 119", "page": 21, "data": []}, {"table_id": "Table 6-11 Variable Supply (non-Battery) PDO - Source ............................................................................................................................. 119", "caption": "Table 6-11 Variable Supply (non-Battery) PDO - Source ............................................................................................................................. 119", "page": 21, "data": []}, {"table_id": "Table 6-12 Battery Supply PDO - Source .............................................................................................................................................................. 119", "caption": "Table 6-12 Battery Supply PDO - Source .............................................................................................................................................................. 119", "page": 21, "data": []}, {"table_id": "Table 6-13 Programmable Power Supply APDO - Source ............................................................................................................................ 120", "caption": "Table 6-13 Programmable Power Supply APDO - Source ............................................................................................................................ 120", "page": 21, "data": []}, {"table_id": "Table 6-14 Fixed Supply PDO - Sink ....................................................................................................................................................................... 121", "caption": "Table 6-14 Fixed Supply PDO - Sink ....................................................................................................................................................................... 121", "page": 21, "data": []}, {"table_id": "Table 6-15 Variable Supply (non-Battery) PDO - Sink .................................................................................................................................. 122", "caption": "Table 6-15 Variable Supply (non-Battery) PDO - Sink .................................................................................................................................. 122", "page": 22, "data": []}, {"table_id": "Table 6-16 Battery Supply PDO - Sink ................................................................................................................................................................... 122", "caption": "Table 6-16 Battery Supply PDO - Sink ................................................................................................................................................................... 122", "page": 22, "data": []}, {"table_id": "Table 6-17 Programmable Power Supply APDO - Sink ................................................................................................................................. 123", "caption": "Table 6-17 Programmable Power Supply APDO - Sink ................................................................................................................................. 123", "page": 22, "data": []}, {"table_id": "Table 6-18 Fixed and Variable Request Data Object....................................................................................................................................... 123", "caption": "Table 6-18 Fixed and Variable Request Data Object....................................................................................................................................... 123", "page": 22, "data": []}, {"table_id": "Table 6-19 Fixed and Variable Request Data Object with GiveBack Support..................................................................................... 123", "caption": "Table 6-19 Fixed and Variable Request Data Object with GiveBack Support..................................................................................... 123", "page": 22, "data": []}, {"table_id": "Table 6-20 Battery Request Data Object .............................................................................................................................................................. 124", "caption": "Table 6-20 Battery Request Data Object .............................................................................................................................................................. 124", "page": 22, "data": []}, {"table_id": "Table 6-21 Battery Request Data Object with GiveBack Support ............................................................................................................ 125", "caption": "Table 6-21 Battery Request Data Object with GiveBack Support ............................................................................................................ 125", "page": 22, "data": []}, {"table_id": "Table 6-22 Programmable Request Data Object .............................................................................................................................................. 125", "caption": "Table 6-22 Programmable Request Data Object .............................................................................................................................................. 125", "page": 22, "data": []}, {"table_id": "Table 6-23 BIST Data Object....................................................................................................................................................................................... 129", "caption": "Table 6-23 BIST Data Object....................................................................................................................................................................................... 129", "page": 22, "data": []}, {"table_id": "Table 6-24 Unstructured VDM Header .................................................................................................................................................................. 130", "caption": "Table 6-24 Unstructured VDM Header .................................................................................................................................................................. 130", "page": 22, "data": []}, {"table_id": "Table 6-25 Structured VDM Header ....................................................................................................................................................................... 131", "caption": "Table 6-25 Structured VDM Header ....................................................................................................................................................................... 131", "page": 22, "data": []}, {"table_id": "Table 6-26 Structured VDM Commands ............................................................................................................................................................... 132", "caption": "Table 6-26 Structured VDM Commands ............................................................................................................................................................... 132", "page": 22, "data": []}, {"table_id": "Table 6-27 SVID Values ................................................................................................................................................................................................. 132", "caption": "Table 6-27 SVID Values ................................................................................................................................................................................................. 132", "page": 22, "data": []}, {"table_id": "Table 6-28 Commands and Responses .................................................................................................................................................................. 134", "caption": "Table 6-28 Commands and Responses .................................................................................................................................................................. 134", "page": 22, "data": []}, {"table_id": "Table 6-29 ID Header VDO .......................................................................................................................................................................................... 135", "caption": "Table 6-29 ID Header VDO .......................................................................................................................................................................................... 135", "page": 22, "data": []}, {"table_id": "Table 6-30 Product Types (UFP) .............................................................................................................................................................................. 136", "caption": "Table 6-30 Product Types (UFP) .............................................................................................................................................................................. 136", "page": 22, "data": []}, {"table_id": "Table 6-31 Product Types (Cable Plug) ................................................................................................................................................................ 137", "caption": "Table 6-31 Product Types (Cable Plug) ................................................................................................................................................................ 137", "page": 22, "data": []}, {"table_id": "Table 6-32 Product Types (DFP) .............................................................................................................................................................................. 137", "caption": "Table 6-32 Product Types (DFP) .............................................................................................................................................................................. 137", "page": 22, "data": []}, {"table_id": "Table 6-33 Cert Stat VDO ............................................................................................................................................................................................. 137", "caption": "Table 6-33 Cert Stat VDO ............................................................................................................................................................................................. 137", "page": 22, "data": []}, {"table_id": "Table 6-34 Product VDO ............................................................................................................................................................................................... 138", "caption": "Table 6-34 Product VDO ............................................................................................................................................................................................... 138", "page": 22, "data": []}, {"table_id": "Table 6-35 Passive Cable VDO ................................................................................................................................................................................... 138", "caption": "Table 6-35 Passive Cable VDO ................................................................................................................................................................................... 138", "page": 22, "data": []}, {"table_id": "Table 6-36 Active Cable VDO...................................................................................................................................................................................... 140", "caption": "Table 6-36 Active Cable VDO...................................................................................................................................................................................... 140", "page": 22, "data": []}, {"table_id": "Table 6-37 AMA VDO ..................................................................................................................................................................................................... 142", "caption": "Table 6-37 AMA VDO ..................................................................................................................................................................................................... 142", "page": 22, "data": []}, {"table_id": "Table 6-38 Discover SVIDs Responder VDO ....................................................................................................................................................... 143", "caption": "Table 6-38 Discover SVIDs Responder VDO ....................................................................................................................................................... 143", "page": 22, "data": []}, {"table_id": "Table 6-39 Battery Status Data Object (BSDO) ................................................................................................................................................ 152", "caption": "Table 6-39 Battery Status Data Object (BSDO) ................................................................................................................................................ 152", "page": 22, "data": []}, {"table_id": "Table 6-40 Alert Data Object ..................................................................................................................................................................................... 153", "caption": "Table 6-40 Alert Data Object ..................................................................................................................................................................................... 153", "page": 22, "data": []}, {"table_id": "Table 6-41 Country Code Data Object .................................................................................................................................................................... 155", "caption": "Table 6-41 Country Code Data Object .................................................................................................................................................................... 155", "page": 22, "data": []}, {"table_id": "Table 6-42 Extended Message Types ..................................................................................................................................................................... 155", "caption": "Table 6-42 Extended Message Types ..................................................................................................................................................................... 155", "page": 22, "data": []}, {"table_id": "Table 6-43 Source Capabilities Extended Data Block (SCEDB) ................................................................................................................. 156", "caption": "Table 6-43 Source Capabilities Extended Data Block (SCEDB) ................................................................................................................. 156", "page": 22, "data": []}, {"table_id": "Table 6-44 Status Data Block (SDB) ....................................................................................................................................................................... 160", "caption": "Table 6-44 Status Data Block (SDB) ....................................................................................................................................................................... 160", "page": 22, "data": []}, {"table_id": "Table 6-45 Get Battery Cap Data Block (GBCDB) ............................................................................................................................................ 162", "caption": "Table 6-45 Get Battery Cap Data Block (GBCDB) ............................................................................................................................................ 162", "page": 22, "data": []}, {"table_id": "Table 6-46 Get Battery Status Data Block (GBSDB) ....................................................................................................................................... 163", "caption": "Table 6-46 Get Battery Status Data Block (GBSDB) ....................................................................................................................................... 163", "page": 22, "data": []}, {"table_id": "Table 6-47 Battery Capability Data Block (BCDB) .......................................................................................................................................... 163", "caption": "Table 6-47 Battery Capability Data Block (BCDB) .......................................................................................................................................... 163", "page": 22, "data": []}, {"table_id": "Table 6-48 Get Manufacturer Info Data Block (GMIDB) .............................................................................................................................. 164", "caption": "Table 6-48 Get Manufacturer Info Data Block (GMIDB) .............................................................................................................................. 164", "page": 22, "data": []}, {"table_id": "Table 6-49 Manufacturer Info Data Block (MIDB) ......................................................................................................................................... 165", "caption": "Table 6-49 Manufacturer Info Data Block (MIDB) ......................................................................................................................................... 165", "page": 22, "data": []}, {"table_id": "Table 6-50 PPS Status Data Block (PPSSDB) ..................................................................................................................................................... 167", "caption": "Table 6-50 PPS Status Data Block (PPSSDB) ..................................................................................................................................................... 167", "page": 22, "data": []}, {"table_id": "Table 6-51 Country Codes Data Block (CCDB) ................................................................................................................................................. 168", "caption": "Table 6-51 Country Codes Data Block (CCDB) ................................................................................................................................................. 168", "page": 23, "data": []}, {"table_id": "Table 6-52 Country Info Data Block (CIDB) ....................................................................................................................................................... 168", "caption": "Table 6-52 Country Info Data Block (CIDB) ....................................................................................................................................................... 168", "page": 23, "data": []}, {"table_id": "Table 6-53 Time Values ................................................................................................................................................................................................ 179", "caption": "Table 6-53 Time Values ................................................................................................................................................................................................ 179", "page": 23, "data": []}, {"table_id": "Table 6-54 Timers ........................................................................................................................................................................................................... 180", "caption": "Table 6-54 Timers ........................................................................................................................................................................................................... 180", "page": 23, "data": []}, {"table_id": "Table 6-55 Counter parameters ............................................................................................................................................................................... 182", "caption": "Table 6-55 Counter parameters ............................................................................................................................................................................... 182", "page": 23, "data": []}, {"table_id": "Table 6-56 Counters ....................................................................................................................................................................................................... 183", "caption": "Table 6-56 Counters ....................................................................................................................................................................................................... 183", "page": 23, "data": []}, {"table_id": "Table 6-57 Response to an incoming Message (except VDM).................................................................................................................... 184", "caption": "Table 6-57 Response to an incoming Message (except VDM).................................................................................................................... 184", "page": 23, "data": []}, {"table_id": "Table 6-58 Response to an incoming VDM .......................................................................................................................................................... 184", "caption": "Table 6-58 Response to an incoming VDM .......................................................................................................................................................... 184", "page": 23, "data": []}, {"table_id": "Table 6-59 Message discarding ................................................................................................................................................................................. 186", "caption": "Table 6-59 Message discarding ................................................................................................................................................................................. 186", "page": 23, "data": []}, {"table_id": "Table 6-60 Protocol Layer States ............................................................................................................................................................................. 210", "caption": "Table 6-60 Protocol Layer States ............................................................................................................................................................................. 210", "page": 23, "data": []}, {"table_id": "Table 6-61 Applicability of Control Messages ................................................................................................................................................... 213", "caption": "Table 6-61 Applicability of Control Messages ................................................................................................................................................... 213", "page": 23, "data": []}, {"table_id": "Table 6-62 Applicability of Data Messages .......................................................................................................................................................... 214", "caption": "Table 6-62 Applicability of Data Messages .......................................................................................................................................................... 214", "page": 23, "data": []}, {"table_id": "Table 6-63 Applicability of Extended Messages ............................................................................................................................................... 215", "caption": "Table 6-63 Applicability of Extended Messages ............................................................................................................................................... 215", "page": 23, "data": []}, {"table_id": "Table 6-64 Applicability of Structured VDM Commands ............................................................................................................................. 216", "caption": "Table 6-64 Applicability of Structured VDM Commands ............................................................................................................................. 216", "page": 23, "data": []}, {"table_id": "Table 6-65 Applicability of Reset Signaling ........................................................................................................................................................ 217", "caption": "Table 6-65 Applicability of Reset Signaling ........................................................................................................................................................ 217", "page": 23, "data": []}, {"table_id": "Table 6-66 Applicability of Fast Role Swap signal ........................................................................................................................................... 217", "caption": "Table 6-66 Applicability of Fast Role Swap signal ........................................................................................................................................... 217", "page": 23, "data": []}, {"table_id": "Table 6-67 Value Parameters..................................................................................................................................................................................... 218", "caption": "Table 6-67 Value Parameters..................................................................................................................................................................................... 218", "page": 23, "data": []}, {"table_id": "Table 7-1 Sequence Description for Increasing the Current ...................................................................................................................... 239", "caption": "Table 7-1 Sequence Description for Increasing the Current ...................................................................................................................... 239", "page": 23, "data": []}, {"table_id": "Table 7-2 Sequence Description for Increasing the Voltage ....................................................................................................................... 241", "caption": "Table 7-2 Sequence Description for Increasing the Voltage ....................................................................................................................... 241", "page": 23, "data": []}, {"table_id": "Table 7-3 Sequence Diagram for Increasing the Voltage and Current ................................................................................................... 243", "caption": "Table 7-3 Sequence Diagram for Increasing the Voltage and Current ................................................................................................... 243", "page": 23, "data": []}, {"table_id": "Table 7-4 Sequence Description for Increasing the Voltage and Decreasing the Current ........................................................... 245", "caption": "Table 7-4 Sequence Description for Increasing the Voltage and Decreasing the Current ........................................................... 245", "page": 23, "data": []}, {"table_id": "Table 7-5 Sequence Description for Decreasing the Voltage and Increasing the Current ........................................................... 247", "caption": "Table 7-5 Sequence Description for Decreasing the Voltage and Increasing the Current ........................................................... 247", "page": 23, "data": []}, {"table_id": "Table 7-6 Sequence Description for Decreasing the Current ..................................................................................................................... 249", "caption": "Table 7-6 Sequence Description for Decreasing the Current ..................................................................................................................... 249", "page": 23, "data": []}, {"table_id": "Table 7-7 Sequence Description for Decreasing the Voltage ...................................................................................................................... 251", "caption": "Table 7-7 Sequence Description for Decreasing the Voltage ...................................................................................................................... 251", "page": 23, "data": []}, {"table_id": "Table 7-8 Sequence Description for Decreasing the Voltage and the Current ................................................................................... 253", "caption": "Table 7-8 Sequence Description for Decreasing the Voltage and the Current ................................................................................... 253", "page": 23, "data": []}, {"table_id": "Table 7-9 Sequence Description for a Sink Requested Power Role Swap ............................................................................................ 255", "caption": "Table 7-9 Sequence Description for a Sink Requested Power Role Swap ............................................................................................ 255", "page": 23, "data": []}, {"table_id": "Table 7-10 Sequence Description for a Source Requested Power Role Swap .................................................................................... 258", "caption": "Table 7-10 Sequence Description for a Source Requested Power Role Swap .................................................................................... 258", "page": 23, "data": []}, {"table_id": "Table 7-11 Sequence Description for a GotoMin Current Decrease........................................................................................................ 261", "caption": "Table 7-11 Sequence Description for a GotoMin Current Decrease........................................................................................................ 261", "page": 23, "data": []}, {"table_id": "Table 7-12 Sequence Description for a Source Initiated Hard Reset...................................................................................................... 263", "caption": "Table 7-12 Sequence Description for a Source Initiated Hard Reset...................................................................................................... 263", "page": 23, "data": []}, {"table_id": "Table 7-13 Sequence Description for a Sink Initiated Hard Reset ........................................................................................................... 265", "caption": "Table 7-13 Sequence Description for a Sink Initiated Hard Reset ........................................................................................................... 265", "page": 23, "data": []}, {"table_id": "Table 7-14 Sequence Description for no change in Current or Voltage ................................................................................................ 267", "caption": "Table 7-14 Sequence Description for no change in Current or Voltage ................................................................................................ 267", "page": 23, "data": []}, {"table_id": "Table 7-15 Sequence Description for Fast Role Swap ................................................................................................................................... 268", "caption": "Table 7-15 Sequence Description for Fast Role Swap ................................................................................................................................... 268", "page": 23, "data": []}, {"table_id": "Table 7-16 Sequence Description for Increasing the Programmable Power Supply Voltage .................................................... 270", "caption": "Table 7-16 Sequence Description for Increasing the Programmable Power Supply Voltage .................................................... 270", "page": 23, "data": []}, {"table_id": "Table 7-17 Sequence Description for Decreasing the Programmable Power Supply Voltage ................................................... 272", "caption": "Table 7-17 Sequence Description for Decreasing the Programmable Power Supply Voltage ................................................... 272", "page": 23, "data": []}, {"table_id": "Table 7-18 Sequence Description for Changing the Source PDO or APDO .......................................................................................... 274", "caption": "Table 7-18 Sequence Description for Changing the Source PDO or APDO .......................................................................................... 274", "page": 23, "data": []}, {"table_id": "Table 7-19 Source Electrical Parameters ............................................................................................................................................................. 276", "caption": "Table 7-19 Source Electrical Parameters ............................................................................................................................................................. 276", "page": 23, "data": []}, {"table_id": "Table 7-20 Sink Electrical Parameters .................................................................................................................................................................. 280", "caption": "Table 7-20 Sink Electrical Parameters .................................................................................................................................................................. 280", "page": 24, "data": []}, {"table_id": "Table 7-21 Common Source/Sink Electrical Parameters ............................................................................................................................. 281", "caption": "Table 7-21 Common Source/Sink Electrical Parameters ............................................................................................................................. 281", "page": 24, "data": []}, {"table_id": "Table 8-1 Basic Message Flow ................................................................................................................................................................................... 290", "caption": "Table 8-1 Basic Message Flow ................................................................................................................................................................................... 290", "page": 24, "data": []}, {"table_id": "Table 8-2 Potential issues in Basic Message Flow ........................................................................................................................................... 291", "caption": "Table 8-2 Potential issues in Basic Message Flow ........................................................................................................................................... 291", "page": 24, "data": []}, {"table_id": "Table 8-3 Basic Message Flow with CRC failure ............................................................................................................................................... 292", "caption": "Table 8-3 Basic Message Flow with CRC failure ............................................................................................................................................... 292", "page": 24, "data": []}, {"table_id": "Table 8-4 Interruptible and Non-interruptible AMS ...................................................................................................................................... 294", "caption": "Table 8-4 Interruptible and Non-interruptible AMS ...................................................................................................................................... 294", "page": 24, "data": []}, {"table_id": "Table 8-5 Steps for a successful Power Negotiation ....................................................................................................................................... 296", "caption": "Table 8-5 Steps for a successful Power Negotiation ....................................................................................................................................... 296", "page": 24, "data": []}, {"table_id": "Table 8-6 Steps for a GotoMin Negotiation ......................................................................................................................................................... 299", "caption": "Table 8-6 Steps for a GotoMin Negotiation ......................................................................................................................................................... 299", "page": 24, "data": []}, {"table_id": "Table 8-7 Steps for a Soft Reset ................................................................................................................................................................................ 301", "caption": "Table 8-7 Steps for a Soft Reset ................................................................................................................................................................................ 301", "page": 24, "data": []}, {"table_id": "Table 8-8 Steps for Source initiated Hard Reset ............................................................................................................................................... 304", "caption": "Table 8-8 Steps for Source initiated Hard Reset ............................................................................................................................................... 304", "page": 24, "data": []}, {"table_id": "Table 8-9 Steps for Sink initiated Hard Reset .................................................................................................................................................... 307", "caption": "Table 8-9 Steps for Sink initiated Hard Reset .................................................................................................................................................... 307", "page": 24, "data": []}, {"table_id": "Table 8-10 Steps for Source initiated Hard Reset – Sink long reset ........................................................................................................ 310", "caption": "Table 8-10 Steps for Source initiated Hard Reset – Sink long reset ........................................................................................................ 310", "page": 24, "data": []}, {"table_id": "Table 8-11 Steps for a Successful Source Initiated Power Role Swap Sequence .............................................................................. 314", "caption": "Table 8-11 Steps for a Successful Source Initiated Power Role Swap Sequence .............................................................................. 314", "page": 24, "data": []}, {"table_id": "Table 8-12 Steps for a Successful Sink Initiated Power Role Swap Sequence ................................................................................... 319", "caption": "Table 8-12 Steps for a Successful Sink Initiated Power Role Swap Sequence ................................................................................... 319", "page": 24, "data": []}, {"table_id": "Table 8-13 Steps for a Successful Fast Role Swap Sequence ...................................................................................................................... 324", "caption": "Table 8-13 Steps for a Successful Fast Role Swap Sequence ...................................................................................................................... 324", "page": 24, "data": []}, {"table_id": "Table 8-14 Steps for Data Role Swap, UFP operating as Sink initiates .................................................................................................. 328", "caption": "Table 8-14 Steps for Data Role Swap, UFP operating as Sink initiates .................................................................................................. 328", "page": 24, "data": []}, {"table_id": "Table 8-15 Steps for Data Role Swap, UFP operating as Source initiates ............................................................................................. 330", "caption": "Table 8-15 Steps for Data Role Swap, UFP operating as Source initiates ............................................................................................. 330", "page": 24, "data": []}, {"table_id": "Table 8-16 Steps for Data Role Swap, DFP operating as Source initiates ............................................................................................. 332", "caption": "Table 8-16 Steps for Data Role Swap, DFP operating as Source initiates ............................................................................................. 332", "page": 24, "data": []}, {"table_id": "Table 8-17 Steps for Data Role Swap, DFP operating as Sink initiates .................................................................................................. 334", "caption": "Table 8-17 Steps for Data Role Swap, DFP operating as Sink initiates .................................................................................................. 334", "page": 24, "data": []}, {"table_id": "Table 8-18 Steps for Source to Sink VCONN Source Swap ............................................................................................................................. 337", "caption": "Table 8-18 Steps for Source to Sink VCONN Source Swap ............................................................................................................................. 337", "page": 24, "data": []}, {"table_id": "Table 8-19 Steps for Sink to Source VCONN Source Swap ............................................................................................................................. 340", "caption": "Table 8-19 Steps for Sink to Source VCONN Source Swap ............................................................................................................................. 340", "page": 24, "data": []}, {"table_id": "Table 8-20 Steps for Source Alert to Sink ............................................................................................................................................................ 342", "caption": "Table 8-20 Steps for Source Alert to Sink ............................................................................................................................................................ 342", "page": 24, "data": []}, {"table_id": "Table 8-21 Steps for Sink Alert to Source ............................................................................................................................................................ 344", "caption": "Table 8-21 Steps for Sink Alert to Source ............................................................................................................................................................ 344", "page": 24, "data": []}, {"table_id": "Table 8-22 Steps for a Sink getting Source status Sequence....................................................................................................................... 346", "caption": "Table 8-22 Steps for a Sink getting Source status Sequence....................................................................................................................... 346", "page": 24, "data": []}, {"table_id": "Table 8-23 Steps for a Source getting Sink status Sequence....................................................................................................................... 348", "caption": "Table 8-23 Steps for a Source getting Sink status Sequence....................................................................................................................... 348", "page": 24, "data": []}, {"table_id": "Table 8-24 Steps for a Sink getting Source PPS status Sequence ............................................................................................................. 350", "caption": "Table 8-24 Steps for a Sink getting Source PPS status Sequence ............................................................................................................. 350", "page": 24, "data": []}, {"table_id": "Table 8-25 Steps for a Sink getting Source capabilities Sequence ........................................................................................................... 352", "caption": "Table 8-25 Steps for a Sink getting Source capabilities Sequence ........................................................................................................... 352", "page": 24, "data": []}, {"table_id": "Table 8-26 Steps for a Dual-Role Source getting Dual-Role Sink’s capabilities as a Source Sequence .................................. 354", "caption": "Table 8-26 Steps for a Dual-Role Source getting Dual-Role Sink’s capabilities as a Source Sequence .................................. 354", "page": 24, "data": []}, {"table_id": "Table 8-27 Steps for a Source getting Sink capabilities Sequence ........................................................................................................... 356", "caption": "Table 8-27 Steps for a Source getting Sink capabilities Sequence ........................................................................................................... 356", "page": 24, "data": []}, {"table_id": "Table 8-28 Steps for a Dual-Role Sink getting Dual-Role Source capabilities as a Sink Sequence ........................................... 358", "caption": "Table 8-28 Steps for a Dual-Role Sink getting Dual-Role Source capabilities as a Sink Sequence ........................................... 358", "page": 24, "data": []}, {"table_id": "Table 8-29 Steps for a Sink getting Source extended capabilities Sequence ...................................................................................... 360", "caption": "Table 8-29 Steps for a Sink getting Source extended capabilities Sequence ...................................................................................... 360", "page": 24, "data": []}, {"table_id": "Table 8-30 Steps for a Dual-Role Source getting Dual-Role Sink extended capabilities Sequence .......................................... 362", "caption": "Table 8-30 Steps for a Dual-Role Source getting Dual-Role Sink extended capabilities Sequence .......................................... 362", "page": 24, "data": []}, {"table_id": "Table 8-31 Steps for a Sink getting Source Battery capabilities Sequence .......................................................................................... 364", "caption": "Table 8-31 Steps for a Sink getting Source Battery capabilities Sequence .......................................................................................... 364", "page": 24, "data": []}, {"table_id": "Table 8-32 Steps for a Source getting Sink Battery capabilities Sequence .......................................................................................... 366", "caption": "Table 8-32 Steps for a Source getting Sink Battery capabilities Sequence .......................................................................................... 366", "page": 24, "data": []}, {"table_id": "Table 8-33 Steps for a Sink getting Source Battery status Sequence ..................................................................................................... 368", "caption": "Table 8-33 Steps for a Sink getting Source Battery status Sequence ..................................................................................................... 368", "page": 24, "data": []}, {"table_id": "Table 8-34 Steps for a Source getting Sink Battery status Sequence ..................................................................................................... 370", "caption": "Table 8-34 Steps for a Source getting Sink Battery status Sequence ..................................................................................................... 370", "page": 24, "data": []}, {"table_id": "Table 8-35 Steps for a Source getting Sink’s Port Manufacturer information Sequence .............................................................. 372", "caption": "Table 8-35 Steps for a Source getting Sink’s Port Manufacturer information Sequence .............................................................. 372", "page": 25, "data": []}, {"table_id": "Table 8-36 Steps for a Source getting Sink’s Port Manufacturer information Sequence .............................................................. 374", "caption": "Table 8-36 Steps for a Source getting Sink’s Port Manufacturer information Sequence .............................................................. 374", "page": 25, "data": []}, {"table_id": "Table 8-37 Steps for a Source getting Sink’s Battery Manufacturer information Sequence ....................................................... 376", "caption": "Table 8-37 Steps for a Source getting Sink’s Battery Manufacturer information Sequence ....................................................... 376", "page": 25, "data": []}, {"table_id": "Table 8-38 Steps for a Source getting Sink’s Battery Manufacturer information Sequence ....................................................... 378", "caption": "Table 8-38 Steps for a Source getting Sink’s Battery Manufacturer information Sequence ....................................................... 378", "page": 25, "data": []}, {"table_id": "Table 8-39 Steps for a VCONN Source getting Sink’s Port Manufacturer information Sequence ............................................... 380", "caption": "Table 8-39 Steps for a VCONN Source getting Sink’s Port Manufacturer information Sequence ............................................... 380", "page": 25, "data": []}, {"table_id": "Table 8-40 Steps for a Source getting Country Codes Sequence............................................................................................................... 382", "caption": "Table 8-40 Steps for a Source getting Country Codes Sequence............................................................................................................... 382", "page": 25, "data": []}, {"table_id": "Table 8-41 Steps for a Source getting Sink’s Country Codes Sequence ................................................................................................. 384", "caption": "Table 8-41 Steps for a Source getting Sink’s Country Codes Sequence ................................................................................................. 384", "page": 25, "data": []}, {"table_id": "Table 8-42 Steps for a VCONN Source getting Sink’s Country Codes Sequence .................................................................................. 386", "caption": "Table 8-42 Steps for a VCONN Source getting Sink’s Country Codes Sequence .................................................................................. 386", "page": 25, "data": []}, {"table_id": "Table 8-43 Steps for a Source getting Country Information Sequence.................................................................................................. 388", "caption": "Table 8-43 Steps for a Source getting Country Information Sequence.................................................................................................. 388", "page": 25, "data": []}, {"table_id": "Table 8-44 Steps for a Source getting Sink’s Country Information Sequence .................................................................................... 390", "caption": "Table 8-44 Steps for a Source getting Sink’s Country Information Sequence .................................................................................... 390", "page": 25, "data": []}, {"table_id": "Table 8-45 Steps for a VCONN Source getting Sink’s Country Information Sequence...................................................................... 392", "caption": "Table 8-45 Steps for a VCONN Source getting Sink’s Country Information Sequence...................................................................... 392", "page": 25, "data": []}, {"table_id": "Table 8-46 Steps for a Source requesting a security exchange with a Sink Sequence ................................................................... 394", "caption": "Table 8-46 Steps for a Source requesting a security exchange with a Sink Sequence ................................................................... 394", "page": 25, "data": []}, {"table_id": "Table 8-47 Steps for a Sink requesting a security exchange with a Source Sequence ................................................................... 396", "caption": "Table 8-47 Steps for a Sink requesting a security exchange with a Source Sequence ................................................................... 396", "page": 25, "data": []}, {"table_id": "Table 8-48 Steps for a Vconn Source requesting a security exchange with a Cable Plug Sequence ........................................ 398", "caption": "Table 8-48 Steps for a Vconn Source requesting a security exchange with a Cable Plug Sequence ........................................ 398", "page": 25, "data": []}, {"table_id": "Table 8-49 Steps for a Source requesting a firmware update exchange with a Sink Sequence................................................. 400", "caption": "Table 8-49 Steps for a Source requesting a firmware update exchange with a Sink Sequence................................................. 400", "page": 25, "data": []}, {"table_id": "Table 8-50 Steps for a Sink requesting a firmware update exchange with a Source Sequence................................................. 402", "caption": "Table 8-50 Steps for a Sink requesting a firmware update exchange with a Source Sequence................................................. 402", "page": 25, "data": []}, {"table_id": "Table 8-51 Steps for a Vconn Source requesting a firmware update exchange with a Cable Plug Sequence ..................... 404", "caption": "Table 8-51 Steps for a Vconn Source requesting a firmware update exchange with a Cable Plug Sequence ..................... 404", "page": 25, "data": []}, {"table_id": "Table 8-52 Steps for DFP to UFP Discover Identity ........................................................................................................................................ 406", "caption": "Table 8-52 Steps for DFP to UFP Discover Identity ........................................................................................................................................ 406", "page": 25, "data": []}, {"table_id": "Table 8-53 Steps for Source Port to Cable Plug Discover Identity ........................................................................................................... 408", "caption": "Table 8-53 Steps for Source Port to Cable Plug Discover Identity ........................................................................................................... 408", "page": 25, "data": []}, {"table_id": "Table 8-54 Steps for DFP to Cable Plug Discover Identity ........................................................................................................................... 410", "caption": "Table 8-54 Steps for DFP to Cable Plug Discover Identity ........................................................................................................................... 410", "page": 25, "data": []}, {"table_id": "Table 8-55 Steps for DFP to UFP Enter Mode .................................................................................................................................................... 412", "caption": "Table 8-55 Steps for DFP to UFP Enter Mode .................................................................................................................................................... 412", "page": 25, "data": []}, {"table_id": "Table 8-56 Steps for DFP to UFP Exit Mode ........................................................................................................................................................ 414", "caption": "Table 8-56 Steps for DFP to UFP Exit Mode ........................................................................................................................................................ 414", "page": 25, "data": []}, {"table_id": "Table 8-57 Steps for DFP to Cable Plug Enter Mode ....................................................................................................................................... 417", "caption": "Table 8-57 Steps for DFP to Cable Plug Enter Mode ....................................................................................................................................... 417", "page": 25, "data": []}, {"table_id": "Table 8-58 Steps for DFP to Cable Plug Exit Mode .......................................................................................................................................... 419", "caption": "Table 8-58 Steps for DFP to Cable Plug Exit Mode .......................................................................................................................................... 419", "page": 25, "data": []}, {"table_id": "Table 8-59 Steps for UFP to DFP Attention ......................................................................................................................................................... 421", "caption": "Table 8-59 Steps for UFP to DFP Attention ......................................................................................................................................................... 421", "page": 25, "data": []}, {"table_id": "Table 8-60 Steps for BIST Carrier Mode Test..................................................................................................................................................... 424", "caption": "Table 8-60 Steps for BIST Carrier Mode Test..................................................................................................................................................... 424", "page": 25, "data": []}, {"table_id": "Table 8-61 Steps for BIST Test Data Test ............................................................................................................................................................. 426", "caption": "Table 8-61 Steps for BIST Test Data Test ............................................................................................................................................................. 426", "page": 25, "data": []}, {"table_id": "Table 8-62 Policy Engine States ................................................................................................................................................................................ 506", "caption": "Table 8-62 Policy Engine States ................................................................................................................................................................................ 506", "page": 25, "data": []}, {"table_id": "Table 9-1 USB Power Delivery Type Codes......................................................................................................................................................... 520", "caption": "Table 9-1 USB Power Delivery Type Codes......................................................................................................................................................... 520", "page": 25, "data": []}, {"table_id": "Table 9-2 USB Power Delivery Capability Descriptor .................................................................................................................................... 520", "caption": "Table 9-2 USB Power Delivery Capability Descriptor .................................................................................................................................... 520", "page": 25, "data": []}, {"table_id": "Table 9-3 Battery Info Capability Descriptor ..................................................................................................................................................... 521", "caption": "Table 9-3 Battery Info Capability Descriptor ..................................................................................................................................................... 521", "page": 25, "data": []}, {"table_id": "Table 9-4 PD Consumer Port Descriptor .............................................................................................................................................................. 522", "caption": "Table 9-4 PD Consumer Port Descriptor .............................................................................................................................................................. 522", "page": 25, "data": []}, {"table_id": "Table 9-5 PD Provider Port Descriptor ................................................................................................................................................................. 523", "caption": "Table 9-5 PD Provider Port Descriptor ................................................................................................................................................................. 523", "page": 25, "data": []}, {"table_id": "Table 9-6 PD Requests .................................................................................................................................................................................................. 524", "caption": "Table 9-6 PD Requests .................................................................................................................................................................................................. 524", "page": 25, "data": []}, {"table_id": "Table 9-7 PD Request Codes ....................................................................................................................................................................................... 524", "caption": "Table 9-7 PD Request Codes ....................................................................................................................................................................................... 524", "page": 25, "data": []}, {"table_id": "Table 9-8 PD Feature Selectors ................................................................................................................................................................................. 524", "caption": "Table 9-8 PD Feature Selectors ................................................................................................................................................................................. 524", "page": 25, "data": []}, {"table_id": "Table 9-9 Battery Status Structure .......................................................................................................................................................................... 525", "caption": "Table 9-9 Battery Status Structure .......................................................................................................................................................................... 525", "page": 26, "data": []}, {"table_id": "Table 9-10 Battery Wake Mask ................................................................................................................................................................................. 526", "caption": "Table 9-10 Battery Wake Mask ................................................................................................................................................................................. 526", "page": 26, "data": []}, {"table_id": "Table 9-11 Charging Policy Encoding .................................................................................................................................................................... 527", "caption": "Table 9-11 Charging Policy Encoding .................................................................................................................................................................... 527", "page": 26, "data": []}, {"table_id": "Table 10-1 Considerations for Sources ................................................................................................................................................................. 528", "caption": "Table 10-1 Considerations for Sources ................................................................................................................................................................. 528", "page": 26, "data": []}, {"table_id": "Table 10-2 Normative Voltages and Currents ................................................................................................................................................... 529", "caption": "Table 10-2 Normative Voltages and Currents ................................................................................................................................................... 529", "page": 26, "data": []}, {"table_id": "Table 10-3 Fixed Supply PDO – Source 5V .......................................................................................................................................................... 530", "caption": "Table 10-3 Fixed Supply PDO – Source 5V .......................................................................................................................................................... 530", "page": 26, "data": []}, {"table_id": "Table 10-4 Fixed Supply PDO – Source 9V .......................................................................................................................................................... 531", "caption": "Table 10-4 Fixed Supply PDO – Source 9V .......................................................................................................................................................... 531", "page": 26, "data": []}, {"table_id": "Table 10-5 Fixed Supply PDO – Source 15V ....................................................................................................................................................... 531", "caption": "Table 10-5 Fixed Supply PDO – Source 15V ....................................................................................................................................................... 531", "page": 26, "data": []}, {"table_id": "Table 10-6 Fixed Supply PDO – Source 20V ....................................................................................................................................................... 531", "caption": "Table 10-6 Fixed Supply PDO – Source 20V ....................................................................................................................................................... 531", "page": 26, "data": []}, {"table_id": "Table 10-7 Programmable Power Supply PDOs and APDOs based on the PDP ................................................................................ 532", "caption": "Table 10-7 Programmable Power Supply PDOs and APDOs based on the PDP ................................................................................ 532", "page": 26, "data": []}, {"table_id": "Table 10-8 Programmable Power Supply Voltage Ranges .......................................................................................................................... 533", "caption": "Table 10-8 Programmable Power Supply Voltage Ranges .......................................................................................................................... 533", "page": 26, "data": []}, {"table_id": "Table B-1 External power is supplied downstream ........................................................................................................................................ 539", "caption": "Table B-1 External power is supplied downstream ........................................................................................................................................ 539", "page": 26, "data": []}, {"table_id": "Table B-2 External power is supplied upstream .............................................................................................................................................. 542", "caption": "Table B-2 External power is supplied upstream .............................................................................................................................................. 542", "page": 26, "data": []}, {"table_id": "Table B-3 Giving back power ..................................................................................................................................................................................... 549", "caption": "Table B-3 Giving back power ..................................................................................................................................................................................... 549", "page": 26, "data": []}, {"table_id": "Table C-1 Discover Identity Command request from Initiator Example .............................................................................................. 561", "caption": "Table C-1 Discover Identity Command request from Initiator Example .............................................................................................. 561", "page": 26, "data": []}, {"table_id": "Table C-2 Discover Identity Command response from Active Cable Responder Example .......................................................... 561", "caption": "Table C-2 Discover Identity Command response from Active Cable Responder Example .......................................................... 561", "page": 26, "data": []}, {"table_id": "Table C-3 Discover Identity Command response from Hub Responder Example............................................................................ 563", "caption": "Table C-3 Discover Identity Command response from Hub Responder Example............................................................................ 563", "page": 26, "data": []}, {"table_id": "Table C-4 Discover SVIDs Command request from Initiator Example................................................................................................... 564", "caption": "Table C-4 Discover SVIDs Command request from Initiator Example................................................................................................... 564", "page": 26, "data": []}, {"table_id": "Table C-5 Discover SVIDs Command response from Responder Example .......................................................................................... 564", "caption": "Table C-5 Discover SVIDs Command response from Responder Example .......................................................................................... 564", "page": 26, "data": []}, {"table_id": "Table C-6 Discover Modes Command request from Initiator Example ................................................................................................. 566", "caption": "Table C-6 Discover Modes Command request from Initiator Example ................................................................................................. 566", "page": 26, "data": []}, {"table_id": "Table C-7 Discover Modes Command response from Responder Example ........................................................................................ 566", "caption": "Table C-7 Discover Modes Command response from Responder Example ........................................................................................ 566", "page": 26, "data": []}, {"table_id": "Table C-8 Enter Mode Command request from Initiator Example .......................................................................................................... 568", "caption": "Table C-8 Enter Mode Command request from Initiator Example .......................................................................................................... 568", "page": 26, "data": []}, {"table_id": "Table C-9 Enter Mode Command response from Responder Example ................................................................................................. 568", "caption": "Table C-9 Enter Mode Command response from Responder Example ................................................................................................. 568", "page": 26, "data": []}, {"table_id": "Table C-10 Enter Mode Command request from Initiator Example ....................................................................................................... 569", "caption": "Table C-10 Enter Mode Command request from Initiator Example ....................................................................................................... 569", "page": 26, "data": []}, {"table_id": "Table C-11 Exit Mode Command request from Initiator Example ........................................................................................................... 570", "caption": "Table C-11 Exit Mode Command request from Initiator Example ........................................................................................................... 570", "page": 26, "data": []}, {"table_id": "Table C-12 Exit Mode Command response from Responder Example .................................................................................................. 570", "caption": "Table C-12 Exit Mode Command response from Responder Example .................................................................................................. 570", "page": 26, "data": []}, {"table_id": "Table C-13 Attention Command request from Initiator Example ............................................................................................................ 572", "caption": "Table C-13 Attention Command request from Initiator Example ............................................................................................................ 572", "page": 26, "data": []}, {"table_id": "Table C-14 Attention Command request from Initiator with additional VDO Example ................................................................ 572", "caption": "Table C-14 Attention Command request from Initiator with additional VDO Example ................................................................ 572", "page": 26, "data": []}], "figures": [{"figure_id": "List of Figures ...........................................................................................................27", "caption": "List of Figures ...........................................................................................................27", "page": 12}, {"figure_id": "Figure 2-1 Logical Structure of USB Power Delivery Capable Devices ..................................................................................................... 50", "caption": "Figure 2-1 Logical Structure of USB Power Delivery Capable Devices ..................................................................................................... 50", "page": 27}, {"figure_id": "Figure 2-2 Example SOP’ Communication between VCONN Source and Cable Plug(s) ...................................................................... 52", "caption": "Figure 2-2 Example SOP’ Communication between VCONN Source and Cable Plug(s) ...................................................................... 52", "page": 27}, {"figure_id": "Figure 2-3 USB Power Delivery Communications Stack .................................................................................................................................. 58", "caption": "Figure 2-3 USB Power Delivery Communications Stack .................................................................................................................................. 58", "page": 27}, {"figure_id": "Figure 2-4 USB Power Delivery Communication Over USB ........................................................................................................................... 59", "caption": "Figure 2-4 USB Power Delivery Communication Over USB ........................................................................................................................... 59", "page": 27}, {"figure_id": "Figure 2-5 High Level Architecture View ................................................................................................................................................................ 60", "caption": "Figure 2-5 High Level Architecture View ................................................................................................................................................................ 60", "page": 27}, {"figure_id": "Figure 5-1 Interpretation of ordered sets ............................................................................................................................................................... 68", "caption": "Figure 5-1 Interpretation of ordered sets ............................................................................................................................................................... 68", "page": 27}, {"figure_id": "Figure 5-2 Transmit Order for Various Sizes of Data ........................................................................................................................................ 69", "caption": "Figure 5-2 Transmit Order for Various Sizes of Data ........................................................................................................................................ 69", "page": 27}, {"figure_id": "Figure 5-3 USB Power Delivery Packet Format ................................................................................................................................................... 70", "caption": "Figure 5-3 USB Power Delivery Packet Format ................................................................................................................................................... 70", "page": 27}, {"figure_id": "Figure 5-4 CRC 32 generation ....................................................................................................................................................................................... 73", "caption": "Figure 5-4 CRC 32 generation ....................................................................................................................................................................................... 73", "page": 27}, {"figure_id": "Figure 5-5 Line format of Hard Reset ....................................................................................................................................................................... 75", "caption": "Figure 5-5 Line format of Hard Reset ....................................................................................................................................................................... 75", "page": 27}, {"figure_id": "Figure 5-6 Line format of Cable Reset ...................................................................................................................................................................... 75", "caption": "Figure 5-6 Line format of Cable Reset ...................................................................................................................................................................... 75", "page": 27}, {"figure_id": "Figure 5-7 BMC Example ................................................................................................................................................................................................. 76", "caption": "Figure 5-7 BMC Example ................................................................................................................................................................................................. 76", "page": 27}, {"figure_id": "Figure 5-8 BMC Transmitter Block Diagram ......................................................................................................................................................... 77", "caption": "Figure 5-8 BMC Transmitter Block Diagram ......................................................................................................................................................... 77", "page": 27}, {"figure_id": "Figure 5-9 BMC Receiver Block Diagram ................................................................................................................................................................ 77", "caption": "Figure 5-9 BMC Receiver Block Diagram ................................................................................................................................................................ 77", "page": 27}, {"figure_id": "Figure 5-10 BMC Encoded Start of Preamble ........................................................................................................................................................ 77", "caption": "Figure 5-10 BMC Encoded Start of Preamble ........................................................................................................................................................ 77", "page": 27}, {"figure_id": "Figure 5-11 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with High-to-Low Last Transition .. 78", "caption": "Figure 5-11 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with High-to-Low Last Transition .. 78", "page": 27}, {"figure_id": "Figure 5-12 Transmitting or Receiving BMC Encoded Frame Terminated by One with High-to-Low Last Transition .... 78", "caption": "Figure 5-12 Transmitting or Receiving BMC Encoded Frame Terminated by One with High-to-Low Last Transition .... 78", "page": 27}, {"figure_id": "Figure 5-13 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with Low to High Last Transition.... 79", "caption": "Figure 5-13 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with Low to High Last Transition.... 79", "page": 27}, {"figure_id": "Figure 5-14 Transmitting or Receiving BMC Encoded Frame Terminated by One with Low to High Last Transition ..... 79", "caption": "Figure 5-14 Transmitting or Receiving BMC Encoded Frame Terminated by One with Low to High Last Transition ..... 79", "page": 27}, {"figure_id": "Figure 5-15 BMC Tx ‘ONE’ Mask .................................................................................................................................................................................. 80", "caption": "Figure 5-15 BMC Tx ‘ONE’ Mask .................................................................................................................................................................................. 80", "page": 27}, {"figure_id": "Figure 5-16 BMC Tx ‘ZERO’ Mask................................................................................................................................................................................ 80", "caption": "Figure 5-16 BMC Tx ‘ZERO’ Mask................................................................................................................................................................................ 80", "page": 27}, {"figure_id": "Figure 5-17 BMC Rx ‘ONE’ Mask when Sourcing Power .................................................................................................................................. 83", "caption": "Figure 5-17 BMC Rx ‘ONE’ Mask when Sourcing Power .................................................................................................................................. 83", "page": 27}, {"figure_id": "Figure 5-18 BMC Rx ‘ZERO’ Mask when Sourcing Power................................................................................................................................ 83", "caption": "Figure 5-18 BMC Rx ‘ZERO’ Mask when Sourcing Power................................................................................................................................ 83", "page": 27}, {"figure_id": "Figure 5-19 BMC Rx ‘ONE’ Mask when Power neutral ..................................................................................................................................... 84", "caption": "Figure 5-19 BMC Rx ‘ONE’ Mask when Power neutral ..................................................................................................................................... 84", "page": 27}, {"figure_id": "Figure 5-20 BMC Rx ‘ZERO’ Mask when Power neutral ................................................................................................................................... 84", "caption": "Figure 5-20 BMC Rx ‘ZERO’ Mask when Power neutral ................................................................................................................................... 84", "page": 27}, {"figure_id": "Figure 5-21 BMC Rx ‘ONE’ Mask when Sinking Power ..................................................................................................................................... 85", "caption": "Figure 5-21 BMC Rx ‘ONE’ Mask when Sinking Power ..................................................................................................................................... 85", "page": 27}, {"figure_id": "Figure 5-22 BMC Rx ‘ZERO’ Mask when Sinking Power .................................................................................................................................. 85", "caption": "Figure 5-22 BMC Rx ‘ZERO’ Mask when Sinking Power .................................................................................................................................. 85", "page": 27}, {"figure_id": "Figure 5-23 Transmitter Load Model for BMC Tx from a Source ................................................................................................................ 86", "caption": "Figure 5-23 Transmitter Load Model for BMC Tx from a Source ................................................................................................................ 86", "page": 27}, {"figure_id": "Figure 5-24 Transmitter Load Model for BMC Tx from a Sink ..................................................................................................................... 87", "caption": "Figure 5-24 Transmitter Load Model for BMC Tx from a Sink ..................................................................................................................... 87", "page": 27}, {"figure_id": "Figure 5-25 Transmitter diagram illustrating zDriver ..................................................................................................................................... 89", "caption": "Figure 5-25 Transmitter diagram illustrating zDriver ..................................................................................................................................... 89", "page": 27}, {"figure_id": "Figure 5-26 Inter-Frame Gap Timings ...................................................................................................................................................................... 89", "caption": "Figure 5-26 Inter-Frame Gap Timings ...................................................................................................................................................................... 89", "page": 27}, {"figure_id": "Figure 5-27 Example Multi-Drop Configuration showing two DRPs ......................................................................................................... 92", "caption": "Figure 5-27 Example Multi-Drop Configuration showing two DRPs ......................................................................................................... 92", "page": 27}, {"figure_id": "Figure 5-28 Example Multi-Drop Configuration showing a DFP and UFP .............................................................................................. 92", "caption": "Figure 5-28 Example Multi-Drop Configuration showing a DFP and UFP .............................................................................................. 92", "page": 27}, {"figure_id": "Figure 5-29 Test Data Frame ........................................................................................................................................................................................ 94", "caption": "Figure 5-29 Test Data Frame ........................................................................................................................................................................................ 94", "page": 27}, {"figure_id": "Figure 6-1 USB Power Delivery Packet Format including Control Message Payload ........................................................................ 95", "caption": "Figure 6-1 USB Power Delivery Packet Format including Control Message Payload ........................................................................ 95", "page": 27}, {"figure_id": "Figure 6-2 USB Power Delivery Packet Format including Data Message Payload .............................................................................. 96", "caption": "Figure 6-2 USB Power Delivery Packet Format including Data Message Payload .............................................................................. 96", "page": 28}, {"figure_id": "Figure 6-3 USB Power Delivery Packet Format including an Extended Message Header and Payload ................................... 96", "caption": "Figure 6-3 USB Power Delivery Packet Format including an Extended Message Header and Payload ................................... 96", "page": 28}, {"figure_id": "Figure 6-4 Example Security_Request sequence Unchunked (Chunked bit = 0) .............................................................................. 102", "caption": "Figure 6-4 Example Security_Request sequence Unchunked (Chunked bit = 0) .............................................................................. 102", "page": 28}, {"figure_id": "Figure 6-5 Example byte transmission for Security_Request Message of Data Size 7 (Chunked bit is set to 0) ............... 102", "caption": "Figure 6-5 Example byte transmission for Security_Request Message of Data Size 7 (Chunked bit is set to 0) ............... 102", "page": 28}, {"figure_id": "Figure 6-6 Example byte transmission for Security_Response Message of Data Size 7 (Chunked bit is set to 0) ............ 103", "caption": "Figure 6-6 Example byte transmission for Security_Response Message of Data Size 7 (Chunked bit is set to 0) ............ 103", "page": 28}, {"figure_id": "Figure 6-7 Example Security_Request sequence Chunked (Chunked bit = 1) ................................................................................... 104", "caption": "Figure 6-7 Example Security_Request sequence Chunked (Chunked bit = 1) ................................................................................... 104", "page": 28}, {"figure_id": "Figure 6-8 Example Security_Request Message of Data Size 7 (Chunked bit set to 1) .................................................................. 105", "caption": "Figure 6-8 Example Security_Request Message of Data Size 7 (Chunked bit set to 1) .................................................................. 105", "page": 28}, {"figure_id": "Figure 6-9 Example Chunk 0 of Security_Response Message of Data Size 30 (Chunked bit set to 1)..................................... 105", "caption": "Figure 6-9 Example Chunk 0 of Security_Response Message of Data Size 30 (Chunked bit set to 1)..................................... 105", "page": 28}, {"figure_id": "Figure 6-10 Example byte transmission for a Security_Request Message Chunk request (Chunked bit is set to 1) ...... 105", "caption": "Figure 6-10 Example byte transmission for a Security_Request Message Chunk request (Chunked bit is set to 1) ...... 105", "page": 28}, {"figure_id": "Figure 6-11 Example Chunk 1 of Security_Response Message of Data Size 30 (Chunked bit set to 1) .................................. 106", "caption": "Figure 6-11 Example Chunk 1 of Security_Response Message of Data Size 30 (Chunked bit set to 1) .................................. 106", "page": 28}, {"figure_id": "Figure 6-12 Example Capabilities Message with 2 Power Data Objects ............................................................................................... 114", "caption": "Figure 6-12 Example Capabilities Message with 2 Power Data Objects ............................................................................................... 114", "page": 28}, {"figure_id": "Figure 6-13 BIST Message ........................................................................................................................................................................................... 128", "caption": "Figure 6-13 BIST Message ........................................................................................................................................................................................... 128", "page": 28}, {"figure_id": "Figure 6-14 Vendor Defined Message .................................................................................................................................................................... 129", "caption": "Figure 6-14 Vendor Defined Message .................................................................................................................................................................... 129", "page": 28}, {"figure_id": "Figure 6-15 Discover Identity Command response ........................................................................................................................................ 135", "caption": "Figure 6-15 Discover Identity Command response ........................................................................................................................................ 135", "page": 28}, {"figure_id": "Figure 6-16 Example Discover SVIDs response with 3 SVIDs .................................................................................................................... 143", "caption": "Figure 6-16 Example Discover SVIDs response with 3 SVIDs .................................................................................................................... 143", "page": 28}, {"figure_id": "Figure 6-17 Example Discover SVIDs response with 4 SVIDs .................................................................................................................... 143", "caption": "Figure 6-17 Example Discover SVIDs response with 4 SVIDs .................................................................................................................... 143", "page": 28}, {"figure_id": "Figure 6-18 Example Discover SVIDs response with 12 SVIDs followed by an empty response ............................................. 144", "caption": "Figure 6-18 Example Discover SVIDs response with 12 SVIDs followed by an empty response ............................................. 144", "page": 28}, {"figure_id": "Figure 6-19 Example Discover Modes response for a given SVID with 3 Modes.............................................................................. 144", "caption": "Figure 6-19 Example Discover Modes response for a given SVID with 3 Modes.............................................................................. 144", "page": 28}, {"figure_id": "Figure 6-20 Successful Enter Mode sequence ................................................................................................................................................... 145", "caption": "Figure 6-20 Successful Enter Mode sequence ................................................................................................................................................... 145", "page": 28}, {"figure_id": "Figure 6-21 Enter Mode sequence Interrupted by Source Capabilities and then Re-run ............................................................ 146", "caption": "Figure 6-21 Enter Mode sequence Interrupted by Source Capabilities and then Re-run ............................................................ 146", "page": 28}, {"figure_id": "Figure 6-22 Unsuccessful Enter Mode sequence due to NAK .................................................................................................................... 146", "caption": "Figure 6-22 Unsuccessful Enter Mode sequence due to NAK .................................................................................................................... 146", "page": 28}, {"figure_id": "Figure 6-23 Exit Mode sequence .............................................................................................................................................................................. 148", "caption": "Figure 6-23 Exit Mode sequence .............................................................................................................................................................................. 148", "page": 28}, {"figure_id": "Figure 6-24 Attention Command request/response sequence ................................................................................................................. 148", "caption": "Figure 6-24 Attention Command request/response sequence ................................................................................................................. 148", "page": 28}, {"figure_id": "Figure 6-25 Command request/response sequence ...................................................................................................................................... 149", "caption": "Figure 6-25 Command request/response sequence ...................................................................................................................................... 149", "page": 28}, {"figure_id": "Figure 6-26 Enter/Exit Mode Process ................................................................................................................................................................... 151", "caption": "Figure 6-26 Enter/Exit Mode Process ................................................................................................................................................................... 151", "page": 28}, {"figure_id": "Figure 6-27 Battery_Status Message ...................................................................................................................................................................... 152", "caption": "Figure 6-27 Battery_Status Message ...................................................................................................................................................................... 152", "page": 28}, {"figure_id": "Figure 6-28 Alert Message ........................................................................................................................................................................................... 153", "caption": "Figure 6-28 Alert Message ........................................................................................................................................................................................... 153", "page": 28}, {"figure_id": "Figure 6-29 Get_Country_Info Message................................................................................................................................................................. 155", "caption": "Figure 6-29 Get_Country_Info Message................................................................................................................................................................. 155", "page": 28}, {"figure_id": "Figure 6-30 Source_Capabilities_Extended Message ...................................................................................................................................... 156", "caption": "Figure 6-30 Source_Capabilities_Extended Message ...................................................................................................................................... 156", "page": 28}, {"figure_id": "Figure 6-31 Status Message ........................................................................................................................................................................................ 160", "caption": "Figure 6-31 Status Message ........................................................................................................................................................................................ 160", "page": 28}, {"figure_id": "Figure 6-32 Get_Battery_Cap Message .................................................................................................................................................................. 162", "caption": "Figure 6-32 Get_Battery_Cap Message .................................................................................................................................................................. 162", "page": 28}, {"figure_id": "Figure 6-33 Get_Battery_Status Message ............................................................................................................................................................. 162", "caption": "Figure 6-33 Get_Battery_Status Message ............................................................................................................................................................. 162", "page": 28}, {"figure_id": "Figure 6-34 Battery_Capabilities Message........................................................................................................................................................... 163", "caption": "Figure 6-34 Battery_Capabilities Message........................................................................................................................................................... 163", "page": 28}, {"figure_id": "Figure 6-35 Get_Manufacturer_Info Message..................................................................................................................................................... 164", "caption": "Figure 6-35 Get_Manufacturer_Info Message..................................................................................................................................................... 164", "page": 28}, {"figure_id": "Figure 6-36 Manufacturer_Info Message .............................................................................................................................................................. 164", "caption": "Figure 6-36 Manufacturer_Info Message .............................................................................................................................................................. 164", "page": 28}, {"figure_id": "Figure 6-37 Security_Request Message................................................................................................................................................................. 165", "caption": "Figure 6-37 Security_Request Message................................................................................................................................................................. 165", "page": 28}, {"figure_id": "Figure 6-38 Security_Response Message ............................................................................................................................................................. 166", "caption": "Figure 6-38 Security_Response Message ............................................................................................................................................................. 166", "page": 29}, {"figure_id": "Figure 6-39 Firmware_Update_Request Message ............................................................................................................................................ 166", "caption": "Figure 6-39 Firmware_Update_Request Message ............................................................................................................................................ 166", "page": 29}, {"figure_id": "Figure 6-40 Firmware_Update_Response Message ......................................................................................................................................... 166", "caption": "Figure 6-40 Firmware_Update_Response Message ......................................................................................................................................... 166", "page": 29}, {"figure_id": "Figure 6-41 PPS_Status Message .............................................................................................................................................................................. 167", "caption": "Figure 6-41 PPS_Status Message .............................................................................................................................................................................. 167", "page": 29}, {"figure_id": "Figure 6-42 Country_Codes Message ..................................................................................................................................................................... 168", "caption": "Figure 6-42 Country_Codes Message ..................................................................................................................................................................... 168", "page": 29}, {"figure_id": "Figure 6-43 Country_Info Message.......................................................................................................................................................................... 168", "caption": "Figure 6-43 Country_Info Message.......................................................................................................................................................................... 168", "page": 29}, {"figure_id": "Figure 6-44 Outline of States ...................................................................................................................................................................................... 187", "caption": "Figure 6-44 Outline of States ...................................................................................................................................................................................... 187", "page": 29}, {"figure_id": "Figure 6-45 References to states .............................................................................................................................................................................. 187", "caption": "Figure 6-45 References to states .............................................................................................................................................................................. 187", "page": 29}, {"figure_id": "Figure 6-46 Chunking architecture Showing Message and Control Flow ............................................................................................ 188", "caption": "Figure 6-46 Chunking architecture Showing Message and Control Flow ............................................................................................ 188", "page": 29}, {"figure_id": "Figure 6-47 Chunked Rx State Diagram ................................................................................................................................................................ 190", "caption": "Figure 6-47 Chunked Rx State Diagram ................................................................................................................................................................ 190", "page": 29}, {"figure_id": "Figure 6-48 Chunked Tx State Diagram ................................................................................................................................................................ 193", "caption": "Figure 6-48 Chunked Tx State Diagram ................................................................................................................................................................ 193", "page": 29}, {"figure_id": "Figure 6-49 Chunked Message Router State Diagram ................................................................................................................................... 197", "caption": "Figure 6-49 Chunked Message Router State Diagram ................................................................................................................................... 197", "page": 29}, {"figure_id": "Figure 6-50 Common Protocol Layer Message transmission State Diagram ..................................................................................... 199", "caption": "Figure 6-50 Common Protocol Layer Message transmission State Diagram ..................................................................................... 199", "page": 29}, {"figure_id": "Figure 6-51 Source Protocol Layer Message transmission State Diagram .......................................................................................... 202", "caption": "Figure 6-51 Source Protocol Layer Message transmission State Diagram .......................................................................................... 202", "page": 29}, {"figure_id": "Figure 6-52 Sink Protocol Layer Message transmission State Diagram ............................................................................................... 204", "caption": "Figure 6-52 Sink Protocol Layer Message transmission State Diagram ............................................................................................... 204", "page": 29}, {"figure_id": "Figure 6-53 Protocol layer Message reception .................................................................................................................................................. 205", "caption": "Figure 6-53 Protocol layer Message reception .................................................................................................................................................. 205", "page": 29}, {"figure_id": "Figure 6-54 Hard/Cable Reset ................................................................................................................................................................................... 207", "caption": "Figure 6-54 Hard/Cable Reset ................................................................................................................................................................................... 207", "page": 29}, {"figure_id": "Figure 7-1 Placement of Source Bulk Capacitance .......................................................................................................................................... 219", "caption": "Figure 7-1 Placement of Source Bulk Capacitance .......................................................................................................................................... 219", "page": 29}, {"figure_id": "Figure 7-2 Transition Envelope for Positive Voltage Transitions ............................................................................................................ 220", "caption": "Figure 7-2 Transition Envelope for Positive Voltage Transitions ............................................................................................................ 220", "page": 29}, {"figure_id": "Figure 7-3 Transition Envelope for Negative Voltage Transitions .......................................................................................................... 221", "caption": "Figure 7-3 Transition Envelope for Negative Voltage Transitions .......................................................................................................... 221", "page": 29}, {"figure_id": "Figure 7-4 PPS Positive Voltage Transitions ...................................................................................................................................................... 222", "caption": "Figure 7-4 PPS Positive Voltage Transitions ...................................................................................................................................................... 222", "page": 29}, {"figure_id": "Figure 7-5 PPS Negative Voltage Transitions..................................................................................................................................................... 223", "caption": "Figure 7-5 PPS Negative Voltage Transitions..................................................................................................................................................... 223", "page": 29}, {"figure_id": "Figure 7-6 Expected PPS Ripple Relative to an LSB ........................................................................................................................................ 223", "caption": "Figure 7-6 Expected PPS Ripple Relative to an LSB ........................................................................................................................................ 223", "page": 29}, {"figure_id": "Figure 7-7 PPS Programmable Voltage and Foldback ................................................................................................................................... 224", "caption": "Figure 7-7 PPS Programmable Voltage and Foldback ................................................................................................................................... 224", "page": 29}, {"figure_id": "Figure 7-8 Source V", "caption": "Figure 7-8 Source V", "page": 29}, {"figure_id": "Figure 7-9 Application of vSrcNew and vSrcValid limits after tSrcReady ............................................................................................ 227", "caption": "Figure 7-9 Application of vSrcNew and vSrcValid limits after tSrcReady ............................................................................................ 227", "page": 29}, {"figure_id": "Figure 7-10 Source Peak Current Overload ........................................................................................................................................................ 228", "caption": "Figure 7-10 Source Peak Current Overload ........................................................................................................................................................ 228", "page": 29}, {"figure_id": "Figure 7-11 Holdup Time Measurement .............................................................................................................................................................. 230", "caption": "Figure 7-11 Holdup Time Measurement .............................................................................................................................................................. 230", "page": 29}, {"figure_id": "Figure 7-12 V Power during Fast Role Swap ................................................................................................................................................ 231", "caption": "Figure 7-12 V Power during Fast Role Swap ................................................................................................................................................ 231", "page": 29}, {"figure_id": "Figure 7-13 V detection and timing during Fast Role Swap .................................................................................................................. 232", "caption": "Figure 7-13 V detection and timing during Fast Role Swap .................................................................................................................. 232", "page": 29}, {"figure_id": "Figure 7-14 Placement of Sink Bulk Capacitance ............................................................................................................................................. 233", "caption": "Figure 7-14 Placement of Sink Bulk Capacitance ............................................................................................................................................. 233", "page": 29}, {"figure_id": "Figure 7-15 Transition Diagram for Increasing the Current ...................................................................................................................... 238", "caption": "Figure 7-15 Transition Diagram for Increasing the Current ...................................................................................................................... 238", "page": 29}, {"figure_id": "Figure 7-16 Transition Diagram for Increasing the Voltage ....................................................................................................................... 240", "caption": "Figure 7-16 Transition Diagram for Increasing the Voltage ....................................................................................................................... 240", "page": 29}, {"figure_id": "Figure 7-17 Transition Diagram for Increasing the Voltage and Current ............................................................................................ 242", "caption": "Figure 7-17 Transition Diagram for Increasing the Voltage and Current ............................................................................................ 242", "page": 29}, {"figure_id": "Figure 7-18 Transition Diagram for Increasing the Voltage and Decreasing the Current ........................................................... 244", "caption": "Figure 7-18 Transition Diagram for Increasing the Voltage and Decreasing the Current ........................................................... 244", "page": 29}, {"figure_id": "Figure 7-19 Transition Diagram for Decreasing the Voltage and Increasing the Current ........................................................... 246", "caption": "Figure 7-19 Transition Diagram for Decreasing the Voltage and Increasing the Current ........................................................... 246", "page": 29}, {"figure_id": "Figure 7-20 Transition Diagram for Decreasing the Current ..................................................................................................................... 248", "caption": "Figure 7-20 Transition Diagram for Decreasing the Current ..................................................................................................................... 248", "page": 30}, {"figure_id": "Figure 7-21 Transition Diagram for Decreasing the Voltage...................................................................................................................... 250", "caption": "Figure 7-21 Transition Diagram for Decreasing the Voltage...................................................................................................................... 250", "page": 30}, {"figure_id": "Figure 7-22 Transition Diagram for Decreasing the Voltage and the Current ................................................................................... 252", "caption": "Figure 7-22 Transition Diagram for Decreasing the Voltage and the Current ................................................................................... 252", "page": 30}, {"figure_id": "Figure 7-23 Transition Diagram for a Sink Requested Power Role Swap ............................................................................................ 254", "caption": "Figure 7-23 Transition Diagram for a Sink Requested Power Role Swap ............................................................................................ 254", "page": 30}, {"figure_id": "Figure 7-24 Transition Diagram for a Source Requested Power Role Swap ...................................................................................... 257", "caption": "Figure 7-24 Transition Diagram for a Source Requested Power Role Swap ...................................................................................... 257", "page": 30}, {"figure_id": "Figure 7-25 Transition Diagram for a GotoMin Current Decrease .......................................................................................................... 260", "caption": "Figure 7-25 Transition Diagram for a GotoMin Current Decrease .......................................................................................................... 260", "page": 30}, {"figure_id": "Figure 7-26 Transition Diagram for a Source Initiated Hard Reset ........................................................................................................ 262", "caption": "Figure 7-26 Transition Diagram for a Source Initiated Hard Reset ........................................................................................................ 262", "page": 30}, {"figure_id": "Figure 7-27 Transition Diagram for a Sink Initiated Hard Reset.............................................................................................................. 264", "caption": "Figure 7-27 Transition Diagram for a Sink Initiated Hard Reset.............................................................................................................. 264", "page": 30}, {"figure_id": "Figure 7-28 Transition Diagram for no change in Current or Voltage ................................................................................................... 266", "caption": "Figure 7-28 Transition Diagram for no change in Current or Voltage ................................................................................................... 266", "page": 30}, {"figure_id": "Figure 7-29 Transition Diagram for Fast Role Swap ...................................................................................................................................... 268", "caption": "Figure 7-29 Transition Diagram for Fast Role Swap ...................................................................................................................................... 268", "page": 30}, {"figure_id": "Figure 7-30 Transition Diagram for Increasing the Programmable Power Supply Voltage ....................................................... 270", "caption": "Figure 7-30 Transition Diagram for Increasing the Programmable Power Supply Voltage ....................................................... 270", "page": 30}, {"figure_id": "Figure 7-31 Transition Diagram for Decreasing the Programmable Power Supply Voltage ...................................................... 272", "caption": "Figure 7-31 Transition Diagram for Decreasing the Programmable Power Supply Voltage ...................................................... 272", "page": 30}, {"figure_id": "Figure 7-32 Transition Diagram for Changing the Source PDO or APDO ............................................................................................. 274", "caption": "Figure 7-32 Transition Diagram for Changing the Source PDO or APDO ............................................................................................. 274", "page": 30}, {"figure_id": "Figure 8-1 Example of daisy chained displays ................................................................................................................................................... 287", "caption": "Figure 8-1 Example of daisy chained displays ................................................................................................................................................... 287", "page": 30}, {"figure_id": "Figure 8-2 Basic Message Exchange (Successful) ............................................................................................................................................ 289", "caption": "Figure 8-2 Basic Message Exchange (Successful) ............................................................................................................................................ 289", "page": 30}, {"figure_id": "Figure 8-3 Basic Message flow indicating possible errors ........................................................................................................................... 290", "caption": "Figure 8-3 Basic Message flow indicating possible errors ........................................................................................................................... 290", "page": 30}, {"figure_id": "Figure 8-4 Basic Message Flow with Bad CRC followed by a Retry ......................................................................................................... 292", "caption": "Figure 8-4 Basic Message Flow with Bad CRC followed by a Retry ......................................................................................................... 292", "page": 30}, {"figure_id": "Figure 8-5 Successful Power Negotiation ............................................................................................................................................................ 295", "caption": "Figure 8-5 Successful Power Negotiation ............................................................................................................................................................ 295", "page": 30}, {"figure_id": "Figure 8-6 Successful GotoMin operation ............................................................................................................................................................ 299", "caption": "Figure 8-6 Successful GotoMin operation ............................................................................................................................................................ 299", "page": 30}, {"figure_id": "Figure 8-7 Soft Reset ...................................................................................................................................................................................................... 301", "caption": "Figure 8-7 Soft Reset ...................................................................................................................................................................................................... 301", "page": 30}, {"figure_id": "Figure 8-8 Source initiated Hard Reset ................................................................................................................................................................. 303", "caption": "Figure 8-8 Source initiated Hard Reset ................................................................................................................................................................. 303", "page": 30}, {"figure_id": "Figure 8-9 Sink Initiated Hard Reset ...................................................................................................................................................................... 306", "caption": "Figure 8-9 Sink Initiated Hard Reset ...................................................................................................................................................................... 306", "page": 30}, {"figure_id": "Figure 8-10 Source initiated reset - Sink long reset........................................................................................................................................ 309", "caption": "Figure 8-10 Source initiated reset - Sink long reset........................................................................................................................................ 309", "page": 30}, {"figure_id": "Figure 8-11 Successful Power Role Swap Sequence Initiated by the Source ..................................................................................... 313", "caption": "Figure 8-11 Successful Power Role Swap Sequence Initiated by the Source ..................................................................................... 313", "page": 30}, {"figure_id": "Figure 8-12 Successful Power Role Swap Sequence Initiated by the Sink ........................................................................................... 318", "caption": "Figure 8-12 Successful Power Role Swap Sequence Initiated by the Sink ........................................................................................... 318", "page": 30}, {"figure_id": "Figure 8-13 Successful Fast Role Swap Sequence ............................................................................................................................................ 323", "caption": "Figure 8-13 Successful Fast Role Swap Sequence ............................................................................................................................................ 323", "page": 30}, {"figure_id": "Figure 8-14 Data Role Swap, UFP operating as Sink initiates .................................................................................................................... 327", "caption": "Figure 8-14 Data Role Swap, UFP operating as Sink initiates .................................................................................................................... 327", "page": 30}, {"figure_id": "Figure 8-15 Data Role Swap, UFP operating as Source initiates ............................................................................................................... 330", "caption": "Figure 8-15 Data Role Swap, UFP operating as Source initiates ............................................................................................................... 330", "page": 30}, {"figure_id": "Figure 8-16 Data Role Swap, DFP operating as Source initiates ............................................................................................................... 332", "caption": "Figure 8-16 Data Role Swap, DFP operating as Source initiates ............................................................................................................... 332", "page": 30}, {"figure_id": "Figure 8-17 Data Role Swap, DFP operating as Sink initiates .................................................................................................................... 334", "caption": "Figure 8-17 Data Role Swap, DFP operating as Sink initiates .................................................................................................................... 334", "page": 30}, {"figure_id": "Figure 8-18 Source to Sink VCONN Source Swap ............................................................................................................................................... 336", "caption": "Figure 8-18 Source to Sink VCONN Source Swap ............................................................................................................................................... 336", "page": 30}, {"figure_id": "Figure 8-19 Sink to Source VCONN Source Swap ............................................................................................................................................... 339", "caption": "Figure 8-19 Sink to Source VCONN Source Swap ............................................................................................................................................... 339", "page": 30}, {"figure_id": "Figure 8-20 Source Alert to Sink .............................................................................................................................................................................. 342", "caption": "Figure 8-20 Source Alert to Sink .............................................................................................................................................................................. 342", "page": 30}, {"figure_id": "Figure 8-21 Sink Alert to Source .............................................................................................................................................................................. 344", "caption": "Figure 8-21 Sink Alert to Source .............................................................................................................................................................................. 344", "page": 30}, {"figure_id": "Figure 8-22 Sink Gets Source Status ....................................................................................................................................................................... 346", "caption": "Figure 8-22 Sink Gets Source Status ....................................................................................................................................................................... 346", "page": 30}, {"figure_id": "Figure 8-23 Source Gets Sink Status ....................................................................................................................................................................... 348", "caption": "Figure 8-23 Source Gets Sink Status ....................................................................................................................................................................... 348", "page": 30}, {"figure_id": "Figure 8-24 Sink Gets Source PPS Status.............................................................................................................................................................. 350", "caption": "Figure 8-24 Sink Gets Source PPS Status.............................................................................................................................................................. 350", "page": 31}, {"figure_id": "Figure 8-25 Sink Gets Source’s Capabilities ........................................................................................................................................................ 352", "caption": "Figure 8-25 Sink Gets Source’s Capabilities ........................................................................................................................................................ 352", "page": 31}, {"figure_id": "Figure 8-26 Dual-Role Source Gets Dual-Role Sink’s Capabilities as a Source .................................................................................. 354", "caption": "Figure 8-26 Dual-Role Source Gets Dual-Role Sink’s Capabilities as a Source .................................................................................. 354", "page": 31}, {"figure_id": "Figure 8-27 Source Gets Sink’s Capabilities ........................................................................................................................................................ 356", "caption": "Figure 8-27 Source Gets Sink’s Capabilities ........................................................................................................................................................ 356", "page": 31}, {"figure_id": "Figure 8-28 Dual-Role Sink Gets Dual-Role Source’s Capabilities as a Sink ........................................................................................ 358", "caption": "Figure 8-28 Dual-Role Sink Gets Dual-Role Source’s Capabilities as a Sink ........................................................................................ 358", "page": 31}, {"figure_id": "Figure 8-29 Sink Gets Source’s Extended Capabilities .................................................................................................................................. 360", "caption": "Figure 8-29 Sink Gets Source’s Extended Capabilities .................................................................................................................................. 360", "page": 31}, {"figure_id": "Figure 8-30 Dual-Role Source Gets Dual-Role Sink’s Extended Capabilities ...................................................................................... 362", "caption": "Figure 8-30 Dual-Role Source Gets Dual-Role Sink’s Extended Capabilities ...................................................................................... 362", "page": 31}, {"figure_id": "Figure 8-31 Sink Gets Source’s Battery Capabilities ....................................................................................................................................... 364", "caption": "Figure 8-31 Sink Gets Source’s Battery Capabilities ....................................................................................................................................... 364", "page": 31}, {"figure_id": "Figure 8-32 Source Gets Sink’s Battery Capabilities ....................................................................................................................................... 366", "caption": "Figure 8-32 Source Gets Sink’s Battery Capabilities ....................................................................................................................................... 366", "page": 31}, {"figure_id": "Figure 8-33 Sink Gets Source’s Battery Status................................................................................................................................................... 368", "caption": "Figure 8-33 Sink Gets Source’s Battery Status................................................................................................................................................... 368", "page": 31}, {"figure_id": "Figure 8-34 Source Gets Sink’s Battery Status................................................................................................................................................... 370", "caption": "Figure 8-34 Source Gets Sink’s Battery Status................................................................................................................................................... 370", "page": 31}, {"figure_id": "Figure 8-35 Source Gets Sink’s Port Manufacturer Information .............................................................................................................. 372", "caption": "Figure 8-35 Source Gets Sink’s Port Manufacturer Information .............................................................................................................. 372", "page": 31}, {"figure_id": "Figure 8-36 Sink Gets Source’s Port Manufacturer Information .............................................................................................................. 374", "caption": "Figure 8-36 Sink Gets Source’s Port Manufacturer Information .............................................................................................................. 374", "page": 31}, {"figure_id": "Figure 8-37 Source Gets Sink’s Battery Manufacturer Information ........................................................................................................ 376", "caption": "Figure 8-37 Source Gets Sink’s Battery Manufacturer Information ........................................................................................................ 376", "page": 31}, {"figure_id": "Figure 8-38 Sink Gets Source’s Battery Manufacturer Information ........................................................................................................ 378", "caption": "Figure 8-38 Sink Gets Source’s Battery Manufacturer Information ........................................................................................................ 378", "page": 31}, {"figure_id": "Figure 8-39 VCONN Source Gets Cable Plug’s Manufacturer Information ............................................................................................. 380", "caption": "Figure 8-39 VCONN Source Gets Cable Plug’s Manufacturer Information ............................................................................................. 380", "page": 31}, {"figure_id": "Figure 8-40 Source Gets Sink’s Country Codes.................................................................................................................................................. 382", "caption": "Figure 8-40 Source Gets Sink’s Country Codes.................................................................................................................................................. 382", "page": 31}, {"figure_id": "Figure 8-41 Sink Gets Source’s Country Codes.................................................................................................................................................. 384", "caption": "Figure 8-41 Sink Gets Source’s Country Codes.................................................................................................................................................. 384", "page": 31}, {"figure_id": "Figure 8-42 VCONN Source Gets Cable Plug’s Country Codes ...................................................................................................................... 386", "caption": "Figure 8-42 VCONN Source Gets Cable Plug’s Country Codes ...................................................................................................................... 386", "page": 31}, {"figure_id": "Figure 8-43 Source Gets Sink’s Country Information ..................................................................................................................................... 388", "caption": "Figure 8-43 Source Gets Sink’s Country Information ..................................................................................................................................... 388", "page": 31}, {"figure_id": "Figure 8-44 Sink Gets Source’s Country Information ..................................................................................................................................... 390", "caption": "Figure 8-44 Sink Gets Source’s Country Information ..................................................................................................................................... 390", "page": 31}, {"figure_id": "Figure 8-45 VCONN Source Gets Cable Plug’s Country Information ......................................................................................................... 392", "caption": "Figure 8-45 VCONN Source Gets Cable Plug’s Country Information ......................................................................................................... 392", "page": 31}, {"figure_id": "Figure 8-46 Source requests security exchange with Sink .......................................................................................................................... 394", "caption": "Figure 8-46 Source requests security exchange with Sink .......................................................................................................................... 394", "page": 31}, {"figure_id": "Figure 8-47 Sink requests security exchange with Source .......................................................................................................................... 396", "caption": "Figure 8-47 Sink requests security exchange with Source .......................................................................................................................... 396", "page": 31}, {"figure_id": "Figure 8-48 Vconn Source requests security exchange with Cable Plug .............................................................................................. 398", "caption": "Figure 8-48 Vconn Source requests security exchange with Cable Plug .............................................................................................. 398", "page": 31}, {"figure_id": "Figure 8-49 Source requests firmware update exchange with Sink ....................................................................................................... 400", "caption": "Figure 8-49 Source requests firmware update exchange with Sink ....................................................................................................... 400", "page": 31}, {"figure_id": "Figure 8-50 Sink requests firmware update exchange with Source ....................................................................................................... 402", "caption": "Figure 8-50 Sink requests firmware update exchange with Source ....................................................................................................... 402", "page": 31}, {"figure_id": "Figure 8-51 Vconn Source requests firmware update exchange with Cable Plug............................................................................ 404", "caption": "Figure 8-51 Vconn Source requests firmware update exchange with Cable Plug............................................................................ 404", "page": 31}, {"figure_id": "Figure 8-52 DFP to UFP Discover Identity........................................................................................................................................................... 406", "caption": "Figure 8-52 DFP to UFP Discover Identity........................................................................................................................................................... 406", "page": 31}, {"figure_id": "Figure 8-53 Source Port to Cable Plug Discover Identity ............................................................................................................................. 408", "caption": "Figure 8-53 Source Port to Cable Plug Discover Identity ............................................................................................................................. 408", "page": 31}, {"figure_id": "Figure 8-54 DFP to Cable Plug Discover Identity ............................................................................................................................................. 410", "caption": "Figure 8-54 DFP to Cable Plug Discover Identity ............................................................................................................................................. 410", "page": 31}, {"figure_id": "Figure 8-55 DFP to UFP Enter Mode ...................................................................................................................................................................... 412", "caption": "Figure 8-55 DFP to UFP Enter Mode ...................................................................................................................................................................... 412", "page": 31}, {"figure_id": "Figure 8-56 DFP to UFP Exit Mode .......................................................................................................................................................................... 414", "caption": "Figure 8-56 DFP to UFP Exit Mode .......................................................................................................................................................................... 414", "page": 31}, {"figure_id": "Figure 8-57 DFP to Cable Plug Enter Mode ......................................................................................................................................................... 416", "caption": "Figure 8-57 DFP to Cable Plug Enter Mode ......................................................................................................................................................... 416", "page": 31}, {"figure_id": "Figure 8-58 DFP to Cable Plug Exit Mode ............................................................................................................................................................ 419", "caption": "Figure 8-58 DFP to Cable Plug Exit Mode ............................................................................................................................................................ 419", "page": 31}, {"figure_id": "Figure 8-59 UFP to DFP Attention ........................................................................................................................................................................... 421", "caption": "Figure 8-59 UFP to DFP Attention ........................................................................................................................................................................... 421", "page": 31}, {"figure_id": "Figure 8-60 BIST Carrier Mode Test ....................................................................................................................................................................... 423", "caption": "Figure 8-60 BIST Carrier Mode Test ....................................................................................................................................................................... 423", "page": 32}, {"figure_id": "Figure 8-61 BIST Test Data Test ............................................................................................................................................................................... 425", "caption": "Figure 8-61 BIST Test Data Test ............................................................................................................................................................................... 425", "page": 32}, {"figure_id": "Figure 8-62 Outline of States ...................................................................................................................................................................................... 428", "caption": "Figure 8-62 Outline of States ...................................................................................................................................................................................... 428", "page": 32}, {"figure_id": "Figure 8-63 References to states .............................................................................................................................................................................. 428", "caption": "Figure 8-63 References to states .............................................................................................................................................................................. 428", "page": 32}, {"figure_id": "Figure 8-64 Example of state reference with conditions ............................................................................................................................. 428", "caption": "Figure 8-64 Example of state reference with conditions ............................................................................................................................. 428", "page": 32}, {"figure_id": "Figure 8-65 Example of state reference with the same entry and exit .................................................................................................. 429", "caption": "Figure 8-65 Example of state reference with the same entry and exit .................................................................................................. 429", "page": 32}, {"figure_id": "Figure 8-66 Source Port Policy Engine State Diagram................................................................................................................................... 430", "caption": "Figure 8-66 Source Port Policy Engine State Diagram................................................................................................................................... 430", "page": 32}, {"figure_id": "Figure 8-67 Sink Port State Diagram ...................................................................................................................................................................... 436", "caption": "Figure 8-67 Sink Port State Diagram ...................................................................................................................................................................... 436", "page": 32}, {"figure_id": "Figure 8-68 Source Port Soft Reset and Protocol Error State Diagram ................................................................................................. 441", "caption": "Figure 8-68 Source Port Soft Reset and Protocol Error State Diagram ................................................................................................. 441", "page": 32}, {"figure_id": "Figure 8-69 Sink Port Soft Reset and Protocol Error Diagram .................................................................................................................. 442", "caption": "Figure 8-69 Sink Port Soft Reset and Protocol Error Diagram .................................................................................................................. 442", "page": 32}, {"figure_id": "Figure 8-70 Source Port Not Supported Message State Diagram ............................................................................................................. 444", "caption": "Figure 8-70 Source Port Not Supported Message State Diagram ............................................................................................................. 444", "page": 32}, {"figure_id": "Figure 8-71 Sink Port Not Supported Message State Diagram .................................................................................................................. 445", "caption": "Figure 8-71 Sink Port Not Supported Message State Diagram .................................................................................................................. 445", "page": 32}, {"figure_id": "Figure 8-72 Source Port Ping State Diagram ...................................................................................................................................................... 446", "caption": "Figure 8-72 Source Port Ping State Diagram ...................................................................................................................................................... 446", "page": 32}, {"figure_id": "Figure 8-73 Source Port Source Alert State Diagram ..................................................................................................................................... 446", "caption": "Figure 8-73 Source Port Source Alert State Diagram ..................................................................................................................................... 446", "page": 32}, {"figure_id": "Figure 8-74 Sink Port Source Alert State Diagram .......................................................................................................................................... 447", "caption": "Figure 8-74 Sink Port Source Alert State Diagram .......................................................................................................................................... 447", "page": 32}, {"figure_id": "Figure 8-75 Sink Port Sink Alert State Diagram................................................................................................................................................ 447", "caption": "Figure 8-75 Sink Port Sink Alert State Diagram................................................................................................................................................ 447", "page": 32}, {"figure_id": "Figure 8-76 Source Port Sink Alert State Diagram .......................................................................................................................................... 448", "caption": "Figure 8-76 Source Port Sink Alert State Diagram .......................................................................................................................................... 448", "page": 32}, {"figure_id": "Figure 8-77 Sink Port Get Source Capabilities Extended State Diagram .............................................................................................. 448", "caption": "Figure 8-77 Sink Port Get Source Capabilities Extended State Diagram .............................................................................................. 448", "page": 32}, {"figure_id": "Figure 8-78 Source Give Source Capabilities Extended State Diagram ................................................................................................. 449", "caption": "Figure 8-78 Source Give Source Capabilities Extended State Diagram ................................................................................................. 449", "page": 32}, {"figure_id": "Figure 8-79 Sink Port Get Source Status State Diagram ............................................................................................................................... 449", "caption": "Figure 8-79 Sink Port Get Source Status State Diagram ............................................................................................................................... 449", "page": 32}, {"figure_id": "Figure 8-80 Source Give Source Status State Diagram .................................................................................................................................. 450", "caption": "Figure 8-80 Source Give Source Status State Diagram .................................................................................................................................. 450", "page": 32}, {"figure_id": "Figure 8-81 Source Port Get Sink Status State Diagram ............................................................................................................................... 450", "caption": "Figure 8-81 Source Port Get Sink Status State Diagram ............................................................................................................................... 450", "page": 32}, {"figure_id": "Figure 8-82 Sink Give Sink Status State Diagram ............................................................................................................................................. 451", "caption": "Figure 8-82 Sink Give Sink Status State Diagram ............................................................................................................................................. 451", "page": 32}, {"figure_id": "Figure 8-83 Sink Port Get Source PPS Status State Diagram ...................................................................................................................... 451", "caption": "Figure 8-83 Sink Port Get Source PPS Status State Diagram ...................................................................................................................... 451", "page": 32}, {"figure_id": "Figure 8-84 Source Give Source PPS Status State Diagram ......................................................................................................................... 452", "caption": "Figure 8-84 Source Give Source PPS Status State Diagram ......................................................................................................................... 452", "page": 32}, {"figure_id": "Figure 8-85 Get Battery Capabilities State Diagram ....................................................................................................................................... 452", "caption": "Figure 8-85 Get Battery Capabilities State Diagram ....................................................................................................................................... 452", "page": 32}, {"figure_id": "Figure 8-86 Give Battery Capabilities State Diagram ..................................................................................................................................... 453", "caption": "Figure 8-86 Give Battery Capabilities State Diagram ..................................................................................................................................... 453", "page": 32}, {"figure_id": "Figure 8-87 Get Battery Status State Diagram ................................................................................................................................................... 453", "caption": "Figure 8-87 Get Battery Status State Diagram ................................................................................................................................................... 453", "page": 32}, {"figure_id": "Figure 8-88 Give Battery Status State Diagram ................................................................................................................................................. 454", "caption": "Figure 8-88 Give Battery Status State Diagram ................................................................................................................................................. 454", "page": 32}, {"figure_id": "Figure 8-89 Get Manufacturer Information State Diagram ......................................................................................................................... 454", "caption": "Figure 8-89 Get Manufacturer Information State Diagram ......................................................................................................................... 454", "page": 32}, {"figure_id": "Figure 8-90 Give Manufacturer Information State Diagram ....................................................................................................................... 455", "caption": "Figure 8-90 Give Manufacturer Information State Diagram ....................................................................................................................... 455", "page": 32}, {"figure_id": "Figure 8-91 Get Country Codes State Diagram .................................................................................................................................................. 455", "caption": "Figure 8-91 Get Country Codes State Diagram .................................................................................................................................................. 455", "page": 32}, {"figure_id": "Figure 8-92 Give Country Codes State Diagram ................................................................................................................................................ 456", "caption": "Figure 8-92 Give Country Codes State Diagram ................................................................................................................................................ 456", "page": 32}, {"figure_id": "Figure 8-93 Get Country Information State Diagram ..................................................................................................................................... 456", "caption": "Figure 8-93 Get Country Information State Diagram ..................................................................................................................................... 456", "page": 32}, {"figure_id": "Figure 8-94 Give Country Information State Diagram ................................................................................................................................... 457", "caption": "Figure 8-94 Give Country Information State Diagram ................................................................................................................................... 457", "page": 32}, {"figure_id": "Figure 8-95 Send security request State Diagram ........................................................................................................................................... 457", "caption": "Figure 8-95 Send security request State Diagram ........................................................................................................................................... 457", "page": 32}, {"figure_id": "Figure 8-96 Send security response State Diagram ........................................................................................................................................ 458", "caption": "Figure 8-96 Send security response State Diagram ........................................................................................................................................ 458", "page": 33}, {"figure_id": "Figure 8-97 Security response received State Diagram ................................................................................................................................ 458", "caption": "Figure 8-97 Security response received State Diagram ................................................................................................................................ 458", "page": 33}, {"figure_id": "Figure 8-98 Send firmware update request State Diagram ........................................................................................................................ 459", "caption": "Figure 8-98 Send firmware update request State Diagram ........................................................................................................................ 459", "page": 33}, {"figure_id": "Figure 8-99 Send firmware update response State Diagram ..................................................................................................................... 459", "caption": "Figure 8-99 Send firmware update response State Diagram ..................................................................................................................... 459", "page": 33}, {"figure_id": "Figure 8-100 Firmware update response received State Diagram.......................................................................................................... 460", "caption": "Figure 8-100 Firmware update response received State Diagram.......................................................................................................... 460", "page": 33}, {"figure_id": "Figure 8-101: DFP to UFP Data Role Swap State Diagram ........................................................................................................................... 461", "caption": "Figure 8-101: DFP to UFP Data Role Swap State Diagram ........................................................................................................................... 461", "page": 33}, {"figure_id": "Figure 8-102: UFP to DFP Data Role Swap State Diagram ........................................................................................................................... 463", "caption": "Figure 8-102: UFP to DFP Data Role Swap State Diagram ........................................................................................................................... 463", "page": 33}, {"figure_id": "Figure 8-103: Dual-Role Port in Source to Sink Power Role Swap State Diagram ........................................................................... 466", "caption": "Figure 8-103: Dual-Role Port in Source to Sink Power Role Swap State Diagram ........................................................................... 466", "page": 33}, {"figure_id": "Figure 8-104: Dual-role Port in Sink to Source Power Role Swap State Diagram ............................................................................ 469", "caption": "Figure 8-104: Dual-role Port in Sink to Source Power Role Swap State Diagram ............................................................................ 469", "page": 33}, {"figure_id": "Figure 8-105: Dual-Role Port in Source to Sink Fast Role Swap State Diagram ................................................................................ 472", "caption": "Figure 8-105: Dual-Role Port in Source to Sink Fast Role Swap State Diagram ................................................................................ 472", "page": 33}, {"figure_id": "Figure 8-106: Dual-role Port in Sink to Source Fast Role Swap State Diagram ................................................................................. 475", "caption": "Figure 8-106: Dual-role Port in Sink to Source Fast Role Swap State Diagram ................................................................................. 475", "page": 33}, {"figure_id": "Figure 8-107 Dual-Role (Source) Get Source Capabilities diagram ........................................................................................................ 477", "caption": "Figure 8-107 Dual-Role (Source) Get Source Capabilities diagram ........................................................................................................ 477", "page": 33}, {"figure_id": "Figure 8-108 Dual-Role (Source) Give Sink Capabilities diagram ........................................................................................................... 478", "caption": "Figure 8-108 Dual-Role (Source) Give Sink Capabilities diagram ........................................................................................................... 478", "page": 33}, {"figure_id": "Figure 8-109 Dual-Role (Sink) Get Sink Capabilities State Diagram ...................................................................................................... 478", "caption": "Figure 8-109 Dual-Role (Sink) Get Sink Capabilities State Diagram ...................................................................................................... 478", "page": 33}, {"figure_id": "Figure 8-110 Dual-Role (Sink) Give Source Capabilities State Diagram ............................................................................................... 479", "caption": "Figure 8-110 Dual-Role (Sink) Give Source Capabilities State Diagram ............................................................................................... 479", "page": 33}, {"figure_id": "Figure 8-111 Dual-Role (Source) Get Source Capabilities Extended State Diagram....................................................................... 479", "caption": "Figure 8-111 Dual-Role (Source) Get Source Capabilities Extended State Diagram....................................................................... 479", "page": 33}, {"figure_id": "Figure 8-112 Dual-Role (Source) Give Sink Capabilities diagram ........................................................................................................... 480", "caption": "Figure 8-112 Dual-Role (Source) Give Sink Capabilities diagram ........................................................................................................... 480", "page": 33}, {"figure_id": "Figure 8-113 VCONN Swap State Diagram .......................................................................................................................................................... 481", "caption": "Figure 8-113 VCONN Swap State Diagram .......................................................................................................................................................... 481", "page": 33}, {"figure_id": "Figure 8-114 Initiator to Port VDM Discover Identity State Diagram .................................................................................................... 484", "caption": "Figure 8-114 Initiator to Port VDM Discover Identity State Diagram .................................................................................................... 484", "page": 33}, {"figure_id": "Figure 8-115 Initiator VDM Discover SVIDs State Diagram ........................................................................................................................ 485", "caption": "Figure 8-115 Initiator VDM Discover SVIDs State Diagram ........................................................................................................................ 485", "page": 33}, {"figure_id": "Figure 8-116 Initiator VDM Discover Modes State Diagram ...................................................................................................................... 486", "caption": "Figure 8-116 Initiator VDM Discover Modes State Diagram ...................................................................................................................... 486", "page": 33}, {"figure_id": "Figure 8-117 Initiator VDM Attention State Diagram .................................................................................................................................... 487", "caption": "Figure 8-117 Initiator VDM Attention State Diagram .................................................................................................................................... 487", "page": 33}, {"figure_id": "Figure 8-118 Responder Structured VDM Discover Identity State Diagram ...................................................................................... 488", "caption": "Figure 8-118 Responder Structured VDM Discover Identity State Diagram ...................................................................................... 488", "page": 33}, {"figure_id": "Figure 8-119 Responder Structured VDM Discover SVIDs State Diagram .......................................................................................... 489", "caption": "Figure 8-119 Responder Structured VDM Discover SVIDs State Diagram .......................................................................................... 489", "page": 33}, {"figure_id": "Figure 8-120 Responder Structured VDM Discover Modes State Diagram ......................................................................................... 490", "caption": "Figure 8-120 Responder Structured VDM Discover Modes State Diagram ......................................................................................... 490", "page": 33}, {"figure_id": "Figure 8-121 Receiving a Structured VDM Attention State Diagram ..................................................................................................... 491", "caption": "Figure 8-121 Receiving a Structured VDM Attention State Diagram ..................................................................................................... 491", "page": 33}, {"figure_id": "Figure 8-122 DFP VDM Mode Entry State Diagram ........................................................................................................................................ 492", "caption": "Figure 8-122 DFP VDM Mode Entry State Diagram ........................................................................................................................................ 492", "page": 33}, {"figure_id": "Figure 8-123 DFP VDM Mode Exit State Diagram ............................................................................................................................................ 493", "caption": "Figure 8-123 DFP VDM Mode Exit State Diagram ............................................................................................................................................ 493", "page": 33}, {"figure_id": "Figure 8-124 UFP Structured VDM Enter Mode State Diagram ................................................................................................................ 494", "caption": "Figure 8-124 UFP Structured VDM Enter Mode State Diagram ................................................................................................................ 494", "page": 33}, {"figure_id": "Figure 8-125 UFP Structured VDM Exit Mode State Diagram .................................................................................................................... 495", "caption": "Figure 8-125 UFP Structured VDM Exit Mode State Diagram .................................................................................................................... 495", "page": 33}, {"figure_id": "Figure 8-126 Cable Ready VDM State Diagram ................................................................................................................................................. 496", "caption": "Figure 8-126 Cable Ready VDM State Diagram ................................................................................................................................................. 496", "page": 33}, {"figure_id": "Figure 8-127 Cable Plug Soft Reset State Diagram .......................................................................................................................................... 497", "caption": "Figure 8-127 Cable Plug Soft Reset State Diagram .......................................................................................................................................... 497", "page": 33}, {"figure_id": "Figure 8-128 Cable Plug Hard Reset State Diagram........................................................................................................................................ 497", "caption": "Figure 8-128 Cable Plug Hard Reset State Diagram........................................................................................................................................ 497", "page": 33}, {"figure_id": "Figure 8-129 DFP Soft Reset or Cable Reset of a Cable Plug State Diagram........................................................................................ 498", "caption": "Figure 8-129 DFP Soft Reset or Cable Reset of a Cable Plug State Diagram........................................................................................ 498", "page": 33}, {"figure_id": "Figure 8-130 UFP Source Soft Reset of a Cable Plug State Diagram........................................................................................................ 499", "caption": "Figure 8-130 UFP Source Soft Reset of a Cable Plug State Diagram........................................................................................................ 499", "page": 33}, {"figure_id": "Figure 8-131 Source Startup Structured VDM Discover Identity State Diagram.............................................................................. 500", "caption": "Figure 8-131 Source Startup Structured VDM Discover Identity State Diagram.............................................................................. 500", "page": 33}, {"figure_id": "Figure 8-132 Cable Plug Structured VDM Enter Mode State Diagram ................................................................................................... 502", "caption": "Figure 8-132 Cable Plug Structured VDM Enter Mode State Diagram ................................................................................................... 502", "page": 34}, {"figure_id": "Figure 8-133 Cable Plug Structured VDM Exit Mode State Diagram ...................................................................................................... 503", "caption": "Figure 8-133 Cable Plug Structured VDM Exit Mode State Diagram ...................................................................................................... 503", "page": 34}, {"figure_id": "Figure 8-134 BIST Carrier Mode State Diagram ............................................................................................................................................... 504", "caption": "Figure 8-134 BIST Carrier Mode State Diagram ............................................................................................................................................... 504", "page": 34}, {"figure_id": "Figure 9-1 Example PD Topology ............................................................................................................................................................................ 514", "caption": "Figure 9-1 Example PD Topology ............................................................................................................................................................................ 514", "page": 34}, {"figure_id": "Figure 9-2 Mapping of PD Topology to USB ........................................................................................................................................................ 515", "caption": "Figure 9-2 Mapping of PD Topology to USB ........................................................................................................................................................ 515", "page": 34}, {"figure_id": "Figure 9-3 USB Attached to USB Powered State Transition........................................................................................................................ 516", "caption": "Figure 9-3 USB Attached to USB Powered State Transition........................................................................................................................ 516", "page": 34}, {"figure_id": "Figure 9-4 Any USB State to USB Attached State Transition (When operating as a Consumer) ............................................... 517", "caption": "Figure 9-4 Any USB State to USB Attached State Transition (When operating as a Consumer) ............................................... 517", "page": 34}, {"figure_id": "Figure 9-5 Any USB State to USB Attached State Transition (When operating as a Provider) .................................................. 517", "caption": "Figure 9-5 Any USB State to USB Attached State Transition (When operating as a Provider) .................................................. 517", "page": 34}, {"figure_id": "Figure 9-6 Any USB State to USB Attached State Transition (After a USB Type-C Data Role Swap) ....................................... 518", "caption": "Figure 9-6 Any USB State to USB Attached State Transition (After a USB Type-C Data Role Swap) ....................................... 518", "page": 34}, {"figure_id": "Figure 9-7 Software stack on a PD aware OS ..................................................................................................................................................... 518", "caption": "Figure 9-7 Software stack on a PD aware OS ..................................................................................................................................................... 518", "page": 34}, {"figure_id": "Figure 9-8 Enumeration of a PDUSB Device ....................................................................................................................................................... 519", "caption": "Figure 9-8 Enumeration of a PDUSB Device ....................................................................................................................................................... 519", "page": 34}, {"figure_id": "Figure 10-1 Source Power Rule Illustration ....................................................................................................................................................... 529", "caption": "Figure 10-1 Source Power Rule Illustration ....................................................................................................................................................... 529", "page": 34}, {"figure_id": "Figure 10-2 Source Power Rule Example ............................................................................................................................................................. 530", "caption": "Figure 10-2 Source Power Rule Example ............................................................................................................................................................. 530", "page": 34}, {"figure_id": "Figure B-1 External Power supplied downstream .......................................................................................................................................... 538", "caption": "Figure B-1 External Power supplied downstream .......................................................................................................................................... 538", "page": 34}, {"figure_id": "Figure B-2 External Power supplied upstream ................................................................................................................................................. 542", "caption": "Figure B-2 External Power supplied upstream ................................................................................................................................................. 542", "page": 34}, {"figure_id": "Figure B-3 Giving Back Power ................................................................................................................................................................................... 549", "caption": "Figure B-3 Giving Back Power ................................................................................................................................................................................... 549", "page": 34}, {"figure_id": "Figure D-1 Circuit Block of BMC Finite Difference Receiver ....................................................................................................................... 574", "caption": "Figure D-1 Circuit Block of BMC Finite Difference Receiver ....................................................................................................................... 574", "page": 34}, {"figure_id": "Figure D-2 BMC AC and DC noise from VBUS at Power Sink ...................................................................................................................... 575", "caption": "Figure D-2 BMC AC and DC noise from VBUS at Power Sink ...................................................................................................................... 575", "page": 34}, {"figure_id": "Figure D-3 Sample BMC Signals (a) without [USB 2.0] SE0 Noise (b) with [USB 2.0] SE0 Noise............................................... 575", "caption": "Figure D-3 Sample BMC Signals (a) without [USB 2.0] SE0 Noise (b) with [USB 2.0] SE0 Noise............................................... 575", "page": 34}, {"figure_id": "Figure D-4 Scaled BMC Signal Derivative with 50ns Sampling Rate....................................................................................................... 576", "caption": "Figure D-4 Scaled BMC Signal Derivative with 50ns Sampling Rate....................................................................................................... 576", "page": 34}, {"figure_id": "Figure D-5 BMC Signal and Finite Difference Output with Various Time Steps ................................................................................ 576", "caption": "Figure D-5 BMC Signal and Finite Difference Output with Various Time Steps ................................................................................ 576", "page": 34}, {"figure_id": "Figure D-6 Output of Finite Difference in dash line and Edge Detector in solid line ...................................................................... 577", "caption": "Figure D-6 Output of Finite Difference in dash line and Edge Detector in solid line ...................................................................... 577", "page": 34}, {"figure_id": "Figure D-7 Noise Zone and Detect Zone of BMC Receiver ........................................................................................................................... 577", "caption": "Figure D-7 Noise Zone and Detect Zone of BMC Receiver ........................................................................................................................... 577", "page": 34}, {"figure_id": "Figure D-8 Circuit Block of BMC Subtraction Receiver ................................................................................................................................. 578", "caption": "Figure D-8 Circuit Block of BMC Subtraction Receiver ................................................................................................................................. 578", "page": 34}, {"figure_id": "Figure D-9 (a) Output of LPF1 and LPF2 (b) Subtraction of LPF1 and LPF2 Output ...................................................................... 578", "caption": "Figure D-9 (a) Output of LPF1 and LPF2 (b) Subtraction of LPF1 and LPF2 Output ...................................................................... 578", "page": 34}, {"figure_id": "Figure D-10 Output of the BMC LPF1 in blue dash curve and the Subtractor in red solid curve.............................................. 579", "caption": "Figure D-10 Output of the BMC LPF1 in blue dash curve and the Subtractor in red solid curve.............................................. 579", "page": 34}], "subsections": [], "word_count": 7581, "tags": []}
{"section_id": "1.1", "title": "Overview", "content": "This specification defines how USB Devices can negotiate for more current and/or higher or lower voltages over the USB cable (using the USB Type-C CC wire as the communications channel) than are defined in the [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2] specifications. It allows Devices with greater power requirements than can be met with today’s specification to get the power they require to operate from V and negotiate with external power BUS sources (e.g. Wall Warts). In addition, it allows a Source and Sink to swap power roles such that a Device could supply power to the Host. For example, a display could supply power to a notebook to charge its battery. The USB Power Delivery Specification is guided by the following principles: Works seamlessly with legacy USB Devices Compatible with existing spec-compliant USB cables Minimizes potential damage from non-compliant cables (e.g. ‘Y’ cables etc.) Optimized for low-cost implementations USB Power Delivery Specification Revision 3.0, Version 1.1 Page 35 This specification defines mechanisms to discover, enter and exit Modes defined either by a standard or by a particular vendor. These Modes can be supported either by the Port Partner or by a cable connecting the two Port Partners. The specification defines mechanisms to discover the capabilities of cables which can communicate using Power Delivery. This specification adds a mechanism to swap the data roles such that the upstream facing Port becomes the downstream facing Port and vice versa. It also enables a swap of the end supplying V to a powered cable. CONN", "page_start": 35, "page_end": 35, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 257, "tags": []}
{"section_id": "1.2", "title": "Purpose", "content": "The USB Power Delivery specification defines a power delivery system covering all elements of a USB system including: Hosts, Devices, Hubs, Chargers and cable assemblies. This specification describes the architecture, protocols, power supply behavior, connectors and cabling necessary for managing power delivery over USB at up to 100W. This specification is intended to be fully compatible and extend the existing USB infrastructure. It is intended that this specification will allow system OEMs, power supply and peripheral developers adequate flexibility for product versatility and market differentiation without losing backwards compatibility. USB Power Delivery is designed to operate independently of the existing USB bus defined mechanisms used to negotiate power which are:  [USB 2.0], [USB 3.1] in band requests for high power interfaces.  [USBBC 1.2] mechanisms for supplying higher power (not mandated by this specification).  [USB Type-C 1.2] mechanisms for supplying higher power Initial operating conditions remain the USB Default Operation as defined in [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2].  The DFP sources vSafe5V over V . BUS  TheUFP consumes power from V . BUS", "page_start": 36, "page_end": 35, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 182, "tags": []}
{"section_id": "1.3", "title": "Scope", "content": "This specification is intended as an extension to the existing [USB 2.0], [USB 3.1], [USB Type-C 1.2] and [USBBC 1.2] specifications. It addresses only the elements required to implement USB Power Delivery. It is targeted at power supply vendors, manufacturers of [USB 2.0], [USB 3.1], [USB Type-C 1.2] and [USBBC 1.2] Platforms, Devices and cable assemblies. Normative information is provided to allow interoperability of components designed to this specification. Informative information, when provided, illustrates possible design implementation.", "page_start": 36, "page_end": 35, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 77, "tags": []}
{"section_id": "1.4", "title": "Conventions", "content": "", "page_start": 36, "page_end": 35, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1.4.1", "title": "Precedence", "content": "If there is a conflict between text, figures, and tables, the precedence Shall be tables, figures, and then text.", "page_start": 36, "page_end": 35, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": []}
{"section_id": "1.4.2", "title": "Keywords", "content": "The following keywords differentiate between the levels of requirements and options.", "page_start": 36, "page_end": 35, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "1.4.2.1", "title": "Conditional Normative", "content": "Conditional Normative is a keyword used to indicate a feature that is mandatory when another related feature has been implemented. Designers are mandated to implement all such requirements, when the dependent features have been implemented, to ensure interoperability with other compliant Devices. Page 36 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 36, "page_end": 36, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 52, "tags": []}
{"section_id": "1.4.2.2", "title": "Deprecated", "content": "Deprecated is a keyword used to indicate a feature, supported in previous releases of the specification, which is no longer supported.", "page_start": 37, "page_end": 36, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "1.4.2.3", "title": "Discarded", "content": "Discard, Discards and Discarded are equivalent keywords indicating that a Packet when received Shall be thrown away by the PHY Layer and not passed to the Protocol Layer for processing. No GoodCRC Message Shall be sent in response to the Packet.", "page_start": 37, "page_end": 36, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": []}
{"section_id": "1.4.2.4", "title": "Ignored", "content": "Ignore, Ignores and Ignored are equivalent keywords indicating Messages or Message fields which, when received, Shall result in no special action by the receiver. An Ignored Message Shall only result in returning a GoodCRC Message to acknowledge Message receipt. A Message with an Ignored field Shall be processed normally except for any actions relating to the Ignored field.", "page_start": 37, "page_end": 36, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 58, "tags": []}
{"section_id": "1.4.2.5", "title": "Invalid", "content": "Invalid is a keyword when used in relation to a Packet indicates that the Packet’s usage or fields fall outside of the defined specification usage. When Invalid is used in relation to an Explicit Contract it indicates that a previously established Explicit Contract which can no longer be maintained by the Source. When Invalid is used in relation to individual K-codes or K-code sequences indicates that the received Signaling falls outside of the defined specification.", "page_start": 37, "page_end": 36, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 75, "tags": []}
{"section_id": "1.4.2.6", "title": "May", "content": "May is a keyword that indicates a choice with no implied preference.", "page_start": 37, "page_end": 36, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "1.4.2.7", "title": "May Not", "content": "May Not is a keyword that is the inverse of May. Indicates a choice to not implement a given feature with no implied preference.", "page_start": 37, "page_end": 36, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": []}
{"section_id": "1.4.2.8", "title": "N/A", "content": "N/A is a keyword that indicates that a field or value is not applicable and has no defined value and Shall Not be checked or used by the recipient.", "page_start": 37, "page_end": 36, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": []}
{"section_id": "1.4.2.9", "title": "Optional/Optionally/Optional Normative", "content": "Optional, Optionally and Optional Normative are equivalent keywords that describe features not mandated by this specification. However, if an Optional feature is implemented, the feature Shall be implemented as defined by this specification.", "page_start": 37, "page_end": 36, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": []}
{"section_id": "1.4.2.10", "title": "Reserved", "content": "Reserved is a keyword indicating reserved bits, bytes, words, fields, and code values that are set-aside for future standardization. Their use and interpretation May be specified by future extensions to this specification and Shall Not be utilized or adapted by vendor implementation. A Reserved bit, byte, word, or field Shall be set to zero by the sender and Shall be Ignored by the receiver. Reserved field values Shall Not be sent by the sender and Shall be Ignored by the receiver.", "page_start": 37, "page_end": 36, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 81, "tags": []}
{"section_id": "1.4.2.11", "title": "Shall/Normative", "content": "Shall and Normative are equivalent keywords indicating a mandatory requirement. Designers are mandated to implement all such requirements to ensure interoperability with other compliant Devices. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 37", "page_start": 37, "page_end": 37, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": []}
{"section_id": "1.4.2.12", "title": "Shall Not", "content": "Shall Not is a keyword that is the inverse of Shall indicating non-compliant operation.", "page_start": 38, "page_end": 37, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": []}
{"section_id": "1.4.2.13", "title": "Should", "content": "Should is a keyword indicating flexibility of choice with a preferred alternative; equivalent to the phrase “it is recommended that…”.", "page_start": 38, "page_end": 37, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": []}
{"section_id": "1.4.2.14", "title": "Should Not", "content": "Should Not is a keyword is the inverse of Should; equivalent to the phrase “it is recommended that implementations do not…”.", "page_start": 38, "page_end": 37, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "1.4.2.1", "title": "Valid", "content": "Valid is a keyword that is the inverse of Invalid indicating either a Packet, Signaling that fall within the defined specification or an Explicit Contract that can be maintained by the Source.", "page_start": 38, "page_end": 37, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 32, "tags": []}
{"section_id": "1.4.3", "title": "Numbering", "content": "Numbers that are immediately followed by a lowercase \"b\" (e.g., 01b) are binary values. Numbers that are immediately followed by an uppercase \"B\" are byte values. Numbers that are immediately followed by a lowercase \"h\" (e.g., 3Ah) or are preceded by “0x” (e.g. 0xFF00) are hexadecimal values. Numbers not immediately followed by either a \"b\", “B”, or \"h\" are decimal values.", "page_start": 38, "page_end": 37, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 61, "tags": []}
{"section_id": "1.5", "title": "Related Documents", "content": " [USB 2.0] – Universal Serial Bus Specification, Revision 2.0, plus ECN and Errata http://www.usb.org/developers/docs/usb20_docs/.  [USB 3.1] – Universal Serial Bus 3.1 Specification, Revision 1 plus ECN and Errata (this includes the entire document release package including the OTG&EH v3.0 specification). www.usb.org/developers/docs.  [USBTypeCAuthentication 1.0], Universal Serial Bus Type-C Authentication Specification, Revision 1.0, March 25, 2016. www.usb.org/developers/docs.  [USBPDFirmwareUpdate 1.0], Universal Serial Bus Power Delivery Firmware Update Specification, Revision 1.0. www.usb.org/developers/docs. Expected publication date H2 2016.  [USBBC 1.2] – Universal Serial Bus Battery Charging Specification, Revision 1.2 plus Errata (referred to in this document as the Battery Charging specification). www.usb.org/developers/devclass_docs#approved.  [USBBridge 1.0] – Universal Serial Bus Type-C Bridge Specification, Revision 1.0, March 25, 2016. www.usb.org/developers/docs.  [USBTypeCBridge 1.0] – Universal Serial Bus Type-C Bridge Specification, Revision 1.0, March 25, 2016. www.usb.org/developers/docs.  [USBPD 2.0] – Universal Serial Bus Power Delivery Specification, Revision 2, Version 1.2, March 25, 2016. www.usb.org/developers/docs.  [USBPDCompliance] – USB Power Delivery Compliance Plan version 1.0 http://www.usb.org/developers/docs/devclass_docs/.  [USB Type-C 1.2] – Universal Serial Bus Type-C Cable and Connector Specification, Revision 1.2, March 25, 2016. www.usb.org/developers/docs.  [IEC 60958-1] IEC 60958-1 Digital Audio Interface Part:1 General Edition 3.0 2008-09 www.iec.ch  [IEC 60950-1] IEC 60950-1:2005 Information technology equipment – Safety – Part 1: General requirements: Amendment 1:2009, Amendment 2:2013  [IEC 62368-1] IEC 62368-1 Audio/Video, information and communication technology equipment – Part 1: Safety requirements Page 38 USB Power Delivery Specification Revision 3.0, Version 1.1  [IEC 63002] Draft CD for IEC 63002 Identification and Communication Interoperability Method for External DC Power Supplies Used With Portable Computing Devices.  [ISO 3166] ISO 3166 international Standard for country codes and codes for their subdivisions. http://www.iso.org/iso/home/standards/country_codes.htm.", "page_start": 38, "page_end": 38, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 280, "tags": []}
{"section_id": "1.6", "title": "Terms and Abbreviations", "content": "This section defines terms used throughout this document. For additional terms that pertain to the Universal Serial Bus, see Chapter 2, “Terms and Abbreviations,” in [USB 2.0], [USB 3.1], [USB Type-C 1.2] and [USBBC 1.2]. Table 1-1 Terms and Abbreviations Term Description Active Cable A cable with a USB Plug on each end at least one of which is a Cable Plug supporting SOP’, that also incorporates data bus signal conditioning circuits. The cable supports the Structured VDM Discover Identity Command to determine its characteristics in addition to other Structured VDM Commands (Electronically Marked Cable see [USB Type-C 1.2]). Active Mode A Mode which has been entered and not exited. Alternate Mode As defined in [USB Type-C 1.2]. Equivalent to Mode in the PD Specification. Alternate Mode Adapter A PDUSB Device which supports Alternate Modes as defined in [USB Type-C 1.2]. Note that (AMA) since an AMA is a PDUSB Device it has a single UFP that is only addressable by SOP Packets. Alternate Mode Controller A DFP that supports connection to AMAs as defined in [USB Type-C 1.2]. A DFP that is an (AMC) AMC can also be a PDUSB Host. Augmented Power Data Data Object used to expose a Source Port’s power capabilities or a Sink’s power requirements Object (APDO) as part of a Source_Capabilities or Sink_Capabilities Message respectively. Programmable Power Supply Data Object is defined. Atomic Message Sequence A fixed sequence of Messages as defined in Section 8.3.2 typically starting and ending in one (AMS) of the following states: PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready. An AMS can be Interruptible or Non-interruptible. Attach Mechanical joining of the Port Pair by a cable. Attached USB Power Delivery ports which are mechanically joined with USB cable. Battery A power storage device residing behind a Port that can either be a source or sink of power. Battery Supply A power supply that directly applies the output of a Battery to VBUS. This is exposed by the Battery Supply PDO (see Section 6.4.1.2.4) Binary Frequency Shift A Signaling Scheme now Deprecated in this specification. BFSK used a pair of discrete Keying (BFSK) frequencies to transmit binary (0s and 1s) information over VBUS. See [USBPD 2.0] for further details. Biphase Mark Coding Modification of Manchester coding where each zero has one transition and a one has two (BMC) transitions (see [IEC 60958-1]). BIST Built In Self-Test – Power Delivery testing mechanism for the PHY Layer. BIST Data Object (BDO) Data Object used by BIST Messages. BIST Mode A BIST receiver or transmitter test mode enabled by a BIST Message. Cable Plug Term used to describe a PD Capable element in a Multi-Drop system addressed by SOP’/SOP’’ Packets. Logically the Cable Plug is associated with a USB plug at one end of the cable. In a practical implementation the electronics might reside anywhere in the cable. Cable Reset This is initiated by Cable Reset Signaling from the DFP. It restores the Cable Plugs to their default, power up condition and resets the PD communications engine to its default state. It does not reset the Port Partners but does restore VCONN to its Attachment state. Chunk A MaxExtendedMsgChunkLen (26 byte) or less portion of a Data Block. Data Blocks can be sent either as a single Message or as a series of Chunks. Chunking The process of breaking up a Data Block larger than MaxExtendedMsgLegacyLen (26-bytes) into two of more Chunks. Cold Socket A Port that does not apply vSafe5V on VBUS until a Sink is Attached. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 39 Term Description Command Request and response pair defined as part of a Structured Vendor Defined Message (see Section 6.4.4.2) Configuration Channel (CC) Single wire used by the BMC PHY Layer Signaling Scheme (see [USB Type-C 1.2]). Connected USB Power Delivery ports that have exchanged a Message and a GoodCRC Message response using the USB Power Delivery protocol so that both Port Partners know that each is PD Capable. Consumer The capability of a PD Port (typically a Device’s UFP) to sink power from the power conductor (e.g. VBUS). This corresponds to a USB Type-C Port with Rd asserted on its CC Wire. Consumer/Provider A Consumer with the additional capability to act as a Provider. This corresponds to a Dual- Role Port with Rd asserted on its CC Wire. Continuous BIST Mode A BIST Mode where the Port or Cable Plug being tested sends a continuous stream of test data. Constant Voltage (CV) A mode in which the Source output Voltage remains constant as the load changes. Contract An agreement on both power level and direction reached between a Port Pair. A Contract could be explicitly negotiated between the Port Pair or could be an Implicit power level defined by the current state. While operating in Power Delivery mode there will always be either an Explicit or Implicit Contract in place. The Contract can only be altered in the case of a (re-)negotiation, Power Role Swap, Data Role Swap, Hard Reset or failure of the Source. Control Message A Message is defined as a Control Message when the Number of Data Objects field in the Message Header is set to 0. The Control Message consists only of a Message Header and a CRC. Current Foldback (CF) A current limiting feature for a Source. When the Sink attempts to draw more current from the Source than the requested current foldback value, the Source reduces its output voltage so the current it supplies remains at or below the requested value. Data Block An Extended Message payload data unit. The size of each type of Data Block is specified as a series of bytes up to MaxExtendedMsgLen bytes in length. This is distinct from a Data Object used by a Data Message which is always a 32-bit object. Data Message A Data Message consists of a Message Header followed by one or more Data Objects. Data Messages are easily identifiable because the Number of Data Objects field in the Message Header is a non-zero value. Data Object A Data Message payload data unit. This 32 bit object contains information specific to different types of Data Message. Power, Request, BIST and Vendor Data Objects are defined. Data Role Swap Process of exchanging the DFP (Host) and UFP (Device) roles between Port Partners using the [USB Type-C 1.2] connector. Dead Battery A device has a Dead Battery when the Battery in a device is unable to power its functions. Detach Mechanical unjoining of the Port Pair by removal of the cable. Detached USB Power Delivery ports which are no longer mechanically joined with USB cable. Device When lower cased (device), it refers to any USB product, either USB Device or USB Host. When in upper case refers to a USB Device (Peripheral or Hub). Device Policy Manager Module running in a Source or Sink that applies Local Policy to each Port in the Device via the (DPM) Policy Engine. Discovery Process Command sequence using Structured Vendor Defined Messages resulting in identification of the Port Partner, its supported SVIDs and Modes. Downstream Facing Port Indicates the Port’s position in the USB topology which typically corresponds to a USB Host (DFP) root Port or Hub downstream Port as defined in [USB Type-C 1.2]. At connection the Port defaults to operation as a USB Host (when USB Communication is supported) and Source. Dual-Role Data (DRD) Capability of operating as either a DFP or UFP. Dual-Role Data Port A Port Capable of operating as DRD.. Dual-Role Power (DRP) Capability of operating as either a Source or Sink. Dual-Role Power Device A product containing one or more Dual-Role Power Ports that are capable of operating as either a Source or a Sink. Dual-Role Power Port A Port capable of operating as a DRP. Page 40 USB Power Delivery Specification Revision 3.0, Version 1.1 Term Description End of Packet (EOP) K-code marker used to delineate the end of a packet. Enter Mode Process Command sequence using Structured Vendor Defined Messages resulting in the Port Partners entering a Mode. Error Recovery Error recovery process as defined in [USB Type-C 1.2]. Exit Mode Process Command sequence using Structured Vendor Defined Messages resulting in the Port Partners exiting a Mode. Explicit Contract An agreement reached between a Port Pair as a result of the Power Delivery negotiation process. An Explicit Contract is established (or continued) when a Source sends an Accept Message in response to a Request Message sent by a Sink followed by a PS_RDY Message indicating that the power supply is ready; this corresponds to the PE_SRC_Ready state for a Source Policy Engine and the PE_SNK_Ready state for a Sink Policy Engine. The Explicit Contract can be altered through the re-negotiation process. All Port pairs are required to make an Explicit Contract. Extended Message (EM) A Message containing Data Blocks. The Extended Message is defined by the Extended field in the Message Header being set to one and contains an Extended Message Header immediately following the Message Header. Extended Message Header Every Extended Message contains a 16-bit Extended Message Header immediately following the Message Header containing information about the Data Block and any Chunking being applied. Fast Role Swap Process of exchanging the Source and Sink roles between Port Partners rapidly due to the disconnection of an external power supply. Fixed Battery A Battery that is not easily removed or replaced by an end user e.g. requires a special tool to access or is soldered in. Fixed Supply A well-regulated fixed voltage power supply. This is exposed by the Fixed Supply PDO (see Section 6.4.1.2.2) Frame Generic term referring to an atomic communication transmitted by PD such as a Packet, Test Frame or Signaling. Hard Reset This is initiated by Hard Reset Signaling from either Port Partner. It restores VBUS to USB Default Operation and resets the PD communications engine to its default state in both Port Partners as well as in any Attached Cable Plugs. It restores both Port Partners to their default Data Roles and returns the VCONN Source to the Source Port. HDD A Hard Disk Drive. Hot Swappable Battery A Battery that is easily accessible for a user to remove or change for another Battery. ID Header VDO The VDO in a Discover Identity Command immediately following the VDM Header. The ID Header VDO contains information corresponding to the Power Delivery Product. Implicit Contract An agreement on power levels between a Port Pair which occurs, not as a result of the Power Delivery negotiation process, but as a result of a Power Role Swap or Fast Role Swap. Implicit Contracts are transitory since the Port pair is required to immediately negotiate an Explicit Contract after the Power Role Swap. An Implicit Contract Shall be limited to USB Type-C Current (see [USB Type-C 1.2]). Initiator The initial sender of a Command request in the form of a query. Interruptible An AMS that, on receiving a Protocol Error, returns to the appropriate ready state in order to process the incoming Message is said to be Interruptible. Every AMS is Interruptible until the first Message in the AMS has been sent (a GoodCRC Message has been received). An AMS of Vendor Messages is Interruptible during the entire sequence. IoC The negotiated current value as defined in [IEC 63002]. IR Drop The voltage drop across the cable and connectors between the Source and the Sink. It is a function of the resistance of the ground and power wire in the cable plus the contact resistance in the connectors times the current flowing over the path. K-code Special symbols provided by the 4b5b coding scheme. K-codes are used to signal Hard Reset and Cable reset, and delineate Packet boundaries. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 41 Term Description Local Policy Every PD Capable device has its own Policy, called the Local Policy that is executed by its Policy Engine to control its power delivery behavior. The Local Policy at any given time might be the default policy, hard coded or modified by changes in operating parameters or one provided by the system Host or some combination of these. The Local Policy Optionally can be changed by a System Policy Manager. LPS Limited Power Supply as defined in [IEC 62368-1]. Message The packet payload consisting of a Message Header for Control Messages and a Message Header and data for Data Messages and Extended Messages as defined in Section 6. Message Header Every Message starts with a 16-bit Message Header containing basic information about the Message and the PD Port’s Capabilities. Messaging Communication in the form of Messages as defined in Chapter 6. Modal Operation State where there are one or more Active Modes. Modal Operation ends when there are no longer any Active Modes. Mode Operation defined by a Vendor or Standard’s organization, which is associated with a SVID, whose definition is outside the scope of USB-IF specifications. Entry to and exit from the Mode uses the Enter Mode and Exit Mode Processes. Modes are equivalent to “Alternate Modes” as described in [USB Type-C 1.2]. Multi-Drop Refers to a Power Delivery system with one or more Cable Plugs where communication is to the Cable Plugs rather than the Port Partner. Multi-Drop systems share the Power Delivery communication channel with the Port Partners. Negotiation This is the PD process whereby: 1. The Source advertises its capabilities. 2. The Sink requests one of the advertised capabilities. 3. The Source acknowledges the request and alters its output to satisfy the request. The result of the negotiation is a Contract for power delivery/consumption between the Port Pair. Non-interruptible An AMS that, on receiving a Protocol Error, generates either a Soft Reset or Hard Reset. Any power related AMS is Non-interruptible once the first Message in the AMS has been sent (a GoodCRC Message has been received). OCP Over-Current Protection OTP Over-Temperature Protection OVP Over-Voltage Protection Packet One entire unit of PD communication including a Preamble, SOP*, payload, CRC and EOP as defined in Section 5.6. Passive Cable Cable with a USB Plug on each end at least one of which is a Cable Plug supporting SOP’ that does not incorporate data bus signal conditioning circuits. Supports the Structured VDM Discover Identity to determine its characteristics (Electronically Marked Cable see [USB Type-C 1.2]). Note this specification does not discuss Passive Cables which are not Electronically Marked Cables. PD USB Power Delivery PD Capable A Port that supports USB Power Delivery. PD Connection See Connected. PD Power (PDP) The output power of a Source, as specified by the manufacturer and expressed in Fixed Supply PDOs as defined in Section 10. PDUSB USB Device Port or USB Host Port that is both PD capable and capable of USB Communication. See also PDUSB Host, PDUSB Device and PDUSB Hub. PDUSB Device A USB Device with a PD Capable UFP. A PDUSB Device is only addressed by SOP Packets. PDUSB Host A USB Host which is PD Capable on at least one of its DFPs. A PDUSB Host is only addressed by SOP Packets. PDUSB Hub A port expander USB Device with a UFP and one or more DFPs which is PD Capable on at least one of its Ports. A PDUSB Hub is only addressed by SOP Packets. PDUSB Peripheral A USB Device with a PD Capable UFP which is not a PDUSB Hub. A PDUSB Peripheral is only addressed by SOP Packets. Page 42 USB Power Delivery Specification Revision 3.0, Version 1.1 Term Description PHY Layer The Physical Layer responsible for sending and receiving Messages across the USB Type-C CC wire between a Port Pair. Policy Policy defines the behavior of PD capable parts of the system and defines the capabilities it advertises, requests made to (re)negotiate power and the responses made to requests received. Policy Engine (PE) The Policy Engine interprets the Device Policy Manager’s input in order to implement Policy for a given Port and directs the Protocol Layer to send appropriate Messages. Port An interface typically exposed through a receptacle, or via a plug on the end of a hard-wired captive cable. USB Power Delivery defines the interaction between a Port Pair. Port Pair Two Attached PD Capable Ports. Port Partner A Contract is negotiated between a Port Pair connected by a USB cable. These ports are known as Port Partners. Power Conductor The wire delivering power from the Source to Sink. For example USB’s VBUS. Power Consumer See Consumer Power Data Object (PDO) Data Object used to expose a Source Port’s power capabilities or a Sink’s power requirements as part of a Source_Capabilities or Sink_Capabilities Message respectively. Fixed, Variable and Battery Power Data Objects are defined. Power Delivery Mode Operation after a Contract has initially been established between a Port pair. This mode persists during normal Power Delivery operation, including after a Power Role Swap. Power Delivery mode can only be exited by Detaching the ports, applying a Hard Reset or by the Source removing power (except when power is removed during the Power Role Swap procedure). Power Provider See Provider Power Reserve Power which is kept back by a Source in order to ensure that it can meet total power requirements of Attached Sinks on at least one Port. Power Role Swap Process of exchanging the Source and Sink roles between Port Partners. Preamble Start of a transmission which is used to enable the receiver to lock onto the carrier. The Preamble consists of a 64-bit sequence of alternating 0s and 1s starting with a \"0\" and ending with a \"1\" which is not 4b5b encoded. Product Type Product categorization returned as part of the Discover Identity Command. Product Type VDO VDO identifying a certain Product Type in the ID Header VDO of a Discover Identity Command. Programmable Power A power supply whose output voltage can be programmatically adjusted in small increments Supply (PPS) over its advertised range. The PPS also has a programmable output current fold back. The capabilities of the PPS are exposed by the Programmable Power Supply APDO (see Section 6.4.1.2.5). Protocol Error An unexpected Message during an Atomic Message Sequence. A Protocol Error during a Non- interruptible AMS will result in either a Soft Reset or a Hard Reset. A Protocol Error during an Interruptible AMS will result in a return to the appropriate ready state where the Message will be handled. Protocol Layer The entity that forms the Messages used to communicate information between Port Partners. Provider A capability of a PD Port (typically a Host, Hub, or Wall Wart DFP) to source power over the power conductor (e.g. VBUS). This corresponds to a USB Type-C Port with Rp asserted on its CC Wire. Provider/Consumer A Provider with the additional capability to act as a Consumer. This corresponds to a Dual- Role Power Port with Rp asserted on its CC Wire. PS1, PS2 Classification of electrical power as defined in [IEC 62368-1]. Rd Pull-down resistor on the USB Type-C CC wire used to indicate that the Port is a Sink (see [USB Type-C 1.2]). Reattach Attach of the Port Pair by a cable after a previous Detach. Re-negotiation A process wherein one of the Port Partners wants to alter the negotiated Contract. Request Data Object (RDO) Data Object used by a Sink Port to negotiate a Contact as a part of a Request Message. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 43 Term Description Re-run Start an Interruptible AMS again from the beginning after a Protocol Error. Responder The receiver of a Command request sent by an Initiator that replies with a Command response. Rp Pull-up resistor on the USB Type-C CC wire used to indicate that the Port is a Source (see [USB Type-C 1.2]). Safe Operation Sources must have the ability to tolerate vSafe5V applied by both Port Partners. Signaling A Preamble followed by an ordered set of four K-codes used to indicate a particular line symbol e.g. Hard Reset as defined in Section 5.4. Signaling Scheme Physical mechanism used to transmit bits. Only the BMC Signaling Scheme is defined in this specification. Note: the BFSK Signaling Scheme supported in previous Revisions of this specification has been Deprecated. Single-Role Port A Port that is a Port only capable of operating as a Source or Sink, but not both. Sink The Port consuming power from VBUS; most commonly a Device. Sink Directed Charge A charging scheme whereby the Sink connects the Source to its battery through safety and other circuitry. Sink Directed Charge has two different modes of operation:  When the Current Foldback feature is not activated, the Sink controls the Source’s output current by adjusting the Source’s output voltage  When the Current Foldback feature is activated, the Source automatically controls its output current by adjusting its output voltage. The Sink is responsible for managing the current so as not to exceed the advertised capability of the Source and to protect itself from over-current events. Soft Reset A process that resets the PD communications engine to its default state. SOP Communication Communication using SOP Packets also implies that a Message sequence is being followed. SOP Packet Any Power Delivery Packet which starts with an SOP. SOP* Communication Communication with a Cable Plug using SOP* Packets, also implies a Message sequence is being followed. SOP* Packet A term referring to any Power Delivery Packet starting with either SOP, SOP’ or SOP’’. SOP’ Communication Communication with a Cable Plug using SOP’ Packets, also implies that a Message sequence is being followed. SOP’ Packet Any Power Delivery Packet which starts with an SOP’ used to communicate with a Cable Plug. SOP’’ Communication Communication with a Cable Plug using SOP’’ Packets, also implies that a Message sequence is being followed. SOP’’ Packet Any Power Delivery Packet which starts with an SOP’’ used to communicate with a Cable Plug when SOP’ Packets are being used to communicate with the other Cable Plug. Source A role a Port is currently taking to supply power over VBUS; most commonly a Host or Hub downstream port. Standard ID (SID) 16-bit unsigned value assigned by the USB-IF to a given industry standard. Standard or Vendor ID Generic term referring to either a VID or a SID. SVID is used in place of the phrase “Standard (SVID) or Vendor ID”. Start of Packet (SOP) K-code marker used to delineate the start of a packet. Three start of packet sequences are defined: SOP, SOP’ and SOP’’, with SOP* used to refer to all three in place of SOP/SOP’/SOP’’. System Policy Overall system policy generated by the system, broken up into the policies required by each Port Pair to affect the system policy. It is programmatically fed to the individual devices for consumption by their Policy Engines. System Policy Manager Module running on the USB Host. It applies the System Policy through communication with (SPM) PD capable Consumers and Providers that are also connected to the Host via USB. Test Frame Frame consisting of a Preamble, SOP*, followed by test data (See Section 5.9). Test Pattern Continuous stream of test data in a given sequence (See Section 5.9) Tester The Tester is assumed to be a piece of test equipment that manages the BIST testing process of a PD UUT. Unexpected Message Message that a Port supports but has been received in an incorrect state. Page 44 USB Power Delivery Specification Revision 3.0, Version 1.1 Term Description Unit Interval (UI) The time to transmit a single data bit on the wire. Unit Under Test (UUT) The PD device that is being tested by the Tester and responds to the initiation of a particular BIST test sequence. Unrecognized Message Message that a Port does not understand e.g. a Message using a ReservedMessage type, a Message defined by a higher specification Revision than the Revision this Port supports, or an Unstructured Message for which the VID is not recognized. Unsupported Message Message that a Port recognizes but does not support. This is a Message defined by the specification but which is not supported by this Port. Upstream Facing Port Indicates the Port’s position in the USB topology typically a Port on a Device as defined in (UFP) [USB Type-C 1.2]. At connection the Port defaults to operation as a USB Device (when USB Communication is supported) and Sink. USB Attached State Synonymous with the [USB 2.0]] and [USB 3.1] definition of the Attached state USB Default Operation Operation of a Port at Attach or after a Hard Reset where the DFP Source applies vSafe0V or vSafe5V on VBUS and the UFP Sink is operating at vSafe5V as defined in [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2]. USB Device Either a hub or a peripheral device as defined in [USB 2.0] and [USB 3.1]. USB Host The host computer system where the USB host controller is installed as defined in [USB 2.0] and [USB 3.1]. USB Powered State Synonymous with the [USB 2.0] and [USB 3.1] definition of the powered state. USB Safe State State of the USB Type-C connector when there are pins to be re-purposed (see [USB Type-C 1.2]) so they are not damaged by and do not cause damage to their Port Partner. USB Type-A Term used to refer to any A plug or receptacle including Micro-A plugs and Standard-A plugs and receptacles. Micro-AB receptacles are assumed to be a combination of USB Type-A and USB Type-B. USB Type-B Terms used to refer to any B-plug or receptacle including Micro-B plugs and Standard-B plugs and receptacles, including the PD and non-PD versions. Micro-AB receptacles are assumed to be a combination of USB Type-A and USB Type-B. USB Type-C Term used to refer to the USB Type-C connector plug or receptacle as defined in [USB Type-C 1.2]. USB-IF PD SID (PD SID) Standard ID allocated to this specification by the USB Implementer’s Forum. Variable Supply A very poorly regulated power supply that is not a Battery. This is exposed by the Variable Supply PDO (see Section 6.4.1.2.3). VCONN Powered Accessory An accessory that is powered from VCONN to operate in a Mode (see [USB Type-C 1.2]). VCONN Source The USB Type-C Port responsible for sourcing VCONN. VCONN Swap Process of exchanging the VCONN Source between Port Partners. VDM Header The first Data Object following the Message Header in a Vendor Defined Message. The VDM Header contains the SVID relating to the VDM being sent and provides information relating to the Command in the case of a Structured VDM (see Section 6.4.4). Vendor Data Object (VDO) Data Object used to send Vendor specific information as part of a Vendor_Defined Message. Vendor Defined Message PD Data Message defined for vendor/standards usage. These are further partitioned into (VDM) Structured VDM Messages, where Commands are defined in this specification, and Unstructured VDM Messages which are entirely Vendor Defined (see Section 6.4.4). Vendor ID (VID) 16-bit unsigned value assigned by the USB-IF to a given Vendor. VI Same as power (i.e. voltage * current = power) Wall Wart A power supply or “power brick” that is plugged into an AC outlet. It supplies DC power to power a device or charge a Battery.", "page_start": 39, "page_end": 44, "content_type": "text", "tables": [{"table_id": "Table 1-1 Terms and Abbreviations", "caption": "Table 1-1 Terms and Abbreviations", "page": 39, "data": []}], "figures": [], "subsections": [], "word_count": 4515, "tags": []}
{"section_id": "1.7", "title": "Parameter Values", "content": "The parameters in this specification are expressed in terms of absolute values. For details of how each parameter is measured in compliance please see [USBPDCompliance]. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 45", "page_start": 45, "page_end": 45, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": []}
{"section_id": "1.8", "title": "Changes From Revision 2.0", "content": "This specification includes the following updates:  PD Power rules (also applied to [USBPD 2.0]).  Mechanisms to avoid collisions and simplify communication.  Support for [IEC 63002] included extended power supply capabilities and status.  Battery capabilities and status.  Ability to perform a fast power role swap.  Support for [USBTypeCAuthentication 1.0] and [USBPDFirmwareUpdate 1.0]. The following have been Deprecated from this specification:  The BFSK signaling scheme.  Definitions of Standard/Micro A/B cables and connectors.  Dead battery operation for A/B Ports.  Profiles (replaced by PD Power Rules). The following have been moved to other specifications:  System Policy which is now defined in [USBTypeCBridge 1.0]. For more details see Section 2.3.1.", "page_start": 46, "page_end": 45, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 116, "tags": []}
{"section_id": "1.9", "title": "Compatibility with Revision 2.0", "content": "Revision 3.0 of the USB Power Delivery specification is designed to be fully interoperable with [USBPD 2.0] systems using BMC signaling over the [USB Type-C 1.2] connector and to be compatible with Revision 2.0 hardware. Please see Section 2.3.2 for more details of the mechanisms defined to enable compatibility. Page 46 USB Power Delivery Specification Revision 3.0, Version 1.1 2. Overview This section contains no Normative requirements.", "page_start": 46, "page_end": 46, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 67, "tags": []}
{"section_id": "2.1", "title": "Introduction", "content": "In USB Power Delivery, pairs of directly Attached ports negotiate voltage, current and/or direction of power flow over the USB cable, using the USB Type-C connector’s CC wire as the communications channel. The mechanisms used, operate independently of other USB methods used to negotiate power. USB Power Delivery also acts as a side-band channel enabling support for Standard or Vendor defined Modal Operation. Modes are associated with a Standard or Vendor ID (SVID). Power Delivery Structured VDM Messages can be used to discover supported SVIDs and Modes and then to enter and exit Modes as required. Multiple Active Modes can also be in operation at the same time. Any Contract negotiated using this specification, supersedes any and all previous power contracts established whether from standard [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2] mechanisms. While in Power Delivery Mode there will be a Contract in place (either Explicit or Implicit) determining the power level available and the direction of that power. The Port Pair remains in Power Delivery Mode until the Port Pair is Detached, there is a Hard Reset or the Source removes power (except during a Power Role Swap or Fast Role Swap when the initial Source removes power in order to for the new Source to apply power). An Explicit Contract is negotiated by the process of the Source sending a set of Capabilities, from which the Sink is required to request a particular capability and then the Source accepting this request. An Implicit Contract is the specified level of power allowed in particular states (i.e. during and after a Power Role Swap or Fast Role Swap). Implicit Contracts are temporary; Port Pairs are required to immediately negotiate an Explicit Contract. Each Provider has a Local Policy, governing power allocation to its Ports. Sinks also have their own Local Policy governing how they draw power. A System Policy can be enacted over USB that allows modification to these local policies and hence management of overall power allocation in the system. When PD Capable devices are Attached to each other, the DFPs and UFPs initially default to standard USB Default Operation. The DFP supplies vSafe5V and the UFP draws current in accordance with the rules defined by [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2] specifications. After Power Delivery negotiation has taken place power can be supplied at higher, or lower, voltages and higher currents than defined in these specifications. It is also possible to perform a Power Role Swap or Fast Role Swap to exchange the power supply roles such that the DFP receives power and the UFP supplies power, to perform a Data Role Swap such that the DFP becomes the UFP and vice-versa and to perform a V Swap to change the end supplying V to the cable. CONN CONN Prior to an Explicit Contract the Source can discover the capabilities of the Attached cable assembly. This is important for [USB Type-C 1.2] where 5A cabling is marked as well as other details of the cable assembly such as the supported speed. Cable discovery occurs on initial Attachment of a Port Pair, before an Explicit Contract has been established where the DFP is the Source. It is also possible to carry out cable discovery after a Power Role Swap or Fast Role Swap prior to establishing an Explicit Contract, where the UFP is the Source and an Implicit Contract is in place. Once an Explicit Contract is in place only the DFP is permitted to communicate with the Attached cable assembly. This communication can consist of discovering capabilities but can also include discover of SVIDs, Modes and the entering/exiting of Modes supported by the cable assembly. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 47", "page_start": 47, "page_end": 47, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 625, "tags": []}
{"section_id": "2.2", "title": "Section Overview", "content": "This specification contains the following sections: Section 1 Introduction, conventions used in the document, list of terms and abbreviations, references and details of parameter usage. Section 2 Overview of the document including a description of the operation of PD and the architecture. Section 3 Mechanical and electrical characteristics of the cables and connectors used by PD. Section Deprecated. See [USBPD 2.0] for legacy PD connector specification. Section 4 Electrical requirements for Dead Battery operation and cable detection. Section 5 Details of the PD PHY Layer requirements Section 6 Protocol Layer requirements including the Messages, timers, counters and state operation. Section 7 Power supply requirements for both Providers and Consumers. Section 8 Device Policy Manager requirements. Policy Engine Message sequence diagrams and state diagrams Section 9 USBPD Device requirements including mapping of V to USB states. BUS System Policy Manager requirements including descriptors, events and requests. Section 10 Rated Output Power definitions for PD. Appendix A Example CRC calculations. Appendix B Scenarios illustrating Device Policy Manager operation. Appendix C Examples of Structured VDM usage. Page 48 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 48, "page_end": 48, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 183, "tags": []}
{"section_id": "2.3", "title": "Revision 2.0 Changes and Compatibility", "content": "", "page_start": 49, "page_end": 48, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2.3.1", "title": "Changes From Revision 2.0", "content": "The following is a summary of the major changes between this specification (USB PD Revision 3.0) and [USBPD 2.0]:  Support for both Revision 2.0 and Revision 3.0 operation mandated for products to ensure backwards compatibility with existing products (see Section 6.2.1.1.5).  Profiles Deprecated and replaced with PD Power Rules (see Section 2.7.9). o Change also applied to [USBPD 2.0].  BFSK support Deprecated including legacy cables, legacy connectors, legacy dead battery operation and related test modes.  Extended Messages with a data payload of up to 260 bytes defined (see Section 6.2.1.2): o Support for Chunking of Extended Messages to [USBPD 2.0] size mandated to enable compatibility with legacy PD hardware.  Only the VCONN Source is allowed to communicate with the Cable Plugs (see Section 2.5.4).  Source coordinated collision avoidance scheme to enable either the Source or Sink to initiate an Atomic Message Sequence (AMS): o [USB Type-C 1.2] Rp resistor values used by the Source to indicate when the Sink can/cannot initiate an AMS to either the Source or a Cable Plug (see Section 2.7.3). o Either the Source or Sink can initiate a Structured Vendor Defined AMS. o Either the Source or the Sink can communicate with the Cable Plugs provided they are sourcing VCONN.  Limitations on timing for Attention Commands removed: o Fast Role Swap defined to enable externally powered docks and hubs to rapidly switch to bus power when their external power supply is removed (see Section 6.3.17).  Additional status and discovery of: o Power Supply extended capabilities and status. o Battery capabilities and status. o Manufacturer defined information.  Changes to fields in the Passive Cable, Active Cable and AMA VDOs indicated by a change in the Structured VDM Version to 2.0 (see Section 6.4.4.2).  Support for USB Security related requests and responses (see [USBTypeCAuthentication 1.0]).  Support for USB PD firmware update requests and responses (see [USBPDFirmwareUpdate 1.0]).  System Policy now references [USBTypeCBridge 1.0].", "page_start": 49, "page_end": 48, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 328, "tags": []}
{"section_id": "2.3.2", "title": "Compatibility with Revision 2.0", "content": "Revision 3.0 of the USB Power Delivery specification is designed to be fully interoperable with [USBPD 2.0] systems using BMC signaling over the [USB Type-C 1.2] connector and to be compatible with Revision 2.0 hardware. This specification mandates that all Revision 3.0 systems fully support Revision 2.0 operation. They must discover the supported Revision used by their Port Partner and any connected Cable Plugs and revert to operation using the lowest common Revision number (see Section 6.2.1.1.5). This specification defines Extended Messages containing data of up to 260 bytes (see Section 6.2.1.2). These Messages will be larger than expected by existing PHY HW. To accommodate Revision 2.0 based systems a Chunking mechanism is mandated such that Messages are limited to Revision 2.0 sizes unless it is discovered that both systems support the longer Message lengths. This specification includes changes to the Vendor Defined Objects (VDO) used in the discovery of passive/active marked cables and Alternate Mode Adapters (AMA) (see Section 6.4.4.2). To enable systems to determine which VDO format is being used the Structured Vendor Defined Message (SVDM) version number has been incremented to 2.0. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 49 Version numbers have also been incorporated into the VDOs themselves to facilitate future changes if these become necessary.", "page_start": 49, "page_end": 49, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 213, "tags": []}
{"section_id": "2.4", "title": "USB Power Delivery Capable Devices", "content": "Some examples of USB Power Delivery capable devices can be seen in Figure 2-1 (a Host, a Device, a Hub, and a Charger). These are given for reference only and do not limit the possible configurations of products that can be built using this specification. Figure 2-1 Logical Structure of USB Power Delivery Capable Devices USB Host USB Device USB Hub USB Charger External UFP External UFP External External power power power power Power Power Power Power Storage Storage Storage Storage DFP DFP DFP Legend Multiple Power Multiple Power inputs/outputs outputs Optional Optional Power input Power input Feature Each USB Power Delivery capable device is assumed to be made up of at least one Port. Providers are assumed to have a Source and Consumers a Sink. Each device contains one, or more, of the following components:  UFPs that: o Sink power. o Optionally source power (a Dual-Role Power Device). o Optionally communicate via USB. o Communicate using SOP Packets. o Optionally Communicate using SOP* Packets.  DFPs that: o Source power. o Optionally Sink power (a Dual-Role Power Device). o Optionally communicate via USB. o Communicate using SOP Packets. o Optionally Communicate using SOP* Packets.  A Source that can be: o An external power source e.g. AC. o Power Storage (e.g. Battery). o Derived from another Port (e.g. bus-powered Hub). Page 50 USB Power Delivery Specification Revision 3.0, Version 1.1  A Sink that can be: o Power Storage (e.g. a Battery). o Used to power internal functions. o Used to power devices Attached to other devices (e.g. a bus-powered Hub).  A Vconn Source that: o Can be either Port Partner, either the DFP/UFP or Source/Sink. o Powers the Cable Plug(s). o Is the only Port allowed to talk to the Cable Plug(s) at any given time.", "page_start": 50, "page_end": 50, "content_type": "text", "tables": [], "figures": [{"figure_id": "Some examples of USB Power Delivery capable devices can be seen in Figure 2-1 (a Host, a Device, a Hub, and a", "caption": "Some examples of USB Power Delivery capable devices can be seen in Figure 2-1 (a Host, a Device, a Hub, and a", "page": 50}, {"figure_id": "Figure 2-1 Logical Structure of USB Power Delivery Capable Devices", "caption": "Figure 2-1 Logical Structure of USB Power Delivery Capable Devices", "page": 50}], "subsections": [], "word_count": 300, "tags": ["devices", "power"]}
{"section_id": "2.5", "title": "SOP* Communication", "content": "", "page_start": 51, "page_end": 50, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["communication"]}
{"section_id": "2.5.1", "title": "Introduction", "content": "The Start of Packet (or SOP) is used as an addressing scheme to identify whether the Communications were intended for one of the Port Partners (SOP Communication) or one of the Cable Plugs (SOP’/SOP’’ Communication). SOP/SOP’ and SOP’’ are collectively referred to as SOP*. The term Cable Plug in the SOP’/SOP’’ Communication case is used to represent a logical entity in the cable which is capable of PD Communication and which might or might not be physically located in the plug. The following sections describe how this addressing scheme operates for Port to Port and Port to Cable Plug Communication.", "page_start": 51, "page_end": 50, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 100, "tags": []}
{"section_id": "2.5.2", "title": "SOP* Collision Avoidance", "content": "For all SOP* the Source co-ordinates communication in order to avoid bus collisions by allowing the Sink to initiate messaging when it does not need to communicate itself. Once an Explicit Contract is in place the Source indicates to the Sink that it can initiate a message sequence. This sequence can be communication with the Source or with one of the Cable Plugs. As soon as the Source itself needs to initiate a message sequence this will be indicated to the Sink. The Source then waits for any outstanding Sink SOP* Communication to complete before initiating a message sequence itself.", "page_start": 51, "page_end": 50, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 100, "tags": ["avoidance"]}
{"section_id": "2.5.3", "title": "SOP Communication", "content": "SOP Communication is used for Port to Port communication between the Source and the Sink. SOP Communication is recognized by both Port Partners but not by any intervening Cable Plugs. SOP Communication takes priority over other SOP* Communications since it is critical to complete power related operations as soon as possible. Message sequences relating to power are also allowed to interrupt other sequences to ensure that negotiation and control of power is given priority on the bus.", "page_start": 51, "page_end": 50, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 77, "tags": ["communication"]}
{"section_id": "2.5.4", "title": "SOP’/SOP’’ Communication with Cable Plugs", "content": "SOP’ Communication is recognized by electronics in one Cable Plug which is the Cable Plug that detected VCONN at Attach (see [USB Type-C 1.2]). SOP’’ Communication can also be supported when SOP’ Communication is also supported. SOP’’ Communication is recognized by the electronics in the Cable Plug that did not detect VCONN at Attach. The Vconn Source is the DFP/Source at Attach although all of these roles can later be swapped using PD messaging. SOP Communication between the Port Partners is not recognized by the Cable Plug. Figure 2-2 outlines the usage of SOP* Communications between a VCONN Source (DFP/UFP) and the Cable Plugs. All SOP* Communications take place over a single wire (CC). This means that the SOP* Communication periods must be coordinated to prevent important communication from being blocked. For a product which does not recognize SOP/SOP’ or SOP’’ Packets, this will look like a non-idle channel, leading to missed packets and retries. Communications between the Port Partners take precedence meaning that communications with the Cable Plug can be interrupted, but will not lead to a Soft or Hard Reset. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 51 When no Contract or an Implicit Contract is in place (e.g. after a Power Role Swap or Fast Role Swap) the Source (which can be either the DFP or UFP but must also be the VcONN Source) can communicate with a Cable Plug using SOP’ Packets in order to discover its characteristics (see Figure 2-2). During this phase all communication with the Cable Plug is initiated and controlled by the Source which acts to prevent conflicts between SOP* Packets. The Sink does not communicate with the Cable Plug, even if it is the DFP, and Discards any SOP’ Packets received. When an Explicit Contract is in place the VcONN Source (either the DFP or the UFP) can communicate with the Cable Plug(s) using SOP’/SOP’’ Packets (see Figure 2-2). During this phase all communication with the Cable Plug is initiated and controlled by the VCONN Source which acts to prevent conflicts between SOP* Packets. The Port that is not the VCONN Source does not communicate with the Cable Plug and does not recognize any SOP’/SOP’’ Packets received. Only the DFP, when acting as a VCONN Source, is allowed to send SOP* in order to control the entry and exiting of Modes and to manage Modal Operation. Figure 2-2 Example SOP’ Communication between VCONN Source and Cable Plug(s) VCONN Source VCONN C P a lu b g le 1 Electronically Marked Cable C P a lu b g le 1 (DFP/UFP) (SOP’) (SOP’’) SOP’ signaling SOP’’ signaling SOP signaling", "page_start": 51, "page_end": 51, "content_type": "text", "tables": [], "figures": [{"figure_id": "SOP Communication between the Port Partners is not recognized by the Cable Plug. Figure 2-2 outlines the usage of", "caption": "SOP Communication between the Port Partners is not recognized by the Cable Plug. Figure 2-2 outlines the usage of", "page": 51}, {"figure_id": "SOP’ Packets in order to discover its characteristics (see Figure 2-2). During this phase all communication with the", "caption": "SOP’ Packets in order to discover its characteristics (see Figure 2-2). During this phase all communication with the", "page": 52}, {"figure_id": "Plug(s) using SOP’/SOP’’ Packets (see Figure 2-2). During this phase all communication with the Cable Plug is", "caption": "Plug(s) using SOP’/SOP’’ Packets (see Figure 2-2). During this phase all communication with the Cable Plug is", "page": 52}, {"figure_id": "Figure 2-2 Example SOP’ Communication between VCONN Source and Cable Plug(s)", "caption": "Figure 2-2 Example SOP’ Communication between VCONN Source and Cable Plug(s)", "page": 52}], "subsections": [], "word_count": 439, "tags": ["communication", "cable"]}
{"section_id": "1", "title": "Cable Plug can be physically Attached to either the DFP or UFP.", "content": "Page 52 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 52, "page_end": 52, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["cable"]}
{"section_id": "2.6", "title": "Operational Overview", "content": "A USB Power Delivery Port supplying power is known as a Source and a Port consuming power is known as a Sink. There is only one Source Port and one Sink Port in each PD connection between Port Partners. At Attach the Source Port (the Port with Rp asserted see [USB Type-C 1.2]) is also the DFP and VCONN Source. At Attach the Sink Port (the Port with Rd asserted) is also the UFP and is not the VCONN Source. The Source/Sink roles, DFP/UFP roles and VCONN Source role can all subsequently be swapped orthogonally to each other. A Port that supports both Source and Sink roles is called a Dual-Role Power Port (DRP). A Port that supports both DFP and UFP roles is called a Dual-Role Data Port (DRD). When USB Communications Capability is supported in the DFP role then the Port will also be able to act as a USB Host. Similarly when USB Communications Capability is supported in the UFP role then the Port will also be able to act as a USB Device. The following sections describe the high level operation of ports taking on the roles of DFP, UFP, Source and Sink. These sections do not describe operation that is not allowed; however if a certain behavior is not described then it is probably not supported by this specification. For details of how PD maps to USB states in a PDUSB Device see Section 9.1.2.", "page_start": 53, "page_end": 52, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 240, "tags": []}
{"section_id": "2.6.1", "title": "Source Operation", "content": "The Source operates differently depending on Attachment status:  At Attach (no PD Connection or Contract): o For a Source-only Port the Source detects Sink Attachment. o For a DRP that toggles the Port becomes a Source Port on Attachment of a Sink o The Source then typically sets V to vSafe5V. BUS  Before PD Connection (no PD Connection or PD Contract): o Prior to sending Source_Capabilities Messages the Source can detect the type of cabling Attached and can alter its advertised capabilities depending on the type of cable detected:  The Source attempts to communicate with one of the Cable Plugs using SOP’ Packets. If the Cable Plug responds then communication takes place.  The default capability of a USB Type-C cable is 3A, but SOP’ Communication is used to discover other capabilities of the cable. o The Source periodically advertises its capabilities by sending Source_Capabilities Messages every tTypeCSendSourceCap.  Establishing PD Connection (no PD Connection or Contract): o Presence of a PD Capable Port Partner is detected either:  By receiving a GoodCRC Message in response to a Source_Capabilities Message.  By receiving Hard Reset Signaling.  Establishing Explicit Contract (PD Connection but no Explicit Contract or Implicit Contract after a Power Role Swap or Fast Role Swap): o The Source receives a Request Message from the Sink and responds with an Accept Message, if this is a Valid request, followed by a PS_RDY Message when its power supply is ready to source power at the agreed level. At this point an Explicit Contract has been agreed. o A DFP does not generate SOP’ or SOP’’ Packets, is not required to detect SOP’ or SOP’’ Packets and Discards them.  During PD Connection (Explicit Contract - PE_SRC_Ready State): o The Source processes and responds (if a response is required) to all Messages received and sends appropriate Messages whenever its Local Policy requires:  The Source informs the Sink whenever its capabilities change, by sending a Source_Capabilities Message.  The Source will always have Rp asserted on its CC wire. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 53  When this Port is a DRP the Source can initiate or receive a request for the exchange of power roles. After the Power Role Swap this Port will be a Sink and an Implicit Contract will be in place until an Explicit Contract is negotiated immediately afterwards.  When this Port is a DRD the Source can initiate or receive a request for an exchange of data roles. After a Data Role Swap the DFP (Host) becomes a UFP (Device). The Port remains a Source and the VCONN Source role (or not) remains unchanged.  The Source can initiate or receive a request for an exchange of VCONN Source. During a VCONN Swap VCONN is applied by both ends (make before break). The Port remains a Source and DFP/UFP roles remain unchanged. o The Source when it is the VCONN Source can communicate with a Cable Plug using SOP’ or SOP’’ Communication at any time it is not engaged in any other SOP Communications:  If SOP Packets are received by the Source, during SOP’ or SOP’’ Communication, the SOP’ or SOP’’ Communication is immediately terminated (the Cable Plug times out and does not retry)  If the Source needs to initiate an SOP Communication during an ongoing SOP’ or SOP’’ Communication (e.g. for a Capabilities change) then the SOP’ or SOP’’ Communications will be interrupted. o When the Source Port is also a DFP:  The Source can control the entry and exiting of modes in the Cable Plug(s) and control Modal Operation.  The Source can initiate Unstructured or Structured VDMs.  The Source can control the entry and exiting of modes in the Sink and control Modal Operation using Structured VDMs. o When the Source Port is part of a multi-port system:  Will issue GotoMin requests when the Power Reserve is needed.  Detach or Communications Failure: o A Source detects plug Detach and takes V down to vSafe5V within tSafe5V and vSafe0V within tSafe0V (i.e. BUS using USB Type-C Detach detection via CC). o When the Source detects the failure to receive a GoodCRC Message in response to a Message within tReceive:  Leads to a Soft Reset, within tSoftReset of the CRCReceiveTimer expiring.  If the soft reset process cannot be completed a Hard Reset will be issued within tHardReset of the CRCReceiveTimer to restore V to USB Default Operation within ~1-1.5s: BUS  When the Source is also the VCONN Source, VCONN will also be power cycled during the Hard Reset. o Receiving no response to further attempts at communication is interpreted by the Source as an error (see Error handling). o Errors during power transitions will automatically lead to a Hard Reset in order to restore power to default levels.  Error handling: o Protocol Errors are handled by a Soft_Reset Message issued by either Port Partner, that resets counters, timers and states, but does not change the negotiated voltage and current or the Port’s role (e.g. Source, DFP/UFP, VCONN Source) and does not cause an exit from Modal Operation. o Serious errors are handled by Hard Reset Signaling issued by either Port Partner. A Hard Reset:  Resets protocol as for a Soft Reset but also returns the power supply to USB Default Operation (vSafe0V or vSafe5V output) in order to protect the Sink.  Restores the Port’s data role to DFP.  When the Sink is the VCONN Source it removes VCONN then the Source Port is restored as the VCONN Source.  Causes all Active Modes to be exited such that the Source is no longer in Modal Operation. o After a Hard Reset it is expected that the Port Partner will respond within tNoResponse. If this does not occur then nHardResetCount further Hard Resets are carried out before the Source performs additional Error Recovery steps, as defined in [USB Type-C 1.2] , by entering the ErrorRecovery state. Page 54 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 53, "page_end": 54, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1012, "tags": ["source"]}
{"section_id": "2.6.2", "title": "Sink Operation", "content": " At Attach (no PD Connection or Contract): o Sink detects Source Attachment through the presence of vSafe5V. o For a DRP that toggles the Port becomes a Sink Port on Attachment of a Source. o Once the Sink detects the presence of vSafe5V on V it waits for a Source_Capabilities Message indicating BUS the presence of a PD capable Source. o If the Sink does not receive a Source_Capabilities Message within tTypeCSinkWaitCap then it issues Hard Reset Signaling in order to cause the Source Port to send a Source_Capabilities Message if the Source Port is PD capable. o The Sink does not generate SOP’ or SOP’’ Packets, is not required to detect SOP’ or SOP’’ Packets and does not recognize them.  Establishing PD Connection (no PD Connection or Contract): o The Sink receives a Source_Capabilities Message and responds with a GoodCRC Message. o The Sink does not generate SOP’ or SOP’’ Packets, is not required to detect SOP’ or SOP’’ Packets and Discards them.  Establishing Explicit Contract (PD Connection but no Explicit Contract or Implicit Contract after a Power Role Swap or Fast Role Swap): o The Sink receives a Source_Capabilities Message from the Source and responds with a Request Message. If this is a Valid request the Sink receives an Accept Message followed by a PS_RDY Message when the Source’s power supply is ready to source power at the agreed level. At this point the Source and Sink have entered into an Explicit Contract:  The Sink Port may request one of the capabilities offered by the Source, even if this is the vSafe5V output offered by [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2], in order to enable future power negotiation:  A Sink not requesting any capability with a Request Message results in an error.  A Sink unable to fully operate at the offered capabilities requests the default capability but indicates that it would prefer another power level and provide a physical indication of the failure to the end user (e.g. using an LED).  A Sink does not generate SOP’ or SOP’’ Packets, is not required to detect SOP’ or SOP’’ Packets and Discards them.  During PD Connection (Explicit Contract – PE_SNK_Ready state): o The Sink processes and responds (if a response is required) to all Messages received and sends appropriate Messages whenever its Local Policy requires. o A Sink whose power needs have changed indicates this to the Source with a new Request Message. The Sink Port can request one of the capabilities previously offered by the Source, even if this is the vSafe5V output offered by [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2], in order to enable future power negotiation:  Not requesting any capability with a Request Message results in an error.  A Sink unable to fully operate at the offered capabilities requests an offered capability but indicates a capability mismatch i.e. that it would prefer another power level also providing a physical indication of the failure to the End User (e.g. using an LED). o The Sink will always have Rd asserted on its CC wire. o When this Port is a DRP the Sink can initiate or receive a request for the exchange of power roles. After the Power Role Swap this Port will be a Source and an Implicit Contract will be in place until an Explicit Contract is negotiated immediately afterwards. o When this Port is a DRD the Sink can initiate or receive a request for an exchange of data roles. After a Data Role Swap the DFP (Host) becomes a UFP (Device). The Port remains a Sink and VCONN Source role (or not) remains unchanged. o The Sink can initiate or receive a request for an exchange of VCONN Source. During a VCONN Swap VCONN is applied by both ends (make before break). The Port remains a Sink and DFP/UFP roles remain unchanged. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 55 o The Sink when it is the VCONN Source can communicate with a Cable Plug using SOP’ or SOP’’ Communication at any time it is not engaged in any other SOP Communications:  If SOP Packets are received by the Sink, during SOP’ or SOP’’ Communication, the SOP’ or SOP’’ Communication is immediately terminated (the Cable Plug times out and does not retry)  If the Sink needs to initiate an SOP Communication during an ongoing SOP’ or SOP’’ Communication (e.g. for a Capabilities change) then the SOP’ or SOP’’ Communications will be interrupted.  When the Sink Port is also a DFP the Sink can control the entry and exiting of modes in the Cable Plug(s) and control Modal Operation. o When the Sink Port is also a DFP:  The Sink can initiate Unstructured or Structured VDMs.  The Sink can control the entry and exiting of modes in the Source and control Modal Operation using Structured VDMs.  Detach or Communications Failure: o A Sink detects the removal of V and interprets this as the end of the PD Connection: BUS  This is unless the vSafe0V is due to either a Hard Rest, Power Role Swap or Fast Role Swap. o A Sink detects plug removal and discharges V . BUS o When the Sink detects the failure to receive a GoodCRC Message in response to a Message within tReceive:  Leads to a Soft Reset, within tSoftReset of the CRCReceiveTimer expiring.  If the soft reset process cannot be completed a Hard Reset will be issued within tHardReset of the CRCReceiveTimer to restore V to USB Default Operation within ~1-1.5s. BUS  Receiving no response to further attempts at communication is interpreted by the Sink as an error (see Error handling). o Errors during power transitions will automatically lead to a Hard Reset in order to restore power to default levels.  Error handling: o Protocol Errors are handled by a Soft_Reset Message issued by either Port Partner, that resets counters, timers and states, but does not change the negotiated voltage and current or the Port’s role (e.g. Sink, DFP/UFP, VCONN Source) and does not cause an exit from Modal Operation. o Serious errors are handled by Hard Reset Signaling issued by either Port Partner. A Hard Reset:  resets protocol as for a Soft Reset but also returns the power supply to USB Default Operation (vSafe0V or vSafe5V output) in order to protect the Sink.  restores the Port’s data role to UFP.  when the Sink is the VCONN Source it removes VCONN then the Source Port is restored as the VCONN Source.  causes all Active Modes to be exited such that the Source is no longer in Modal Operation.  After a Hard Reset it is expected that the Port Partner will respond within tTypeCSinkWaitCap. If this does not occur then 2 further Hard Resets are carried out before the UFP stays in the PE_SNK_Wait_for_Capabilities state.", "page_start": 55, "page_end": 55, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1162, "tags": ["sink"]}
{"section_id": "2.6.3", "title": "Cable Plugs", "content": " Cable Plugs are powered when Vconn is present but are not aware of the status of the Contract.  Cable Plugs do not initiate message sequences and only respond to messages sent to them.  Detach or Communications Failure: o Communications can be interrupted at any time. o There is no communication timeout scheme between the DFP/UFP and Cable Plug. o The Cable Plug is ready to respond to potentially repeated requests.  Error handling: o The Cable Plug detects Hard Reset Signaling to determine that the Source and Sink have been reset and will need to reset itself (equivalent to a power cycle).  The Cable Plug cannot generate Hard Reset Signaling itself. Page 56 USB Power Delivery Specification Revision 3.0, Version 1.1  The Hard Reset process power cycles both VBUS and Vconn so this is expected to reset the Cable Plugs by itself. o A Cable Plug detects Cable Reset Signaling to determine that it will need to reset itself (equivalent to a power cycle). USB Power Delivery Specification Revision 3.0, Version 1.1 Page 57", "page_start": 56, "page_end": 57, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 179, "tags": ["cable"]}
{"section_id": "2.7", "title": "Architectural Overview", "content": "This logical architecture is not intended to be taken as an implementation architecture. An implementation architecture is, by definition, a part of product definition and is therefore outside of the scope of this specification. This section outlines the high level logical architecture of USB Power Delivery referenced throughout this specification. In practice various implementation options are possible based on many different possible types of PD device. PD devices can have many different configurations e.g. USB or non-USB communication, single versus multiple ports, dedicated power supplies versus supplies shared on multiple ports, hardware versus software based implementations etc. The architecture outlined in this section is therefore provided only for reference in order to indicate the high level logical model used by the PD specification. This architecture is used to identify the key concepts and also to indicate logical blocks and possible links between them. The USB Power Delivery architecture in each USB Power Delivery capable Device is made up of a number of major components. The communications stack seen in Figure 2-3 consists of:  A Device Policy Manager (see Section 8.2) that exists in all devices and manages USB Power Delivery resources within the device across one or more ports based on the Device’s Local Policy.  A Policy Engine (see Section 8.3) that exists in each USB Power Delivery Port implements the Local Policy for that Port.  A Protocol Layer (see Chapter 6) that enables Messages to be exchanged between a Source Port and a Sink Port.  A Physical Layer (see Chapter 5) that handles transmission and reception of bits on the wire and handles data transmission. Figure 2-3 USB Power Delivery Communications Stack Provider Consumer Device Policy Device Policy Manager Manager Policy Engine Policy Engine Protocol Protocol Physical Layer Physical Layer CC Additionally USB Power Delivery devices which can operate as USB devices can communicate over USB (see Figure 2-4). An Optional System Policy Manager (see Chapter 9) that resides in the USB Host communicates with the PD Device over USB, via the root Port and potentially over a tree of USB Hubs. The Device Policy Manager interacts with the USB interface in each device in order to provide and update PD related information in the USB domain. Note that a PD device is not required to have a USB device interface. Page 58 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 2-4 USB Power Delivery Communication Over USB USB Host System Policy Manager USB hub tree (optional) PD USB Device USB Interface (optional) Device Policy Manager Policy Engine Protocol Physical Layer CC Figure 2-5 shows the logical blocks between two Attached PD ports. In addition to the communication stack described above there are also:  For a Provider or Dual-Role Power Device: one or more Sources providing power to one or more ports.  For a Consumer or Dual-Role Power Device: a Sink consuming power.  A USB-C Port Control module (see Section4.4) that detects cable Attach/Detach as defined in [USB Type-C 1.2].  USB Power Delivery uses standard cabling as defined in [USB Type-C 1.2]. The Device Policy Manager talks to the communication stack, Source/Sink and the USB-C Port Control block in order to manage the resources in the Provider or Consumer. Figure 2-5 illustrates a Provider and a Consumer. Dual-Role Power Devices can be constructed by combining the elements of both Provider and Consumer into a single device. Providers can also contain multiple Source Ports each with their own communications stack and USB-C Port Control. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 59 Figure 2-5 High Level Architecture View Provider Consumer Device Policy Manager Device Policy Manager Source Port Sink Port Policy Engine Policy Engine Protocol Power Power Protocol Source(s) Sink USB-C Port USB-C Port Control Physical Layer Physical Layer Control BMC BMC USB Port USB Port CC VBUS VBUS CC VBUS CC", "page_start": 58, "page_end": 59, "content_type": "text", "tables": [], "figures": [{"figure_id": "The communications stack seen in Figure 2-3 consists of:", "caption": "The communications stack seen in Figure 2-3 consists of:", "page": 58}, {"figure_id": "Figure 2-3 USB Power Delivery Communications Stack", "caption": "Figure 2-3 USB Power Delivery Communications Stack", "page": 58}, {"figure_id": "Figure 2-4 USB Power Delivery Communication Over USB", "caption": "Figure 2-4 USB Power Delivery Communication Over USB", "page": 59}, {"figure_id": "Figure 2-5 shows the logical blocks between two Attached PD ports. In addition to the communication stack", "caption": "Figure 2-5 shows the logical blocks between two Attached PD ports. In addition to the communication stack", "page": 59}, {"figure_id": "Figure 2-5 illustrates a Provider and a Consumer. Dual-Role Power Devices can be constructed by combining the", "caption": "Figure 2-5 illustrates a Provider and a Consumer. Dual-Role Power Devices can be constructed by combining the", "page": 59}, {"figure_id": "Figure 2-5 High Level Architecture View", "caption": "Figure 2-5 High Level Architecture View", "page": 60}], "subsections": [], "word_count": 643, "tags": []}
{"section_id": "2.7.1", "title": "Policy", "content": "There are two possible levels of Policy: 1) System Policy applied system wide by the System Policy Manager across multiple Providers or Consumers. 2) Local Policy enforced on a Provider or Consumer by the Device Policy Manager. Policy comprises several logical blocks:  System Policy Manager (system wide).  Device Policy Manager (one per Provider or Consumer).  Policy Engine (one per Source or Sink Port).", "page_start": 60, "page_end": 59, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 66, "tags": ["policy"]}
{"section_id": "2.7.1.1", "title": "System Policy Manager", "content": "Since the USB Power Delivery protocol is essentially point to point, implementation of a System Policy requires communication by an additional data communication mechanism i.e. USB. The System Policy Manager monitors and controls System Policy between various Providers and Consumers connected via USB. The System Policy Manager resides in the USB Host and communicates via USB with the Device Policy Manager in each connected Device. Devices without USB data communication capability or are not data connected, will not be able to participate in System Policy. The System Policy Manager is Optional in any given system so USB Power Delivery Providers and Consumers can operate without it being present. This includes systems where the USB Host does not provide a System Policy Manager and can also include “headless” systems without any USB Host. In those cases where a Host is not present, USB Power Delivery is useful for charging purposes, or the powering of devices since useful USB functionality is not possible. Where there is a USB Host but no System Policy Manager, Providers and Consumers can negotiate power between themselves, independently of USB power rules, but are more limited in terms of the options available for managing power. Page 60 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 60, "page_end": 60, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 208, "tags": ["policy"]}
{"section_id": "2.7.1.2", "title": "Device Policy Manager", "content": "The Device Policy Manager provides mechanisms to monitor and control the USB Power Delivery system within a particular Consumer or Provider. The Device Policy Manager enables Local Policies to be enforced across the system by communication with the System Policy Manager. Local Policies are enacted on a per Port basis by the Device Policy Manager’s control of the Source/Sink Ports and by communication with the Policy Engine and USB-C Port Control for that Port.", "page_start": 61, "page_end": 60, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 74, "tags": ["devices", "policy"]}
{"section_id": "2.7.1.3", "title": "Policy Engine", "content": "Providers and Consumers are free to implement their own Local Policies on their directly connected Source or Sink Ports. These will be supported by negotiation and status mechanisms implemented by the Policy Engine for that Port. The Policy Engine interacts directly with the Device Policy Manager in order to determine the present Local Policy to be enforced. The Policy Engine will also be informed by the Device Policy Manager whenever there is a change in Local Policy (e.g. a capabilities change).", "page_start": 61, "page_end": 60, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 81, "tags": ["policy"]}
{"section_id": "2.7.2", "title": "Message Formation and Transmission", "content": "", "page_start": 61, "page_end": 60, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["messages"]}
{"section_id": "2.7.2.1", "title": "Protocol Layer", "content": "The Protocol Layer forms the Messages used to communicate information between a pair of ports. It is responsible for forming Capabilities Messages, requests and acknowledgements. Additionally it forms Messages used to swap roles and maintain presence. It receives inputs from the Policy Engine indicating which Messages to send and indicates the responses back to the Policy Engine. The basic protocol uses a push model where the Provider pushes it capabilities to the Consumer that in turn responds with a request based on the offering. However, the Consumer can asynchronously request the Provider’s present capabilities and can select another voltage/current. Extended Messages of up to a Data Size of MaxExtendedMsgLen can be sent and received provided the Protocol Layer determines that both Port Partners support this capability. When one of both Port Partners do not support Extended Messages of Data Size greater than MaxExtendedMsgLegacyLen then the Protocol Layer supports a Chunking mechanism to break larger Messages into smaller Chunks of size MaxExtendedMsgChunkLen.", "page_start": 61, "page_end": 60, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 161, "tags": ["protocol"]}
{"section_id": "2.7.2.2", "title": "PHY Layer", "content": "The PHY Layer is responsible for sending and receiving Messages across the USB Type-C CC wire and for managing data. It tries to avoid collisions on the wire, recovering from them when they occur. It also detects errors in the Messages using a CRC.", "page_start": 61, "page_end": 60, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 44, "tags": []}
{"section_id": "2.7.3", "title": "Collision Avoidance", "content": "", "page_start": 61, "page_end": 60, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["avoidance"]}
{"section_id": "2.7.3.1", "title": "Policy Engine", "content": "The Policy Engine in a Source will indicate to the Protocol Layer the start and end of each Atomic Message Sequence (AMS) that the Source initiates. The Policy Engine in a Sink will indicate to the Protocol Layer the start of each AMS the Sink initiates. This enables co-ordination of AMS initiation between the Port Partners.", "page_start": 61, "page_end": 60, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 56, "tags": ["policy"]}
{"section_id": "2.7.3.2", "title": "Protocol Layer", "content": "The Protocol Layer in the Source will request the PHY to set the Rp value to SinkTxOk to indicate that the Sink can initiate an AMS by sending the first Message in the sequence. The Protocol Layer in the Source will request the PHY to set the Rp value to SinkTxNG to indicate that the Sink cannot initiate an AMS since the Source is about to initiate an AMS. The Protocol Layer in the Sink, when the Policy Engine indicates that an AMS is being initiated, will wait for the Rp value to be set to SinkTxOk before initiating the AMS by sending the first Message in the sequence. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 61", "page_start": 61, "page_end": 61, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 119, "tags": ["protocol"]}
{"section_id": "2.7.3.3", "title": "PHY Layer", "content": "The PHY Layer in the Source will set the Rp value to either SinkTxOk or SinkTxNG as directed by the Protocol Layer. The PHY Layer in the Sink will detect the present Rp value and inform the Protocol Layer.", "page_start": 62, "page_end": 61, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 39, "tags": []}
{"section_id": "2.7.4", "title": "Power supply", "content": "", "page_start": 62, "page_end": 61, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power"]}
{"section_id": "2.7.4.1", "title": "Source", "content": "Each Provider will contain one or more Sources that are shared between one or more ports. These Sources are controlled by the Local Policy. Sources start up in USB Default Operation where the Port applies vSafe0V or vSafe5V on V and return to this state on Detach or after a Hard Reset. If the Source applies vSafe0V as their default, it BUS detects Attach events and transitions its output to vSafe5V upon detecting an Attach.", "page_start": 62, "page_end": 61, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 75, "tags": ["source"]}
{"section_id": "2.7.4.2", "title": "Sink", "content": "Consumers are assumed to have one Sink connected to a Port. This Sink is controlled by Local Policy. Sinks start up in USB Default Operation where the Port can operate at vSafe5V with USB default specified current levels and return to this state on Detach or after a Hard Reset.", "page_start": 62, "page_end": 61, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 50, "tags": ["sink"]}
{"section_id": "2.7.4.3", "title": "Dual-Role Power Ports", "content": "Dual-Role Power Ports have the ability to operate as either a Source or a Sink and to swap between the two roles using Power Role Swap or Fast Role Swap.", "page_start": 62, "page_end": 61, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 30, "tags": ["power"]}
{"section_id": "2.7.4.4", "title": "Dead Battery or Lost Power Detection", "content": "[USB Type-C 1.2] defines mechanisms intended to communicate with and charge a Sink or DRP with a Dead Battery.", "page_start": 62, "page_end": 61, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["power"]}
{"section_id": "2.7.5", "title": "DFP/UFP", "content": "", "page_start": 62, "page_end": 61, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2.7.5.1", "title": "Downstream Facing Port (DFP)", "content": "The Downstream Facing Port or DFP is equivalent in the USB topology to the USB A-Port. The DFP will also correspond to the USB Host but only if USB Communication is supported while acting as a DFP. Products such as Wall Warts can be a DFP while not having USB Communication capability. The DFP also acts as the bus master when controlling alternate mode operation.", "page_start": 62, "page_end": 61, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 65, "tags": []}
{"section_id": "2.7.5.2", "title": "Upstream Facing Port (UFP)", "content": "The Upstream Facing Port or UFP is equivalent in the USB topology to the USB B-Port. The UFP will also correspond to the USB Device but only if USB Communication is supported while acting as a UFP. Products which charge can be a UFP while not having USB Communication capability.", "page_start": 62, "page_end": 61, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 50, "tags": []}
{"section_id": "2.7.5.3", "title": "Dual-Role Data Ports", "content": "Dual-Role Data Ports have the ability to operate as either a DFP or a UFP and to swap between the two roles using Data Role Swap. Note that products can be Dual-Role Data Ports without being Dual-Role Power ports i.e. they can switch logically between DFP and UFP roles even if they are Source-only or Sink-only Ports.", "page_start": 62, "page_end": 61, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 57, "tags": ["data"]}
{"section_id": "2.7.6", "title": "VCONN Source", "content": "One Port, initially the Source Port, is the VCONN Source. The Cable Plugs use this supply to determine which Cable Plug is SOP’. The responsibility for sourcing VCONN can be swapped between the Source and Sink Ports in a make before break fashion to ensure that the Cable Plugs continue to be powered. To ensure reliable communication with the Cable Plugs only the VCONN Source is permitted to communicate with the Cable Plugs. Prior to a Power Role Swap, Data Role Swap or Fast Role Swap each Port needs to ensure that it is the VCONN Source if it needs to communicate with the Cable Plugs after the swap. Page 62 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 62, "page_end": 62, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 119, "tags": ["source"]}
{"section_id": "2.7.7", "title": "Cable and Connectors", "content": "", "page_start": 63, "page_end": 62, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["cable"]}
{"section_id": "2.7.7.1", "title": "USB-C Port Control", "content": "The USB-C Port Control block provides mechanisms to inform the Device Policy Manager of cable Attach/Detach events. The USB Power Delivery specification assumes certified USB cables and associated detection mechanisms as defined in the [USB Type-C 1.2] specification.", "page_start": 63, "page_end": 62, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": ["control"]}
{"section_id": "2.7.8", "title": "Interactions between Non-PD, BC and PD devices", "content": "USB Power Delivery only operates when two USB Power Delivery devices are directly connected. When a Device finds itself a mixed environment, where the other device does not support the USB Power Delivery Specification, the existing rules on supplying vSafe5V as defined in the [USB 2.0], [USB 3.1], [USBBC 1.2] or [USB Type-C 1.2] specifications are applied. There are two primary cases to consider:  The Host (DFP/Source) is non-PD and as such will not send any advertisements. An Attached PD capable Device will not see any advertisements and operates using the rules defined in the [USB 2.0], [USB 3.1], [USBBC 1.2] or [USB Type-C 1.2] specifications.  The Device (UFP/Sink) is non-PD and as such will not see any advertisements and therefore will not respond. The Host (DFP/Source) will continue to supply vSafe5V to V as specified in the [USB 2.0], [USB 3.1], [USBBC 1.2] or BUS [USB Type-C 1.2] specifications.", "page_start": 63, "page_end": 62, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 152, "tags": ["devices"]}
{"section_id": "2.7.9", "title": "Power Rules", "content": "Power Rules define voltages and current ranges that are offered by USB Power Delivery Sources and used by a USB Power Delivery Sink for a given value of PD Power. See Section 10 for further details. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 63 3. USB Type-A and USB Type-B Cable Assemblies and Connectors This section has been Deprecated. Please refer to [USBPD 2.0] for details of cables and connectors used in scenarios utilizing the BFSK Signaling scheme in conjunction with USB Type-A or USB Type-B connectors. Page 64 USB Power Delivery Specification Revision 3.0, Version 1.1 4. Electrical Requirements This chapter covers the platform’s electrical requirements for implementing USB Power Delivery.", "page_start": 63, "page_end": 64, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 114, "tags": ["power"]}
{"section_id": "4.1", "title": "Interoperability with other USB Specifications", "content": "USB Power Delivery May be implemented alongside the [USB 2.0], [USB 3.1], [USBBC 1.2] and [USB Type-C 1.2] specifications. In the case where a Device requests power via the Battery Charging Specification and then the USB Power Delivery Specification, it Shall follow the USB Power Delivery Specification until the Port Pair is Detached or there is a Hard Reset. If the USB Power Delivery connection is lost, the Port Shall return to its default state, see Section 6.8.2.", "page_start": 65, "page_end": 64, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 78, "tags": []}
{"section_id": "4.2", "title": "Dead Battery Detection / Unpowered Port Detection", "content": "Dead Battery/Unpowered operation is when a USB Device needs to provide power to a USB Host under the circumstances where the USB Host:  Has a Dead Battery that requires charging or  Has lost its power source or  Does not have a power source or  Does not want to provide power. Dead Battery charging operation for connections between USB Type-C connectors is defined in [USB Type-C 1.2].", "page_start": 65, "page_end": 64, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 70, "tags": ["power"]}
{"section_id": "4.3", "title": "Cable IR Ground Drop (IR Drop)", "content": "Every PD Sink Port capable of USB communications can be susceptible to unreliable USB communication if the voltage drop across ground falls outside of the acceptable common mode range for the USB Hi-Speed transceivers data lines due to excessive current draw. Certified USB cabling is specified such that such errors don’t typically occur (See [USB Type-C 1.2]).", "page_start": 65, "page_end": 64, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 57, "tags": ["cable"]}
{"section_id": "4.4", "title": "Cable Type Detection", "content": "Standard USB Type-C cable assemblies are rated for PD voltages higher than vSafe5V and current levels of at least 3A (See [USB Type-C 1.2]). The Source Shall limit maximum capabilities it offers so as not to exceed the capabilities of the type of cabling detected. Sources Shall detect the type of Attached cable and limit the Capabilities they offer based on the current carrying capability of the cable determined by the Cable capabilities determined using the Discover Identity Command (see Section 6.4.4.2) sent using SOP’ Communication (see Section 2.5) to the Cable Plug. The Cable VDO returned as part of the Discover Identity Command details the maximum current and voltage values that Shall be negotiated for a given cable as part of an Explicit Contract. The cable detection process is usually run when the Source is powered up, after a Power Role Swap or Fast Role Swap or when power is applied to a Sink. The exact method used to detect these events is up to the manufacturer and Shall meet the following requirements:  Sources Shall run the cable detection process prior to the Source sending Source_Capabilities Messages offering currents in excess of 3A and/or voltages in excess of 20V.  Sinks with USB Type-C connectors Shall select Capabilities from the offered Source Capabilities assuming that the Source has already determined the Capabilities of the cable. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 65 5. Physical Layer", "page_start": 65, "page_end": 65, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 240, "tags": ["cable"]}
{"section_id": "5.1", "title": "Physical Layer Overview", "content": "The Physical Layer (PHY Layer) defines the signaling technology for USB Power Delivery. This chapter defines the electrical requirements and parameters of the PD Physical Layer required for interoperability between USB PD devices.", "page_start": 66, "page_end": 65, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": []}
{"section_id": "5.2", "title": "Physical Layer Functions", "content": "The USB PD Physical Layer consists of a pair of transmitters and receivers that communicate across a single signal wire (CC). All communication is half duplex. The PHY Layer practices collision avoidance to minimize communication errors on the channel. The transmitter performs the following functions:  Receive packet data from the protocol layer.  Calculate and append a CRC.  Encode the packet data including the CRC (i.e. the payload).  Transmit the Packet (Preamble, SOP*, payload, CRC and EOP) across the channel using Biphase Mark Coding (BMC) over CC. The receiver performs the following functions:  Recover the clock and lock onto the Packet from the Preamble.  Detect the SOP*.  Decode the received data including the CRC.  Detect the EOP and validate the CRC: o If the CRC is Valid, deliver the packet data to the protocol layer. o If the CRC is Invalid, flush the received data. Page 66 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 66, "page_end": 66, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 162, "tags": []}
{"section_id": "5.3", "title": "Symbol Encoding", "content": "Except for the Preamble, all communications on the line Shall be encoded with a line code to ensure a reasonable level of DC-balance and a suitable number of transitions. This encoding makes receiver design less complicated and allows for more variations in the receiver design. 4b5b line code Shall be used. This encodes 4-bit data to 5-bit symbols for transmission and decodes 5-bit symbols to 4-bit data for consumption by the receiver. The 4b5b code provides data encoding along with special symbols. Special symbols are used to signal Hard Reset, and delineate packet boundaries. Table 5-1 4b5b Symbol Encoding Table Name 4b 5b Symbol Description", "page_start": 67, "page_end": 66, "content_type": "text", "tables": [{"table_id": "Table 5-1 4b5b Symbol Encoding Table", "caption": "Table 5-1 4b5b Symbol Encoding Table", "page": 67, "data": []}], "figures": [], "subsections": [], "word_count": 105, "tags": []}
{"section_id": "0", "title": "0000 11110 hex data 0", "content": "", "page_start": 67, "page_end": 66, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["data"]}
{"section_id": "1", "title": "0001 01001 hex data 1", "content": "", "page_start": 67, "page_end": 66, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["data"]}
{"section_id": "2", "title": "0010 10100 hex data 2", "content": "", "page_start": 67, "page_end": 66, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["data"]}
{"section_id": "3", "title": "0011 10101 hex data 3", "content": "", "page_start": 67, "page_end": 66, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["data"]}
{"section_id": "4", "title": "0100 01010 hex data 4", "content": "", "page_start": 67, "page_end": 66, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["data"]}
{"section_id": "5", "title": "0101 01011 hex data 5", "content": "", "page_start": 67, "page_end": 66, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["data"]}
{"section_id": "6", "title": "0110 01110 hex data 6", "content": "", "page_start": 67, "page_end": 66, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["data"]}
{"section_id": "7", "title": "0111 01111 hex data 7", "content": "", "page_start": 67, "page_end": 66, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["data"]}
{"section_id": "8", "title": "1000 10010 hex data 8", "content": "", "page_start": 67, "page_end": 66, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["data"]}
{"section_id": "9", "title": "1001 10011 hex data 9", "content": "A 1010 10110 hex data A B 1011 10111 hex data B C 1100 11010 hex data C D 1101 11011 hex data D E 1110 11100 hex data E F 1111 11101 hex data F Sync-1 K-code 11000 Startsynch #1 Sync-2 K-code 10001 Startsynch #2 RST-1 K-code 00111 Hard Reset #1 RST-2 K-code 11001 Hard Reset #2 EOP K-code 01101 EOP End Of Packet Reserved Error 00000 Shall Not be used Reserved Error 00001 Shall Not be used Reserved Error 00010 Shall Not be used Reserved Error 00011 Shall Not be used Reserved Error 00100 Shall Not be used Reserved Error 00101 Shall Not be used Sync-3 K-code 00110 Startsynch #3 Reserved Error 01000 Shall Not be used Reserved Error 01100 Shall Not be used Reserved Error 10000 Shall Not be used Reserved Error 11111 Shall Not be used USB Power Delivery Specification Revision 3.0, Version 1.1 Page 67", "page_start": 67, "page_end": 67, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 150, "tags": ["data"]}
{"section_id": "5.4", "title": "Ordered Sets", "content": "Ordered sets Shall be interpreted according to Figure 5-1. An ordered set consists of 4 K-codes sent as shown in Figure 5-1. Figure 5-1 Interpretation of ordered sets A list of the ordered sets used by USB Power Delivery can be seen in Table 5-2. SOP* is a generic term used in place of SOP/SOP’/SOP’’. Table 5-2 Ordered Sets Ordered Set Reference Cable Reset Section 5.6.5 Hard Reset Section 5.6.4 SOP Section 5.6.1.2.1 SOP’ Section 5.6.1.2.2 SOP’_Debug Section 5.6.1.2.4 SOP’’ Section 5.6.1.2.3 SOP’’_Debug Section 5.6.1.2.5 The receiver Shall search for all four K-codes and when it finds either three out of four or all four in the correct place, it May interpret it as a Valid ordered set (see Table 5-3). Table 5-3 Validation of Ordered Sets 1st code 2nd code 3rd code 4th code Valid Corrupt K-code K-code K-code Valid K-code Corrupt K-code K-code Valid K-code K-code Corrupt K-code Valid K-code K-code K-code Corrupt Valid (perfect) K-code K-code K-code K-code Invalid (example) K-code Corrupt K-code Corrupt Page 68 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 68, "page_end": 68, "content_type": "text", "tables": [{"table_id": "A list of the ordered sets used by USB Power Delivery can be seen in Table 5-2. SOP* is a generic term used in place of", "caption": "A list of the ordered sets used by USB Power Delivery can be seen in Table 5-2. SOP* is a generic term used in place of", "page": 68, "data": []}, {"table_id": "Table 5-2 Ordered Sets", "caption": "Table 5-2 Ordered Sets", "page": 68, "data": []}, {"table_id": "it May interpret it as a Valid ordered set (see Table 5-3).", "caption": "it May interpret it as a Valid ordered set (see Table 5-3).", "page": 68, "data": []}, {"table_id": "Table 5-3 Validation of Ordered Sets", "caption": "Table 5-3 Validation of Ordered Sets", "page": 68, "data": []}], "figures": [{"figure_id": "Ordered sets Shall be interpreted according to Figure 5-1.", "caption": "Ordered sets Shall be interpreted according to Figure 5-1.", "page": 68}, {"figure_id": "An ordered set consists of 4 K-codes sent as shown in Figure 5-1.", "caption": "An ordered set consists of 4 K-codes sent as shown in Figure 5-1.", "page": 68}, {"figure_id": "Figure 5-1 Interpretation of ordered sets", "caption": "Figure 5-1 Interpretation of ordered sets", "page": 68}], "subsections": [], "word_count": 177, "tags": []}
{"section_id": "5.5", "title": "Transmitted Bit Ordering", "content": "This section describes the order of bits on the wire that Shall be used when transmitting data of varying sizes. Table 5-4 shows the different data sizes that are possible. Figure 5-2 shows the transmission order that Shall be followed. Table 5-4 Data Size Unencoded Encoded Byte 8-bits 10-bits Word 16-bits 20- bits DWord 32-bits 40-bits Figure 5-2 Transmit Order for Various Sizes of Data USB Power Delivery Specification Revision 3.0, Version 1.1 Page 69", "page_start": 69, "page_end": 69, "content_type": "text", "tables": [{"table_id": "Table 5-4 Data Size", "caption": "Table 5-4 Data Size", "page": 69, "data": []}], "figures": [{"figure_id": "Figure 5-2 shows the transmission order that Shall be followed.", "caption": "Figure 5-2 shows the transmission order that Shall be followed.", "page": 69}, {"figure_id": "Figure 5-2 Transmit Order for Various Sizes of Data", "caption": "Figure 5-2 Transmit Order for Various Sizes of Data", "page": 69}], "subsections": [], "word_count": 75, "tags": []}
{"section_id": "5.6", "title": "Packet Format", "content": "The packet format Shall consist of a Preamble, an SOP*, (see Section 5.6.1.2), packet data including the Message Header, a CRC and an EOP (see Section 5.6.1.5). The packet format is shown in Figure 5-3 and indicates which parts of the packet Shall be 4b/5b encoded. Once 4b/5b encoded, the entire Packet Shall be transmitted using BMC over CC. Note that all the bits in the Packet, including the Preamble, are BMC encoded. See Section 6.2.1 for more details of the Packet construction for Control, Data and Extended Messages. Figure 5-3 USB Power Delivery Packet Format SOP* (Start Message ... Preamble(training for receiver) Byte 0 Byte 1 Of Packet) Header ... EOP (End Of Byte n-1 Byte n CRC Packet) LEGEND: Training sequence provided by the Provided by the Physical Provided by the Protocol Physical layer, not encoded with 4b5b layer, encoded with 4b5b layer, encoded with 4b5b", "page_start": 70, "page_end": 69, "content_type": "text", "tables": [], "figures": [{"figure_id": "Header, a CRC and an EOP (see Section 5.6.1.5). The packet format is shown in Figure 5-3 and indicates which parts of", "caption": "Header, a CRC and an EOP (see Section 5.6.1.5). The packet format is shown in Figure 5-3 and indicates which parts of", "page": 70}, {"figure_id": "Figure 5-3 USB Power Delivery Packet Format", "caption": "Figure 5-3 USB Power Delivery Packet Format", "page": 70}], "subsections": [], "word_count": 148, "tags": []}
{"section_id": "5.6.1", "title": "Packet Framing", "content": "The transmission starts with a Preamble that is used to allow the receiver to lock onto the carrier. It is followed by a SOP* (Start of Packet). The packet is terminated with an EOP (End of Packet) K-code.", "page_start": 70, "page_end": 69, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": []}
{"section_id": "5.6.1.1", "title": "Preamble", "content": "The Preamble is used to achieve lock in the receiver by presenting an alternating series of \"0s\" and \"1s\", so the average frequency is the carrier frequency. Unlike the rest of the packet, the Preamble Shall Not be 4b/5b encoded. The Preamble Shall consist of a 64-bit sequence of alternating 0s and 1s. The Preamble Shall start with a \"0\" and Shall end with a \"1\".", "page_start": 70, "page_end": 69, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 66, "tags": []}
{"section_id": "5.6.1.2", "title": "Start of Packet Sequences", "content": "", "page_start": 70, "page_end": 69, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "5.6.1.2.1", "title": "Start of Packet Sequence (SOP)", "content": "SOP is an ordered set. The SOP ordered set is defined as: three Sync-1 K-codes followed by one Sync-2 K-code (see Table 5-5). Table 5-5 SOP ordered set K-code number K-code in code table", "page_start": 70, "page_end": 69, "content_type": "text", "tables": [{"table_id": "Table 5-5).", "caption": "Table 5-5).", "page": 70, "data": []}, {"table_id": "Table 5-5 SOP ordered set", "caption": "Table 5-5 SOP ordered set", "page": 70, "data": []}], "figures": [], "subsections": [], "word_count": 34, "tags": []}
{"section_id": "1", "title": "Sync-1", "content": "", "page_start": 70, "page_end": 69, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "Sync-1", "content": "", "page_start": 70, "page_end": 69, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "Sync-1", "content": "", "page_start": 70, "page_end": 69, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "Sync-2", "content": "A Power Delivery Capable Source or Sink Shall be able to detect and communicate with packets using SOP. If a Valid SOP is not detected (see Table 5-3) then the whole transmission Shall be Discarded. Sending and receiving of SOP Packets Shall be limited to PD Capable Ports on PDUSB Hosts and PDUSB Devices. Cable Plugs Shall neither send nor receive SOP Packets. Note that PDUSB Devices, even if they have the physical form of a cable (e.g. AMAs), are still required to respond to SOP Packets. Page 70 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 70, "page_end": 70, "content_type": "text", "tables": [{"table_id": "SOP is not detected (see Table 5-3) then the whole transmission Shall be Discarded.", "caption": "SOP is not detected (see Table 5-3) then the whole transmission Shall be Discarded.", "page": 70, "data": []}], "figures": [], "subsections": [], "word_count": 97, "tags": []}
{"section_id": "5.6.1.2.2", "title": "Start of Packet Sequence Prime (SOP’)", "content": "The SOP’ ordered set is defined as: two Sync-1 K-codes followed by two Sync-3 K-codes (see Table 5-6). Table 5-6 SOP’ ordered set K-code number K-code in code table", "page_start": 71, "page_end": 70, "content_type": "text", "tables": [{"table_id": "The SOP’ ordered set is defined as: two Sync-1 K-codes followed by two Sync-3 K-codes (see Table 5-6).", "caption": "The SOP’ ordered set is defined as: two Sync-1 K-codes followed by two Sync-3 K-codes (see Table 5-6).", "page": 71, "data": []}, {"table_id": "Table 5-6 SOP’ ordered set", "caption": "Table 5-6 SOP’ ordered set", "page": 71, "data": []}], "figures": [], "subsections": [], "word_count": 29, "tags": []}
{"section_id": "1", "title": "Sync-1", "content": "", "page_start": 71, "page_end": 70, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "Sync-1", "content": "", "page_start": 71, "page_end": 70, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "Sync-3", "content": "", "page_start": 71, "page_end": 70, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "Sync-3", "content": "A Cable Plug capable of SOP’ Communications Shall only detect and communicate with packets starting with SOP’. A Port needing to communicate with a Cable Plug capable of SOP’ Communications, Attached between a Port Pair will be able to communicate using both packets starting with SOP’ to communicate with the Cable Plug and starting with SOP to communicate with its Port Partner. For a Cable Plug supporting SOP’ Communications, if a Valid SOP’ is not detected (see Table 5-3) then the whole transmission Shall be Discarded. For a Port supporting SOP’ Communications if a Valid SOP or SOP’ is not detected (see Table 5-3) then the whole transmission Shall be Discarded. When there is no Explicit Contract or an Implicit Contract in place a Sink Shall Not send SOP’ Packets and Shall Discard all packets starting with SOP’.", "page_start": 71, "page_end": 70, "content_type": "text", "tables": [{"table_id": "For a Cable Plug supporting SOP’ Communications, if a Valid SOP’ is not detected (see Table 5-3) then the whole", "caption": "For a Cable Plug supporting SOP’ Communications, if a Valid SOP’ is not detected (see Table 5-3) then the whole", "page": 71, "data": []}, {"table_id": "(see Table 5-3) then the whole transmission Shall be Discarded. When there is no Explicit Contract or an Implicit", "caption": "(see Table 5-3) then the whole transmission Shall be Discarded. When there is no Explicit Contract or an Implicit", "page": 71, "data": []}], "figures": [], "subsections": [], "word_count": 138, "tags": []}
{"section_id": "5.6.1.2.3", "title": "Start of Packet Sequence Double Prime (SOP’’)", "content": "The SOP’’ ordered set is defined as the following sequence of K-codes: Sync-1, Sync-3, Sync-1, Sync-3 (see Table 5-7). Table 5-7 SOP’’ ordered set K-code number K-code in code table", "page_start": 71, "page_end": 70, "content_type": "text", "tables": [{"table_id": "The SOP’’ ordered set is defined as the following sequence of K-codes: Sync-1, Sync-3, Sync-1, Sync-3 (see Table 5-7).", "caption": "The SOP’’ ordered set is defined as the following sequence of K-codes: Sync-1, Sync-3, Sync-1, Sync-3 (see Table 5-7).", "page": 71, "data": []}, {"table_id": "Table 5-7 SOP’’ ordered set", "caption": "Table 5-7 SOP’’ ordered set", "page": 71, "data": []}], "figures": [], "subsections": [], "word_count": 30, "tags": []}
{"section_id": "1", "title": "Sync-1", "content": "", "page_start": 71, "page_end": 70, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "Sync-3", "content": "", "page_start": 71, "page_end": 70, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "Sync-1", "content": "", "page_start": 71, "page_end": 70, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "Sync-3", "content": "A Cable Plug capable of SOP’’ Communication, Shall have a SOP’ Communication capability in the other Cable Plug. No cable Shall only support SOP’’ Communication. A Cable Plug to which SOP’’ Communication is assigned Shall only detect and communicate with packets starting with SOP’’ and Shall Discard any other packets. A Port needing to communicate with such a Cable Plug, Attached between a Port Pair will be able to communicate using packets starting with SOP’ and SOP’’ to communicate with the Cable Plugs and packets starting with SOP to communicate with its Port Partner. A Port which supports SOP’’ Communication Shall also support SOP’ Communication and Shall co-ordinate SOP* Communication so as to avoid collisions. For the Cable Plug supporting SOP’’ Communication, if a Valid SOP’’ is not detected (see Table 5-3) then the whole transmission Shall be Discarded. For the Port if a Valid SOP* is not detected (see Table 5-3) then the whole transmission Shall be Discarded.", "page_start": 71, "page_end": 70, "content_type": "text", "tables": [{"table_id": "For the Cable Plug supporting SOP’’ Communication, if a Valid SOP’’ is not detected (see Table 5-3) then the whole", "caption": "For the Cable Plug supporting SOP’’ Communication, if a Valid SOP’’ is not detected (see Table 5-3) then the whole", "page": 71, "data": []}, {"table_id": "transmission Shall be Discarded. For the Port if a Valid SOP* is not detected (see Table 5-3) then the whole", "caption": "transmission Shall be Discarded. For the Port if a Valid SOP* is not detected (see Table 5-3) then the whole", "page": 71, "data": []}], "figures": [], "subsections": [], "word_count": 159, "tags": []}
{"section_id": "5.6.1.2.4", "title": "Start of Packet Sequence Prime Debug (SOP’_Debug)", "content": "The SOP’_Debug ordered set is defined as the following sequence of K-codes: Sync-1, RST-2, RST-2, Sync-3 (see Table 5-8). The usage of this Ordered Set is presently undefined. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 71 Table 5-8 SOP’_Debug ordered set K-code number K-code in code table", "page_start": 71, "page_end": 71, "content_type": "text", "tables": [{"table_id": "The SOP’_Debug ordered set is defined as the following sequence of K-codes: Sync-1, RST-2, RST-2, Sync-3 (see Table", "caption": "The SOP’_Debug ordered set is defined as the following sequence of K-codes: Sync-1, RST-2, RST-2, Sync-3 (see Table", "page": 71, "data": []}, {"table_id": "Table 5-8 SOP’_Debug ordered set", "caption": "Table 5-8 SOP’_Debug ordered set", "page": 72, "data": []}], "figures": [], "subsections": [], "word_count": 49, "tags": []}
{"section_id": "1", "title": "Sync-1", "content": "", "page_start": 72, "page_end": 71, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "RST-2", "content": "", "page_start": 72, "page_end": 71, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "RST-2", "content": "", "page_start": 72, "page_end": 71, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "Sync-3", "content": "", "page_start": 72, "page_end": 71, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "5.6.1.2.5", "title": "Start of Packet Sequence Double Prime Debug (SOP’’_Debug)", "content": "The SOP’’_Debug ordered set is defined as the following sequence of K-codes: Sync-1, RST-2, Sync-3, Sync-2 (see Table 5-9). The usage of this Ordered Set is presently undefined. Table 5-9 SOP’’_Debug ordered set K-code number K-code in code table", "page_start": 72, "page_end": 71, "content_type": "text", "tables": [{"table_id": "Table 5-9). The usage of this Ordered Set is presently undefined.", "caption": "Table 5-9). The usage of this Ordered Set is presently undefined.", "page": 72, "data": []}, {"table_id": "Table 5-9 SOP’’_Debug ordered set", "caption": "Table 5-9 SOP’’_Debug ordered set", "page": 72, "data": []}], "figures": [], "subsections": [], "word_count": 39, "tags": []}
{"section_id": "1", "title": "Sync-1", "content": "", "page_start": 72, "page_end": 71, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "RST-2", "content": "", "page_start": 72, "page_end": 71, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "Sync-3", "content": "", "page_start": 72, "page_end": 71, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "Sync-2", "content": "", "page_start": 72, "page_end": 71, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "5.6.1.3", "title": "Packet Payload", "content": "The packet payload is delivered from the protocol layer (Section 6.2) and Shall be encoded with the hex data codes from Table 5-1.", "page_start": 72, "page_end": 71, "content_type": "text", "tables": [{"table_id": "from Table 5-1.", "caption": "from Table 5-1.", "page": 72, "data": []}], "figures": [], "subsections": [], "word_count": 23, "tags": []}
{"section_id": "5.6.1.4", "title": "CRC", "content": "The CRC Shall be inserted just after the payload. It is described in Section 5.6.2.", "page_start": 72, "page_end": 71, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": []}
{"section_id": "5.6.1.5", "title": "End of Packet (EOP)", "content": "The end of packet marker Shall be a single EOP K-code as defined in Table 5-1. This Shall mark the end of the CRC. After the EOP, the CRC-residual Shall be checked. If the CRC is not good, the whole transmission Shall be Discarded, if it is good, the packet Shall be delivered to the Protocol Layer. Note an EOP May be used to prematurely terminate a Packet e.g. before sending Hard Reset Signaling.", "page_start": 72, "page_end": 71, "content_type": "text", "tables": [{"table_id": "The end of packet marker Shall be a single EOP K-code as defined in Table 5-1. This Shall mark the end of the CRC.", "caption": "The end of packet marker Shall be a single EOP K-code as defined in Table 5-1. This Shall mark the end of the CRC.", "page": 72, "data": []}], "figures": [], "subsections": [], "word_count": 74, "tags": []}
{"section_id": "5.6.2", "title": "CRC", "content": "The Message Header and data Shall be protected by a 32-bit CRC. CRC-32 protects the data integrity of the data payload. CRC-32 is defined as follows:  The CRC-32 polynomial Shall be = 04C1 1DB7h.  The CRC-32 Initial value Shall be = FFFF FFFFh.  CRC-32 Shall be calculated for all bytes of the payload not inclusive of any packet framing symbols (i.e. excludes the Preamble, SOP*, EOP).  CRC-32 calculation Shall begin at byte 0 bit 0 and continue to bit 7 of each of the bytes of the packet.  The remainder of CRC-32 Shall be complemented.  The residual of CRC-32 Shall be C704 DD7Bh. Note: This inversion of the CRC-32 remainder adds an offset of FFFF FFFFh that will create a constant CRC-32 residual of C704 DD7Bh at the receiver side. Note: The CRC implementation is identical to the one used in [USB 3.1]. Page 72 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 5-4 is an illustration of CRC-32 generation. The output bit ordering Shall be as detailed in Table 5-10. Figure 5-4 CRC 32 generation Table 5-10 CRC-32 Mapping CRC-32 Result bit Position in CRC-32 Field", "page_start": 72, "page_end": 72, "content_type": "text", "tables": [{"table_id": "Figure 5-4 is an illustration of CRC-32 generation. The output bit ordering Shall be as detailed in Table 5-10.", "caption": "Figure 5-4 is an illustration of CRC-32 generation. The output bit ordering Shall be as detailed in Table 5-10.", "page": 73, "data": []}, {"table_id": "Table 5-10 CRC-32 Mapping", "caption": "Table 5-10 CRC-32 Mapping", "page": 73, "data": []}], "figures": [{"figure_id": "Figure 5-4 is an illustration of CRC-32 generation. The output bit ordering Shall be as detailed in Table 5-10.", "caption": "Figure 5-4 is an illustration of CRC-32 generation. The output bit ordering Shall be as detailed in Table 5-10.", "page": 73}, {"figure_id": "Figure 5-4 CRC 32 generation", "caption": "Figure 5-4 CRC 32 generation", "page": 73}], "subsections": [], "word_count": 194, "tags": []}
{"section_id": "0", "title": "31", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "30", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "29", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "28", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "27", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "5", "title": "26", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6", "title": "25", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "7", "title": "24", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8", "title": "23", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "9", "title": "22", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "10", "title": "21", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "11", "title": "20", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "12", "title": "19", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "13", "title": "18", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "14", "title": "17", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "15", "title": "16", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "16", "title": "15", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "17", "title": "14", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "18", "title": "13", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "19", "title": "12", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "20", "title": "11", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "21", "title": "10", "content": "", "page_start": 73, "page_end": 72, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "22", "title": "9", "content": "USB Power Delivery Specification Revision 3.0, Version 1.1 Page 73 CRC-32 Result bit Position in CRC-32 Field", "page_start": 73, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": []}
{"section_id": "23", "title": "8", "content": "", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "24", "title": "7", "content": "", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "25", "title": "6", "content": "", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "26", "title": "5", "content": "", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "27", "title": "4", "content": "", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "28", "title": "3", "content": "", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "29", "title": "2", "content": "", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "30", "title": "1", "content": "", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "31", "title": "0", "content": "The CRC-32 Shall be encoded before transmission.", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": []}
{"section_id": "5.6.3", "title": "Packet Detection Errors", "content": "CRC errors, or errors detected while decoding encoded symbols using the code table, Shall be treated the same way; the Message Shall be Discarded and a GoodCRC Message Shall Not be returned. While the receiver is processing a packet, if at any time V becomes idle the receiver Shall stop processing the BUS packet and Discard it (no GoodCRC Message is returned). See Section 5.8.6.1 for the definition of BMC idle.", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 71, "tags": []}
{"section_id": "5.6.4", "title": "Hard Reset", "content": "Hard Reset Signaling is an ordered set of bytes sent with the purpose to be recognized by the PHY Layer. The Hard Reset Signaling ordered set is defined as: three RST-1 K-codes followed by one RST-2 K-code (see Table 5-11). Table 5-11 Hard Reset ordered set K-code number K-code in code table", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [{"table_id": "Reset Signaling ordered set is defined as: three RST-1 K-codes followed by one RST-2 K-code (see Table 5-11).", "caption": "Reset Signaling ordered set is defined as: three RST-1 K-codes followed by one RST-2 K-code (see Table 5-11).", "page": 74, "data": []}, {"table_id": "Table 5-11 Hard Reset ordered set", "caption": "Table 5-11 Hard Reset ordered set", "page": 74, "data": []}], "figures": [], "subsections": [], "word_count": 52, "tags": []}
{"section_id": "1", "title": "RST-1", "content": "", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "RST-1", "content": "", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "RST-1", "content": "", "page_start": 74, "page_end": 73, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "RST-2", "content": "A device Shall perform a Hard Reset when it receives Hard Reset Signaling. After receiving the Hard Reset Signaling, the device Shall reset as described in Section 6.8.2. If a Valid Hard Reset is not detected (see Table 5-3) then the whole transmission Shall be Discarded. A Cable Plug Shall perform a Hard Reset when it detects Hard Reset Signaling being sent between the Port Partners. After receiving the Hard Reset Signaling, the device Shall reset as described in Section 6.8.2. The procedure for sending Hard Reset Signaling Shall be as follows: 1. If the PHY Layer is currently sending a Message, the Message Shall be interrupted by sending an EOP K-code and the rest of the Message Discarded. 2. If CC is not idle, wait for it to become idle (see Section 5.8.6.1). 3. Wait tInterFrameGap. 4. If CC is still idle send the Preamble followed by the 4 K-codes for Hard Reset Signaling. 5. Disable the channel (i.e. stop sending and receiving), reset the PHY Layer and inform the Protocol Layer that the PHY Layer has been reset. 6. Re-enable the channel when requested by the Protocol Layer. Figure 5-5 shows the line format of Hard Reset Signaling which is a Preamble followed by the Hard Reset Ordered Set. Page 74 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 5-5 Line format of Hard Reset Preamble(training for receiver) RST-1 RST-1 RST-1 RST-2 LEGEND: Preamble provided by the Physical layer, Provided by the Physical not encoded with 4b5b layer, encoded with 4b5b", "page_start": 74, "page_end": 74, "content_type": "text", "tables": [{"table_id": "the device Shall reset as described in Section 6.8.2. If a Valid Hard Reset is not detected (see Table 5-3) then the", "caption": "the device Shall reset as described in Section 6.8.2. If a Valid Hard Reset is not detected (see Table 5-3) then the", "page": 74, "data": []}], "figures": [{"figure_id": "Figure 5-5 shows the line format of Hard Reset Signaling which is a Preamble followed by the Hard Reset Ordered", "caption": "Figure 5-5 shows the line format of Hard Reset Signaling which is a Preamble followed by the Hard Reset Ordered", "page": 74}, {"figure_id": "Figure 5-5 Line format of Hard Reset", "caption": "Figure 5-5 Line format of Hard Reset", "page": 75}], "subsections": [], "word_count": 254, "tags": []}
{"section_id": "5.6.5", "title": "Cable Reset", "content": "Cable Reset Signaling is an ordered set of bytes sent with the purpose to be recognized by the PHY Layer. The Cable Reset Signaling ordered set is defined as the following sequence of K-codes: RST-1, Sync-1, RST-1, Sync-3 (see Table 5-12). Table 5-12 Cable Reset ordered set K-code number K-code in code table", "page_start": 75, "page_end": 74, "content_type": "text", "tables": [{"table_id": "Reset Signaling ordered set is defined as the following sequence of K-codes: RST-1, Sync-1, RST-1, Sync-3 (see Table", "caption": "Reset Signaling ordered set is defined as the following sequence of K-codes: RST-1, Sync-1, RST-1, Sync-3 (see Table", "page": 75, "data": []}, {"table_id": "Table 5-12 Cable Reset ordered set", "caption": "Table 5-12 Cable Reset ordered set", "page": 75, "data": []}], "figures": [], "subsections": [], "word_count": 53, "tags": ["cable"]}
{"section_id": "1", "title": "RST-1", "content": "", "page_start": 75, "page_end": 74, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "Sync-1", "content": "", "page_start": 75, "page_end": 74, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "RST-1", "content": "", "page_start": 75, "page_end": 74, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "Sync-3", "content": "Cable Reset Signaling Shall only be sent by the DFP. The Cable Reset Ordered Set is used to reset the Cable Plugs without the need to Hard Reset the Port Partners. The state of the Cable Plug after the Cable Reset Signaling Shall be equivalent to power cycling the Cable Plug. Figure 5-6 shows the line format of Cable Reset Signaling which is a Preamble followed by the Cable Reset Ordered Set. Figure 5-6 Line format of Cable Reset Preamble(training for receiver) RST-1 Sync-1 RST-1 Sync-3 LEGEND: Preamble provided by the Physical layer, Provided by the Physical not encoded with 4b5b layer, encoded with 4b5b", "page_start": 75, "page_end": 74, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 5-6 shows the line format of Cable Reset Signaling which is a Preamble followed by the Cable Reset Ordered", "caption": "Figure 5-6 shows the line format of Cable Reset Signaling which is a Preamble followed by the Cable Reset Ordered", "page": 75}, {"figure_id": "Figure 5-6 Line format of Cable Reset", "caption": "Figure 5-6 Line format of Cable Reset", "page": 75}], "subsections": [], "word_count": 105, "tags": []}
{"section_id": "5.7", "title": "Collision Avoidance", "content": "The PHY Layer Shall monitor the channel for data transmission and only initiate transmissions when CC is idle. If the bus idle condition is present, it Shall be considered safe to start a transmission provided the conditions detailed in Section 5.8.5.4 are met. The bus idle condition Shall be checked immediately prior to transmission. If transmission cannot be initiated then the packet Shall be Discarded. If the packet is Discarded because CC is not idle, the PHY Layer Shall signal to the protocol layer that it has Discarded the Message as soon as CC becomes idle. See Section", "page_start": 75, "page_end": 74, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 98, "tags": ["avoidance"]}
{"section_id": "5.8.6.1", "title": "for the definition of idle CC.", "content": "In addition the PHY Layer Shall control the Rp resistor value to avoid collisions between Source and Sink transmissions. The Source Shall set an Rp value corresponding to a current of 3A to indicate to the Sink that it May initiate an AMS. The Source Shall set an Rp value corresponding to a current of 1.5A this Shall indicate to the Sink USB Power Delivery Specification Revision 3.0, Version 1.1 Page 75 that it Shall Not initiate an AMS and Shall only respond to Messages as part of an AMS. See [USB Type-C 1.2] for details of the corresponding Rp values. Table 5-13 details the Rp values that Shall be used by the Source to control Sink initiation of an AMS. Table 5-13 Rp values used for Collision Avoidance Source Rp Parameter Description Sink operation Source operation Sink Transmit “No Go”, Sink cannot initiate an AMS. Source can initiate an AMS 1.5A@5V SinkTxNG Sink can only respond to Messages tSinkTx after setting Rp to this as part of an AMS value. Sink Transmit “Ok” Sink can initiate an AMS. Source cannot initiate an AMS 3A@5V SinkTxOk while it has this value set. See also Section 6.6.15 and Section 6.11.2.1.", "page_start": 75, "page_end": 75, "content_type": "text", "tables": [{"table_id": "Table 5-13 details the Rp values that Shall be used by the Source to control Sink initiation of an AMS.", "caption": "Table 5-13 details the Rp values that Shall be used by the Source to control Sink initiation of an AMS.", "page": 76, "data": []}, {"table_id": "Table 5-13 Rp values used for Collision Avoidance", "caption": "Table 5-13 Rp values used for Collision Avoidance", "page": 76, "data": []}], "figures": [], "subsections": [], "word_count": 199, "tags": []}
{"section_id": "5.8", "title": "Biphase Mark Coding (BMC) Signaling Scheme", "content": "Biphase Mark Coding (BMC) is the physical layer Signaling Scheme for carrying USB Power Delivery Messages. This encoding assumes a dedicated DC connection, identified as the CC wire, which is used for sending PD Messages. Biphase Mark Coding is a version of Manchester coding (see [IEC 60958-1]). In BMC, there is a transition at the start of every bit time (UI) and there is a second transition in the middle of the UI when a 1 is transmitted. BMC is effectively DC balanced, (each 1 is DC balanced and two successive zeroes are DC balanced, regardless of the number of intervening 1’s). It has bounded disparity (limited to 1 bit over an arbitrary packet, so a very low DC level). Figure 5-7 illustrates Biphase Mark Coding. This example shows the transition from a Preamble to the Sync-1 K-codes of the SOP Ordered Set at the start of a Message. Note that other K-codes can occur after the Preamble for Signaling such as Hard Reset and Cable Reset. Figure 5-7 BMC Example", "page_start": 76, "page_end": 75, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 5-7 illustrates Biphase Mark Coding. This example shows the transition from a Preamble to the Sync-1 K-codes", "caption": "Figure 5-7 illustrates Biphase Mark Coding. This example shows the transition from a Preamble to the Sync-1 K-codes", "page": 76}, {"figure_id": "Figure 5-7 BMC Example", "caption": "Figure 5-7 BMC Example", "page": 76}], "subsections": [], "word_count": 171, "tags": []}
{"section_id": "5.8.1", "title": "Encoding and signaling", "content": "BMC uses DC coupled baseband signaling on CC. Figure 5-8 shows a block diagram for a Transmitter and Figure 5-9 shows a block diagram for the corresponding Receiver. Page 76 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 5-8 BMC Transmitter Block Diagram Data 4b5b BMC to CC Encoder Encoder CRC Figure 5-9 BMC Receiver Block Diagram Data from CC BMC SOP 5b4b Decoder Detect Decoder CRC The USB PD baseband signal Shall be driven on the CC wire with a tristate driver that Shall cause a vSwing swing on CC. The tristate driver is slew rate limited (see min rise/fall time in Section 5.8.5) to limit coupling to D+/D- and to other signal lines in the USB Type-C fully featured cables (see [USB Type-C 1.2]). This slew rate limiting can be performed either with driver design or an RC filter on the driver output. When sending the Preamble, the transmitter Shall start by transmitting a low level. The receiver Shall tolerate the loss of the first edge. The transmitter May vary the start of the Preamble by tStartDrive min (see Figure 5-10). Figure 5-10 BMC Encoded Start of Preamble USB Power Delivery Specification Revision 3.0, Version 1.1 Page 77 The transmitter Shall terminate the final bit of the Frame by an edge (the “trailing edge”) to help ensure that the receiver clocks the final bit. If the trailing edge results in the transmitter driving CC low (i.e. the final half-UI of the frame is high), then the transmitter: 1. Shall continue to drive CC low for tHoldLowBMC. 2. Then Shall continue to drive CC low for tEndDriveBMC measured from the trailing edge of the final bit of the Frame. 3. Then Shall release CC to high impedance. Figure 5-11 illustrates the end of a BMC encoded Frame with an encoded zero for which the final bit of the Frame is terminated by a high to low transition. Figure 5-12 illustrates the end of a BMC Encoded frame with an encoded one for which the final bit of the Frame is terminated by a high to low transition. Both figures also illustrate the tInterFrameGap timing requirement before the start of the next Frame when the Port has either been transmitting or receiving the previous Frame (see Section 5.8.5.4). Figure 5-11 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with High-to-Low Last Transition Figure 5-12 Transmitting or Receiving BMC Encoded Frame Terminated by One with High-to-Low Last Transition If the trailing edge results in the transmitter driving CC high (i.e. the final half-UI of the frame is low), then the transmitter: 1. Shall continue to drive CC high for 1 UI. 2. Then Shall drive CC low for tHoldLowBMC. 3. Then Shall continue to drive CC low for tEndDriveBMC measured from the final edge of the final bit of the Frame. 4. Then Shall release CC to high impedance. Figure 5-13 illustrates the ending of a BMC encoded Frame that ends with an encoded zero for which the final bit of the Frame is terminated by a low to high transition. Figure 5-14 illustrates the ending of a BMC encoded Frame that ends with an encoded one for which the final bit of the Frame is terminated by a low to high transition. Both figures also illustrate the tInterFrameGap timing requirement before the start of the next Frame when the Port has either been transmitting or receiving the previous Frame (see Section 5.8.5.4). Page 78 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 5-13 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with Low to High Last Transition Figure 5-14 Transmitting or Receiving BMC Encoded Frame Terminated by One with Low to High Last Transition Note: There is no requirement to maintain a timing phase relationship between back-to-back packets.", "page_start": 76, "page_end": 78, "content_type": "text", "tables": [], "figures": [{"figure_id": "BMC uses DC coupled baseband signaling on CC. Figure 5-8 shows a block diagram for a Transmitter and Figure 5-9", "caption": "BMC uses DC coupled baseband signaling on CC. Figure 5-8 shows a block diagram for a Transmitter and Figure 5-9", "page": 76}, {"figure_id": "Figure 5-8 BMC Transmitter Block Diagram", "caption": "Figure 5-8 BMC Transmitter Block Diagram", "page": 77}, {"figure_id": "Figure 5-9 BMC Receiver Block Diagram", "caption": "Figure 5-9 BMC Receiver Block Diagram", "page": 77}, {"figure_id": "loss of the first edge. The transmitter May vary the start of the Preamble by tStartDrive min (see Figure 5-10).", "caption": "loss of the first edge. The transmitter May vary the start of the Preamble by tStartDrive min (see Figure 5-10).", "page": 77}, {"figure_id": "Figure 5-10 BMC Encoded Start of Preamble", "caption": "Figure 5-10 BMC Encoded Start of Preamble", "page": 77}, {"figure_id": "Figure 5-11 illustrates the end of a BMC encoded Frame with an encoded zero for which the final bit of the Frame is", "caption": "Figure 5-11 illustrates the end of a BMC encoded Frame with an encoded zero for which the final bit of the Frame is", "page": 78}, {"figure_id": "terminated by a high to low transition. Figure 5-12 illustrates the end of a BMC Encoded frame with an encoded one", "caption": "terminated by a high to low transition. Figure 5-12 illustrates the end of a BMC Encoded frame with an encoded one", "page": 78}, {"figure_id": "Figure 5-11 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with High-to-Low Last Transition", "caption": "Figure 5-11 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with High-to-Low Last Transition", "page": 78}, {"figure_id": "Figure 5-12 Transmitting or Receiving BMC Encoded Frame Terminated by One with High-to-Low Last Transition", "caption": "Figure 5-12 Transmitting or Receiving BMC Encoded Frame Terminated by One with High-to-Low Last Transition", "page": 78}, {"figure_id": "Figure 5-13 illustrates the ending of a BMC encoded Frame that ends with an encoded zero for which the final bit of", "caption": "Figure 5-13 illustrates the ending of a BMC encoded Frame that ends with an encoded zero for which the final bit of", "page": 78}, {"figure_id": "the Frame is terminated by a low to high transition. Figure 5-14 illustrates the ending of a BMC encoded Frame that", "caption": "the Frame is terminated by a low to high transition. Figure 5-14 illustrates the ending of a BMC encoded Frame that", "page": 78}, {"figure_id": "Figure 5-13 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with Low to High Last Transition", "caption": "Figure 5-13 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with Low to High Last Transition", "page": 79}, {"figure_id": "Figure 5-14 Transmitting or Receiving BMC Encoded Frame Terminated by One with Low to High Last Transition", "caption": "Figure 5-14 Transmitting or Receiving BMC Encoded Frame Terminated by One with Low to High Last Transition", "page": 79}], "subsections": [], "word_count": 632, "tags": []}
{"section_id": "5.8.2", "title": "Transmit and Receive Masks", "content": "", "page_start": 79, "page_end": 78, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "5.8.2.1", "title": "Transmit Masks", "content": "The transmitted signal Shall Not violate the masks defined in Figure 5-15, Figure 5-16, Table 5-14 and Table 5-15 at the output of a load equivalent to the cable model and receiver load model described in Section 5.8.3. The masks apply to the full range of Rp/Rd values as defined in [USB Type-C 1.2]. Note: the measurement of the transmitter does not need to accommodate a change in signal offset due to the ground offset when current is flowing in the cable. The transmitted signal Shall have a rise time no faster than tRise. The transmitted signal Shall have a fall time no faster than tFall. The maximum limits on the rise and fall times are enforced by the Tx inner masks. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 79 Figure 5-15 BMC Tx ‘ONE’ Mask Figure 5-16 BMC Tx ‘ZERO’ Mask Page 80 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 5-14 BMC Tx Mask Definition, X Values Name Description Value Units X1Tx Left Edge of Mask 0.015 UI X2Tx see figure 0.07 UI X3Tx see figure 0.15 UI X4Tx see figure 0.25 UI X5Tx see figure 0.35 UI X6Tx see figure 0.43 UI X7Tx see figure 0.485 UI X8Tx see figure 0.515 UI X9Tx see figure 0.57 UI X10Tx see figure 0.65 UI X11Tx see figure 0.75 UI X12Tx see figure 0.85 UI X13Tx see figure 0.93 UI X14Tx Right Edge of Mask 0.985 UI Table 5-15 BMC Tx Mask Definition, Y Values Name Description Value Units Y1Tx Lower bound of Outer mask -0.075 V Y2Tx Lower bound of inner mask 0.075 V Y3Tx see figure 0.15 V Y4Tx see figure 0.325 V Y5Tx Inner mask vertical midpoint 0.5625 V Y6Tx see figure 0.8 V Y7Tx see figure 0.975 V Y8Tx see figure 1.04 V Y9Tx Upper Bound of Outer mask 1.2 V", "page_start": 79, "page_end": 80, "content_type": "text", "tables": [{"table_id": "The transmitted signal Shall Not violate the masks defined in Figure 5-15, Figure 5-16, Table 5-14 and Table 5-15 at", "caption": "The transmitted signal Shall Not violate the masks defined in Figure 5-15, Figure 5-16, Table 5-14 and Table 5-15 at", "page": 79, "data": []}, {"table_id": "Table 5-14 BMC Tx Mask Definition, X Values", "caption": "Table 5-14 BMC Tx Mask Definition, X Values", "page": 81, "data": []}, {"table_id": "Table 5-15 BMC Tx Mask Definition, Y Values", "caption": "Table 5-15 BMC Tx Mask Definition, Y Values", "page": 81, "data": []}], "figures": [{"figure_id": "The transmitted signal Shall Not violate the masks defined in Figure 5-15, Figure 5-16, Table 5-14 and Table 5-15 at", "caption": "The transmitted signal Shall Not violate the masks defined in Figure 5-15, Figure 5-16, Table 5-14 and Table 5-15 at", "page": 79}, {"figure_id": "Figure 5-15 BMC Tx ‘ONE’ Mask", "caption": "Figure 5-15 BMC Tx ‘ONE’ Mask", "page": 80}, {"figure_id": "Figure 5-16 BMC Tx ‘ZERO’ Mask", "caption": "Figure 5-16 BMC Tx ‘ZERO’ Mask", "page": 80}], "subsections": [], "word_count": 308, "tags": []}
{"section_id": "5.8.2.2", "title": "Receive Masks", "content": "A Source using the BMC Signaling Scheme Shall be capable of receiving a signal that complies with the mask when sourcing power as defined in Figure 5-17, Figure 5-18 and Table 5-16. The Source Rx mask is bounded by sweeping a Tx mask compliant signal, with added vNoiseActive between power neutral and Source offsets. A Consumer using the BMC Signaling Scheme Shall be capable of receiving a signal that complies with the mask when sinking power as defined in Figure 5-21, Figure 5-22 and Table 5-16. The Consumer Rx mask is bounded by sweeping a Tx mask compliant signal, with added vNoiseActive between power neutral and Consumer offsets. Every product using the BMC Signaling Scheme Shall be capable of receiving a signal that complies with the mask when power neutral as defined in Figure 5-19, Figure 5-20 and Table 5-16. Dual-Role Power Devices Shall meet the receiver requirements for a Source when providing power during any transmission using the BMC Signaling Scheme or a Sink when consuming power during any transmission using the BMC Signaling Scheme. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 81 Cable Plugs Shall meet the receiver requirements for both a Source and a Sink during any transmission using the BMC Signaling Scheme. The parameters used in the masks are specified to be appropriate to either edge triggered or oversampling receiver implementations. The masks are defined for ‘ONE’ and ‘ZERO’ separately as BMC enforces a transition at the midpoint of the unit interval while a ‘ONE’ is transmitted. The Rx masks are defined to bound the Rx noise after the Rx bandwidth limiting filter with the time constant tRxFilter has been applied. The boundaries of Rx outer mask, Y1Rx and Y5Rx, are specified according to vSwing max and accommodate half of vNoiseActive from cable noise coupling and the signal offset vIRDropGNDC due to the ground offset when current is flowing in the cable. The vertical dimension of the Rx inner mask, Y4Rx - Y2Rx, for power neutral is derived by reducing the vertical dimension of the Tx inner mask, Y7Tx - Y3Tx, at time location X3Tx by vNoiseActive to account for cable noise coupling. The received signal is composed of a waveform compliant to the Tx mask plus vNoiseActive. The vertical dimension of the Rx inner mask for sourcing power is derived by reducing the vertical dimension of the Tx inner mask by vNoiseActive and vIRDropGNDC to account for both cable noise coupling and signal DC offset. The received signal is composed of a waveform compliant to the Tx mask plus the maximum value of vNoiseActive plus vIRDropGNDC where the vIRDropGNDC value transitions between the minimum and the maximum values as allowed in this spec. The vertical dimension of the Rx inner mask for sinking power is derived by reducing the vertical dimension of the Tx inner mask by vNoiseActive max and vIRDropGNDC max for account for both cable noise coupling and signal DC offset. The received signal is composed of a waveform compliant to the Tx mask plus the maximum value of vNoiseActive plus vIRDropGNDC where the vIRDropGNDC value transitions between the minimum and the maximum values as allowed in this spec. The center line of the Rx inner mask, Y3Rx, is at half of the nominal vSwing for power neutral, and is shifted up by half of vIRDropGNDC max for sourcing power and is shifted down by half of vIRDropGNDC max for sinking power. The receiver sensitivity Shall be set such that the receiver does not treat noise on an undriven signal path as an incoming signal. Signal amplitudes below vNoiseIdle max Shall be treated as noise when BMC is idle. Page 82 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 5-17 BMC Rx ‘ONE’ Mask when Sourcing Power Figure 5-18 BMC Rx ‘ZERO’ Mask when Sourcing Power USB Power Delivery Specification Revision 3.0, Version 1.1 Page 83 Figure 5-19 BMC Rx ‘ONE’ Mask when Power neutral Figure 5-20 BMC Rx ‘ZERO’ Mask when Power neutral Page 84 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 5-21 BMC Rx ‘ONE’ Mask when Sinking Power Figure 5-22 BMC Rx ‘ZERO’ Mask when Sinking Power USB Power Delivery Specification Revision 3.0, Version 1.1 Page 85 Table 5-16 BMC Rx Mask Definition Name Description Value Units X1Rx Left Edge of Mask 0.07 UI X2Rx Top Edge of Mask 0.15 UI X3Rx See figure 0.35 UI X4Rx See figure 0.43 UI X5Rx See figure 0.57 UI X6Rx See figure 0.65 UI X7Rx See figure 0.85 UI X8Rx See figure 0.93 UI Y1Rx Lower bound of Outer Mask -0.3325 V Y2Rx Lower Bound of Inner Mask Y3Rx – 0.205 when sourcing power1 or sinking power1 V Y3Rx – 0.33 when power neutral1 Y3Rx Center line of Inner Mask 0.6875 Sourcing Power1 V", "page_start": 81, "page_end": 85, "content_type": "text", "tables": [{"table_id": "sourcing power as defined in Figure 5-17, Figure 5-18 and Table 5-16. The Source Rx mask is bounded by sweeping a", "caption": "sourcing power as defined in Figure 5-17, Figure 5-18 and Table 5-16. The Source Rx mask is bounded by sweeping a", "page": 81, "data": []}, {"table_id": "sinking power as defined in Figure 5-21, Figure 5-22 and Table 5-16. The Consumer Rx mask is bounded by sweeping", "caption": "sinking power as defined in Figure 5-21, Figure 5-22 and Table 5-16. The Consumer Rx mask is bounded by sweeping", "page": 81, "data": []}, {"table_id": "when power neutral as defined in Figure 5-19, Figure 5-20 and Table 5-16.", "caption": "when power neutral as defined in Figure 5-19, Figure 5-20 and Table 5-16.", "page": 81, "data": []}, {"table_id": "Table 5-16 BMC Rx Mask Definition", "caption": "Table 5-16 BMC Rx Mask Definition", "page": 86, "data": []}], "figures": [{"figure_id": "sourcing power as defined in Figure 5-17, Figure 5-18 and Table 5-16. The Source Rx mask is bounded by sweeping a", "caption": "sourcing power as defined in Figure 5-17, Figure 5-18 and Table 5-16. The Source Rx mask is bounded by sweeping a", "page": 81}, {"figure_id": "sinking power as defined in Figure 5-21, Figure 5-22 and Table 5-16. The Consumer Rx mask is bounded by sweeping", "caption": "sinking power as defined in Figure 5-21, Figure 5-22 and Table 5-16. The Consumer Rx mask is bounded by sweeping", "page": 81}, {"figure_id": "when power neutral as defined in Figure 5-19, Figure 5-20 and Table 5-16.", "caption": "when power neutral as defined in Figure 5-19, Figure 5-20 and Table 5-16.", "page": 81}, {"figure_id": "Figure 5-17 BMC Rx ‘ONE’ Mask when Sourcing Power", "caption": "Figure 5-17 BMC Rx ‘ONE’ Mask when Sourcing Power", "page": 83}, {"figure_id": "Figure 5-18 BMC Rx ‘ZERO’ Mask when Sourcing Power", "caption": "Figure 5-18 BMC Rx ‘ZERO’ Mask when Sourcing Power", "page": 83}, {"figure_id": "Figure 5-19 BMC Rx ‘ONE’ Mask when Power neutral", "caption": "Figure 5-19 BMC Rx ‘ONE’ Mask when Power neutral", "page": 84}, {"figure_id": "Figure 5-20 BMC Rx ‘ZERO’ Mask when Power neutral", "caption": "Figure 5-20 BMC Rx ‘ZERO’ Mask when Power neutral", "page": 84}, {"figure_id": "Figure 5-21 BMC Rx ‘ONE’ Mask when Sinking Power", "caption": "Figure 5-21 BMC Rx ‘ONE’ Mask when Sinking Power", "page": 85}, {"figure_id": "Figure 5-22 BMC Rx ‘ZERO’ Mask when Sinking Power", "caption": "Figure 5-22 BMC Rx ‘ZERO’ Mask when Sinking Power", "page": 85}], "subsections": [], "word_count": 796, "tags": []}
{"section_id": "0.5625", "title": "Power Neutral1", "content": "", "page_start": 86, "page_end": 85, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power"]}
{"section_id": "0.4375", "title": "Sinking Power1", "content": "Y4Rx Upper bound of Inner mask Y3Rx + 0.205 when sourcing power1 or sinking power1 V Y3Rx + 0.33 when power neutral1 Y5Rx Upper bound of the Outer mask 1.5325 V Note 1: The position of the center line of the Inner Mask is dependent on whether the receiver is Sourcing or Sinking power or is Power Neutral (see earlier in this section).", "page_start": 86, "page_end": 85, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 63, "tags": ["power", "sink"]}
{"section_id": "5.8.3", "title": "Transmitter Load Model", "content": "The transmitter load model Shall be equivalent to the circuit outlined in Figure 5-23 for a Source and Figure 5-24 for a Sink. It is formed by the concatenation of a cable load model and a receiver load model. See [USB Type-C 1.2] for details of the Rp and Rd resistors. Note the parameters zCable_CC, tCableDelay_CC and cCablePlug_CC are defined in [USB Type-C 1.2]. Figure 5-23 Transmitter Load Model for BMC Tx from a Source Page 86 USB Power Delivery Specification Revision 3.0, Version 1.1 cCablePlug_CC Transmitter Load Model Output Cable Model Receiver Load Model Connector La c cShunt a cReceiver 2 CC_gulPelbaCc Rp rOutput c a Rd 2 Figure 5-24 Transmitter Load Model for BMC Tx from a Sink USB Power Delivery Specification Revision 3.0, Version 1.1 Page 87 cCablePlug_CC Transmitter Load Model Output Cable Model Receiver Load Model Connector La c cShunt a cReceiver 2 CC_gulPelbaCc Rp rOutput Rd c a 2 The transmitter system components rOutput and cShunt are illustrated for informative purposes, and do not form part of the transmitter load model. See Section 5.8.5 for a description of the transmitter system design. The value of the modeled cable inductance, La, (in nH) Shall be calculated from the following formula: 𝐿𝑎= 𝑡𝐶𝑎𝑏𝑙𝑒𝐷𝑒𝑙𝑎𝑦_𝐶𝐶 ∗ 𝑧𝐶𝑎𝑏𝑙𝑒_𝐶𝐶 𝑚𝑎𝑥 𝑚𝑖𝑛 tCableDelay_CC is the modeled signal propagation delay through the cable, and zCable_CC is the modeled cable impedance. The modeled cable inductance is 640 nH for a cable with zCable_CC = 32 Ω and tCableDelay_CC = 20 nS. min max The value of the modeled cable capacitance, Ca, (in pF) Shall be calculated from the following formula: 𝑡𝐶𝑎𝑏𝑙𝑒𝐷𝑒𝑙𝑎𝑦_𝐶𝐶 𝑚𝑎𝑥 𝐶𝑎 = 𝑧𝐶𝑎𝑏𝑙𝑒_𝐶𝐶 𝑚𝑖𝑛 The modeled cable capacitance is Ca = 625 pF for a cable with zCable_CC = 32 Ω and tCableDelay_CC = 20 nS. min max Therefore, Ca/2 = 312.5 pF. cCablePlug_CC models the capacitance of the plug at each end of the cable. cReceiver models the capacitance of the receiver. The maximum values Shall be used in each case. Note: the transmitter load model assumes that there are no other return currents on the ground path.", "page_start": 86, "page_end": 86, "content_type": "text", "tables": [], "figures": [{"figure_id": "The transmitter load model Shall be equivalent to the circuit outlined in Figure 5-23 for a Source and Figure 5-24 for a", "caption": "The transmitter load model Shall be equivalent to the circuit outlined in Figure 5-23 for a Source and Figure 5-24 for a", "page": 86}, {"figure_id": "Figure 5-23 Transmitter Load Model for BMC Tx from a Source", "caption": "Figure 5-23 Transmitter Load Model for BMC Tx from a Source", "page": 86}, {"figure_id": "Figure 5-24 Transmitter Load Model for BMC Tx from a Sink", "caption": "Figure 5-24 Transmitter Load Model for BMC Tx from a Sink", "page": 87}], "subsections": [], "word_count": 347, "tags": []}
{"section_id": "5.8.4", "title": "BMC Common specifications", "content": "This section defines the common receiver and transmitter requirements.", "page_start": 87, "page_end": 86, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": []}
{"section_id": "5.8.4.1", "title": "BMC Common Parameters", "content": "The electrical requirements specified in Table 5-17 Shall apply to both the transmitter and receiver. Table 5-17 BMC Common Normative Requirements Name Description Min Nom Max Units Comment fBitRate Bit rate 270 300 330 Kbps tUnitInterval1 Unit Interval 3.03 3.70 µs 1/fBitRate Note 1: tUnitInterval denotes the time to transmit an unencoded data bit, not the shortest high or low times on the wire after encoding with BMC. A single data bit cell has duration of 1UI, but a data bit cell with value 1 will contain a centrally placed 01 or", "page_start": 87, "page_end": 86, "content_type": "text", "tables": [{"table_id": "The electrical requirements specified in Table 5-17 Shall apply to both the transmitter and receiver.", "caption": "The electrical requirements specified in Table 5-17 Shall apply to both the transmitter and receiver.", "page": 87, "data": []}, {"table_id": "Table 5-17 BMC Common Normative Requirements", "caption": "Table 5-17 BMC Common Normative Requirements", "page": 87, "data": []}], "figures": [], "subsections": [], "word_count": 92, "tags": []}
{"section_id": "10", "title": "transition in addition to the transition at the start of the cell.", "content": "", "page_start": 87, "page_end": 86, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "5.8.5", "title": "BMC Transmitter Specifications", "content": "The transmitter Shall meet the specifications defined in Table 5-18. Table 5-18 BMC Transmitter Normative Requirements Name Description Min Nom Max Units Comment pBitRate Maximum difference between 0.25 % The reference bit rate is the the bit-rate during the part of average bit rate of the last 32 the packet following the bits of the Preamble. Preamble and the reference bit-rate. Maximum driver resistance of a Fast Role Swap request transmitter. Assumes a Fast Role Swap worst case cable resistance of request transmit 15Ω as defined in [USB Type- rFRSwapTx 5 Ω driver resistance (excluding C 1.2]. Note: based on this cable resistance) value the maximum combined driver and cable resistance of a Fast Role Swap request transmitter is 20Ω. Time to cease driving the line Min value is limited by tEndDriveBMC after the end of the last bit of 23 µs tHoldLowBMC. the Frame.", "page_start": 87, "page_end": 87, "content_type": "text", "tables": [{"table_id": "The transmitter Shall meet the specifications defined in Table 5-18.", "caption": "The transmitter Shall meet the specifications defined in Table 5-18.", "page": 87, "data": []}, {"table_id": "Table 5-18 BMC Transmitter Normative Requirements", "caption": "Table 5-18 BMC Transmitter Normative Requirements", "page": 88, "data": []}], "figures": [], "subsections": [], "word_count": 145, "tags": []}
{"section_id": "10", "title": "% and 90 % amplitude", "content": "tFall Fall Time 300 ns points, minimum is under an unloaded condition. Time to cease driving the line Max value is limited by tHoldLowBMC after the final high-to-low 1 µs tEndDriveBMC. transition. tInterFrameGap Time from the end of last bit 25 µs of a Frame until the start of the first bit of the next Preamble. tFRSwapTx Fast Role Swap request 60 120 µs Fast Role Swap request is transmit duration indicated from the initial Source to the initial Sink by driving CC low for this time.", "page_start": 88, "page_end": 87, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 87, "tags": []}
{"section_id": "10", "title": "% and 90 % amplitude", "content": "tRise Rise time 300 ns points, minimum is under an unloaded condition. tStartDrive Time before the start of the -1 1 µs first bit of the Preamble when the transmitter Shall start driving the line. Applies to both no load condition and under the load vSwing Voltage Swing 1.05 1.125 1.2 V condition specified in Section 5.8.3. Source output impedance at the Nyquist frequency of [USB Transmitter output zDriver 33 75 Ω 2.0] low speed (750 kHz) impedance while the source is driving the CC line.", "page_start": 88, "page_end": 87, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 86, "tags": []}
{"section_id": "5.8.5.1", "title": "Capacitance when not transmitting", "content": "cReceiver is the capacitance that a DFP or UFP Shall present on the CC line when the DFP or UFP’s receiver is not transmitting on the line. The transmitter May have more capacitance than cReceiver while driving the CC line, but Page 88 USB Power Delivery Specification Revision 3.0, Version 1.1 Shall meet the waveform mask requirements. Once transmission is complete, the transmitter Shall disengage capacitance in excess of cReceiver from the CC wire within tInterFrameGap.", "page_start": 88, "page_end": 88, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 76, "tags": []}
{"section_id": "5.8.5.2", "title": "Source Output Impedance", "content": "Source output impedance zDriver is determined by the driver resistance and the shunt capacitance of the source and is hence a frequency dependent term. zDriver impacts the noise ingression in the cable. It is specified such that the noise at the Receiver is bounded. zDriver is defined by the following equation: 𝑟𝑂𝑢𝑡𝑝𝑢𝑡 𝑧𝐷𝑟𝑖𝑣𝑒𝑟= 1+𝑠∗𝑟𝑂𝑢𝑡𝑝𝑢𝑡∗𝑐𝑆ℎ𝑢𝑛𝑡 Figure 5-25 Transmitter diagram illustrating zDriver rOutput cShunt zDriver cShunt Shall Not cause a violation of cReceiver when not transmitting.", "page_start": 89, "page_end": 88, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 5-25 Transmitter diagram illustrating zDriver", "caption": "Figure 5-25 Transmitter diagram illustrating zDriver", "page": 89}], "subsections": [], "word_count": 74, "tags": ["source"]}
{"section_id": "5.8.5.3", "title": "Bit Rate Drift", "content": "Limits on the drift in fBitRate are set in order to help low-complexity receiver implementations. fBitRate is the reciprocal of the average bit duration from the previous 32 bits at a given portion of the packet. The change in fBitRate during a packet Shall be less than pBitRate. The reference bit rate (refBitRate) is the average fBitRate over the last 32 bits of the Preamble. fBitRate throughout the packet, including the EOP, Shall be within pBitRate of refBitRate. pBitRate is expressed as a percentage: pBitRate = | fBitRate – refBitRate | / refBitRate x 100% The transmitter Shall have the same pBitRate for all packet types. The BIST Carrier Mode and Bit Stream signals are continuous signals without a payload. When checking pBitRate any set of 1044 bits (20 bit SOP followed by 1024 PRBS bits) within a continuous signal May be considered as the part of the packet following the Preamble and the 32 preceding bits considered to be the last 32 bits of the Preamble used to compute refBitRate .", "page_start": 89, "page_end": 88, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 172, "tags": []}
{"section_id": "5.8.5.4", "title": "Inter-Frame Gap", "content": "Figure 5-26 illustrates the inter-Frame gap timings. Figure 5-26 Inter-Frame Gap Timings End of Frame Bus driven after end Bus driven before Preamble of Frame Preamble tInterFrameGap tEndDriveBMC tStartDrive The transmitter Shall drive the bus for no longer than tEndDriveBMC after transmitting the final bit of the Frame. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 89 Before starting to transmit the next Frame’s Preamble the transmitter of the next Frame Shall ensure that it waits for tInterFrameGap after either: 1. Transmitting the previous frame, for example sending the next Message in an AMS immediately after having sent a GoodCRC Message, or 2. Receiving the previous frame, for example when responding to a received Message with a GoodCRC Message, or 3. Observing an idle condition on CC (see Section 5.7). In this case the Port is waiting to initiate an AMS observes idle (see Section 5.8.6.1) and then waits tInterFrameGap before transmitting the Frame. See also Section 5.7 for details on when an AMS can be initiated. Note: the transmitter is also required to verify a bus idle condition immediately prior to starting transmission of the next Frame (see Section 5.8.6.1). The transmitter of the next Frame May vary the start of the Preamble by tStartDrive (see Section 5.8.1). See also Section 5.8.1 for figures detailing the timings relating to transmitting, receiving and observing idle in relating to Frames.", "page_start": 89, "page_end": 89, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 5-26 illustrates the inter-Frame gap timings.", "caption": "Figure 5-26 illustrates the inter-Frame gap timings.", "page": 89}, {"figure_id": "Figure 5-26 Inter-Frame Gap Timings", "caption": "Figure 5-26 Inter-Frame Gap Timings", "page": 89}], "subsections": [], "word_count": 230, "tags": []}
{"section_id": "5.8.5.5", "title": "Shorting of Transmitter Output", "content": "A Transmitter in a Port or Cable Plug Shall tolerate having its output be shorted to ground for tFRSwapTx max. This is due to the potential for Fast Role Swap to be signaled while the Transmitter is in the process of transmitting (see Section 5.8.5.6).", "page_start": 90, "page_end": 89, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 45, "tags": []}
{"section_id": "5.8.5.6", "title": "Fast Role Swap Transmission", "content": "The Fast Role Swap process is intended for use by a PDUSB HUB that presently has an external wall supply, and is providing power both through its downstream Ports to USB Devices and upstream to a USB Host such as a notebook. On removal of the external wall supply Fast Role Swap enables a V supply to be maintained by allowing the USB BUS Host to apply vSafe5V when it sees V droop below vSafe5V after having detected Fast Role Swap signaling. The BUS Fast Role Swap AMS is then used to correctly assign Source/Sink roles and configure the Rp/Rd resistors (see Section 8.3.2.7). The initial Source Shall signal a Fast Role Swap request by driving CC to ground with a resistance of less than rFRSwapTx for tFRSwapTx. The initial Source Shall only signal a Fast Role Swap when it has an Explicit Contract. On transmission of the Fast Role Swap signal any pending Messages Shall be Discarded (see Section 6.11.2.2.1). The Fast Role Swap signal May override any active transmissions. Since the initial Sink’s response to the Fast Role Swap signal is to send an FR_Swap Message, the initial Source Shall ensure Rp is set to SinkTxOk once the Fast Role Swap signal is complete.", "page_start": 90, "page_end": 89, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 206, "tags": []}
{"section_id": "5.8.6", "title": "BMC Receiver Specifications", "content": "The receiver Shall meet the specifications defined in Table 5-19. Table 5-19 BMC Receiver Normative Requirements Name Description Min Nom Max Units Comment The DFP or UFP system Shall have capacitance within this cReceiver CC receiver capacitance 200 600 pF range when not transmitting on the line. nBER Bit error rate, S/N = 25 dB 10-6 Number of transitions to be Transitions for signal nTransitionCount 3 detected to declare bus non- detect idle. Page 90 USB Power Delivery Specification Revision 3.0, Version 1.1 Name Description Min Nom Max Units Comment A Fast Role Swap request Fast Role Swap request results in the receiver tFRSwapRx 30 50 µs detection time detecting a signal low for at least this amount of time. Time constant of a single pole Rx bandwidth limiting tRxFilter 100 ns filter to limit broad-band filter (digital or analog) noise ingression1. Time window for tTransitionWindow 12 20 µs detecting non-idle Fast Role Swap request The Fast Role Swap request vFRSwapCableTx voltage detection 490 520 550 mV has to be below this voltage threshold threshold to be detected. As specified in [USB Type-C vIRDropGNDC Cable Ground IR Drop 250 mV 1.2] Peak-to-peak noise from VBUS, USB 2.0 and SBU lines after Noise amplitude when vNoiseActive 165 mV the Rx bandwidth limiting BMC is active. filter with the time constant tRxFilter has been applied. Peak-to-peak noise from VBUS, USB 2.0 and SBU lines after Noise amplitude when vNoiseIdle 300 mV the Rx bandwidth limiting BMC is idle. filter with the time constant tRxFilter has been applied. zBmcRx Receiver Input Impedance 1 MΩ Note 1: Broad-band noise ingression is due to coupling in the cable interconnect.", "page_start": 90, "page_end": 90, "content_type": "text", "tables": [{"table_id": "The receiver Shall meet the specifications defined in Table 5-19.", "caption": "The receiver Shall meet the specifications defined in Table 5-19.", "page": 90, "data": []}, {"table_id": "Table 5-19 BMC Receiver Normative Requirements", "caption": "Table 5-19 BMC Receiver Normative Requirements", "page": 90, "data": []}], "figures": [], "subsections": [], "word_count": 274, "tags": []}
{"section_id": "5.8.6.1", "title": "Definition of Idle", "content": "BMC packet collision is avoided by the detection of signal transitions at the receiver. This is the equivalent of squelch for FSK modulation. Detection is active when nTransitionCount transitions occur at the receiver within a time window of tTransitionWindow. After waiting tTransitionWindow without detecting nTransitionCount transitions the bus Shall be declared idle. Refer to Section 5.8.5.4 for details of when transmissions May start.", "page_start": 91, "page_end": 90, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 63, "tags": []}
{"section_id": "5.8.6.2", "title": "Multi-Drop", "content": "The BMC Signaling Scheme is suitable for use in Multi-Drop configurations containing one or two BMC Multi-Drop transceivers connected to the CC wire, for example where one or both ends of a cable contains a Multi-Drop transceiver. In this specification the location of the Multi-Drop transceiver is referred to as the Cable Plug. Figure 5-27 below illustrates a typical Multi Drop configuration with two DRPs. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 91 Figure 5-27 Example Multi-Drop Configuration showing two DRPs The Multi-Drop transceiver Shall obey all the electrical characteristics specified in this section except for those relating to capacitance. The maximum capacitance allowed for the Multi-Drop node when not driving the line is cCablePlug_CC defined in [USB Type-C 1.2] . There are no constraints as to the distance of the Multi-Drop transceiver from the end of the plug. The Multi-Drop transceiver(s) May be located anywhere along the cable including the plugs. The Multi-Drop transceiver suffers less from ground offset compared to the transceivers in the host or device and contributes no significant reflections. It is possible to have a configuration at Attach where one Port is able to be a Vconn Source and the other Port is not able to be a Vconn Source, such that there is no switch in the second Port. An example of a DFP with a switch Attached to a UFP without a switch is outlined in Figure 5-28. The capacitance on the CC line for a Port not able to be a VCONN Source Shall still be within cReceiver except when transmitting. Figure 5-28 Example Multi-Drop Configuration showing a DFP and UFP", "page_start": 91, "page_end": 91, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 5-27 below illustrates a typical Multi Drop configuration with two DRPs.", "caption": "Figure 5-27 below illustrates a typical Multi Drop configuration with two DRPs.", "page": 91}, {"figure_id": "Figure 5-27 Example Multi-Drop Configuration showing two DRPs", "caption": "Figure 5-27 Example Multi-Drop Configuration showing two DRPs", "page": 92}, {"figure_id": "to a UFP without a switch is outlined in Figure 5-28. The capacitance on the CC line for a Port not able to be a VCONN", "caption": "to a UFP without a switch is outlined in Figure 5-28. The capacitance on the CC line for a Port not able to be a VCONN", "page": 92}, {"figure_id": "Figure 5-28 Example Multi-Drop Configuration showing a DFP and UFP", "caption": "Figure 5-28 Example Multi-Drop Configuration showing a DFP and UFP", "page": 92}], "subsections": [], "word_count": 271, "tags": []}
{"section_id": "5.8.6.3", "title": "Fast Role Swap Detection", "content": "An initial Sink prepares for a Fast Role Swap by ensuring that once it has detected the Fast Role Swap signal its power supply is ready to respond by applying vSafe5V according to the timing detailed in Section 7.1.13. The initial Sink Shall only respond to the Fast Role Swap signal when it has an Explicit Contract. On detection of the Fast Role Swap signal any pending Messages Shall be Discarded (see Section 6.11.2.2.1). When the initial Sink is prepared for a Fast Role Swap and the bus is idle the CC voltage averaged over tFRSwapRx min remains above 0.7V (see [USB Type-C 1.2]) since the Source Rp is either 1.5A or 3.0A. However vNoiseIdle noise May cause the CC line voltage to reach 0.7V-vNoiseIdle/2 for short durations. When the initial Sink is prepared for a Fast Role swap while it is transmitting and the initial Source is signaling a Fast Role swap request, the transmission will be attenuated such that the peak CC voltage will not exceed vFRSwapCableTx min. Therefore, when the initial Page 92 USB Power Delivery Specification Revision 3.0, Version 1.1 Sink is prepared for a Fast Role Swap, it Shall Not detect a Fast Swap signal when the CC voltage, averaged over tFRSwapRx min, is above 0.7V. When the initial Sink is prepared for a Fast Role Swap, it Shall detect a CC voltage lower than vFRSwapCableTx min for tFRSwapRx as a Fast Role Swap request. Note: the initial Sink is not required to average the CC voltage to meet these requirements. The initial Sink Shall initiate the Fast Role Swap AMS within tFRSwapInit of detecting the Fast Role Swap request in order to assign the Rp/Rd resistors to the correct Ports and to re-synchronize the state machines (see Section 6.3.17). The initial Sink Shall become the new Source and Shall start supplying vSafe5V at USB Type-C Current (see [USB Type-C 1.2]) no later than tSrcFRSwap after V has dropped below vSafe5V. An initial Sink Shall disable its V BUS BUS Disconnect Threshold detection circuitry while Fast Role Swap detection is active. Note: while power is transitioning the VCONN Source to the Cable Plug(s) cannot be guaranteed. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 93", "page_start": 92, "page_end": 93, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 371, "tags": []}
{"section_id": "5.9", "title": "Built in Self-Test (BIST)", "content": "The following sections define BIST functionality which Shall be supported.", "page_start": 94, "page_end": 93, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": []}
{"section_id": "5.9.1", "title": "BIST Carrier Mode", "content": "In BIST Carrier Mode, the Physical Layer Shall send out a BMC encoded continuous string of alternating \"1\"s and “0”s. This enables the measurement of power supply noise and frequency drift. Note that this transmission is a purely a sequence of alternating bits and Shall Not be formatted as a Packet. See also Section 6.4.3.", "page_start": 94, "page_end": 93, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 55, "tags": []}
{"section_id": "5.9.2", "title": "BIST Test Data", "content": "A BIST Test Data Message is used by the Tester to send various Tester generated test patterns to the UUT in order to test the UUT’s receiver. See also Section 6.4.3. Figure 5-29 shows the Test Data Frame which Shall be sent by the Tester to the UUT. The BIST Message, with a BIST Test Data BIST Data Object consists of a Preamble, followed by SOP*, followed by the Message Header with a data length of 7 Data Objects, followed a BIST Test Data BIST Data Object, followed by 6 Data Objects containing Test data, followed by the CRC and then an EOP. Figure 5-29 Test Data Frame SOP* (Start Header BIST Test Data ... Preamble(training for receiver) Of Packet) Data Objects = 7 BDO Test Data 192 bits ... EOP (End Of CRC Packet) LEGEND: Preamble, not encoded Provided by the Physical Provided by the Protocol with 4b5b layer, encoded with 4b5b layer, encoded with 4b5b Page 94 USB Power Delivery Specification Revision 3.0, Version 1.1 6. Protocol Layer", "page_start": 94, "page_end": 94, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 5-29 shows the Test Data Frame which Shall be sent by the Tester to the UUT. The BIST Message, with a BIST", "caption": "Figure 5-29 shows the Test Data Frame which Shall be sent by the Tester to the UUT. The BIST Message, with a BIST", "page": 94}, {"figure_id": "Figure 5-29 Test Data Frame", "caption": "Figure 5-29 Test Data Frame", "page": 94}], "subsections": [], "word_count": 170, "tags": ["data"]}
{"section_id": "6.1", "title": "Overview", "content": "This chapter describes the requirements of the USB Power Delivery Specification’s protocol layer including:  Details of how Messages are constructed and used.  Use of timers and timeout values.  Use of Message and retry counters.  Reset operation.  Error handling.  State behavior. Refer to Section 2.6 for an overview of the theory of operation of USB Power Delivery.", "page_start": 95, "page_end": 94, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 62, "tags": []}
{"section_id": "6.2", "title": "Messages", "content": "This specification defines three types of Messages:  Control Messages that are short and used to manage the Message flow between Port Partners or to exchange Messages that require no additional data. Control Messages are 16 bits in length.  Data Messages that are used to exchange information between a pair of Port Partners. Data Messages range from", "page_start": 95, "page_end": 94, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 58, "tags": ["messages"]}
{"section_id": "48", "title": "to 240 bits in length.", "content": "o There are three types of Data Messages:  Those used to expose capabilities and negotiate power  Those used for the BIST  Those that are Vendor Defined  Extended Messages that are used to exchange information between a pair of Port Partners. Extended Messages are up to MaxExtendedMsgLen bytes. o There are several types of Extended Messages:  Those used for Source and Battery information  Those used for Security  Those used for Firmware Update  Those that are vendor defined", "page_start": 95, "page_end": 94, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 84, "tags": []}
{"section_id": "6.2.1", "title": "Message Construction", "content": "All Messages Shall be composed of a Message Header and a variable length (including zero) data portion. A Message either originates in the Protocol Layer and is passed to the Physical Layer, or it is received by the Physical Layer and is passed to the Protocol Layer. Figure 6-1 illustrates a Control Message as part of a Packet showing the parts are provided by the Protocol and PHY Layers. Figure 6-1 USB Power Delivery Packet Format including Control Message Payload SOP* (Start Message Header EOP (End Of Preamble CRC Of Packet) (16 bit) Packet) Legend: PHY Layer Protocol Layer USB Power Delivery Specification Revision 3.0, Version 1.1 Page 95 Figure 6-2 illustrates a Data Message as part of a Packet showing the parts are provided by the Protocol and PHY Layers. Figure 6-2 USB Power Delivery Packet Format including Data Message Payload SOP* (Start Message Header EOP (End Of Preamble 0..7 Data Object(s) CRC Of Packet) (16 bit) Packet) Legend: PHY Layer Protocol Layer Figure 6-3 illustrates an Extended Message as part of a Packet showing the parts are provided by the Protocol and PHY Layers. Figure 6-3 USB Power Delivery Packet Format including an Extended Message Header and Payload SOP* (Start Message Header Extended Message Header EOP (End Of Preamble Data (0..260 bytes) CRC Of Packet) (16 bit) (16 bit) Packet) Legend: PHY Layer Protocol Layer", "page_start": 95, "page_end": 95, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-1 illustrates a Control Message as part of a Packet showing the parts are provided by the Protocol and PHY", "caption": "Figure 6-1 illustrates a Control Message as part of a Packet showing the parts are provided by the Protocol and PHY", "page": 95}, {"figure_id": "Figure 6-1 USB Power Delivery Packet Format including Control Message Payload", "caption": "Figure 6-1 USB Power Delivery Packet Format including Control Message Payload", "page": 95}, {"figure_id": "Figure 6-2 illustrates a Data Message as part of a Packet showing the parts are provided by the Protocol and PHY", "caption": "Figure 6-2 illustrates a Data Message as part of a Packet showing the parts are provided by the Protocol and PHY", "page": 96}, {"figure_id": "Figure 6-2 USB Power Delivery Packet Format including Data Message Payload", "caption": "Figure 6-2 USB Power Delivery Packet Format including Data Message Payload", "page": 96}, {"figure_id": "Figure 6-3 illustrates an Extended Message as part of a Packet showing the parts are provided by the Protocol and", "caption": "Figure 6-3 illustrates an Extended Message as part of a Packet showing the parts are provided by the Protocol and", "page": 96}, {"figure_id": "Figure 6-3 USB Power Delivery Packet Format including an Extended Message Header and Payload", "caption": "Figure 6-3 USB Power Delivery Packet Format including an Extended Message Header and Payload", "page": 96}], "subsections": [], "word_count": 227, "tags": ["messages"]}
{"section_id": "6.2.1.1", "title": "Message Header", "content": "Every Message Shall start with a Message Header as shown in Figure 6-1, Figure 6-2 and Figure 6-3 and as defined in Table 6 1. The Message Header contains basic information about the Message and the PD Port Capabilities. The Message Header May be used standalone as a Control Message when the Number of Data Objects field is zero or as the first part of a Data Message when the Number of Data Objects field is non-zero. Table 6-1 Message Header Bit(s) Start of Packet Field Name Reference", "page_start": 96, "page_end": 95, "content_type": "text", "tables": [{"table_id": "Table 6 1. The Message Header contains basic information about the Message and the PD Port Capabilities.", "caption": "Table 6 1. The Message Header contains basic information about the Message and the PD Port Capabilities.", "page": 96, "data": []}, {"table_id": "Table 6-1 Message Header", "caption": "Table 6-1 Message Header", "page": 96, "data": []}], "figures": [{"figure_id": "Every Message Shall start with a Message Header as shown in Figure 6-1, Figure 6-2 and Figure 6-3 and as defined in", "caption": "Every Message Shall start with a Message Header as shown in Figure 6-1, Figure 6-2 and Figure 6-3 and as defined in", "page": 96}], "subsections": [], "word_count": 88, "tags": ["messages"]}
{"section_id": "15", "title": "SOP* Extended Section 6.2.1.1.1", "content": "14…12 SOP* Number of Data Objects Section 6.2.1.1.2 11…9 SOP* MessageID Section 6.2.1.1.3 SOP only Port Power Role Section 6.2.1.1.4 8 SOP’/SOP’’ Cable Plug Section 6.2.1.1.7 7…6 SOP* Specification Revision Section 6.2.1.1.5 SOP only Port Data Role Section 6.2.1.1.6 5 SOP’/SOP’’ Reserved Section 1.4.2.10 4…0 SOP* Message Type Section 6.2.1.1.8", "page_start": 96, "page_end": 95, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 50, "tags": []}
{"section_id": "6.2.1.1.1", "title": "Extended", "content": "The 1-bit Extended field Shall be set to zero to indicate a Control Message or Data Message and set to one to indicate an Extended Message. The Extended field Shall apply to all SOP* Packet types. Page 96 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 96, "page_end": 96, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 46, "tags": []}
{"section_id": "6.2.1.1.2", "title": "Number of Data Objects", "content": "When the Extended field is set to zero the 3-bit Number of Data Objects field Shall indicate the number of 32-bit Data Objects that follow the Message Header. When this field is zero the Message is a Control Message and when it is non-zero, the Message is a Data Message. The Number of Data Objects field Shall apply to all SOP* Packet types. When both the Extended bit and Chunked bit are set to one, the Number of Data Objects field Shall indicate the number of Data Objects in the Message padded to the 4-byte boundary including the Extended Header as part of the first Data Object. When the Extended bit is set to one and Chunked bit is set to zero, the Number of Data Objects field Shall be Reserved. Note that in this case, the message length is determined solely by the Data Size field in the Extended Message Header.", "page_start": 97, "page_end": 96, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 152, "tags": ["data"]}
{"section_id": "6.2.1.1.3", "title": "MessageID", "content": "The 3-bit MessageID field is the value generated by a rolling counter maintained by the originator of the Message. The MessageIDCounter Shall be initialized to zero at power-on as a result of a Soft Reset, or a Hard Reset. The MessageIDCounter Shall be incremented when a Message is successfully received as indicated by receipt of a GoodCRC Message. Note: the usage of MessageID during testing with BIST Messages is defined in [USBPDCompliance]. The MessageID field Shall apply to all SOP* Packet types.", "page_start": 97, "page_end": 96, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 82, "tags": ["messages"]}
{"section_id": "6.2.1.1.4", "title": "Port Power Role", "content": "The 1-bit Port Power Role field Shall indicate the Port’s present power role:  0b Sink  1b Source Messages, such as Ping, and GotoMin, that are only ever sent by a Source, Shall always have the Port Power Role field set to Source. Similarly Messages such as the Request Message that are only ever sent by a Sink Shall always have the Port Power Role field set to Sink. During the Power Role Swap Sequence, for the initial Source Port, the Port Power Role field Shall be set to Sink in the PS_RDY Message indicating that the initial Source’s power supply is turned off (see Figure 8-6 and Figure 8-7). During the Power Role Swap Sequence, for the initial Sink Port, the Port Power Role field Shall be set to Source for Messages initiated by the Policy Engine after receiving the PS_RDY Message from the initial Source (see Figure 8-6 and Figure 8-7). During the Fast Role Swap Sequence, for the initial Source Port, the Port Power Role field Shall be set to Sink in the PS_RDY Message indicating that V is not being driven by the initial Source and is within vSafe5V (see Figure 8-13). BUS During the Fast Role Swap Sequence, for the initial Sink Port, the Port Power Role field Shall be set to Source for Messages initiated by the Policy Engine after receiving the PS_RDY Message from the initial Source (see Figure 8-13). Note that the GoodCRC Message sent by the initial Sink in response to the PS_RDY Message from the initial Source will have its Port Power Role field set to Sink since this is initiated by the Protocol Layer. Subsequent Messages initiated by the Policy Engine, such as the PS_RDY Message sent to indicate that V is ready, will have the Port Power Role BUS field set to Source. The Port Power Role field of a received Message Shall Not be verified by the receiver and Shall Not lead to Soft Reset, Hard Reset or Error Recovery if it is incorrect. The Port Power Role field Shall only be defined for SOP Packets. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 97", "page_start": 97, "page_end": 97, "content_type": "text", "tables": [], "figures": [{"figure_id": "PS_RDY Message indicating that the initial Source’s power supply is turned off (see Figure 8-6 and Figure 8-7).", "caption": "PS_RDY Message indicating that the initial Source’s power supply is turned off (see Figure 8-6 and Figure 8-7).", "page": 97}, {"figure_id": "Messages initiated by the Policy Engine after receiving the PS_RDY Message from the initial Source (see Figure 8-6 and", "caption": "Messages initiated by the Policy Engine after receiving the PS_RDY Message from the initial Source (see Figure 8-6 and", "page": 97}, {"figure_id": "Figure 8-7).", "caption": "Figure 8-7).", "page": 97}, {"figure_id": "PS_RDY Message indicating that V is not being driven by the initial Source and is within vSafe5V (see Figure 8-13).", "caption": "PS_RDY Message indicating that V is not being driven by the initial Source and is within vSafe5V (see Figure 8-13).", "page": 97}, {"figure_id": "Messages initiated by the Policy Engine after receiving the PS_RDY Message from the initial Source (see Figure 8-13).", "caption": "Messages initiated by the Policy Engine after receiving the PS_RDY Message from the initial Source (see Figure 8-13).", "page": 97}], "subsections": [], "word_count": 360, "tags": ["power"]}
{"section_id": "6.2.1.1.5", "title": "Specification Revision", "content": "The Specification Revision field Shall be one of the following values (except 11b):  00b –Revision 1.0  01b –Revision 2.0  10b – Revision 3.0  11b – Reserved, Shall Not be used To ensure interoperability with existing USBPD Products, USBPD Products Shall support every PD Specification Revision starting from [USBPD 2.0]. The 2-bit Specification Revision field of a GoodCRC Message does not carry any meaning and Shall be considered as don’t care by the recipient of the Message. The sender of a GoodCRC Message Should set the Specification Revision field to 00b. The Specification Revision field Shall apply to all SOP* Packet types. When the Source Port first communicates with the Sink Port the Specification Revision field Shall be used as described by the following steps: 1. The Source Port sends a Source_Capabilities Message to the Sink Port setting the Specification Revision field to the highest Revision of the Power Delivery Specification the Source Port supports. 2. The Sink Port responds with a Request Message setting the Specification Revision field to the highest Revision of the Power Delivery Specification the Sink Port supports that is equal to or lower than the Specification Revision received from the Source Port. 3. The Source and Sink Ports Shall use the Specification Revision in the Request Message from the Sink in step 2 in all subsequent communications until they are Detached. When a VCONN Source first communicates with a Cable Plug the Specification Revision field Shall be used as described by the following steps: 1. The VCONN Source sends a Discover Identity REQ to the Cable Plug (SOP') setting the Specification Revision field in the Message to the highest Revision of the Power Delivery Specification the VCONN Source supports. After a VCONN Swap the required Soft_Reset / Accept message exchange is used for the same purpose (see Section 6.3.13). 2. The Cable Plug responds with a Discover Identity ACK setting the Specification Revision field in the Message to the highest Revision of the Power Delivery Specification the VCONN Source supports that is equal to or lower than the Specification Revision it received from the Source Port. 3. The Cable Plug and VCONN Source Shall communicate using the lower of the two revisions until an Explicit Contract has been established. 4. Table 6-2 shows the Specification Revision that Shall be used between the Port Partners and the Cable Plugs when the Specification Revision has been discovered and an Explicit Contract is in place. Note: when a Cable Plug does not respond to a Revision 3.0 Discover Identity REQ with a Discover Identity ACK or BUSY the VCONN Source May repeat steps 1-4 using a Revision 2.0 Discover Identity REQ in step 1 before establishing that there is no Cable Plug to communicate with. A VCONN Source that supports Revision 3.0 of the Power Delivery Specification May communicate with a Cable Plug also supporting Revision 3.0 using Revision 3.0 Compliant Communications regardless of the Specification Revision of its Port Partner until it enters an Explicit Contract. After the Explicit Contract has been established the Port Partners and Cable Plug(s) Shall use Table 6-2 to determine the Revision to be used. All data in all Messages Shall be consistent with the Specification Revision field in the Message Header for that particular Message. A Cable Plug Shall Not save the state of the agreed Specification Revision. A Cable Plug Shall respond with the highest Specification Revision it supports that is equal to or lower than the Specification Revision contained in the Message received from the VCONN Source. Page 98 USB Power Delivery Specification Revision 3.0, Version 1.1 Cable Plugs Shall operate using the same Specification Revision for both SOP’ and SOP’’. Cable assemblies with two Cable Plugs Shall operate using the same Specification Revision for both Cable Plugs. See Table 6-2 for details of how various Revisions Shall interoperate. Table 6-2 Revision Interoperability during an Explicit Contract Port 1 Cable Plug Port 2 Port to Port Port to Cable Plug Revision Revision Revision operating operating Revision Revision", "page_start": 98, "page_end": 98, "content_type": "text", "tables": [{"table_id": "4. Table 6-2 shows the Specification Revision that Shall be used between the Port Partners and the Cable Plugs when the", "caption": "4. Table 6-2 shows the Specification Revision that Shall be used between the Port Partners and the Cable Plugs when the", "page": 98, "data": []}, {"table_id": "Partners and Cable Plug(s) Shall use Table 6-2 to determine the Revision to be used.", "caption": "Partners and Cable Plug(s) Shall use Table 6-2 to determine the Revision to be used.", "page": 98, "data": []}, {"table_id": "See Table 6-2 for details of how various Revisions Shall interoperate.", "caption": "See Table 6-2 for details of how various Revisions Shall interoperate.", "page": 99, "data": []}, {"table_id": "Table 6-2 Revision Interoperability during an Explicit Contract", "caption": "Table 6-2 Revision Interoperability during an Explicit Contract", "page": 99, "data": []}], "figures": [], "subsections": [], "word_count": 671, "tags": []}
{"section_id": "2", "title": "2 2 2 2", "content": "", "page_start": 99, "page_end": 98, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "2 3 2 2", "content": "", "page_start": 99, "page_end": 98, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "2 3 3 2", "content": "", "page_start": 99, "page_end": 98, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "3 2 2 2", "content": "", "page_start": 99, "page_end": 98, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "3 3 2 2", "content": "", "page_start": 99, "page_end": 98, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "3 2 2 2", "content": "", "page_start": 99, "page_end": 98, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "3 3 3 3", "content": "", "page_start": 99, "page_end": 98, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6.2.1.1.6", "title": "Port Data Role", "content": "The 1-bit Port Data Role field Shall indicate the Port’s present data role:  0b UFP  1b DFP The Port Data Role field Shall only be defined for SOP Packets. For all other SOP* Packets the Port Data Role field is Reserved and Shall be set to zero. Should a USB Type-C Port receive a Message with the Port Data Role field set to the same Data Role as its current Data Role, except for the GoodCRC Message, USB Type-C Error Recovery actions as defined in [USB Type-C 1.2] Shall be performed. For a USB Type-C Port the Port Data Role field Shall be set to the default value at Attachment after a Hard Reset: 0b for a Port with Rd asserted and 1b for a Port with Rp asserted. In the case that a Port is not USB Communications Capable, at Attachment a Source Port Shall default to DFP and a Sink Port Shall default to UFP.", "page_start": 99, "page_end": 98, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 159, "tags": ["data"]}
{"section_id": "6.2.1.1.7", "title": "Cable Plug", "content": "The 1-bit Cable Plug field Shall indicate whether this Message originated from a Cable Plug:  0b Message originated from a DFP or UFP  1b Message originated from a Cable Plug The Cable Plug field Shall only apply to SOP’ and SOP’’ Packet types.", "page_start": 99, "page_end": 98, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 45, "tags": ["cable"]}
{"section_id": "6.2.1.1.8", "title": "Message Type", "content": "The 5-bit Message Type field Shall indicate the type of Message being sent. To fully decode the Message Type, the Number of Data Objects field is first examined to determine whether the Message is a Control Message or a Data Message. Then the specific Message Type can be found in Table 6-5 (Control Message) or Table 6-6 (Data Message). The Message Type field Shall apply to all SOP* Packet types.", "page_start": 99, "page_end": 98, "content_type": "text", "tables": [{"table_id": "Message. Then the specific Message Type can be found in Table 6-5 (Control Message) or Table 6-6 (Data Message).", "caption": "Message. Then the specific Message Type can be found in Table 6-5 (Control Message) or Table 6-6 (Data Message).", "page": 99, "data": []}], "figures": [], "subsections": [], "word_count": 70, "tags": ["messages"]}
{"section_id": "6.2.1.2", "title": "Extended Message Header", "content": "Every Extended Message (indicated by the Extended field being set in the Message Header) Shall contain an Extended Message Header following the Message Header as shown in Figure 6-3 and defined in Table 6-3. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 99 The Extended Message Header is used to support Extended Messages containing Data Blocks of Data Size either sent in a single Message or as a series of Chunks. When the Data Block is sent as a series of Chunks, each Chunk in the series, except for the last Chunk, Shall contain MaxExtendedMsgChunkLen bytes. The last Chunk in the series Shall contain the remainder of the Data Block and so could be less than MaxExtendedMsgChunkLen bytes and Shall be padded to the next 4-byte Data Object boundary. Table 6-3 Extended Message Header Bit(s) Start of Packet Field Name Reference", "page_start": 99, "page_end": 99, "content_type": "text", "tables": [{"table_id": "Message Header following the Message Header as shown in Figure 6-3 and defined in Table 6-3.", "caption": "Message Header following the Message Header as shown in Figure 6-3 and defined in Table 6-3.", "page": 99, "data": []}, {"table_id": "Table 6-3 Extended Message Header", "caption": "Table 6-3 Extended Message Header", "page": 100, "data": []}], "figures": [{"figure_id": "Message Header following the Message Header as shown in Figure 6-3 and defined in Table 6-3.", "caption": "Message Header following the Message Header as shown in Figure 6-3 and defined in Table 6-3.", "page": 99}], "subsections": [], "word_count": 142, "tags": ["messages"]}
{"section_id": "15", "title": "SOP* Chunked Section 6.2.1.2.1", "content": "14…11 SOP* Chunk Number Section 6.2.1.2.2", "page_start": 100, "page_end": 99, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "10", "title": "SOP* Request Chunk Section 6.2.1.2.3", "content": "", "page_start": 100, "page_end": 99, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "9", "title": "SOP* Reserved Section 1.4.2.10", "content": "8…0 SOP* Data Size Section 6.2.1.2.4", "page_start": 100, "page_end": 99, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "6.2.1.2.1", "title": "Chunked", "content": "The Port Partners Shall use the Unchunked Extended Messages Supported fields in the Source_Capabilities Message and the Request Message to determine whether to send Messages of Data Size > MaxExtendedMsgLegacyLen bytes in a single Unchunked Extended Message (see Section 6.4.1.2.2.6 and Section 6.4.2.6). When either Port Partner only supports Chunked Extended Messages: 1. The Chunked bit in every Extended Message Shall be set to one 2. Every Extended Message of Data Size > MaxExtendedMsgLegacyLen Shall be transmitted between the Port Partners in Chunks 3. The Number of Data Objects in the Message Header Shall indicate the number of Data Objects in the Message padded to the 4-byte boundary including the Extended Header as part of the first Data Object. 4. Point 1, Point 2 and Point 3 above Shall apply until the Port Pair is Detached, there is a Hard Reset or the Source removes power (except during a Power Role Swap or Fast Role Swap when the initial Source removes power in order to for the new Source to apply power). When both Port Partners support Unchunked Extended Messages: 1. The Chunked bit in every Extended Message Shall be set to zero. 2. Every Extended Message Shall be transmitted between the Port Partners Unchunked 3. The Number of Data Objects in the Message Header is Reserved. 4. Point 1, Point 2 and Point 3 above Shall apply until the Port Pair is Detached, there is a Hard Reset or the Source removes power (except during a Power Role Swap or Fast Role Swap when the initial Source removes power in order to for the new Source to apply power). When sending Extended Messages to the Cable Plug the VCONN Source Shall only send Chunked Messages. Cable Plugs Shall always send Extended Messages of Data Size > MaxExtendedMsgLegacyLen Chunked and Shall set the Chunked bit in every Extended Message to one. When Extended Messages are supported Chunking Shall be supported.", "page_start": 100, "page_end": 99, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 320, "tags": []}
{"section_id": "6.2.1.2.2", "title": "Chunk Number", "content": "The Chunk Number field Shall only be Valid in a Message if the Chunked flag is set to one. if the Chunked flag is set to zero the Chunk Number field Shall also be set to zero. The Chunk Number field is used differently depending on whether the Message is a request for Data or a requested Data Block being returned: Page 100 USB Power Delivery Specification Revision 3.0, Version 1.1 In a request for data the Chunk Number field indicates the number of the Chunk being requested. The requestor Shall only set this field to one of the following values:  Zero to request the first Chunk in the series  The number of the last received Chunk in the series  The number of the next Chunk in the series (the next Chunk after the last received Chunk) In the requested Data Block the Chunk Number field indicates the number of the Chunk being returned. The Chunk number for each Chunk in the series Shall start at zero and Shall increment for each Chunk by one up to a maximum of 9 corresponding to 10 Chunks in total.", "page_start": 100, "page_end": 100, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 190, "tags": []}
{"section_id": "6.2.1.2.3", "title": "Request Chunk", "content": "The Request Chunk bit Shall only be used for the Chunked transfer of an Extended Message when the Chunked bit is set to 1 (see Figure 6-7). For Unchunked Extended Message transfers Messages Shall be sent and received without the request/response mechanism (see Figure 6-4). The Request Chunk bit Shall be set to one to indicate that this is a request for a Chunk of a Data Block and Shall be set to zero to indicate that this is a Chunk response containing a Chunk. Except for Chunk zero, a requested Chunk of a Data Block Shall only be returned as a Chunk response to a corresponding request for that Chunk. Both the Chunk request and the Chunk response Shall contain the same value in the Message Type field. When the Request Chunk bit is set to one the Data Size field Shall be zero.", "page_start": 101, "page_end": 100, "content_type": "text", "tables": [], "figures": [{"figure_id": "set to 1 (see Figure 6-7). For Unchunked Extended Message transfers Messages Shall be sent and received without", "caption": "set to 1 (see Figure 6-7). For Unchunked Extended Message transfers Messages Shall be sent and received without", "page": 101}, {"figure_id": "the request/response mechanism (see Figure 6-4).", "caption": "the request/response mechanism (see Figure 6-4).", "page": 101}], "subsections": [], "word_count": 145, "tags": []}
{"section_id": "6.2.1.2.4", "title": "Data Size", "content": "The Data Size field Shall indicate how many bytes of data in total are in Data Block being returned. The total number of data bytes in the Message Shall Not exceed MaxExtendedMsgLen. If the Data Size field is less than MaxExtendedMsgLegacyLen and the Chunked bit is set then the Packet payload Shall be padded to the next 4-byte Data Object boundary with zeros (0x00). If the Data Size field is greater than expected for a given Extended Message but less than or equal to MaxExtendedMsgLen then the expected fields in the Message Shall be processed appropriately and the additional fields Shall be Ignored.", "page_start": 101, "page_end": 100, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 103, "tags": ["data"]}
{"section_id": "6.2.1.2.5", "title": "Extended Message Examples", "content": "The following examples illustrate the transmission of Extended Messages both Chunked (Chunked bit is one) and Unchunked (Chunked bit is zero). The examples use a Security_Request Message of Data Size 7 bytes which is responded to by a Security_Response Message of Data Size 30 bytes. The sizes of these Messages are arbitrary and are used to illustrate Message transmission; they are not intended to correspond to genuine security related Messages. During negotiation of the Explicit Contract after connection, the Port Partners use the Unchunked Extended Messages Supported fields in the Source_Capabilities Message and the Request Message to determine the value of the Chunked bit (see Table 6-4). When both Port Partners support Unchunked Messages then the Chunked bit is zero otherwise the Chunked bit is one. The Chunked bit is used to determine whether or not:  The Chunk request/response mechanism is used  Extended Messages are Chunked  Padding is applied  The Number of Data Objects field is used The following examples illustrate the expected usage in each case. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 101 Table 6-4 Use of Unchunked Message Supported bit Source: Source_Capabilities Message Unchunked Message Unchunked Message Supported bit = 0 Supported bit = 1 Sink: Unchunked Message Chunked bit = 1 Chunked bit = 1 Request Supported bit = 0 Message Unchunked Message Chunked bit = 1 Chunked bit = 0 Supported bit = 1", "page_start": 101, "page_end": 101, "content_type": "text", "tables": [{"table_id": "bit (see Table 6-4). When both Port Partners support Unchunked Messages then the Chunked bit is zero otherwise", "caption": "bit (see Table 6-4). When both Port Partners support Unchunked Messages then the Chunked bit is zero otherwise", "page": 101, "data": []}, {"table_id": "Table 6-4 Use of Unchunked Message Supported bit", "caption": "Table 6-4 Use of Unchunked Message Supported bit", "page": 102, "data": []}], "figures": [], "subsections": [], "word_count": 235, "tags": ["messages"]}
{"section_id": "6.2.1.2.5.1", "title": "Security_Request/Security_Response Unchunked Example", "content": "Figure 6-4 illustrates a typical sequence for a Security_Request Message responded to by a Security_Response Message using Unchunked Extended Messages (Chunked bit is zero) between a USB Host and a power brick. The entire Data Block is returned in one Message. The Chunk request/response mechanism is not used. Figure 6-4 Example Security_Request sequence Unchunked (Chunked bit = 0) Host Power Brick (Data S S e iz c e u r = it 7 y , _ C R h e u q n u k e e st d = 0) GoodCRC (Data S e S c iz u e r i = ty 3 _ 0 R , e C s h p u o n n k s e e d = 0) GoodCRC Figure 6-5 details the Security_Request Message shown in Figure 6-4. The figure shows the byte ordering on the bus as well as the fact that there is no padding in this case. The Number of Data Objects field has a value of 0 since it is Reserved when the Chunked bit is zero. The Data Size field indicates the length of the Extended Message when the Chunked bit is set to 0, which in this case is 7 bytes. Figure 6-5 Example byte transmission for Security_Request Message of Data Size 7 (Chunked bit is set to 0) Message Header Extended Message (16 bit) Header Message Type = (16 bit) Data (7 bytes) Security_Request Chunked = 0 Number of Data Data Size = 7 Objects = 0 (Reserved) Message Message Message Message Header Header Header Header B0 B1 B2 B3 B4 B5 B6 LSB MSB LSB MSB Figure 6-6 details the Security_Response Message shown in Figure 6-4. The figure shows the byte ordering on the bus as well as the fact that there is no padding in this case. The Number of Data Objects field has a value of 0 since it is Reserved when the Chunked bit is zero. The Data Size field indicates the length of the Extended Message when the Chunked bit is set to 0, which in this case is 30 bytes. Page 102 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 6-6 Example byte transmission for Security_Response Message of Data Size 7 (Chunked bit is set to 0) Message Header Extended Message (16 bit) Header Message Type = (16 bit) Data (30 bytes) Security_Response Chunked = 0 Number of Data Data Size = 30 Objects = 0 (Reserved) Message Message Message Message Header Header Header Header B0 B1 B28 B29 LSB MSB LSB MSB", "page_start": 102, "page_end": 102, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-4 illustrates a typical sequence for a Security_Request Message responded to by a Security_Response", "caption": "Figure 6-4 illustrates a typical sequence for a Security_Request Message responded to by a Security_Response", "page": 102}, {"figure_id": "Figure 6-4 Example Security_Request sequence Unchunked (Chunked bit = 0)", "caption": "Figure 6-4 Example Security_Request sequence Unchunked (Chunked bit = 0)", "page": 102}, {"figure_id": "Figure 6-5 details the Security_Request Message shown in Figure 6-4. The figure shows the byte ordering on the bus", "caption": "Figure 6-5 details the Security_Request Message shown in Figure 6-4. The figure shows the byte ordering on the bus", "page": 102}, {"figure_id": "Figure 6-5 Example byte transmission for Security_Request Message of Data Size 7 (Chunked bit is set to 0)", "caption": "Figure 6-5 Example byte transmission for Security_Request Message of Data Size 7 (Chunked bit is set to 0)", "page": 102}, {"figure_id": "Figure 6-6 details the Security_Response Message shown in Figure 6-4. The figure shows the byte ordering on the", "caption": "Figure 6-6 details the Security_Response Message shown in Figure 6-4. The figure shows the byte ordering on the", "page": 102}, {"figure_id": "Figure 6-6 Example byte transmission for Security_Response Message of Data Size 7 (Chunked bit is set to 0)", "caption": "Figure 6-6 Example byte transmission for Security_Response Message of Data Size 7 (Chunked bit is set to 0)", "page": 103}], "subsections": [], "word_count": 425, "tags": []}
{"section_id": "6.2.1.2.5.2", "title": "Security_Request/Security_Response Chunked Example", "content": "Figure 6-7 illustrates a typical sequence for a Security_Request Message responded to by a Security_Response Message using Chunked Extended Messages (Chunked bit is one) between a USB Host and a power brick. Note that Chunk Number zero in every Extended Message is sent without the need for a Chunk Request, but Chunk Number one and following need to be requested with a Chunk request. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 103 Figure 6-7 Example Security_Request sequence Chunked (Chunked bit = 1) Host Power Brick Security_Request Chunk R C e h q ( u N u n u e k s m e t d b C S e = h e r u c 1 o u n , f r k C i D t h = y a u _ 0 t n R a , k e D O q N a b u t u j a e e m s c S t b t i z s e e = r = = 3 7 , 0 ) , GoodCRC Security_Response R C e h ( q N u u u n e m k s S e t b e d C e c = h r u u r o 1 i n f t , y k C D _ h = a R u t e 0 a n s , k O p D o N b a n j t u e a s m c e S t b s iz e = e r 7 = = , 3 0 0 , ) GoodCRC S R C e e h c q ( u u N u r n u e i k t s m y e t _ d b C R e = h e r u s 1 o p n , f o k C D n h = s a u 1 e t n a , “ k D C O N a h b t u u j a e m n c S k b t i z s r e e e = r q = = 1 u 0 , 1 e ) , st” GoodCRC R C e h ( q N u u u n e m k s S e t b e d C e c = h r u u r o 1 i n f t , y k C D _ h = a R u t e 0 a n s , k O p D o N b a n j t u e a s m c e S t b s iz e = e r 2 = = , 3 1 0 , ) GoodCRC Figure 6-8 shows the Security_Request Message shown in Figure 6-7 in more detail including the byte ordering on the bus and padding. Three bytes of padding have been added to the Message so that the total number of bytes is a multiple of 32-bits, corresponding to 3 Data Objects. The Number of Data Objects field is set to 3 to indicate the length of this Chunk. The Chunk Number is set to zero and the Data Size field is set to 7 to indicate the length of the whole Extended Message. Page 104 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 6-8 Example Security_Request Message of Data Size 7 (Chunked bit set to 1) Extended Message Message Header Header (16 bit) (16 bit) S M ec e u s r s i a ty g _ e R T e y q p u e e = st Chunked = 1 Data (7 bytes) Padding (3 bytes) Number of Data Chunk Number = 0 Request Chunk = 0 Objects = 3 Data Size = 7 Message Message Message Message P0 P1 P2 Header Header Header Header B0 B1 B2 B3 B4 B5 B6 (0x00) (0x00) (0x00) LSB MSB LSB MSB Data Object 0 Data Object 1 Data Object 2 Figure 6-9 shows Chunk Number zero of the Security_Response Message shown in Figure 6-7 in more detail including the byte ordering on the bus and padding. No padding is need for this Chunk since the full 26-byte payload plus 2-byte Extended Message Header is a multiple of 32-bits, corresponding to 7 Data Objects. The Number of Data Objects field is set to 7 to indicate the length of this Chunk and the Data Size field is set to 30 to indicate the length of the whole Extended Message. Figure 6-9 Example Chunk 0 of Security_Response Message of Data Size 30 (Chunked bit set to 1) Extended Message Message Header Header (16 bit) (16 bit) Se M cu es ri s t a y g _ e R e T s y p p o e n = s e Chunked = 1 Data (26 bytes) Number of Data Chunk Number = 0 Request Chunk = 0 Objects = 7 Data Size = 30 Message Message Message Message Header Header Header Header B0 B1 B22 B23 B24 B25 LSB MSB LSB MSB Data Object 0 Data Object 6 Figure 6-10 shows an example of the Message format, byte ordering and padding for the Security_Response Message Chunk request for Chunk Number one shown in Figure 6-7. In the Chunk request the Number of Data Objects field in the Message is set to 1 to indicate that the payload is 32 bits equivalent to 1 data object. Since the Chunked bit is set to 1 the Chunk request/Chunk response mechanism is used. The Message is a Chunk request so the Request Chunk bit is set to one, and in this case Chunk one is being requested so Chunk Number is set to one. Data Size is set to 0 indicating the length of the Data Block being transferred. Two bytes of padding are added to ensure that the payload is a multiple of 32 bits. Figure 6-10 Example byte transmission for a Security_Request Message Chunk request (Chunked bit is set to 1) Extended Message Message Header Header (16 bit) (16 bit) Se M cu es ri s t a y g _ e R e T s y p p o e n = s e Chunked = 1 Padding (2 bytes) Number of Data Chunk Number = 1 Request Chunk = 1 Objects = 1 Data Size = 0 Message Message Message Message P0 P1 Header Header Header Header (0x00) (0x00) LSB MSB LSB MSB Data Object 0 Figure 6-11 shows Chunk Number one of the Security_Response Message shown in Figure 6-7 in more detail including the byte ordering on the bus and padding. Two bytes of padding are added to ensure that the payload is a multiple of 32 bits, corresponding to 2 Data Objects. The Number of Data Objects field is set to 2 to indicate the length of this Chunk and the Data Size field is set to 30 to indicate the length of the whole Extended Message. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 105 Figure 6-11 Example Chunk 1 of Security_Response Message of Data Size 30 (Chunked bit set to 1) Extended Message Message Header Header (16 bit) (16 bit) S M ec e u s r s i a ty g _ e R T e y q p u e e = st Chunked = 1 Data (4 bytes) Padding (2 bytes) Number of Data Chunk Number = 1 Request Chunk = 0 Objects = 2 Data Size = 30 Message Message Message Message P0 P1 Header Header Header Header B0 B1 B2 B3 (0x00) (0x00) LSB MSB LSB MSB Data Object 0 Data Object 1", "page_start": 103, "page_end": 105, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-7 illustrates a typical sequence for a Security_Request Message responded to by a Security_Response", "caption": "Figure 6-7 illustrates a typical sequence for a Security_Request Message responded to by a Security_Response", "page": 103}, {"figure_id": "Figure 6-7 Example Security_Request sequence Chunked (Chunked bit = 1)", "caption": "Figure 6-7 Example Security_Request sequence Chunked (Chunked bit = 1)", "page": 104}, {"figure_id": "Figure 6-8 shows the Security_Request Message shown in Figure 6-7 in more detail including the byte ordering on the", "caption": "Figure 6-8 shows the Security_Request Message shown in Figure 6-7 in more detail including the byte ordering on the", "page": 104}, {"figure_id": "Figure 6-8 Example Security_Request Message of Data Size 7 (Chunked bit set to 1)", "caption": "Figure 6-8 Example Security_Request Message of Data Size 7 (Chunked bit set to 1)", "page": 105}, {"figure_id": "Figure 6-9 shows Chunk Number zero of the Security_Response Message shown in Figure 6-7 in more detail", "caption": "Figure 6-9 shows Chunk Number zero of the Security_Response Message shown in Figure 6-7 in more detail", "page": 105}, {"figure_id": "Figure 6-9 Example Chunk 0 of Security_Response Message of Data Size 30 (Chunked bit set to 1)", "caption": "Figure 6-9 Example Chunk 0 of Security_Response Message of Data Size 30 (Chunked bit set to 1)", "page": 105}, {"figure_id": "Figure 6-10 shows an example of the Message format, byte ordering and padding for the Security_Response Message", "caption": "Figure 6-10 shows an example of the Message format, byte ordering and padding for the Security_Response Message", "page": 105}, {"figure_id": "Chunk request for Chunk Number one shown in Figure 6-7. In the Chunk request the Number of Data Objects field in", "caption": "Chunk request for Chunk Number one shown in Figure 6-7. In the Chunk request the Number of Data Objects field in", "page": 105}, {"figure_id": "Figure 6-10 Example byte transmission for a Security_Request Message Chunk request (Chunked bit is set to 1)", "caption": "Figure 6-10 Example byte transmission for a Security_Request Message Chunk request (Chunked bit is set to 1)", "page": 105}, {"figure_id": "Figure 6-11 shows Chunk Number one of the Security_Response Message shown in Figure 6-7 in more detail", "caption": "Figure 6-11 shows Chunk Number one of the Security_Response Message shown in Figure 6-7 in more detail", "page": 105}, {"figure_id": "Figure 6-11 Example Chunk 1 of Security_Response Message of Data Size 30 (Chunked bit set to 1)", "caption": "Figure 6-11 Example Chunk 1 of Security_Response Message of Data Size 30 (Chunked bit set to 1)", "page": 106}], "subsections": [], "word_count": 1288, "tags": []}
{"section_id": "6.3", "title": "Control Message", "content": "A Message is defined as a Control Message when the Number of Data Objects field in the Message Header is set to 0. The Control Message consists only of a Message Header and a CRC. The Protocol Layer originates the Control Messages (i.e. Accept Message, Reject Message etc.). The Control Message types are specified in the Message Header’s Message Type field (bits 4…0) and are summarized in Table 6-5. The Sent by column indicates entities which May send the given Message (Source, Sink or Cable Plug); entities not listed Shall Not issue the corresponding Message. The “Valid Start of Packet” column indicates the Messages which Shall only be issued in SOP Packets and the Messages which May be issued in SOP* Packets. Table 6-5 Control Message Types Bits Message Type Sent by Description Valid Start 4…0 of Packet", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [{"table_id": "in Table 6-5. The Sent by column indicates entities which May send the given Message (Source, Sink or Cable Plug);", "caption": "in Table 6-5. The Sent by column indicates entities which May send the given Message (Source, Sink or Cable Plug);", "page": 106, "data": []}, {"table_id": "Table 6-5 Control Message Types", "caption": "Table 6-5 Control Message Types", "page": 106, "data": []}], "figures": [], "subsections": [], "word_count": 138, "tags": ["messages", "control"]}
{"section_id": "0", "title": "0000 N/A All values not explicitly defined", "content": "Reserved are Reserved and Shall Not be used.", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "0", "title": "0001 GoodCRC Source, Sink or Cable Plug See Section 6.3.1. SOP*", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["cable", "source", "sink"]}
{"section_id": "0", "title": "0010 GotoMin Source only See Section 6.3.2. SOP only", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source"]}
{"section_id": "0", "title": "0011 Accept Source, Sink or Cable Plug See Section 6.3.3. SOP*", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["cable", "source", "sink"]}
{"section_id": "0", "title": "0100 Reject Source or Sink See Section 6.3.4. SOP only", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "0101 Ping Source only See Section 6.3.5. SOP only", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source"]}
{"section_id": "0", "title": "0110 PS_RDY Source or Sink See Section 6.3.6. SOP only", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "0111 Get_Source_Cap Sink or DRP See Section 6.3.7. SOP only", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1000 Get_Sink_Cap Source or DRP See Section 6.3.8. SOP only", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1001 DR_Swap Source or Sink See Section 6.3.9 SOP only", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1010 PR_Swap Source or Sink See Section 6.3.10 SOP only", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1011 VCONN_Swap Source or Sink See Section 6.3.11 SOP only", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1100 Wait Source or Sink See Section 6.3.12 SOP only", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1101 Soft_Reset Source or Sink See Section 6.3.13 SOP*", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1110- Reserved N/A All values not explicitly defined", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "1111 are Reserved and Shall Not be", "content": "used.", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "1", "title": "0000 Not_Supported Source, Sink or Cable Plug See Section 6.3.14 SOP*", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["cable", "source", "sink"]}
{"section_id": "1", "title": "0001 Get_Source_Cap_Extended Sink or DRP See Section 6.3.15 SOP only", "content": "", "page_start": 106, "page_end": 105, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "1", "title": "0010 Get_Status Source or Sink See Section 6.3.16 SOP only", "content": "Page 106 USB Power Delivery Specification Revision 3.0, Version 1.1 Bits Message Type Sent by Description Valid Start 4…0 of Packet", "page_start": 106, "page_end": 106, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["source", "sink"]}
{"section_id": "1", "title": "0011 FR_Swap Sink1 See Section 6.3.17 SOP only", "content": "", "page_start": 107, "page_end": 106, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["sink"]}
{"section_id": "1", "title": "0100", "content": "Get_PPS_Status Sink See Section 6.3.18 SOP only", "page_start": 107, "page_end": 106, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": []}
{"section_id": "1", "title": "0101 Get_Country_Codes Source or Sink See Section 6.3.19 SOP*", "content": "", "page_start": 107, "page_end": 106, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "1", "title": "0110- Reserved N/A All values not explicitly defined", "content": "", "page_start": 107, "page_end": 106, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "1111 are Reserved and Shall Not be", "content": "used. Note 1: In this case the Port is providing vSafe5V however it will have Rd asserted rather than Rp and sets the Port Power Role field to Sink, until the Fast Role Swap AMS has completed.", "page_start": 107, "page_end": 106, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": []}
{"section_id": "6.3.1", "title": "GoodCRC Message", "content": "The GoodCRC Message Shall be sent by the receiver to acknowledge that the previous Message was correctly received (i.e. had a good CRC). The GoodCRC Message Shall return the Message’s MessageID so the transmitter can determine that the correct Message is being acknowledged. The first bit of the GoodCRC Message Shall be returned within tTransmit after receipt of the last bit of the previous Message. BIST does not send the GoodCRC Message while in a Continuous BIST Mode (see Section 6.4.3).", "page_start": 107, "page_end": 106, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 81, "tags": ["messages"]}
{"section_id": "6.3.2", "title": "GotoMin Message", "content": "The GotoMin Message applies only to those Sinks that have requested power with the GiveBack capable flag set in the Sink Request Data Object. It is a directive to the Sink Port to reduce its operating power level to the amount specified in the Minimum Operating Current field of its latest Sink Request Data Object. The GotoMin process is designed to allow the Source to temporarily reallocate power to meet a short term requirement. For example, a Source can reduce a Sink’s power consumption for 10-20 seconds to allow another Sink (e.g. an HDD to spin up). The Source sends this Message as a means to harvest power in order to meet a request for power that it cannot otherwise meet. The Device Policy Manager determines which Port or ports will receive the Message. The Sink Shall respond to a GotoMin Message by reducing its power consumption to less than or equal to the pre- negotiated value (Minimum Operating Current) within tSnkNewPower time. The Source sends a GotoMin Message as a shortcut in the power negotiation process since the Source and Sink have already made a Contract with respect to the power to be returned. In essence, the Source does not have to advertise its Capabilities and the Sink does not have to make a Request based on them. The Source simply sends the GotoMin Message in place of the Accept Message normally sent during the power negotiation process (see step 19 in Figure 8-5). The power negotiation process then completes from this point in the normal manner with the Source sending a PS_RDY Message once the power supply transition is complete. The steps of the GotoMin process are fully described in Figure 8-6. The Source Shall return power to the Sink(s) it has ‘borrowed’ from using the GotoMin mechanism before it can allocate any ‘new’ power to other devices.", "page_start": 107, "page_end": 106, "content_type": "text", "tables": [], "figures": [{"figure_id": "Message in place of the Accept Message normally sent during the power negotiation process (see step 19 in Figure", "caption": "Message in place of the Accept Message normally sent during the power negotiation process (see step 19 in Figure", "page": 107}, {"figure_id": "in Figure 8-6.", "caption": "in Figure 8-6.", "page": 107}], "subsections": [], "word_count": 310, "tags": ["messages"]}
{"section_id": "6.3.3", "title": "Accept Message", "content": "The Accept Message is a Valid response in the following cases:  It Shall be sent by the Source to signal the Sink that the Source is willing to meet the Request Message.  It Shall be sent by the recipient of the PR_Swap Message to signal that it is willing to do a Power Role Swap and has begun the Power Role Swap sequence. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 107  It Shall be sent by the recipient of the DR_Swap Message to signal that it is willing to do a Data Role Swap and has begun the Data Role Swap sequence.  It Shall be sent by the recipient of the VCONN_Swap Message to signal that it is willing to do a VCONN Swap and has begun the VCONN Swap sequence.  It Shall be sent by the recipient of the FR_Swap Message to indicate that it has begun the Fast Role Swap sequence.  It Shall be sent by the recipient of the Soft_Reset Message to indicate that it has completed its Soft Reset. The Accept Message Shall be sent within tReceiverResponse of the receipt of the last bit of the Message (see Section 6.6.2).", "page_start": 107, "page_end": 107, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 202, "tags": ["messages"]}
{"section_id": "6.3.4", "title": "Reject Message", "content": "The Reject Message is a Valid response in the following cases:  It Shall be sent to signal the Sink that the Source is unable to meet the Request Message. This May be due an Invalid request or because the Source can no longer provide what it previously advertised.  It Shall be sent by the recipient of a PR_Swap Message to indicate it is unable to do a Power Role Swap.  It Shall be sent by the recipient of a DR_Swap Message to indicate it is unable to do a Data Role Swap.  It Shall be sent by the recipient of a VCONN_Swap Message that is not presently the VCONN Source, to indicate it is unable to do a VCONN Swap. The Reject Message Shall be sent within tReceiverResponse of the receipt of the last bit of Message (see Section 6.6.2). Note: the Reject Message is not a Valid response when a Message is not supported. In this case the Not_Supported Message is returned (see Section 6.3.14).", "page_start": 108, "page_end": 107, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 170, "tags": ["messages"]}
{"section_id": "6.3.5", "title": "Ping Message", "content": "The Ping Message was previously used on USB Type-A and USB Type-B connectors to determine the continued presence of the Sink when no other messaging was taking place. USB Type-C connectors have a mechanism to determine Sink presence so when the Port Partners are both connected using USB Type-C connectors the Ping Message is not necessary but May be sent by a Source if desired. A Sink using a USB Type-C connector Shall Not expect to receive Ping Messages but Shall Not treat Ping Messages as an error if they are received.", "page_start": 108, "page_end": 107, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 92, "tags": ["messages"]}
{"section_id": "6.3.6", "title": "PS_RDY Message", "content": "The PS_RDY Message Shall be sent by the Source (or by both the new Sink and new Source during the Power Role Swap sequence or Fast Role Swap sequence) to indicate its power supply has reached the desired operating condition (see Section 8.3.2.2).", "page_start": 108, "page_end": 107, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 43, "tags": ["messages"]}
{"section_id": "6.3.7", "title": "Get_Source_Cap Message", "content": "The Get_Source_Cap (Get Source Capabilities) Message May be sent by a Port to request the Source Capabilities and Dual-Role Power capability of its Port Partner (e.g. Dual-Role Power capable). The Port Shall respond by returning a Source_Capabilities Message (see Section 6.4.1.1.1).", "page_start": 108, "page_end": 107, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["messages", "source"]}
{"section_id": "6.3.8", "title": "Get_Sink_Cap Message", "content": "The Get_Sink_Cap (Get Sink Capabilities) Message May be sent by a Port to request the Sink Capabilities and Dual- Role Power capability of its Port Partner (e.g. Dual-Role Power capable). The Port Shall respond by returning a Sink_Capabilities Message (see Section 6.4.1.1.2). Page 108 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 108, "page_end": 108, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 52, "tags": ["messages", "sink"]}
{"section_id": "6.3.9", "title": "DR_Swap Message", "content": "The DR_Swap Message is used to exchange DFP and UFP operation between Port Partners while maintaining the direction of power flow over V . The DR_Swap process can be used by Port Partners whether or not they support BUS USB Communications capability. A DFP that supports USB Communication Capability starts as the USB Host on Attachment. A UFP that supports USB Communication Capability starts as the USB Device on Attachment. [USB Type-C 1.2] DRPs Shall have the capability to perform a Data Role Swap from the PE_SRC_Ready or PE_SNK_Ready states. DFPs and UFPs May have the capability to perform a Data Role Swap from the PE_SRC_Ready or PE_SNK_Ready states. A Data Role Swap Shall be regarded in the same way as a cable Detach/re-Attach in relation to any USB communication which is ongoing between the Port Partners. If there are any Active Modes between the Port Partners when a DR_Swap Message is a received then a Hard Reset Shall be performed (see Section 6.4.4.3.4). If the Cable Plug has any Active Modes then the DFP Shall Not issue a DR_Swap Message and Shall cause all Active Modes in the Cable Plug to be exited before accepting a DR Swap request. The Source of V BUS and VCONN Source Shall remain unchanged as well as the Rp/Rd resistors on the CC wire during the Data Role Swap process. The DR_Swap Message May be sent by either Port Partner. The recipient of the DR_Swap Message Shall respond by sending an Accept Message, Reject Message or Wait Message.  If an Accept Message is sent, the Source and Sink Shall exchange operational roles.  If a Reject Message is sent, the requester is informed that the recipient is unable, or unwilling, to do a Data Role Swap and no action Shall be taken.  If a Wait Message is sent, the requester is informed that a Data Role Swap might be possible in the future but that no immediate action Shall be taken. Before a Data Role Swap the initial DFP Shall have its Port Data Role bit set to DFP, and the initial UFP Shall have its Port Data Role bit set to UFP. After a successful Data Role Swap the DFP/Host Shall become the UFP/Device and vice-versa; the new DFP Shall have its Port Data Role bit set to DFP, and the new UFP Shall have its Port Data Role bit set to UFP. Where USB Communication is supported by both Port Partners a USB data connection Should be established according to the new data roles. If the Data Role Swap, after having been accepted by the Port Partner, is subsequently not successful, in order to attempt a re-establishment of the connection on the CC Wire, USB Type-C Error Recovery actions, such as disconnect, as defined in [USB Type-C 1.2] will be necessary. See Section 8.3.2.6, Section 8.3.3.16.1 and Section 8.3.3.16.2 for further details.", "page_start": 109, "page_end": 108, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 483, "tags": ["messages"]}
{"section_id": "6.3.10", "title": "PR_Swap Message", "content": "The PR_Swap Message May be sent by either Port Partner to request an exchange of power roles. The recipient of the Message Shall respond by sending an Accept Message, Reject Message or Wait Message.  If an Accept Message is sent, the Source and Sink Shall do a Power Role Swap.  If a Reject Message is sent, the requester is informed that the recipient is unable, or unwilling, to do a Power Role Swap and no action Shall be taken.  If a Wait Message is sent, the requester is informed that a Power Role Swap might be possible in the future but that no immediate action Shall be taken. After a successful Power Role Swap the Port Partners Shall reset their respective Protocol Layers (equivalent to a Soft Reset): resetting their MessageIDCounter, RetryCounter and Protocol Layer state machines before attempting to establish an Explicit Contract. At this point the Source Shall also reset its CapsCounter. Since a UFP Source can attempt to send a Discover Identity Command using SOP’ to a Cable Plug prior to the establishment of an Explicit Contract, a DFP Sink Shall disable the receiving of SOP’ Messages until an Explicit USB Power Delivery Specification Revision 3.0, Version 1.1 Page 109 Contract has been established. This ensures that only the Cable Plug responds with a GoodCRC Message to the Discover Identity Command. The Source Shall have Rp asserted on the CC wire and the Sink Shall have Rd asserted on the CC wire as defined in [USB Type-C 1.2]. When performing a Power Role Swap from Source to Sink, the Port Shall change its CC Wire resistor from Rp to Rd. When performing a Power Role Swap from Sink to Source, the Port Shall change its CC Wire resistor from Rd to Rp. The DFP (Host), UFP (Device) roles and VCONN Source Shall remain unchanged during the Power Role Swap process. Note: during the Power Role Swap process the initial Sink does not disconnect even though V drops below vSafe5V. BUS For more information regarding the Power Role Swap, refer to Section 7.3.9 and Section 7.3.10 in the Power Supply chapter, Section 8.3.2.6, Section 8.3.3.16.3 and Section 8.3.3.16.4 in the Device Policy chapter and Section 9.1.2 for V BUS mapping to USB states.", "page_start": 109, "page_end": 109, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 378, "tags": ["messages"]}
{"section_id": "6.3.11", "title": "VCONN_Swap Message", "content": "The VCONN_Swap Message Shall be supported by any Port that can operate as a VCONN Source. The VCONN_Swap Message May be sent by either Port Partner to request an exchange of VCONN Source. The recipient of the Message Shall respond by sending an Accept Message, Reject Message or Wait Message.  If an Accept Message is sent, the Port Partners Shall perform a VCONN Swap. The new VCONN Source Shall send a PS_RDY Message within tVCONNSourceOn to indicate that it is now sourcing VCONN. The initial VCONN Source Shall cease sourcing VCONN within tVCONNSourceOff of receipt of the last bit of the EOP of the PS_RDY Message.  If a Reject Message is sent, the requester is informed that the recipient is unable, or unwilling, to do a VCONN Swap and no action Shall be taken. A Reject Message Shall only be sent by the Port that is not presently the Vconn Source in response to a VCONN_Swap Message. The Port that is presently the Vconn Source Shall Not send a Reject Message in response to VCONN_Swap Message.  If a Wait Message is sent, the requester is informed that a VCONN Swap might be possible in the future but that no immediate action Shall be taken. A Wait Message Shall only be sent by the Port that is not presently the Vconn Source in response to a VCONN_Swap Message. The Port that is presently the Vconn Source Shall Not send a Wait Message in response to VCONN_Swap Message. The DFP (Host), UFP (Device) roles and Source of V Shall remain unchanged as well as the Rp/Rd resistors on the BUS CC wire during the VCONN Swap process. Note: VCONN Shall be continually sourced during the VCONN Swap process in order to maintain power to the Cable Plug(s) i.e. make before break. Before communicating with a Cable Plug a Port Shall ensure that it is the VCONN Source and that the Cable Plugs are powered, by performing a VCONN swap if necessary. Since it cannot be guaranteed that the present VCONN Source is supplying VCONN, the only means to ensure that the Cable Plugs are powered is for a Port wishing to communicate with a Cable Plug to become the VCONN Source. If a Not_Supported Message is returned in response to the VCONN_Swap Message then the Port is allowed to become the VCONN Source until a Hard Reset or Detach. Note: even when it is presently the VCONN Source, the Sink is not permitted to initiate an AMS with a Cable Plug unless Rp is set to SinkTxOk (see Section 6.9).", "page_start": 110, "page_end": 109, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 431, "tags": ["messages"]}
{"section_id": "6.3.12", "title": "Wait Message", "content": "The Wait Message is a Valid response to a Request, a PR_Swap, DR_Swap or VCONN_Swap Message.  It Shall be sent to signal the Sink that the Source is unable to meet the request at this time.  It Shall be sent by the recipient of a PR_Swap Message to indicate it is unable to do a Power Role Swap at this time.  It Shall be sent by the recipient of a DR_Swap Message to indicate it is unable to do a Data Role Swap at this time. Page 110 USB Power Delivery Specification Revision 3.0, Version 1.1  It Shall be sent by the recipient of a VCONN_Swap Message that is not presently the VCONN Source to indicate it is unable to do a VCONN Swap at this time. The Wait Message Shall be sent within tReceiverResponse of the receipt of the last bit of the Message (see Section 6.6.2).", "page_start": 110, "page_end": 110, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 152, "tags": ["messages"]}
{"section_id": "6.3.12.1", "title": "Wait in response to a Request Message", "content": "The Wait Message is used by the Source when a Sink that has reserved power, requests it. The Wait Message allows the Source time to recover the power it requires to meet the request through the GotoMin process. A Source Shall only send a Wait Message in response to a Request Message when an Explicit Contract exists between the Port Partners. The Sink is allowed to repeat the Request Message using the SinkRequestTimer and Shall ensure that there is tSinkRequest after receiving the Wait Message before sending another Request Message.", "page_start": 111, "page_end": 110, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 90, "tags": ["messages"]}
{"section_id": "6.3.12.2", "title": "Wait in response to a PR_Swap Message", "content": "The Wait Message is used when responding to a PR_Swap Message to indicate that a Power Role Swap might be possible in the future. This can occur in any case where the device receiving the PR_Swap Message needs to evaluate the request further e.g. by requesting Capabilities from the originator of the PR_Swap Message. Once it has completed this evaluation one of the Port Partners Should initiate the Power Role Swap process again by sending a PR_Swap Message. The Wait Message is also used where a Hub is operating in hybrid mode when a request cannot be satisfied (see [USBTypeCBridge 1.0]). A Port that receives a Wait Message in response to a PR_Swap Message Shall wait tPRSwapWait after receiving the Wait Message before sending another PR_Swap Message.", "page_start": 111, "page_end": 110, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 127, "tags": ["messages"]}
{"section_id": "6.3.12.3", "title": "Wait in response to a DR_Swap Message", "content": "The Wait Message is used when responding to a DR_Swap Message to indicate that a Date Role Swap might be possible in the future. This can occur in any case where the device receiving the DR_Swap Message needs to evaluate the request further. Once it has completed this evaluation one of the Port Partners Should initiate the Data Role Swap process again by sending a DR_Swap Message. A Port that receives a Wait Message in response to a DR_Swap Message Shall wait tDRSwapWait after receiving the Wait Message before sending another DR_Swap Message.", "page_start": 111, "page_end": 110, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 93, "tags": ["messages"]}
{"section_id": "6.3.12.4", "title": "Wait in response to a VCONN_Swap Message", "content": "The Wait Message is used when responding to a VCONN_Swap Message to indicate that a VCONN_Swap might be possible in the future. This can occur in any case where the device receiving the VCONN_Swap Message needs to evaluate the request further. A Wait Message Shall only be sent by the Port that is not presently the Vconn Source in response to a VCONN_Swap Message. The Port that is presently the Vconn Source Shall Not send a Wait Message in response to VCONN_Swap Message. Once it has completed this evaluation one of the Port Partners Should initiate the VCONN Swap process again by sending a VCONN_Swap Message. A Port that receives a Wait Message in response to a VCONN_Swap Message Shall wait tVCONNSwapWait after receiving the Wait Message before sending another VCONN_Swap Message.", "page_start": 111, "page_end": 110, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 132, "tags": ["messages"]}
{"section_id": "6.3.13", "title": "Soft Reset Message", "content": "A Soft_Reset Message May be initiated by either the Source or Sink to its Port Partner requesting a Soft Reset. The Soft_Reset Message Shall cause a Soft Reset of the connected Port Pair (see Section 6.8.1). If the Soft_Reset Message fails a Hard Reset Shall be initiated within tHardReset of the last CRCReceiveTimer expiring after nRetryCount retries have been completed. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 111 A Soft_Reset Message is used to recover from Protocol Layer errors; putting the Message counters to a known state in order to regain Message synchronization. The Soft_Reset Message has no effect on the Source or Sink; that is the previously negotiated direction. Voltage and current remain unchanged. Modal Operation is unaffected by Soft Reset. However after a Soft Reset has completed, an Explicit Contract negotiation occurs, in order to re-establish PD Communication and to bring state operation for both Port Partners back to either the PE_SNK_Ready or PE_SRC_Ready states as appropriate (see Section 8.3.3.4). A Soft_Reset Message May be sent by either the Source or Sink when there is a Message synchronization error. If the error is not corrected by the Soft Reset, Hard Reset Signaling Shall be issued (see Section 6.8). A Soft_Reset Message Shall be targeted at a specific entity depending on the type of SOP* Packet used. Soft_Reset Messages sent using SOP Packets Shall Soft Reset the Port Partner only. Soft_Reset Messages sent using SOP’/SOP’’ Packets Shall Soft Reset the corresponding Cable Plug only. After a VCONN Swap the VCONN Source needs to reset the Cable Plug’s Protocol Layer in order to ensure MessageID synchronization. If after a VCONN Swap the VCONN Source wants to communicate with a Cable Plug using SOP’ Packets it Shall issue a Soft_Reset Message using a SOP’ Packet in order to reset the Cable Plug’s Protocol Layer. If the VCONN Source wants to communicate with a Cable Plug using SOP’’ Packets it Shall issue a Soft_Reset Message using a SOP’’ Packet in order to reset the Cable Plug’s Protocol Layer.", "page_start": 111, "page_end": 111, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 338, "tags": ["messages"]}
{"section_id": "6.3.14", "title": "Not_Supported Message", "content": "The Not_Supported Message Shall be sent by a Port in response to any Message it does not support. Returning a Not_Supported Message is assumed in this specification and has not been called out explicitly except in Section 6.12 which defines cases where the Not_Supported Message is returned.", "page_start": 112, "page_end": 111, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 47, "tags": ["messages"]}
{"section_id": "6.3.15", "title": "Get_Source_Cap_Extended Message", "content": "The Get_Source_Cap_Extended (Get Source Capabilities Extended) Message is sent by a Port to request additional information about a Port’s Source Capabilities. The Port Should respond by returning a Source_Capabilities_Extended Message (see Section 6.5.1).", "page_start": 112, "page_end": 111, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "source"]}
{"section_id": "6.3.16", "title": "Get_Status Message", "content": "The Get_Status Message is sent by a Port to request the Port Partner’s present status. The Source or Sink Shall respond by returning a Status Message (see Section 6.5.2). A Port that receives an Alert Message (see Section 6.4.6) indicates that the Source or Sink’s Status has changed and Should be re-read using a Get_Status Message.", "page_start": 112, "page_end": 111, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 56, "tags": ["messages"]}
{"section_id": "6.3.17", "title": "FR_Swap Message", "content": "The FR_Swap Message Shall be sent by the new Source within tFRSwapInit after it has detected a Fast Role Swap signal (see Section 5.8.6.3 and Section 6.6.16). The Fast Role Swap AMS is necessary to apply Rp to the new Source and Rd to the new Sink and to re-synchronize the state machines. The recipient of the FR_Swap Message Shall respond by sending an Accept Message. After a successful Fast Role Swap the Port Partners Shall reset their respective Protocol Layers (equivalent to a Soft Reset): resetting their MessageIDCounter, RetryCounter and Protocol Layer state machines before attempting to establish an Explicit Contract. At this point the Source Shall also reset its CapsCounter. Since a UFP Source can attempt to send a Discover Identity Command using SOP’ to a Cable Plug prior to the establishment of an Explicit Contract, a DFP Sink Shall disable the receiving of SOP’ Messages until an Explicit Contract has been established. This ensures that only the Cable Plug responds with a GoodCRC Message to the Discover Identity Command. Prior to the Fast Role Swap AMS the new Source Shall have Rd asserted on the CC wire and the new Sink Shall have Rp asserted on the CC wire. Note that this is an incorrect assignment of Rp/Rd (since Rp follows the Source and Rd follows the Sink as defined in [USB Type-C 1.2]) that is corrected by the Fast Role Swap AMS. Page 112 USB Power Delivery Specification Revision 3.0, Version 1.1 During the Fast Role Swap AMS the new Source Shall change its CC Wire resistor from Rd to Rp and the new Sink Shall change its CC Wire resistor from Rp to Rd. The DFP (Host), UFP (Device) roles and VCONN Source Shall remain unchanged during the Fast Role Swap process. The initial Source Should avoid being the VCONN source (by using the VCONN Swap process) whenever not actively communicating with the cable, since it is difficult for the initial Source to maintain VCONN power during the Fast Role Swap process. Note: a Fast Role Swap is a “best effort” solution to a situation where a PDUSB Device has lost its external power. This process can occur at any time, even during a Non-interruptible AMS in which case error handling such as Hard Reset or [USB Type-C 1.2] Error Recovery will be triggered. Note: during the Fast Role Swap process the initial Sink does not disconnect even though V drops below vSafe5V. BUS For more information regarding the Fast Role Swap process, refer to Section 7.1.13 and Section 7.2.9.2 in the Power Supply chapter, Section 8.3.3.16.5 and Section 8.3.3.16.6 in the Device Policy chapter and Section 9.1.2 for V BUS mapping to USB states.", "page_start": 112, "page_end": 112, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 450, "tags": ["messages"]}
{"section_id": "6.3.18", "title": "Get_PPS_Status", "content": "The Get_PPS_Status Message is sent by the Sink to request additional information about a Source’s status. The Port Shall respond by returning a PPS_Status Message (see Section 6.5.10).", "page_start": 113, "page_end": 112, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": []}
{"section_id": "6.3.19", "title": "Get_Country_Codes", "content": "The Get_Country_Codes Message is sent by a Port to request the alpha-2 country codes its Port Partner supports as defined in [ISO 3166]. The Port Partner Shall respond by returning a Country_Codes Message (see Section 6.5.11).", "page_start": 113, "page_end": 112, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": []}
{"section_id": "6.4", "title": "Data Message", "content": "A Data Message Shall consist of a Message Header and be followed by one or more Data Objects. Data Messages are easily identifiable because the Number of Data Objects field in the Message Header is a non-zero value. There are several types of Data Objects:  BIST Data Object (BDO) used for PHY Layer compliance testing.  Power Data Object (PDO) used to expose a Source Port’s power capabilities or a Sink’s power requirements.  Request Data Object (RDO) used by a Sink Port to negotiate a Contract.  Vendor Defined Data Object (VDO) used to convey vendor specific information.  Battery Status Data Object (BSDO) used to convey Battery status information.  Alert Data Object (ADO) used to indicates events occurring on the Source or Sink. The type of Data Object being used in a Data Message is defined by the Message Header’s Message Type field and is summarized in Table 6-6. The Sent by column indicates entities which May send the given Message (Source, Sink or Cable Plug); entities not listed Shall Not issue the corresponding Message. The Valid Start of Packet column indicates the Messages which Shall only be issued in SOP Packets and the Messages which May be issued in SOP* Packets. Table 6-6 Data Message Types Bits 4…0 Type Sent by Description Valid Start of Packet", "page_start": 113, "page_end": 112, "content_type": "text", "tables": [{"table_id": "summarized in Table 6-6. The Sent by column indicates entities which May send the given Message (Source, Sink or", "caption": "summarized in Table 6-6. The Sent by column indicates entities which May send the given Message (Source, Sink or", "page": 113, "data": []}, {"table_id": "Table 6-6 Data Message Types", "caption": "Table 6-6 Data Message Types", "page": 113, "data": []}], "figures": [], "subsections": [], "word_count": 221, "tags": ["messages", "data"]}
{"section_id": "0", "title": "0000 Reserved All values not explicitly defined are", "content": "Reserved and Shall Not be used.", "page_start": 113, "page_end": 112, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "0", "title": "0001 Source_Capabilities Source or Dual-Role See Section 6.4.1.2 SOP only", "content": "Power", "page_start": 113, "page_end": 112, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": ["source"]}
{"section_id": "0", "title": "0010 Request Sink only See Section 6.4.2 SOP only", "content": "", "page_start": 113, "page_end": 112, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["sink"]}
{"section_id": "0", "title": "0011 BIST Tester, Source or See Section 6.4.3 SOP*", "content": "Sink USB Power Delivery Specification Revision 3.0, Version 1.1 Page 113 Bits 4…0 Type Sent by Description Valid Start of Packet", "page_start": 113, "page_end": 113, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["source"]}
{"section_id": "0", "title": "0100 Sink_Capabilities Sink or Dual-Role See Section 6.4.1.3 SOP only", "content": "Power", "page_start": 114, "page_end": 113, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": ["sink"]}
{"section_id": "0", "title": "0101 Battery_Status Source or Sink See Section 6.4.5 SOP only", "content": "", "page_start": 114, "page_end": 113, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "0110 Alert Source or Sink See Section 6.4.6 SOP only", "content": "", "page_start": 114, "page_end": 113, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "0111 Get_Country_Info Source or Sink See Section 6.4.7 SOP only", "content": "", "page_start": 114, "page_end": 113, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1000 -0 1110 Reserved All values not explicitly defined are", "content": "Reserved and Shall Not be used.", "page_start": 114, "page_end": 113, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "0", "title": "1111 Vendor_Defined Source, Sink or See Section 6.4.4 SOP*", "content": "Cable Plug", "page_start": 114, "page_end": 113, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": ["source", "sink"]}
{"section_id": "1", "title": "0000-1 1111 Reserved All values not explicitly defined are", "content": "Reserved and Shall Not be used.", "page_start": 114, "page_end": 113, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "6.4.1", "title": "Capabilities Message", "content": "A Capabilities Message (Source_Capabilities Message or Sink_Capabilities Message) Shall have at least one Power Data Object for vSafe5V. The Capabilities Message Shall also contain the sending Port’s information followed by up to 6 additional Power Data Objects. Power Data Objects in a Capabilities Message Shall be sent in the following order: 1. The vSafe5V Fixed Supply Object Shall always be the first object. 2. The remaining Fixed Supply Objects, if present, Shall be sent in voltage order; lowest to highest. 3. The Battery Supply Objects, if present Shall be sent in Minimum Voltage order; lowest to highest. 4. The Variable Supply (non-Battery) Objects, if present, Shall be sent in Minimum Voltage order; lowest to highest. 5. The Programmable Power Supply Objects, if present, Shall be sent in Maximum Voltage order, lowest to highest. Figure 6-12 Example Capabilities Message with 2 Power Data Objects Header Object1 Object2 No. of Data Objects = 2 In Figure 6-12, the Number of Data Objects field is 2: vSafe5V plus one other voltage. Power Data Objects (PDO) and Augmented Power Data Objects (APDO) are identified by the Message Header’s Type field. They are used to form Source_Capabilities Messages and Sink_Capabilities Messages. There are three types of Power Data Objects. They contain additional information beyond that encoded in the Message Header to identify each of the three types of Power Data Objects:  Fixed Supply is the most commonly used to expose well-regulated fixed voltage power supplies.  Variable power supply is used to expose very poorly regulated power supplies.  Battery is used to expose batteries than can be directly connected to V . BUS There is one type of Augmented Power Data Object:  Programmable Power Supply is used to expose a power supply whose output voltage can be programmatically adjusted over the advertised voltage range. Power Data Objects are also used to expose additional capabilities that May be utilized; such as in the case of a Power Role Swap. A list of one or more Power Data Objects Shall be sent by the Source in order to convey its capabilities. The Sink May then request one of these capabilities by returning a Request Data Object that contains an index to a Power Data Object, in order to negotiate a mutually agreeable Contract. Page 114 USB Power Delivery Specification Revision 3.0, Version 1.1 Where Maximum and Minimum Voltage and Current values are given in PDOs these Shall be taken to be absolute values. The Source and Sink Shall Not negotiate a power level that would allow the current to exceed the maximum current supported by their receptacles or the Attached plug (see [USB Type-C 1.2]). The Source Shall limit its offered capabilities to the maximum current supported by its receptacle and Attached plug. A Sink Shall only make a request from any of the capabilities offered by the Source. For further details see Section 4.4. Sources expose their power capabilities by sending a Source_Capabilities Message. Sinks expose their power requirements by sending a Sink_Capabilities Message. Both are composed of a number of 32-bit Power Data Objects (see Table 6-7). Table 6-7 Power Data Object Bit(s) Description B31…30 Value Parameter 00b Fixed supply (Vmin = Vmax) 01b Battery 10b Variable Supply (non-Battery) 11b Augmented Power Data Object (APDO) B29…0 Specific Power Capabilities are described by the PDOs in the following sections. The Augmented Power Data Object (APDO) is defined to allow support for more than the four PDO types by extending the Power Data Object field from 2 to 4 bits when the B31…B30 are 11b. The generic APDO structure is shown in Table 6-8. Table 6-8 Augmented Power Data Object Bit(s) Description B31…30 11b – Augmented Power Datat Object (APDO) B29…28 00b – Programmable Power Supply 01b-11b - Reserved B27…0 Specific Power Capabilities are described by the APDOs in the following sections.", "page_start": 114, "page_end": 114, "content_type": "text", "tables": [{"table_id": "(see Table 6-7).", "caption": "(see Table 6-7).", "page": 115, "data": []}, {"table_id": "Table 6-7 Power Data Object", "caption": "Table 6-7 Power Data Object", "page": 115, "data": []}, {"table_id": "Table 6-8.", "caption": "Table 6-8.", "page": 115, "data": []}, {"table_id": "Table 6-8 Augmented Power Data Object", "caption": "Table 6-8 Augmented Power Data Object", "page": 115, "data": []}], "figures": [{"figure_id": "Figure 6-12 Example Capabilities Message with 2 Power Data Objects", "caption": "Figure 6-12 Example Capabilities Message with 2 Power Data Objects", "page": 114}, {"figure_id": "In Figure 6-12, the Number of Data Objects field is 2: vSafe5V plus one other voltage.", "caption": "In Figure 6-12, the Number of Data Objects field is 2: vSafe5V plus one other voltage.", "page": 114}], "subsections": [], "word_count": 638, "tags": ["messages"]}
{"section_id": "6.4.1.1", "title": "Use of the Capabilities Message", "content": "", "page_start": 115, "page_end": 114, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["messages"]}
{"section_id": "6.4.1.1.1", "title": "Use by Sources", "content": "Sources send a Source_Capabilities Message (see Section 6.4.1) either as part of advertising Port capabilities, or in response to a Get_Source_Cap Message. Following a Hard Reset, a power-on event or plug insertion event, a Source Port Shall send a Source_Capabilities Message after every SourceCapabilityTimer timeout as an advertisement that Shall be interpreted by the Sink Port on Attachment. The Source Shall continue sending a minimum of nCapsCount Source_Capabilities Messages until a GoodCRC Message is received. Additionally, a Source_Capabilities Message Shall only be sent in the following cases:  By the Source Port from the PE_SRC_Ready state upon a change in its ability to supply power.  By a Source Port or Dual-Role Power Port in response to a Get_Source_Cap Message.", "page_start": 115, "page_end": 114, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 120, "tags": ["source"]}
{"section_id": "6.4.1.1.2", "title": "Use by Sinks", "content": "Sinks send a Sink_Capabilities Message (see Section 6.4.1.3) in response to a Get_Sink_Cap Message. A USB Power Delivery capable Sink, upon detecting vSafe5V on V and after a SinkWaitCapTimer timeout without BUS seeing a Source_Capabilities Message, Shall send a Hard Reset. If the Attached Source is USB Power Delivery capable, it responds by sending Source_Capabilities Messages thus allowing power negotiations to begin. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 115", "page_start": 115, "page_end": 115, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 72, "tags": ["sink"]}
{"section_id": "6.4.1.1.3", "title": "Use by Dual-Role Power devices", "content": "Dual-Role Power devices send a Source_Capabilities Message (see Section 6.4.1) as part of advertising Port capabilities when operating in Source role. Dual-Role Power devices send a Source_Capabilities Message (see Section 6.4.1) in response to a Get_Source_Cap Message regardless of their present operating role. Similarly Dual-Role Power devices send a Sink_Capabilities Message (see Section 6.4.1.3) in response to a Get_Sink_Cap Message regardless of their present operating role.", "page_start": 116, "page_end": 115, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 66, "tags": ["devices", "power"]}
{"section_id": "6.4.1.2", "title": "Source_Capabilities Message", "content": "A Source Port Shall report its capabilities in a series of 32-bit Power Data Objects (see Table 6-7) as part of a Source_Capabilities Message (see Figure 6-12). Power Data Objects are used to convey a Source Port’s capabilities to provide power including Dual-Role Power ports presently operating as a Sink. Each Power Data Object Shall describe a specific Source capability such as a Battery (e.g. 2.8-4.1V) or a fixed power supply (e.g. 12V) at a maximum allowable current. The Number of Data Objects field in the Message Header Shall define the number of Power Data Objects that follow the Message Header in a Data Message. All Sources Shall minimally offer one Power Data Object that reports vSafe5V. A Source Shall Not offer multiple Power Data Objects of the same type (fixed, variable, Battery) and the same voltage but Shall instead offer one Power Data Object with the highest available current for that Source capability and voltage. Sinks with Accessory Support do not source V (see BUS [USB Type-C 1.2]) however when sourcing VCONN they Shall advertise vSafe5V with the Maximum Current set to 0mA in the first Power Data Object. A Sink Shall evaluate every Source_Capabilities Message it receives and Shall respond with a Request Message. If its power consumption exceeds the Source’s capabilities it Shall re-negotiate so as not to exceed the Source’s most recently advertised capabilities. A Sink that evaluates the Source_Capabilities Message it receives and identifies a PPS APDO Shall periodically re- request the PPS APDO at least every tPPSRequest until either:  The Sink requests something other than PPS APDO.  There is a Power Role Swap.  There is a Hard Reset. A Source that has accepted a Request Message with a Programmable RDO Shall issue Hard Reset Signaling if it has not received a Request Message with a Programmable RDO within tPPSTimeout. The Source Shall discontinue this behavior after:  Receiving a Request Message with a Fixed, Variable or Battery RDO.  There is a Power Role Swap.  There is a Hard Reset.", "page_start": 116, "page_end": 115, "content_type": "text", "tables": [{"table_id": "A Source Port Shall report its capabilities in a series of 32-bit Power Data Objects (see Table 6-7) as part of a", "caption": "A Source Port Shall report its capabilities in a series of 32-bit Power Data Objects (see Table 6-7) as part of a", "page": 116, "data": []}], "figures": [{"figure_id": "Source_Capabilities Message (see Figure 6-12). Power Data Objects are used to convey a Source Port’s capabilities to", "caption": "Source_Capabilities Message (see Figure 6-12). Power Data Objects are used to convey a Source Port’s capabilities to", "page": 116}], "subsections": [], "word_count": 340, "tags": ["messages", "source"]}
{"section_id": "6.4.1.2.1", "title": "Management of the Power Reserve", "content": "A Power Reserve May be allocated to a Sink when it makes a request from Source Capabilities which includes a Maximum Operating Current/Power. The size of the Power Reserve for a particular Sink is calculated as the difference between its Maximum Operating Current/Power field and its Operating Current/Power field. For a Hub with multiple ports this same Power Reserve May be shared between several Sinks. The Power Reserve May also be temporarily used by a Sink which has indicated it can give back power by setting the GiveBack flag. Where a Power Reserve has been allocated to a Sink the Source Shall indicate the Power Reserve as part of every Source_Capabilities Message it sends. When the same Power Reserve is shared between several Sinks the Source Shall indicate the Power Reserve as part of every Source_Capabilities Message it sends to every Sink. Every time a Source sends capabilities including the Power Reserve capability and then accepts a request from a Sink including the Power Reserve indicated by its Maximum operating Current/Power it is confirming that the Power Reserve is part of the Explicit Contract with the Sink. When the Reserve is being temporarily used by a giveback capable Sink the Source Shall indicate the Power Reserve as available in every Source_Capabilities Message it sends. However in this situation, when the Power Reserve is Page 116 USB Power Delivery Specification Revision 3.0, Version 1.1 requested by a Sink, the Source Shall return a Wait Message while it retrieves this power using a GotoMin Message. Once the additional power has been retrieved the Source Shall send a new Source_Capabilities Message in order to trigger a new request from the Sink requesting the Power Reserve. The Power Reserve May be de-allocated by the Source at any time, but the de-allocation Shall be indicated to the Sink or Sinks using the Power Reserve by sending a new Source_Capabilities Message.", "page_start": 116, "page_end": 116, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 315, "tags": ["power"]}
{"section_id": "6.4.1.2.2", "title": "Fixed Supply Power Data Object", "content": "Table 6-9 describes the Fixed Supply (00b) PDO. See Section 7.1.3 for the electrical requirements of the power supply. Since all USB Providers support vSafe5V, the required vSafe5V Fixed Supply Power Data Object is also used to convey additional information that is returned in bits 29 through 25. All other Fixed Supply Power Data Objects Shall set bits 29…22 to zero. For a Source offering no capabilities, the Voltage (B19…10) Shall be set to 5V and the Maximum Current Shall be set to 0mA. This is used in cases such as a Dual-Role Power device which offers no capabilities in its default role or when external power is required in order to offer power. When a Source wants a Sink, consuming power from V , to go to its lowest power state, the Voltage (B19…10) Shall BUS be set to 5V and the Maximum Current Shall be set to 0mA. This is used in cases where the Source wants the Sink to draw pSnkSusp. Table 6-9 Fixed Supply PDO - Source Bit(s) Description B31…30 Fixed supply B29 Dual-Role Power B28 USB Suspend Supported B27 Unconstrained Power B26 USB Communications Capable B25 Dual-Role Data B24 Unchunked Extended Messages Supported B23…22 Reserved – Shall be set to zero. B21…20 Peak Current B19…10 Voltage in 50mV units B9…0 Maximum Current in 10mA units", "page_start": 117, "page_end": 116, "content_type": "text", "tables": [{"table_id": "Table 6-9 describes the Fixed Supply (00b) PDO. See Section 7.1.3 for the electrical requirements of the power supply.", "caption": "Table 6-9 describes the Fixed Supply (00b) PDO. See Section 7.1.3 for the electrical requirements of the power supply.", "page": 117, "data": []}, {"table_id": "Table 6-9 Fixed Supply PDO - Source", "caption": "Table 6-9 Fixed Supply PDO - Source", "page": 117, "data": []}], "figures": [], "subsections": [], "word_count": 220, "tags": ["power", "data"]}
{"section_id": "6.4.1.2.2.1", "title": "Dual-Role Power", "content": "The Dual-Role Power bit Shall be set when the Port is Dual-Role Power capable i.e. supports the PR_Swap Message. This is a static capability which Shall remain fixed for a given device regardless of the device’s present power role. If the Dual-Role Power bit is set to one in the Source_Capabilities Message the Dual-Role Power bit in the Sink_Capabilities Message Shall also be set to one. If the Dual-Role Power bit is set to zero in the Source_Capabilities Message the Dual-Role Power bit in the Sink_Capabilities Message Shall also be set to zero.", "page_start": 117, "page_end": 116, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 93, "tags": ["power"]}
{"section_id": "6.4.1.2.2.2", "title": "USB Suspend Supported", "content": "Prior to a Contract or when the USB Communications Capable bit is set to zero, this flag is undefined and Sinks Shall follow the rules for suspend as defined in [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2]. After a Contract has been negotiated:  If the USB Suspend Supported flag is set, then the Sink Shall follow the [USB 2.0] or [USB 3.1] rules for suspend and resume. A PDUSB Peripheral May draw up to pSnkSusp during suspend; a PDUSB Hub May draw up to pHubSusp during suspend (see Section 7.2.3). USB Power Delivery Specification Revision 3.0, Version 1.1 Page 117  If the USB Suspend Supported flag is cleared, then the Sink Shall Not apply the [USB 2.0] or [USB 3.1] rules for suspend and May continue to draw the negotiated power. Note that when USB is suspended, the USB device state is also suspended. Sinks May indicate to the Source that they would prefer to have the USB Suspend Supported flag cleared by setting the No USB Suspend flag in a Request Message (see Section 6.4.2.5).", "page_start": 117, "page_end": 117, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 181, "tags": []}
{"section_id": "6.4.1.2.2.3", "title": "Unconstrained Power", "content": "The Unconstrained Power bit Shall be set when an external source of power is available that is sufficient to adequately power the system while charging external devices, or when the device’s primary function is to charge external devices. To set the Unconstrained Power bit as a result of an external source, the external source of power Should be either:  An AC supply, e.g. a wall wart, directly connected to the Sink.  Or, in the case of a PDUSB Hub: o A PD Source with its Unconstrained Power bit set. o Multiple PD Sources all with their Unconstrained Power bits set.", "page_start": 118, "page_end": 117, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 102, "tags": ["power"]}
{"section_id": "6.4.1.2.2.4", "title": "USB Communications Capable", "content": "The USB Communications Capable bit Shall only be set for Sources capable of communication over the USB data lines (e.g. D+/- or SS Tx/Rx).", "page_start": 118, "page_end": 117, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": ["communication"]}
{"section_id": "6.4.1.2.2.5", "title": "Dual-Role Data", "content": "The Dual-Role Data bit Shall be set when the Port is Dual-Role data capable i.e. it supports the DR_Swap Message. This is a static capability which Shall remain fixed for a given device regardless of the device’s present power role or data role. If the Dual-Role Data bit is set to one in the Source_Capabilities Message the Dual-Role Data bit in the Sink_Capabilities Message Shall also be set to one. If the Dual-Role Data bit is set to zero in the Source_Capabilities Message the Dual-Role Data bit in the Sink_Capabilities Message Shall also be set to zero.", "page_start": 118, "page_end": 117, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 97, "tags": ["data"]}
{"section_id": "6.4.1.2.2.6", "title": "Unchunked Extended Messages Supported", "content": "The Unchunked Extended Messages Supported bit Shall be set when the Port can send and receive Extended Messages with Data Size > MaxExtendedMsgLegacyLen bytes in a single, Unchunked Message.", "page_start": 118, "page_end": 117, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": ["messages"]}
{"section_id": "6.4.1.2.2.7", "title": "Peak Current", "content": "The USB Power Delivery Fixed Supply is only required to deliver the amount of current requested in the Operating Current (IOC) field of an RDO. In some usages however, for example computer systems, where there are short bursts of activity, it might be desirable to overload the power source for short periods. For example when a computer system tries to maintain average power consumption, the higher the peak current, the longer the low current (see Section 7.2.8) period needed to maintain such average power. The Peak Current field allows a power source to advertise this additional capability. This capability is intended for direct Port to Port connections only and Shall Not be offered to downstream Sinks via a Hub. Every Fixed Supply PDO Shall contain a Peak Current field. Supplies that want to offer a set of overload capabilities Shall advertise this through the Peak Current field in the corresponding Fixed Supply PDO (see Table 6-10). Supplies that do not support an overload capability Shall set these bits to 00b in the corresponding Fixed Supply PDO. Supplies that support an extended overload capability specified in the PeakCurrent1…3 fields of the Source_Capabilities_Extended Message (see Section 6.5.1) Shall also set these bits to 00b. Sinks wishing to utilize these extended capabilities Shall first send the Get_Source_Cap_Extended Message to determine what capabilities, if any are supported by the Source. Page 118 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 6-10 Fixed Power Source Peak Current Capability Bits 21…20 Description", "page_start": 118, "page_end": 118, "content_type": "text", "tables": [{"table_id": "Shall advertise this through the Peak Current field in the corresponding Fixed Supply PDO (see Table 6-10). Supplies", "caption": "Shall advertise this through the Peak Current field in the corresponding Fixed Supply PDO (see Table 6-10). Supplies", "page": 118, "data": []}, {"table_id": "Table 6-10 Fixed Power Source Peak Current Capability", "caption": "Table 6-10 Fixed Power Source Peak Current Capability", "page": 119, "data": []}], "figures": [], "subsections": [], "word_count": 247, "tags": []}
{"section_id": "00", "title": "Peak current equals IOC (default)", "content": "or look at extended Source capabilities (send Get_Source_Cap_Extended Message)", "page_start": 119, "page_end": 118, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": []}
{"section_id": "01", "title": "Overload Capabilities:", "content": "1. Peak current equals 150% IOC for 1ms @ 5% duty cycle (low current equals 97% IOC for 19ms) 2. Peak current equals 125% IOC for 2ms @ 10% duty cycle (low current equals 97% IOC for 18ms) 3. Peak current equals 110% IOC for 10ms @ 50% duty cycle (low current equals 90% IOC for 10ms)", "page_start": 119, "page_end": 118, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 57, "tags": []}
{"section_id": "10", "title": "Overload Capabilities:", "content": "1. Peak current equals 200% IOC for 1ms @ 5% duty cycle (low current equals 95% IOC for 19ms) 2. Peak current equals 150% IOC for 2ms @ 10% duty cycle (low current equals 94% IOC for 18ms) 3. Peak current equals 125% IOC for 10ms @ 50% duty cycle (low current equals 75% IOC for 10ms)", "page_start": 119, "page_end": 118, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 57, "tags": []}
{"section_id": "11", "title": "Overload Capabilities:", "content": "1. Peak current equals 200% IOC for 1ms @ 5% duty cycle (low current equals 95% IOC for 19ms) 2. Peak current equals 175% IOC for 2ms @ 10% duty cycle (low current equals 92% IOC for 18ms) 3. Peak current equals 150% IOC for 10ms @ 50% duty cycle (low current equals 50% IOC for 10ms)", "page_start": 119, "page_end": 118, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 57, "tags": []}
{"section_id": "6.4.1.2.3", "title": "Variable Supply (non-Battery) Power Data Object", "content": "Table 6-11 describes a Variable Supply (non-Battery) (10b) PDO for a Source. See Section 7.1.3 for the electrical requirements of the power supply. The voltage fields Shall define the range that output voltage Shall fall within. This does not indicate the voltage that will actually be supplied, except it Shall fall within that range. The absolute voltage, including any voltage variation, Shall Not fall below the Minimum Voltage and Shall Not exceed the Maximum Voltage. Table 6-11 Variable Supply (non-Battery) PDO - Source Bit(s) Description B31…30 Variable Supply (non-Battery) B29…20 Maximum Voltage in 50mV units B19…10 Minimum Voltage in 50mV units B9…0 Maximum Current in 10mA units", "page_start": 119, "page_end": 118, "content_type": "text", "tables": [{"table_id": "Table 6-11 describes a Variable Supply (non-Battery) (10b) PDO for a Source. See Section 7.1.3 for the electrical", "caption": "Table 6-11 describes a Variable Supply (non-Battery) (10b) PDO for a Source. See Section 7.1.3 for the electrical", "page": 119, "data": []}, {"table_id": "Table 6-11 Variable Supply (non-Battery) PDO - Source", "caption": "Table 6-11 Variable Supply (non-Battery) PDO - Source", "page": 119, "data": []}], "figures": [], "subsections": [], "word_count": 107, "tags": ["power", "data"]}
{"section_id": "6.4.1.2.4", "title": "Battery Supply Power Data Object", "content": "Table 6-12 describes a Battery (01b) PDO for a Source. See Section 7.1.3 for the electrical requirements of the power supply. The voltage fields Shall represent the Battery’s voltage range. The Battery Shall be capable of supplying the Power value over the entire voltage range. The absolute voltage, including any voltage variation, Shall Not fall below the Minimum Voltage and Shall Not exceed the Maximum Voltage. Note, only the Battery PDO uses power instead of current. The Sink May monitor the Battery voltage. Table 6-12 Battery Supply PDO - Source Bit(s) Description B31…30 Battery B29…20 Maximum Voltage in 50mV units B19…10 Minimum Voltage in 50mV units B9…0 Maximum Allowable Power in 250mW units USB Power Delivery Specification Revision 3.0, Version 1.1 Page 119", "page_start": 119, "page_end": 119, "content_type": "text", "tables": [{"table_id": "Table 6-12 describes a Battery (01b) PDO for a Source. See Section 7.1.3 for the electrical requirements of the power", "caption": "Table 6-12 describes a Battery (01b) PDO for a Source. See Section 7.1.3 for the electrical requirements of the power", "page": 119, "data": []}, {"table_id": "Table 6-12 Battery Supply PDO - Source", "caption": "Table 6-12 Battery Supply PDO - Source", "page": 119, "data": []}], "figures": [], "subsections": [], "word_count": 123, "tags": ["power", "data"]}
{"section_id": "6.4.1.2.5", "title": "Programmable Power Supply Augmented Power Data Object", "content": "Table 6-13 below describes a Programmable Power Supply (1100b) APDO for a Source. See Section 7.1.3 for the electrical requirements of the power supply. This APDO is used primarily for Sink Directed Charge of a Battery in the Sink. When applying a current to the Battery greater than the cable supports, a high efficiency fixed scaler May be used in the Sink to reduce the cable current. The voltage fields define the output voltage range over which the power supply Shall be adjustable in 20mV steps. The Maximum Current field contains the current the Programmable Power Supply Shall be capable of delivering over the advertised voltage range. Table 6-13 Programmable Power Supply APDO - Source Bit(s) Description B31…30 11b – Augmented Power Data Object (APDO) B29…28 00b – Programmable Power Supply 01b…11b - Reserved, Shall Not be used B27…25 Reserved – Shall be set to zero B24…17 Maximum Voltage in 100mV increments B16 Reserved – Shall be set to zero B15…8 Minimum Voltage in 100mV increments B7 Reserved – Shall be set to zero B6…0 Maximum Current in 50mA increments", "page_start": 120, "page_end": 119, "content_type": "text", "tables": [{"table_id": "Table 6-13 below describes a Programmable Power Supply (1100b) APDO for a Source. See Section 7.1.3 for the", "caption": "Table 6-13 below describes a Programmable Power Supply (1100b) APDO for a Source. See Section 7.1.3 for the", "page": 120, "data": []}, {"table_id": "Table 6-13 Programmable Power Supply APDO - Source", "caption": "Table 6-13 Programmable Power Supply APDO - Source", "page": 120, "data": []}], "figures": [], "subsections": [], "word_count": 180, "tags": ["power", "data"]}
{"section_id": "6.4.1.3", "title": "Sink Capabilities Message", "content": "A Sink Port Shall report power levels it is able to operate at in a series of 32-bit Power Data Objects (see Table 6-7). These are returned as part of a Sink_Capabilities Message in response to a Get_Sink_Cap Message (see Figure 6-12). This is similar to that used for Source Port capabilities with equivalent Power Data Objects for Fixed, Variable and Battery Supplies as defined in this section. Power Data Objects are used to convey the Sink Port’s operational power requirements including Dual-Role Power Ports presently operating as a Source. Each Power Data Object Shall describe a specific Sink operational power level, such as a Battery (e.g. 2.8-4.1V) or a fixed power supply (e.g. 12V). The Number of Data Objects field in the Message Header Shall define the number of Power Data Objects that follow the Message Header in a Data Message. All Sinks Shall minimally offer one Power Data Object with a power level at which the Sink can operate. A Sink Shall Not offer multiple Power Data Objects of the same type (fixed, variable, Battery) and the same voltage but Shall instead offer one Power Data Object with the highest available current for that Sink capability and voltage. All Sinks Shall include one Power Data Object that reports vSafe5V even if they require additional power to operate fully. In the case where additional power is required for full operation the Higher Capability bit Shall be set.", "page_start": 120, "page_end": 119, "content_type": "text", "tables": [{"table_id": "A Sink Port Shall report power levels it is able to operate at in a series of 32-bit Power Data Objects (see Table 6-7).", "caption": "A Sink Port Shall report power levels it is able to operate at in a series of 32-bit Power Data Objects (see Table 6-7).", "page": 120, "data": []}], "figures": [{"figure_id": "These are returned as part of a Sink_Capabilities Message in response to a Get_Sink_Cap Message (see Figure 6-12).", "caption": "These are returned as part of a Sink_Capabilities Message in response to a Get_Sink_Cap Message (see Figure 6-12).", "page": 120}], "subsections": [], "word_count": 238, "tags": ["messages", "sink"]}
{"section_id": "6.4.1.3.1", "title": "Sink Fixed Supply Power Data Object", "content": "Table 6-14 describes the Sink Fixed Supply (00b) PDO. See Section 7.1.3 for the electrical requirements of the power supply. The Sink Shall set Voltage to its required voltage and Operational Current to its required operating current. Required operating current is defined as the amount of current a given device needs to be functional. This value could be the maximum current the Sink will ever require or could be sufficient to operate the Sink in one of its modes of operation. Since all USB Consumers support vSafe5V, the required vSafe5V Fixed Supply Power Data Object is also used to convey additional information that is returned in bits 29 through 20. All other Fixed Supply Power Data Objects Shall set bits 29…20 to zero. For a Sink requiring no power from the Source, the Voltage (B19…10) Shall be set to 5V and the Operational Current Shall be set to 0mA. Page 120 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 6-14 Fixed Supply PDO - Sink Bit(s) Description B31…30 Fixed supply B29 Dual-Role Power B28 Higher Capability B27 Unconstrained Power B26 USB Communications Capable B25 Dual-Role Data B24…23 Fast Role Swap required USB Type-C Current (see also [USB Type-C 1.2]): Value Description 00b Fast Swap not supported (default) 01b Default USB Power 10b 1.5A @ 5V 11b 3.0A @ 5V B22…20 Reserved – Shall be set to zero. B19…10 Voltage in 50mV units B9…0 Operational Current in 10mA units", "page_start": 120, "page_end": 120, "content_type": "text", "tables": [{"table_id": "Table 6-14 describes the Sink Fixed Supply (00b) PDO. See Section 7.1.3 for the electrical requirements of the power", "caption": "Table 6-14 describes the Sink Fixed Supply (00b) PDO. See Section 7.1.3 for the electrical requirements of the power", "page": 120, "data": []}, {"table_id": "Table 6-14 Fixed Supply PDO - Sink", "caption": "Table 6-14 Fixed Supply PDO - Sink", "page": 121, "data": []}], "figures": [], "subsections": [], "word_count": 239, "tags": ["power", "sink", "data"]}
{"section_id": "6.4.1.3.1.1", "title": "Dual-Role Power", "content": "The Dual-Role Power bit Shall be set when the Port is Dual-Role Power capable i.e. supports the PR_Swap Message. This is a static capability which Shall remain fixed for a given device regardless of the device’s present power role. If the Dual-Role Power bit is set to one in the Source_Capabilities Message the Dual-Role Power bit in the Sink_Capabilities Message Shall also be set to one. If the Dual-Role Power bit is set to zero in the Sink_Capabilities Message the Dual-Role Power bit in the Sink_Capabilities Message Shall also be set to zero.", "page_start": 121, "page_end": 120, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 93, "tags": ["power"]}
{"section_id": "6.4.1.3.1.2", "title": "Higher Capability", "content": "In the case that the Sink needs more than vSafe5V (e.g. 12V) to provide full functionality, then the Higher Capability bit Shall be set.", "page_start": 121, "page_end": 120, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": []}
{"section_id": "6.4.1.3.1.3", "title": "Unconstrained Power", "content": "The Unconstrained Power bit Shall be set when an external source of power is available that is sufficient to adequately power the system while charging external devices, or when the device’s primary function is to charge external devices. To set the Unconstrained Power bit as a result of an external source, the external source of power Should be either:  An AC supply, e.g. a wall wart, directly connected to the Sink.  Or, in the case of a PDUSB Hub: o A PD Source with its Unconstrained Power bit set. o Multiple PD Sources all with their Unconstrained Power bits set.", "page_start": 121, "page_end": 120, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 102, "tags": ["power"]}
{"section_id": "6.4.1.3.1.4", "title": "USB Communications Capable", "content": "The USB Communications Capable bit Shall only be set for Sinks capable of communication over the USB data lines (e.g. D+/- or SS Tx/Rx).", "page_start": 121, "page_end": 120, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": ["communication"]}
{"section_id": "6.4.1.3.1.5", "title": "Dual-Role Data", "content": "The Dual-Role Data bit Shall be set when the Port is Dual-Role data capable i.e. it supports the DR_Swap Message. This is a static capability which Shall remain fixed for a given device regardless of the device’s present power role or data role. If the Dual-Role Data bit is set to one in the Source_Capabilities Message the Dual-Role Data bit in the USB Power Delivery Specification Revision 3.0, Version 1.1 Page 121 Sink_Capabilities Message Shall also be set to one. If the Dual-Role Data bit is set to zero in the Source_Capabilities Message the Dual-Role Data bit in the Sink_Capabilities Message Shall also be set to zero.", "page_start": 121, "page_end": 121, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 107, "tags": ["data"]}
{"section_id": "6.4.1.3.1.6", "title": "Fast Role Swap USB Type-C Current", "content": "The Fast Role Swap USB Type-C Current field Shall indicate the current level the Sink will require after a Fast Role Swap has been performed. Initially when the new Source applies vSafe5V it will have Rd asserted but Shall provide the USB Type-C Current indicated by the new Sink in this field. If the new Source is not able to supply this level of current it Shall Not perform a Fast Role Swap. When Rp is asserted by the new Source during the Fast Role Swap AMS (see Section 6.3.17), the value of USB Type-C Current indicated by Rp Shall be the same or greater than that indicated in the Fast Role Swap USB Type-C Current field.", "page_start": 122, "page_end": 121, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 117, "tags": []}
{"section_id": "6.4.1.3.2", "title": "Variable Supply (non-Battery) Power Data Object", "content": "Table 6-15 describes a Variable Supply (non-Battery) (10b) PDO used by a Sink. See Section 7.1.3 for the electrical requirements of the power supply. The voltage fields Shall be set to the output voltage range that the Sink requires to operate. The Operational Current field Shall be set to the operational current that the Sink requires at the given voltage range. The absolute voltage, including any voltage variation, Shall Not fall below the Minimum Voltage and Shall Not exceed the Maximum Voltage. Required operating current is defined as the amount of current a given device needs to be functional. This value could be the maximum current the Sink will ever require or could be sufficient to operate the Sink in one of its modes of operation. Table 6-15 Variable Supply (non-Battery) PDO - Sink Bit(s) Description B31…30 Variable Supply (non-Battery) B29…20 Maximum Voltage in 50mV units B19…10 Minimum Voltage in 50mV units B9…0 Operational Current in 10mA units", "page_start": 122, "page_end": 121, "content_type": "text", "tables": [{"table_id": "Table 6-15 describes a Variable Supply (non-Battery) (10b) PDO used by a Sink. See Section 7.1.3 for the electrical", "caption": "Table 6-15 describes a Variable Supply (non-Battery) (10b) PDO used by a Sink. See Section 7.1.3 for the electrical", "page": 122, "data": []}, {"table_id": "Table 6-15 Variable Supply (non-Battery) PDO - Sink", "caption": "Table 6-15 Variable Supply (non-Battery) PDO - Sink", "page": 122, "data": []}], "figures": [], "subsections": [], "word_count": 158, "tags": ["power", "data"]}
{"section_id": "6.4.1.3.3", "title": "Battery Supply Power Data Object", "content": "Table 6-16 describes a Battery (01b) PDO used by a Sink. See Section 7.1.3 for the electrical requirements of the power supply. The voltage fields Shall be set to the output voltage range that the Sink requires to operate. The Operational Power field Shall be set to the operational power that the Sink requires at the given voltage range. The absolute voltage, including any voltage variation, Shall Not fall below the Minimum Voltage and Shall Not exceed the Maximum Voltage. Note, only the Battery PDO uses power instead of current. Required operating power is defined as the amount of power a given device needs to be functional. This value could be the maximum power the Sink will ever require or could be sufficient to operate the Sink in one of its modes of operation. Table 6-16 Battery Supply PDO - Sink Bit(s) Description B31…30 Battery B29…20 Maximum Voltage in 50mV units B19…10 Minimum Voltage in 50mV units B9…0 Operational Power in 250mW units", "page_start": 122, "page_end": 121, "content_type": "text", "tables": [{"table_id": "Table 6-16 describes a Battery (01b) PDO used by a Sink. See Section 7.1.3 for the electrical requirements of the", "caption": "Table 6-16 describes a Battery (01b) PDO used by a Sink. See Section 7.1.3 for the electrical requirements of the", "page": 122, "data": []}, {"table_id": "Table 6-16 Battery Supply PDO - Sink", "caption": "Table 6-16 Battery Supply PDO - Sink", "page": 122, "data": []}], "figures": [], "subsections": [], "word_count": 163, "tags": ["power", "data"]}
{"section_id": "6.4.1.3.4", "title": "Programmable Power Supply Augmented Power Data Object", "content": "Table 6-17 below describes a Programmable Power Supply (1100b) APDO used by a Sink. See Section 7.1.3 for the electrical requirements of the power supply. Page 122 USB Power Delivery Specification Revision 3.0, Version 1.1 The Maximum and Minimum Voltage fields Shall be set to the output voltage range that the Sink requires to operate. The Operational Current field Shall be set to the maximum current the Sink requires over the voltage range. The Operating Current is defined as the maximum amount of current the device needs to fully support its function (e.g., Sink Directed Charge). Table 6-17 Programmable Power Supply APDO - Sink Bit(s) Description B31…30 11b – Augmented Power Data Object (APDO) B29…28 00b – Programmable Power Supply B27…25 Reserved – Shall be set to zero B24…17 Maximum Voltage in 100mV increments B16 Reserved – Shall be set to zero B15…8 Minimum Voltage in 100mV increments B7 Reserved – Shall be set to zero B6…0 Maximum Current in 50mA increments", "page_start": 122, "page_end": 122, "content_type": "text", "tables": [{"table_id": "Table 6-17 below describes a Programmable Power Supply (1100b) APDO used by a Sink. See Section 7.1.3 for the", "caption": "Table 6-17 below describes a Programmable Power Supply (1100b) APDO used by a Sink. See Section 7.1.3 for the", "page": 122, "data": []}, {"table_id": "Table 6-17 Programmable Power Supply APDO - Sink", "caption": "Table 6-17 Programmable Power Supply APDO - Sink", "page": 123, "data": []}], "figures": [], "subsections": [], "word_count": 162, "tags": ["power", "data"]}
{"section_id": "6.4.2", "title": "Request Message", "content": "A Request Message Shall be sent by a Sink to request power, typically during the request phase of a power negotiation. The Request Data Object Shall be returned by the Sink making a request for power. It Shall be sent in response to the most recent Source_Capabilities Message (see Section 8.3.2.2). A Request Message Shall return one and only one Sink Request Data Object that Shall identify the Power Data Object being requested. The Request Message includes the requested power level. For example, if the Source_Capabilities Message includes a Fixed Supply PDO that offers 12V @ 1.5A and if the Sink only wants 12V @ 0.5A, it will set the Operating Current field to 50 (i.e. 10mA * 50 = 0.5A). The Request Message requests the highest current the Sink will ever require in the Maximum Operating Current Field (in this example it would be 100 (100 * 10mA = 1.0A)). The request takes a different form depending on the kind of power requested. The Fixed Power Data Object and Variable Power Data Object share a common format shown in Table 6-18 and Table 6-19. The Battery Power Data Object uses the format shown in Table 6-20 and Table 6-21. The Programmable Request Object the format shown in Table 6-22. Table 6-18 Fixed and Variable Request Data Object Bits Description B31 Reserved – Shall be set to zero B30…28 Object position (000b is Reserved and Shall Not be used) B27 GiveBack flag = 0 B26 Capability Mismatch B25 USB Communications Capable B24 No USB Suspend B23 Unchunked Extended Messages Supported B22…20 Reserved - Shall be set to zero. B19…10 Operating current in 10mA units B9…0 Maximum Operating Current 10mA units Table 6-19 Fixed and Variable Request Data Object with GiveBack Support Bits Description B31 Reserved – Shall be set to zero B30…28 Object position (000b is Reserved and Shall Not be used) B27 GiveBack flag =1 B26 Capability Mismatch USB Power Delivery Specification Revision 3.0, Version 1.1 Page 123 Bits Description B25 USB Communications Capable B24 No USB Suspend B23 Unchunked Extended Messages Supported B22…20 Reserved - Shall be set to zero. B19…10 Operating Current in 10mA units B9…0 Minimum Operating Current 10mA units Table 6-20 Battery Request Data Object Bits Description B31 Reserved – Shall be set to zero B30…28 Object position (000b is Reserved and Shall Not be used) B27 GiveBackFlag = 0 B26 Capability Mismatch B25 USB Communications Capable B24 No USB Suspend B23 Unchunked Extended Messages Supported B22…20 Reserved - Shall be set to zero. B19…10 Operating Power in 250mW units B9…0 Maximum Operating Power in 250mW units Page 124 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 6-21 Battery Request Data Object with GiveBack Support Bits Description B31 Reserved – Shall be set to zero B30…28 Object position (000b is Reserved and Shall Not be used) B27 GiveBackFlag = 1 B26 Capability Mismatch B25 USB Communications Capable B24 No USB Suspend B23 Unchunked Extended Messages Supported B22…20 Reserved - Shall be set to zero. B19…10 Operating Power in 250mW units B9…0 Minimum Operating Power in 250mW units Table 6-22 Programmable Request Data Object Bits Description B31 Reserved – Shall be set to zero B30…28 Object position (000b is Reserved and Shall Not be used) B27 Reserved – Shall be set to zero B26 Capability Mismatch B25 USB Communications Capable B24 No USB Suspend B23 Unchunked Extended Messages Supported B22…20 Reserved - Shall be set to zero. B19…9 Output Voltage in 20mV units B8…7 Reserved - Shall be set to zero. B6…0 Operating Current 50mA units", "page_start": 123, "page_end": 124, "content_type": "text", "tables": [{"table_id": "Variable Power Data Object share a common format shown in Table 6-18 and Table 6-19. The Battery Power Data", "caption": "Variable Power Data Object share a common format shown in Table 6-18 and Table 6-19. The Battery Power Data", "page": 123, "data": []}, {"table_id": "Object uses the format shown in Table 6-20 and Table 6-21. The Programmable Request Object the format shown in", "caption": "Object uses the format shown in Table 6-20 and Table 6-21. The Programmable Request Object the format shown in", "page": 123, "data": []}, {"table_id": "Table 6-22.", "caption": "Table 6-22.", "page": 123, "data": []}, {"table_id": "Table 6-18 Fixed and Variable Request Data Object", "caption": "Table 6-18 Fixed and Variable Request Data Object", "page": 123, "data": []}, {"table_id": "Table 6-19 Fixed and Variable Request Data Object with GiveBack Support", "caption": "Table 6-19 Fixed and Variable Request Data Object with GiveBack Support", "page": 123, "data": []}, {"table_id": "Table 6-20 Battery Request Data Object", "caption": "Table 6-20 Battery Request Data Object", "page": 124, "data": []}, {"table_id": "Table 6-21 Battery Request Data Object with GiveBack Support", "caption": "Table 6-21 Battery Request Data Object with GiveBack Support", "page": 125, "data": []}, {"table_id": "Table 6-22 Programmable Request Data Object", "caption": "Table 6-22 Programmable Request Data Object", "page": 125, "data": []}], "figures": [], "subsections": [], "word_count": 591, "tags": ["messages"]}
{"section_id": "6.4.2.1", "title": "Object Position", "content": "The value in the Object Position field Shall indicate which object in the Source_Capabilities Message the RDO refers. The value 1 always indicates the 5V Fixed Supply PDO as it is the first object following the Source_Capabilities Message Header. The number 2 refers to the next PDO and so forth.", "page_start": 125, "page_end": 124, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 50, "tags": []}
{"section_id": "6.4.2.2", "title": "GiveBack Flag", "content": "The GiveBack flag Shall be set to indicate that the Sink will respond to a GotoMin Message by reducing its load to the Minimum Operating Current. It will typically be used by a USB Device while charging its Battery because a short interruption of the charge will have minimal impact on the user and will allow the Source to manage its load better.", "page_start": 125, "page_end": 124, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 63, "tags": []}
{"section_id": "6.4.2.3", "title": "Capability Mismatch", "content": "A Capability Mismatch occurs when the Sink cannot satisfy its power requirements from the capabilities offered by the Source. In this case the Sink Shall make a Valid request from the offered capabilities and Shall set the Capability Mismatch bit (see Section 8.2.5.2). When a Sink returns a Request Data Object in response to advertised capabilities with this bit set, it indicates that the Sink wants power that the Source cannot provide. This can be due to either a voltage that is not available or the amount of available current. At this point the Source can use the information in the Request Message combined with the contents of the Sink_Capabilities Message to ascertain the Voltage and Current required by the Sink for full operation. In this context a Valid Request Message means the following:  The Object position field Shall contain a reference to an object in the last received Source_Capabilities Message. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 125  The Operating Current/Power field Shall contain a value which is less than or equal to the maximum current/power offered in the Source_Capabilities Message.  If the GiveBack flag is set to zero i.e. there is a Maximum Operating Current/Power field: o If the Capability Mismatch bit is set to one:  The Maximum Operating Current/Power field May contain a value larger than the maximum current/power offered in the Source_Capabilities Message’s PDO as referenced by the Object position field. This enables the Sink to indicate that it requires more current/power than is being offered. If the Sink requires a different voltage this will be indicated by its Sink_Capabilities Message. o Else if the Capability Mismatch bit is set to zero:  The Maximum Operating Current/Power field Shall contain a value less than or equal to the maximum current/power offered in the Source_Capabilities Message’s PDO as referenced by the Object position field.  Else if the GiveBack flag is set to one i.e. there is a Minimum Operating Current/Power field: o The Minimum Operating Current/Power field Shall contain a value less than the Operating Current/Power field.", "page_start": 125, "page_end": 125, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 347, "tags": []}
{"section_id": "6.4.2.4", "title": "USB Communications Capable", "content": "The USB Communications Capable flag Shall be set to one when the Sink has USB data lines and is capable of communicating using either [USB 2.0] or [USB 3.1] protocols. The USB Communications Capable flag Shall be set to zero when the Sink does not have USB data lines or is otherwise incapable of communicating using either [USB 2.0] or [USB 3.1] protocols. This is used by the Source to determine operation in certain cases such as USB suspend. If the USB Communications Capable flag has been set to zero by a Sink then the Source needs to be aware that USB Suspend rules cannot be observed by the Sink.", "page_start": 126, "page_end": 125, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 110, "tags": ["communication"]}
{"section_id": "6.4.2.5", "title": "No USB Suspend", "content": "The No USB Suspend flag May be set by the Sink to indicate to the Source that this device is requesting to continue its Contract during USB Suspend. Sinks setting this flag typically have functionality that can use power for purposes other than USB communication e.g. for charging a Battery. The Source uses this flag to evaluate whether it Should re-issue the Source_Capabilities Message with the USB Suspend flag cleared.", "page_start": 126, "page_end": 125, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 70, "tags": []}
{"section_id": "6.4.2.6", "title": "Unchunked Extended Messages Supported", "content": "The Unchunked Extended Messages Supported bit Shall be set when the Port can send and receive Extended Messages with Data Size > MaxExtendedMsgLegacyLen bytes in a single, Unchunked Message.", "page_start": 126, "page_end": 125, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": ["messages"]}
{"section_id": "6.4.2.7", "title": "Operating Current", "content": "The Operating Current field in the Request Data Object Shall be set to the actual amount of current the Sink needs to operate at a given time. A new Request Message, with an updated Operating Current value, Shall be issued whenever the Sink’s power needs change e.g. from Maximum Operating Current down to a lower current level. In conjunction with the Maximum Operating Current field or Minimum Operating Current field, it provides the Source with additional information that allows it to better manage the distribution of its power. The Operating Current field in the Programmable Request Data Object is used in addition by the Sink to request the Source for the Current Foldback level it needs. When the request is accepted the Source’s output current supplied into any load Shall be less than or equal to the Operating Current. When the Sink attempts to consume more current, the Source Shall reduce the output voltage so as not to exceed the Operating Current value. The value in the Operating Current field Shall Not exceed the value in the Maximum Current field. This field Shall apply to the Fixed, Variable and Programmable RDO. Page 126 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 126, "page_end": 126, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 201, "tags": []}
{"section_id": "6.4.2.8", "title": "Maximum Operating Current", "content": "The Maximum Operating Current field in the Request Message Shall be set to the highest current the Sink will ever require. The difference between the Operating Current and Maximum Operating Current fields (when the GiveBack Flag is cleared) is used by the Device Policy Manager in the Source to calculate the size of the Power Reserve to be maintained (see Section 8.2.5.1). The Operating Current value Shall be less than or equal to the Maximum Operating Current value. When the Capabilities Mismatch bit is set to zero the requested Maximum Operating Current Shall be less than or equal to the current in the offered Source Capabilities since the Source will need to reserve this power for future use. The Maximum Operating Current field Shall continue to be set to the highest current needed in order to maintain the allocation of the Power Reserve. If Maximum Operating Current is requested when the Power Reserve is being used by a GotoMin capable device then the resulting Message will be a Wait Message to enable the Source to reclaim the additional current (see Section 6.3.12.1 and Section 8.2.5.1). When the Capabilities Mismatch bit is set to one the requested Maximum Operating Current May be greater than the current in the offered Source Capabilities since the Source will need this information to ascertain the Sink’s actual needs. See Section 6.4.2.3 for more details of the usage of the Capabilities Mismatch bit. This field Shall apply to the Fixed and Variable RDO.", "page_start": 127, "page_end": 126, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 247, "tags": []}
{"section_id": "6.4.2.9", "title": "Minimum Operating Current", "content": "The Minimum Operating Current field in the Request Message Shall be set to the lowest current the Sink requires to maintain operation. The difference between the Operating Current and Minimum Operating Current fields (when the GiveBack Flag is set) is used by the Device Policy Manager to calculate the amount of power which can be reclaimed using a GotoMin Message. The Operating Current value Shall be greater than the Minimum Operating Current value. This field Shall apply to the Fixed and Variable RDO.", "page_start": 127, "page_end": 126, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 83, "tags": []}
{"section_id": "6.4.2.10", "title": "Operating Power", "content": "The Operating Power field in the Request Data Object Shall be set to the actual amount of power the Sink wants at this time. In conjunction with the Maximum Operating Power field, it provides the Source with additional information that allows it to better manage the distribution of its power. This field Shall apply to the Battery RDO.", "page_start": 127, "page_end": 126, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 58, "tags": ["power"]}
{"section_id": "6.4.2.11", "title": "Maximum Operating Power", "content": "The Maximum Operating Power field in the Request Message Shall be set to the highest power the Sink will ever require. This allows a Source with a power supply shared amongst multiple ports to intelligently distribute power. When the Capabilities Mismatch bit is set to zero the requested Maximum Operating Power Shall be less than or equal to the power in the offered Source Capabilities since the Source will need to reserve this power for future use. The Maximum Operating Power field Shall continue to be set to the highest power needed in order to maintain the allocation of the Power Reserve. If Maximum Operating Power is requested when the Power Reserve is being used by a GotoMin capable device then the resulting Message will be a Wait Message to enable the Source to reclaim the additional power (see Section 6.3.12.1 and Section 8.2.5.1). When the Capabilities Mismatch bit is set to one the requested Maximum Operating Power May be greater than the current in the offered Source Capabilities since the Source will need this information to ascertain the Sink’s actual needs See Section 6.4.2.3 for more details of the usage of the Capabilities Mismatch bit. This field Shall apply to the Battery RDO. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 127", "page_start": 127, "page_end": 127, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 214, "tags": ["power"]}
{"section_id": "6.4.2.12", "title": "Minimum Operating Power", "content": "The Minimum Operating Power field in the Request Message Shall be set to the lowest current the Sink requires to maintain operation. When combined with the Operating Power, it gives a Source with a power supply shared amongst multiple ports information about how much power it can temporarily get back so it can to intelligently distribute power. This field Shall apply to the Battery RDO.", "page_start": 128, "page_end": 127, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 65, "tags": ["power"]}
{"section_id": "6.4.2.13", "title": "Output Voltage", "content": "The Output Voltage field in the Programmable Request Data Object Shall be set by the Sink to the voltage the Sink requires as measured at the Source’s output connector. The Output Voltage field Shall be greater than or equal to the Minimum Voltage field and less than or equal to the Maximum Voltage field in the Programmable Power Supply APDO. This field Shall apply to the Programmable RDO.", "page_start": 128, "page_end": 127, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 68, "tags": ["voltage"]}
{"section_id": "6.4.3", "title": "BIST Message", "content": "The BIST Message is sent to request the Port to enter a Physical Layer test mode (see Section 5.9) that performs one of the following functions:  Enter a Continuous BIST Mode to send a continuous stream of test data to the Tester.  Send BIST test data to the UUT. The Message format is as follows: Figure 6-13 BIST Message Header BIST Data Object No. of Data Objects = 1 or 7 All ports Shall be able to be a Unit Under Test (UUT) only when operating at vSafe5V. All of the following BIST Modes Shall be supported:  Process reception of a BIST Carrier Mode BIST Data Object that Shall result in the generation of the appropriate carrier signal.  Process reception of a BIST Test Data BIST Data Object that Shall result in the Message being Ignored. It is Optional for a Port to take on the role of a Tester. When a Port receives a BIST Message BIST Data Object for a BIST Mode when Power Role swapped or not operating at vSafe5V, the BIST Message Shall be Ignored. When a Port receives a BIST Message BIST Data Object for a BIST Mode it does not support the BIST Message Shall be Ignored. When a Port or Cable Plug receives a BIST Message BIST Data Object for a Continuous BIST Mode that it supports, the Port or Cable Plug enters the requested BIST Mode and Shall remain in that BIST Mode for tBISTContMode and then Shall return to normal operation (see Section 6.6.7.2). The usage model of the PHY Layer BIST modes generally assumes that some controlling agent will request a test of its Port Partner. A UUT Port minimally has to process a request to enter test mode and return error counters. A Tester Port Shall have a means to place the UUT Port into receiver test mode and retrieve the error counters from the UUT. A Port, that is not part of a Tester, is not expected to be the initiator of a receiver test operation, but is not precluded from doing so. In Section 8.3.2.14 there is a sequence description of the test sequences used for compliance testing. The fields in the BIST Data Object are defined in the Table 6-23. Page 128 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 6-23 BIST Data Object Bit(s) Value Parameter Description Reference B31…28 0000b…0100b Shall Not be used Reserved Section 1.4.2.10 0101b BIST Carrier Mode Request Transmitter to enter BIST Section 6.4.3.1 Carrier Mode 0110b…0111b Shall Not be used Section 1.4.2.10 Reserved 1000b BIST Test Data Sends a Test Data Frame. Section 6.4.3.2 1001b…1111b Shall Not be used Section 1.4.2.10 Reserved B27…0 Shall be set to zero. Section 1.4.2.10 Reserved", "page_start": 128, "page_end": 128, "content_type": "text", "tables": [{"table_id": "The fields in the BIST Data Object are defined in the Table 6-23.", "caption": "The fields in the BIST Data Object are defined in the Table 6-23.", "page": 128, "data": []}, {"table_id": "Table 6-23 BIST Data Object", "caption": "Table 6-23 BIST Data Object", "page": 129, "data": []}], "figures": [{"figure_id": "Figure 6-13 BIST Message", "caption": "Figure 6-13 BIST Message", "page": 128}], "subsections": [], "word_count": 456, "tags": ["messages"]}
{"section_id": "6.4.3.1", "title": "BIST Carrier Mode", "content": "Upon receipt of a BIST Message, with a BIST Carrier Mode BIST Data Object, the UUT Shall send out a continuous string of alternating \"1\"s and “0”s. Note: that in the case that the BMC Signaling Scheme is used the “1”s and “0”s will in addition be BMC encoded. The UUT Shall exit the Continuous BIST Mode within tBISTContMode of this Continuous BIST Mode being enabled (see Section 6.6.7.2).", "page_start": 129, "page_end": 128, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 69, "tags": []}
{"section_id": "6.4.3.2", "title": "BIST Test Data", "content": "Upon receipt of a BIST Message, with a BIST Test Data BIST Data Object, the UUT Shall return a GoodCRC Message and Shall enter a test mode in which it sends no further Messages except for GoodCRC Messages in response to received Messages. See Section 5.9.2 for the definition of the Test Data Frame. The test Shall be ended by sending Hard Reset Signaling to reset the UUT.", "page_start": 129, "page_end": 128, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 68, "tags": ["data"]}
{"section_id": "6.4.4", "title": "Vendor Defined Message", "content": "The Vendor_Defined Message (VDM) is provided to allow vendors to exchange information outside of that defined by this specification. A Vendor_Defined Message Shall consist of at least one Vendor Data Object, the VDM Header, and May contain up to a maximum of six additional VDM Objects (VDO). To ensure vendor uniqueness of Vendor_Defined Messages, all Vendor_Defined Messages Shall contain a Valid USB Standard or Vendor ID (SVID) allocated by USB-IF in the VDM Header. Two types of Vendor_Defined Messages are defined: Structured VDMs and Unstructured VDMs. A Structured VDM defines an extensible structure designed to support Modal Operation. An Unstructured VDM does not define any structure and Messages May be created in any manner that the vendor chooses. Vendor_Defined Messages Shall Not be used for direct power negotiation. They May however be used to alter Local Policy, affecting what is offered or consumed via the normal PD Messages. For example a Vendor_Defined Message could be used to enable the Source to offer additional power via a Source_Capabilities Message. The Message format Shall be as shown in Figure 6-14. Figure 6-14 Vendor Defined Message Header VDM Header 0-6 VDOs No. of Data Objects = 1-7 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 129 The VDM Header Shall be the first 4-byte object in a Vendor Defined Message. The VDM Header provides command space to allow vendors to customize Messages for their own purposes. Additionally vendors May make use of the Commands in a Structured VDM. The fields in the VDM Header for an Unstructured VDM, when the VDM Type Bit is set to zero, Shall be as defined in Table 6-24. The fields in the VDM Header for a Structured VDM, when the VDM Type Bit is set to one Shall be as defined in Table 6-25. Both Unstructured and Structured VDMs Shall only be sent and received after an Explicit Contract has been established. The only exception to this is the Discover Identity Command which May be sent by Source when no Contract or an Implicit Contract (in place after a Power Role Swap or Fast Role Swap) is in place in order to discover Cable capabilities (see Section 8.3.3.22.3). A VDM Message sequence Shall Not interrupt any other PD Message Sequence. A VDM Message sequence Shall be interruptible by any other PD Message Sequence.", "page_start": 129, "page_end": 129, "content_type": "text", "tables": [{"table_id": "Table 6-24. The fields in the VDM Header for a Structured VDM, when the VDM Type Bit is set to one Shall be as", "caption": "Table 6-24. The fields in the VDM Header for a Structured VDM, when the VDM Type Bit is set to one Shall be as", "page": 130, "data": []}, {"table_id": "defined in Table 6-25.", "caption": "defined in Table 6-25.", "page": 130, "data": []}], "figures": [{"figure_id": "The Message format Shall be as shown in Figure 6-14.", "caption": "The Message format Shall be as shown in Figure 6-14.", "page": 129}, {"figure_id": "Figure 6-14 Vendor Defined Message", "caption": "Figure 6-14 Vendor Defined Message", "page": 129}], "subsections": [], "word_count": 387, "tags": ["messages"]}
{"section_id": "6.4.4.1", "title": "Unstructured VDM", "content": "The Unstructured VDM does not define the contents of bits B14…0 in the VDM Header. Their definition and use are the sole responsibility of the vendor indicated by the VID. The Port Partners and Cable Plugs Shall exit any states entered using an Unstructured VDM when a Hard Reset appears on PD. The following rules apply to the use of Unstructured VDM Messages:  Unstructured VDMs Shall only be used when an Explicit Contract is in place.  Prior to establishing an Explicit Contract Unstructured VDMs Shall Not be sent and Shall be Ignored if received.  Only the DFP Shall be an Initiator of Unstructured VDMs.  Only the UFP or a Cable Plug Shall be a Responder to Unstructured VDM.  Unstructured VDMs Shall Not be initiated or responded to under any other circumstances.  A “command” sequence Shall be interruptible e.g. due to the need for a power related AMS.  Unstructured VDMs Shall only be used during Modal Operation in the context of an Active Mode.  Unstructured VDMs May be used with SOP* Packets.  When a DFP or UFP does not support Unstructured VDMs or does not recognize the VID it Shall return a Not_Supported Message. Table 6-24 illustrates the VDM Header bits. Table 6-24 Unstructured VDM Header Bit(s) Parameter Description B31…16 Vendor ID (VID) Unique 16-bit unsigned integer. Assigned by the USB-IF to the Vendor. B15 VDM Type 0 = Unstructured VDM B14…0 Available for Vendor Use Content of this field is defined by the vendor.", "page_start": 130, "page_end": 129, "content_type": "text", "tables": [{"table_id": "Table 6-24 illustrates the VDM Header bits.", "caption": "Table 6-24 illustrates the VDM Header bits.", "page": 130, "data": []}, {"table_id": "Table 6-24 Unstructured VDM Header", "caption": "Table 6-24 Unstructured VDM Header", "page": 130, "data": []}], "figures": [], "subsections": [], "word_count": 253, "tags": []}
{"section_id": "6.4.4.1.1", "title": "USB Vendor ID", "content": "The Vendor ID field Shall contain the 16-bit Vendor ID value assigned to the vendor by the USB-IF (VID). No other value Shall be present in this field.", "page_start": 130, "page_end": 129, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": []}
{"section_id": "6.4.4.1.2", "title": "VDM Type", "content": "The VDM Type field Shall be set to zero indicating that this is an Unstructured VDM.", "page_start": 130, "page_end": 129, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 16, "tags": []}
{"section_id": "6.4.4.2", "title": "Structured VDM", "content": "Setting the VDM Type field to 1 (Structured VDM) defines the use of bits B14…0 in the Structured VDM Header. The fields in the Structured VDM Header are defined in Table 6-25. The following rules apply to the use of Structured VDM Messages: Page 130 USB Power Delivery Specification Revision 3.0, Version 1.1  Structured VDMs Shall only be used when an Explicit Contract is in place with the following exception: o Prior to establishing an Explicit Contract a Source May issue Discover Identity Messages, to a Cable Plug using SOP’ Packets, as an Initiator (see Section 8.3.3.22.3).  Either Port May be an Initiator of Structured VDMs except for the Enter Mode and Exit Mode Commands which Shall only be initiated by the DFP.  A Cable Plug Shall only be a Responder to Structured VDMs.  Enter Mode and Exit Mode Commands Shall only be responded to by a UFP or Cable Plug.  Structured VDMs Shall Not be initiated or responded to under any other circumstances.  When a DFP or UFP does not support Structured VDMs any Structured VDMs received Shall return a Not_Supported Message.  When a Cable Plug does not support Structured VDMs any Structured VDMs received Shall be Ignored.  A DFP, UFP or Cable Plug which supports Structured VDMs and receiving a Structured VDM for a SVID that it does not recognize Shall reply with a NAK Command.  A Structured VDM Command sequence Shall be interruptible e.g. due to the need for a power related AMS. Table 6-25 Structured VDM Header Bit(s) Field Description B31…16 Standard or Vendor ID Unique 16 bit unsigned integer, assigned by the USB-IF (SVID) B15 VDM Type 1 = Structured VDM B14…13 Structured VDM Version Version Number of the Structured VDM (not this specification Version):  Version 1.0 = 00b (Shall Not be used)  Version 2.0 = 01b  Values 2-3 are Reserved and Shall Not be used B12…11 Reserved For Commands 0…15 Shall be set to 0 and Shall be Ignored SVID Specific Commands (16…31) defined by the SVID. B10…8 Object Position For the Enter Mode, Exit Mode and Attention Commands (Requests/Responses):  000b = Reserved and Shall Not be used.  001b…110b = Index into the list of VDOs to identify the desired Mode VDO  111b = Exit all Active Modes (equivalent of a power on reset). Shall only be used with the Exit Mode Command. Commands 0…3, 7…15:  000b  001b…111b = Reserved and Shall Not be used. SVID Specific Commands (16…31) defined by the SVID. B7…6 Command Type 00b = REQ (Request from Initiator Port) 01b = ACK (Acknowledge Response from Responder Port) 10b = NAK (Negative Acknowledge Response from Responder Port) 11b = BUSY (Busy Response from Responder Port) B5 Reserved Shall be set to 0 and Shall be Ignored B4…0 Command1 0 = Reserved, Shall Not be used", "page_start": 130, "page_end": 130, "content_type": "text", "tables": [{"table_id": "fields in the Structured VDM Header are defined in Table 6-25.", "caption": "fields in the Structured VDM Header are defined in Table 6-25.", "page": 130, "data": []}, {"table_id": "Table 6-25 Structured VDM Header", "caption": "Table 6-25 Structured VDM Header", "page": 131, "data": []}], "figures": [], "subsections": [], "word_count": 481, "tags": []}
{"section_id": "1", "title": "= Discover Identity", "content": "", "page_start": 131, "page_end": 130, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "= Discover SVIDs", "content": "", "page_start": 131, "page_end": 130, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "= Discover Modes", "content": "", "page_start": 131, "page_end": 130, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "= Enter Mode", "content": "", "page_start": 131, "page_end": 130, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "5", "title": "= Exit Mode", "content": "", "page_start": 131, "page_end": 130, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6", "title": "= Attention", "content": "7-15 = Reserved, Shall Not be used 16…31 = SVID Specific Commands USB Power Delivery Specification Revision 3.0, Version 1.1 Page 131 Bit(s) Field Description Note 1: In the case where a SID is used the modes are defined by a standard. When a VID is used the modes are defined by the Vendor. Table 6-26 shows the Commands, which SVID to use with each Command and the SOP* values which Shall be used. Table 6-26 Structured VDM Commands Command VDM Header SVID Field SOP* used Discover Identity Shall only use the PD SID. Shall only use SOP/SOP’. Discover SVIDs Shall only use the PD SID. Shall only use SOP/SOP’. Discover Modes Valid with any SVID. Shall only use SOP/SOP’. Enter Mode Valid with any SVID. Valid with SOP*. Exit Mode Valid with any SVID. Valid with SOP*. Attention Valid with any SVID. Valid with SOP. SVID Specific Valid with any SVID. Valid with SOP* (defined by SVID). Commands", "page_start": 131, "page_end": 131, "content_type": "text", "tables": [{"table_id": "Table 6-26 shows the Commands, which SVID to use with each Command and the SOP* values which Shall be used.", "caption": "Table 6-26 shows the Commands, which SVID to use with each Command and the SOP* values which Shall be used.", "page": 132, "data": []}, {"table_id": "Table 6-26 Structured VDM Commands", "caption": "Table 6-26 Structured VDM Commands", "page": 132, "data": []}], "figures": [], "subsections": [], "word_count": 159, "tags": []}
{"section_id": "6.4.4.2.1", "title": "SVID", "content": "The SVID field Shall contain either a 16-bit USB Standard ID value (SID) or the 16-bit assigned to the vendor by the USB-IF (VID). No other value Shall be present in this field. Table 6-27 lists specific SVID values referenced by this specification. Table 6-27 SVID Values Parameter Value Description PD SID 0xFF00 Standard ID allocated to this specification.", "page_start": 132, "page_end": 131, "content_type": "text", "tables": [{"table_id": "Table 6-27 lists specific SVID values referenced by this specification.", "caption": "Table 6-27 lists specific SVID values referenced by this specification.", "page": 132, "data": []}, {"table_id": "Table 6-27 SVID Values", "caption": "Table 6-27 SVID Values", "page": 132, "data": []}], "figures": [], "subsections": [], "word_count": 59, "tags": []}
{"section_id": "6.4.4.2.2", "title": "VDM Type", "content": "The VDM Type field Shall be set to one indicating that this is a Structured VDM.", "page_start": 132, "page_end": 131, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 16, "tags": []}
{"section_id": "6.4.4.2.3", "title": "Structured VDM Version", "content": "The Structured VDM Version field indicates the level of functionality supported in the Structured VDM part of the specification. This is not the same version as the version of this specification. This field Shall be set to 01b to indicate Version 2.0. To ensure interoperability with existing USBPD Products, USBPD Products Shall support every Structured VDM Version number starting from Version 1.0. On receipt of a VDM Header with a higher Version number than that supported, a Port Shall respond using the highest Version number it supports. The Structured VDM Version field of the Discover Identity Command sent and received during VDM discovery Shall be used to determine the lowest common Structured VDM Version supported by the Port Partners or Cable Plug and Shall continue to operate using this Specification Revision until they are Detached. After discovering the Structure VDM Version, the Structured VDM Version field Shall match the agreed common Structured VDM Version.", "page_start": 132, "page_end": 131, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 154, "tags": []}
{"section_id": "6.4.4.2.4", "title": "Object Position", "content": "The Object Position field Shall be used by the Enter Mode and Exit Mode Commands. The Discover Modes Command returns a list of zero to six VDOs, each of which describes a Mode. The value in Object Position field is an index into that list that indicates which VDO (e.g. Mode) in the list the Enter Mode and Exit Mode Command refers to. The Object Position Shall start with one for the first Mode in the list. If the SVID is a VID, the content of the VDO for the Mode Page 132 USB Power Delivery Specification Revision 3.0, Version 1.1 Shall be defined by the vendor. If the SVID is a SID, the content Shall be defined by the Standard. The VDO’s content May be as simple as a numeric value or as complex as bit mapped description of capabilities of the Mode. In all cases, the Responder is responsible for deciphering the contents to know whether or not it supports the Mode at the Object Position. This field Shall be set to zero in the Request or Response (REQ, ACK, NAK or BUSY) when not required by the specification of the individual Command.", "page_start": 132, "page_end": 132, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 195, "tags": []}
{"section_id": "6.4.4.2.5", "title": "Command Type", "content": "", "page_start": 133, "page_end": 132, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6.4.4.2.5.1", "title": "Commands other than Attention", "content": "This Command Type field Shall be used to indicate the type of Command request/response being sent. An Initiator Shall set the field to REQ to indicate that this is a Command request from an Initiator. If Structured VDMs are supported, then the responses are as follows:  “Responder ACK” is the normal return and Shall be sent to indicate that the Command request was received and handled normally.  “Responder NAK” Shall be returned when the Command request:  Has an Invalid parameter (e.g. Invalid SVID or Mode).  Cannot not be acted upon because the configuration is not correct (e.g. a Mode which has a dependency on another Mode or a request to exit a Mode which is not Active).  Is Unrecognized.  The handling of “Responder NAK” is left up to the Initiator.  “Responder BUSY” Shall be sent in the response to a VDM when the Responder is unable to respond to the Command request immediately, but the Command request May be retried. The Initiator Shall wait tVDMBusy after a “Responder BUSY” response is received before retrying the Command request.", "page_start": 133, "page_end": 132, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 184, "tags": []}
{"section_id": "6.4.4.2.5.2", "title": "Attention Command", "content": "This Command Type field Shall be used to indicate the type of Command request being sent. An Initiator Shall set the field to REQ to indicate that this is a Command request from an Initiator. If Structured VDMs are supported, then no response Shall be made to an Attention Command.", "page_start": 133, "page_end": 132, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 50, "tags": []}
{"section_id": "6.4.4.2.6", "title": "Command", "content": "", "page_start": 133, "page_end": 132, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6.4.4.2.6.1", "title": "Commands other than Attention", "content": "This field contains the value for the VDM Command being sent. The Commands explicitly listed in this field are used to identify devices and manage their operational Modes. There is a further range of Command values left for the vendor to use to manage additional extensions. A Structured VDM Command consists of a Command request and a Command response (ACK, NAK or BUSY). A Structured VDM Command is deemed to be completed (and if applicable, the transition to the requested functionality is made) when the GoodCRC Message has been successfully received by the Responder in reply to its Command response. If Structured VDMs are supported, but the Structured VDM Command request is not recognized it Shall be NAKed (see Table 6-28).", "page_start": 133, "page_end": 132, "content_type": "text", "tables": [{"table_id": "Table 6-28).", "caption": "Table 6-28).", "page": 133, "data": []}], "figures": [], "subsections": [], "word_count": 121, "tags": []}
{"section_id": "6.4.4.2.6.2", "title": "Attention Command", "content": "This field contains the value for the VDM Command being sent (Attention). The Attention Command May be used by the Initiator to notify the Responder that it requires service. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 133 A Structured VDM Attention Command consists of a Command request but no Command response. A Structured VDM Attention Command is deemed to be completed when the GoodCRC Message has been successfully received by the Initiator in reply to its Attention Command request. If Structured VDMs are supported, but the Structured VDM Attention Command request is not recognized it Shall be Ignored (see Table 6-28).", "page_start": 133, "page_end": 133, "content_type": "text", "tables": [{"table_id": "Ignored (see Table 6-28).", "caption": "Ignored (see Table 6-28).", "page": 134, "data": []}], "figures": [], "subsections": [], "word_count": 103, "tags": []}
{"section_id": "6.4.4.3", "title": "Use of Commands", "content": "The VDM Header for a Structured VDM Message defines Commands used to retrieve a list of SVIDs the device supports, to discover the Modes associated with each SVID, and to enter/exit the Modes. The Commands include:  Discover Identity.  Discover SVIDs.  Discover Modes.  Enter Mode.  Exit Mode.  Attention. Additional Command space is also reserved for Standard and Vendor use and for future extensions. The Command sequences use the terms Initiator and Responder to identify messaging roles the ports are taking on relative to each other. This role is independent of the Port’s power capability (Provider, Consumer etc.) or its present power role (Source or Sink). The Initiator is the Port sending the initial Command request and the Responder is the Port replying with the Command response. See Section 6.4.4.3.6. All Ports that support Modes Shall support the Discover Identity, Discover SVIDs, the Discover Modes, the Enter Mode and Exit Mode Commands. Table 6-28 details the responses a Responder May issue to each Command request. Responses not listed for a given Command Shall Not be sent by a Responder. A NAK response Should be taken as an indication not to retry that particular Command. Table 6-28 Commands and Responses Command Allowed Response Reference Discover Identity ACK, NAK, BUSY Section 6.4.4.3.1 Discover SVIDs ACK, NAK, BUSY Section 6.4.4.3.2 Discover Modes ACK, NAK, BUSY Section 6.4.4.3.3 Enter Mode ACK, NAK Section 6.4.4.3.4 Exit Mode ACK, NAK Section 6.4.4.3.5 Attention None Section 6.4.4.3.6 Examples of Command usage can be found in Appendix G.", "page_start": 134, "page_end": 133, "content_type": "text", "tables": [{"table_id": "Table 6-28 details the responses a Responder May issue to each Command request. Responses not listed for a given", "caption": "Table 6-28 details the responses a Responder May issue to each Command request. Responses not listed for a given", "page": 134, "data": []}, {"table_id": "Table 6-28 Commands and Responses", "caption": "Table 6-28 Commands and Responses", "page": 134, "data": []}], "figures": [], "subsections": [], "word_count": 254, "tags": []}
{"section_id": "6.4.4.3.1", "title": "Discover Identity", "content": "The Discover Identity Command is provided to enable an Initiator to identify its Port Partner and for an Initiator (VCONN Source) to identify the Responder (Cable Plug). The Discover Identity Command is also used to determine whether a Cable Plug is PD-Capable by looking for a GoodCRC Message Response. The Discover Identity Command Shall be used to determine whether a given Cable Plug is PD Capable (see Section 8.3.3.18.1 and Section 8.3.3.22.3). In this case a Discover Identity Command request sent to SOP' Shall Not cause a Soft Reset if a GoodCRC Message response is not returned since this can indicate a non-PD Capable cable. Note that a Cable Plug will not be ready for PD Communication until tVCONNStable after VCONN has been applied (see [USB Type-C 1.2]). During Cable Plug discovery, when there is an Explicit Contract, Discover Identity Commands are sent at a rate defined by the DiscoverIdentityTimer (see Section 6.6.14) up to a maximum of nDiscoverIdentityCount times (see Section 6.7.5). Page 134 USB Power Delivery Specification Revision 3.0, Version 1.1 A PD-Capable Cable Plug Shall return a Discover Identity Command ACK in response to a Discover Identity Command request sent to SOP’. A PD-Capable UFP that supports Modal Operation Shall return a Discover Identity Command ACK in response to a Discover Identity Command request sent to SOP. The SVID in the Discover Identity Command request Shall be set to the PD SID (see Table 6-27). The Number of Data Objects field in the Message Header in the Discover Identity Command request Shall be set to 1 since the Discover Identity Command request Shall Not contain any VDOs. The Discover Identity Command ACK sent back by the Responder Shall contain an ID Header VDO, a Cert Stat VDO, a Product VDO and the Product Type VDOs defined by the Product Type as shown in Figure 6-15. This specification defines the following Product Type VDOs:  Cable VDO (see Section 6.4.4.3.1.4).  Alternate Mode Adapter VDO (see Section 6.4.4.3.1.5). No VDOs other than those defined in this specification Shall be sent as part of the Discover Identity Command response. Where there is no Product Type VDO defined for a specific Product Type, no VDOs Shall be sent as part of the Discover Identity Command response. Any additional VDOs received by the initiator Shall be Ignored. Figure 6-15 Discover Identity Command response Header VDM Header ID Header VDO Cert Stat VDO Product VDO 0..32 Product Type VDO(s) No. of Data Objects = 4-71 1 Only Data objects defined in this specification can be sent as part of the Discover Identity Command.", "page_start": 134, "page_end": 134, "content_type": "text", "tables": [{"table_id": "The SVID in the Discover Identity Command request Shall be set to the PD SID (see Table 6-27).", "caption": "The SVID in the Discover Identity Command request Shall be set to the PD SID (see Table 6-27).", "page": 135, "data": []}], "figures": [{"figure_id": "Product VDO and the Product Type VDOs defined by the Product Type as shown in Figure 6-15. This specification", "caption": "Product VDO and the Product Type VDOs defined by the Product Type as shown in Figure 6-15. This specification", "page": 135}, {"figure_id": "Figure 6-15 Discover Identity Command response", "caption": "Figure 6-15 Discover Identity Command response", "page": 135}], "subsections": [], "word_count": 431, "tags": []}
{"section_id": "2", "title": "The following sections define the number and content of the VDOs for each Product Type.", "content": "The Number of Data Objects field in the Message Header in the Discover Identity Command NAK and BUSY responses Shall be set to 1 since they Shall Not contain any VDOs.", "page_start": 135, "page_end": 134, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 31, "tags": []}
{"section_id": "6.4.4.3.1.1", "title": "ID Header VDO", "content": "The ID Header VDO contains information corresponding to the Power Delivery Product. The fields in the ID Header VDO Shall be as defined in Table 6-29. Table 6-29 ID Header VDO Bit(s) Description Reference B31 USB Communications Capable as USB Host: Section 6.4.4.3.1.1.1  Shall be set to one if the product is capable of enumerating USB Devices.  Shall be set to zero otherwise B30 USB Communications Capable as a USB Device: Section 6.4.4.3.1.1.2  Shall be set to one if the product is capable of being enumerated as a USB Device.  Shall be set to zero otherwise B29…27 Product Type (UFP): Section 6.4.4.3.1.1.3  000b – Undefined  001b – PDUSB Hub  010b – PDUSB Peripheral  011b…100b – Reserved, Shall Not be used.  101b – Alternate Mode Adapter (AMA)  110b…111b – Reserved, Shall Not be used. Product Type (Cable Plug):  000b – Undefined  001b…010b – Reserved, Shall Not be used. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 135 Bit(s) Description Reference  011b – Passive Cable  100b – Active Cable  101b…111b – Reserved, Shall Not be used. B26 Modal Operation Supported: Section 6.4.4.3.1.1.4  Shall be set to one if the product supports Modal Operation.  Shall be set to zero otherwise B25…23 Product Type (DFP):  000b – Undefined  001b – PDUSB Hub  010b – PDUSB Host  011b – Power Brick  100b - Alternate Mode Controller (AMC)  101b…111b – Reserved, Shall Not be used. B22…16 Reserved. Shall be set to zero. B15…0 16-bit unsigned integer. USB Vendor ID [USB 2.0]/[USB 3.1]", "page_start": 135, "page_end": 135, "content_type": "text", "tables": [{"table_id": "VDO Shall be as defined in Table 6-29.", "caption": "VDO Shall be as defined in Table 6-29.", "page": 135, "data": []}, {"table_id": "Table 6-29 ID Header VDO", "caption": "Table 6-29 ID Header VDO", "page": 135, "data": []}], "figures": [], "subsections": [], "word_count": 270, "tags": []}
{"section_id": "6.4.4.3.1.1.1", "title": "Data Capable as a USB Host", "content": "The Data Capable as a USB Host field is used to indicate whether or not the Port has a USB Host Capability.", "page_start": 136, "page_end": 135, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": ["data"]}
{"section_id": "6.4.4.3.1.1.2", "title": "Data Capable as a USB Device", "content": "The Data Capable as a USB Device field is used to indicate whether or not the Port has a USB Device Capability.", "page_start": 136, "page_end": 135, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": ["devices", "data"]}
{"section_id": "6.4.4.3.1.1.3", "title": "Product Type (UFP)", "content": "The Product Type (UFP) field indicates the type of Product when in UFP Data Role, whether a VDO will be returned and if so the type of VDO to be returned. For DRD Products this field Shall indicate the capability regardless of the present Data Role. Table 6-30 defines the Product Type VDOs which Shall be returned. Table 6-30 Product Types (UFP) Product Type Description Product Type VDO Reference Undefined Shall be used where no other Product Type None value is appropriate. PDUSB Hub Shall be used when the Product is a PDUSB None Hub. PDUSB Peripheral Shall be used when the Product is a PDUSB None Device other than a PDUSB Hub. Alternate Mode Shall be used when the Product is a PDUSB AMA VDO Adapter Device that supports one or more Alternate Section 6.4.4.3.1.5 Modes.", "page_start": 136, "page_end": 135, "content_type": "text", "tables": [{"table_id": "present Data Role. Table 6-30 defines the Product Type VDOs which Shall be returned.", "caption": "present Data Role. Table 6-30 defines the Product Type VDOs which Shall be returned.", "page": 136, "data": []}, {"table_id": "Table 6-30 Product Types (UFP)", "caption": "Table 6-30 Product Types (UFP)", "page": 136, "data": []}], "figures": [], "subsections": [], "word_count": 137, "tags": []}
{"section_id": "6.4.4.3.1.1.4", "title": "Product Type (Cable Plug)", "content": "The Product Type (Cable Plug) field indicates the type of Product when the Product is a Cable Plug, whether a VDO will be returned and if so the type of VDO to be returned. Table 6-31 defines the Product Type VDOs which Shall be returned. Page 136 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 6-31 Product Types (Cable Plug) Product Type Description Product Type VDO Reference Undefined Shall be used where no other Product Type None value is appropriate. Active Cable Shall be used when the Product is a cable that Active Cable VDO Section 6.4.4.3.1.4.2 incorporates signal conditioning circuits. Passive Cable Shall be used when the Product is a cable that Passive Cable VDO does not incorporate signal conditioning Section 6.4.4.3.1.4.1 circuits.", "page_start": 136, "page_end": 136, "content_type": "text", "tables": [{"table_id": "will be returned and if so the type of VDO to be returned. Table 6-31 defines the Product Type VDOs which Shall be", "caption": "will be returned and if so the type of VDO to be returned. Table 6-31 defines the Product Type VDOs which Shall be", "page": 136, "data": []}, {"table_id": "Table 6-31 Product Types (Cable Plug)", "caption": "Table 6-31 Product Types (Cable Plug)", "page": 137, "data": []}], "figures": [], "subsections": [], "word_count": 125, "tags": ["cable"]}
{"section_id": "6.4.4.3.1.1.5", "title": "Modal Operation Supported", "content": "The Modal Operation Supported bit is used to indicate whether or the not the Product supports Modes.", "page_start": 137, "page_end": 136, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": []}
{"section_id": "6.4.4.3.1.1.6", "title": "Product Type (DFP)", "content": "The Product Type (DFP) field indicates the type of Product when in DFP Data Role, whether a VDO will be returned and if so the type of VDO to be returned. For DRD Products this field Shall indicate the capability regardless of the present Data Role. Table 6-32 defines the Product Type VDOs which Shall be returned. Table 6-32 Product Types (DFP) Product Type Description Product Type VDO Reference Undefined Shall be used where no other Product Type None value is appropriate. PDUSB Hub Shall be used when the Product is a PDUSB None Hub. PDUSB Host Shall be used when the Product is a PDUSB None Host. Power Brick Shall be used when the Product is a Power None Brick/Wall Wart. Alternate Mode Shall be used when the Product is a PDUSB AMA VDO Controller Host or DFP that supports one or more Section 6.4.4.3.1.5 Alternate Modes.", "page_start": 137, "page_end": 136, "content_type": "text", "tables": [{"table_id": "present Data Role. Table 6-32 defines the Product Type VDOs which Shall be returned.", "caption": "present Data Role. Table 6-32 defines the Product Type VDOs which Shall be returned.", "page": 137, "data": []}, {"table_id": "Table 6-32 Product Types (DFP)", "caption": "Table 6-32 Product Types (DFP)", "page": 137, "data": []}], "figures": [], "subsections": [], "word_count": 148, "tags": []}
{"section_id": "6.4.4.3.1.1.7", "title": "Vendor ID", "content": "Manufacturers Shall set the Vendor ID field to the value of the Vendor ID assigned to them by USB-IF. For USB Devices or Hubs which support USB communications the Vendor ID field Shall be identical to the Vendor ID field defined in the product’s USB Device Descriptor (see [USB 2.0] and [USB 3.1]).", "page_start": 137, "page_end": 136, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 53, "tags": []}
{"section_id": "6.4.4.3.1.2", "title": "Cert Stat VDO", "content": "The Cert Stat VDO Shall contain the XID assigned by USB-IF to the product before certification in binary format. The fields in the Cert Stat VDO Shall be as defined in Table 6-33. Table 6-33 Cert Stat VDO Bit(s) Description Reference B31…0 32-bit unsigned integer, XID Assigned by USB-IF", "page_start": 137, "page_end": 136, "content_type": "text", "tables": [{"table_id": "fields in the Cert Stat VDO Shall be as defined in Table 6-33.", "caption": "fields in the Cert Stat VDO Shall be as defined in Table 6-33.", "page": 137, "data": []}, {"table_id": "Table 6-33 Cert Stat VDO", "caption": "Table 6-33 Cert Stat VDO", "page": 137, "data": []}], "figures": [], "subsections": [], "word_count": 49, "tags": []}
{"section_id": "6.4.4.3.1.3", "title": "Product VDO", "content": "The Product VDO contains identity information relating to the product. The fields in the Product VDO Shall be as defined in Table 6-34. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 137 Table 6-34 Product VDO Bit(s) Description Reference B31…16 16-bit unsigned integer. USB Product ID [USB 2.0]/[USB 3.1] B15…0 16-bit unsigned integer. bcdDevice [USB 2.0]/[USB 3.1] Manufacturers Should set the USB Product ID field to a unique value identifying the product and Should set the bcdDevice field to a version number relevant to the release version of the product.", "page_start": 137, "page_end": 137, "content_type": "text", "tables": [{"table_id": "defined in Table 6-34.", "caption": "defined in Table 6-34.", "page": 137, "data": []}, {"table_id": "Table 6-34 Product VDO", "caption": "Table 6-34 Product VDO", "page": 138, "data": []}], "figures": [], "subsections": [], "word_count": 91, "tags": []}
{"section_id": "6.4.4.3.1.4", "title": "Cable VDO", "content": "The Cable VDO defined in this section Shall be sent when the Product Type is given as Passive or Active Cable. Table 6-35 and Table 6-36 define the Cable VDOs which Shall be sent in each case.", "page_start": 138, "page_end": 137, "content_type": "text", "tables": [{"table_id": "6-35 and Table 6-36 define the Cable VDOs which Shall be sent in each case.", "caption": "6-35 and Table 6-36 define the Cable VDOs which Shall be sent in each case.", "page": 138, "data": []}], "figures": [], "subsections": [], "word_count": 37, "tags": ["cable"]}
{"section_id": "6.4.4.3.1.4.1", "title": "Passive Cable VDO", "content": "A Passive Cable has a USB Plug on each end at least one of which is a Cable Plug supporting SOP’ Communication. A Passive Cable Shall Not incorporate data bus signal conditioning circuits and hence has no concept of Super Speed Directionality. A Passive Cable Shall include a V wire and Shall only respond to SOP’ Communication. Passive BUS Cables Shall support the Structured VDM Discover Identity Command and Shall return the Passive Cable VDO in a Discover Identity Command ACK as shown in Table 6-35. Table 6-35 Passive Cable VDO Bit(s) Field Description B31…28 HW Version 0000b…1111b assigned by the VID owner B27…24 Firmware Version 0000b…1111b assigned by the VID owner B23…21 VDO Version Version Number of the VDO (not this specification Version):  Version 1.0 = 000b Values 001b…111b are Reserved and Shall Not be used B20 Reserved Shall be set to zero. B19…18 USB Type-C plug to USB Type- 00b = Reserved, Shall Not be used C/Captive 01b = Reserved, Shall Not be used 10b = USB Type-C 11b = Captive B17 Reserved Shall be set to zero. B16…13 Cable Latency 0000b – Reserved, Shall Not be used 0001b – <10ns (~1m) 0010b – 10ns to 20ns (~2m) 0011b – 20ns to 30ns (~3m) 0100b – 30ns to 40ns (~4m) 0101b – 40ns to 50ns (~5m) 0110b – 50ns to 60ns (~6m) 0111b – 60ns to 70ns (~7m) 1000b – > 70ns (>~7m) 1001b ….1111b Reserved, Shall Not be used Includes latency of electronics in Active Cable B12…11 Cable Termination Type 00b = VCONN not required. Cable Plugs that only support Discover Identity Commands Shall set these bits to 00b. 01b = VCONN required 10b…11b = Reserved, Shall Not be used Page 138 USB Power Delivery Specification Revision 3.0, Version 1.1 Bit(s) Field Description B10…9 Maximum VBUS Voltage Maximum Cable VBUS Voltage: 00b – 20V 01b – 30V 10b – 40V 11b – 50V B8…7 Reserved Shall be set to zero. B6…5 VBUS Current Handling Capability 00b = Reserved, Shall Not be used. 01b = 3A 10b = 5A 11b = Reserved, Shall Not be used. B4…3 Reserved Shall be set to zero. B2…0 USB SuperSpeed Signaling 000b = USB 2.0 only, no SuperSpeed support Support 001b = [USB 3.1] Gen1 010b = [USB 3.1] Gen1 and Gen2 011b…111b = Reserved, Shall Not be used See [USB Type-C 1.2] for definitions. The HW Version field (B31…28) contains a HW Version assigned by the VID owner. The FW Version field (B27…24) contains a FW Version assigned by the VID owner. The VDO Version field (B23…20) contains a VDO version for this VDM version number. This field indicates the expected content for this VDO. The Connector Type field (B19…18) Shall contain a value corresponding to the connector type on the opposite end from the USB Type-C connector. The Cable Latency field (B16…13) Shall contain a value corresponding to the signal latency through the cable which can be used as an approximation for its length. The Cable Termination Type field (B12…11) Shall contain a value indicating whether the Passive Cable needs VCONN only initially in order to support the Discover Identity Command, after which it can be removed, or the Passive Cable needs VCONN to be continuously applied in order to power some feature of the Cable Plug. The Maximum V Voltage field (B10…9) Shall contain the maximum voltage that Shall be negotiated using a Fixed BUS Supply over the cable as part of an Explicit Contract where the maximum voltage that Shall be applied to the cable is vSrcNew max + vSrcValid max. For example when the Maximum V Voltage field is 20V, a Fixed Supply of 20V can BUS be negotiated as part of an Explicit Contract where the absolute maximum voltage that can be applied to the cable is 21.5V. The V Current Handling Capability field (B6…5) Shall indicate whether the cable is capable of carrying 3A or 5A. BUS The USB SuperSpeed Signaling Support field (B2…0) Shall indicate whether the cable supports only [USB 2.0] , or in addition Supports [USB 3.1] Gen1, or Gen1 and Gen2.", "page_start": 138, "page_end": 138, "content_type": "text", "tables": [{"table_id": "Discover Identity Command ACK as shown in Table 6-35.", "caption": "Discover Identity Command ACK as shown in Table 6-35.", "page": 138, "data": []}, {"table_id": "Table 6-35 Passive Cable VDO", "caption": "Table 6-35 Passive Cable VDO", "page": 138, "data": []}], "figures": [], "subsections": [], "word_count": 681, "tags": ["cable"]}
{"section_id": "6.4.4.3.1.4.2", "title": "Active Cable VDO", "content": "An Active Cable has a USB Plug on each end at least one of which is a Cable Plug supporting SOP’ Communication. An Active Cable Shall incorporate data bus signal conditioning circuits and May have a concept of Super Speed Directionality on its Super Speed wires. An Active Cable May include a V wire. An Active Cable Shall respond to BUS SOP’ Communication and May respond to SOP’’ Communication. Active Cables Shall support the Structured VDM Discover Identity Command and Shall return the Active Cable VDO in a Discover Identity Command ACK as shown in Table 6-36. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 139 Table 6-36 Active Cable VDO Bit(s) Field Description B31…28 HW Version 0000b…1111b assigned by the VID owner B27…24 Firmware Version 0000b…1111b assigned by the VID owner B23…21 VDO Version Version Number of the VDO (not this specification Version):  Version 1.0 = 000b Values 001b…111b are Reserved and Shall Not be used B20 Reserved Shall be set to zero. B19…18 USB Type-C plug to USB Type- 00b = Reserved, Shall Not be used C/Captive 01b = Reserved, Shall Not be used 10b = USB Type-C 11b = Captive B17 Reserved Shall be set to zero. B16…13 Cable Latency 0000b – Reserved, Shall Not be used 0001b – <10ns (~1m) 0010b – 10ns to 20ns (~2m) 0011b – 20ns to 30ns (~3m) 0100b – 30ns to 40ns (~4m) 0101b – 40ns to 50ns (~5m) 0110b – 50ns to 60ns (~6m) 0111b – 60ns to 70ns (~7m) 1000b –1000ns (~100m) 1001b –2000ns (~200m) 1010b – 3000ns (~300m) 1011b ….1111b Reserved, Shall Not be used Includes latency of electronics in Active Cable B12…11 Cable Termination Type 00b…01b = Reserved, Shall Not be used 10b = One end Active, one end passive, VCONN required 11b = Both ends Active, VCONN required B10…9 Maximum VBUS Voltage Maximum Cable VBUS Voltage: 00b – 20V 01b – 30V 10b – 40V 11b – 50V B8…7 Reserved Shall be set to zero. B6…5 VBUS Current Handling When VBUS Through Cable is “No”, Reserved, Shall Not be used. Capability When VBUS Though Cable is “Yes”: 00b = Reserved, Shall Not be used. 01b = 3A 10b = 5A 11b = Reserved, Shall Not be used. B4 VBUS Through Cable 0 = No", "page_start": 139, "page_end": 139, "content_type": "text", "tables": [{"table_id": "Table 6-36.", "caption": "Table 6-36.", "page": 139, "data": []}, {"table_id": "Table 6-36 Active Cable VDO", "caption": "Table 6-36 Active Cable VDO", "page": 140, "data": []}], "figures": [], "subsections": [], "word_count": 380, "tags": ["cable"]}
{"section_id": "1", "title": "= Yes", "content": "B3 SOP” Controller Present 0 = No SOP” controller present", "page_start": 140, "page_end": 139, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": []}
{"section_id": "1", "title": "= SOP” controller present", "content": "Page 140 USB Power Delivery Specification Revision 3.0, Version 1.1 Bit(s) Field Description B2…0 USB SuperSpeed Signaling 000b = [USB 2.0] only Support 001b = [USB 3.1] Gen1 010b = [USB 3.1] Gen1 and Gen2 011b…111b = Reserved, Shall Not be used The HW Version field (B31…28) contains a HW Version assigned by the VID owner. The FW Version field (B27…24) contains a FW Version assigned by the VID owner. The VDO Version field (B23…20) contains a VDO version for this VDM version number. This field indicates the expected content for this VDO. The Connector Type field (B19…18) Shall contain a value corresponding to the connector type on the opposite end from the USB Type-C connector. The Cable Latency field (B16…13) Shall contain a value corresponding to the signal latency through the cable which can be used as an approximation for its length. The Cable Termination Type field (B12…11) Shall contain a value corresponding to whether the Active Cable has one or two Cable Plugs requiring power from VCONN. The Maximum V Voltage field (B10…9) Shall contain the maximum voltage that Shall be negotiated using a Fixed BUS Supply over the cable as part of an Explicit Contract where the maximum voltage that Shall be applied to the cable is vSrcNew max + vSrcValid max. For example when the Maximum V Voltage field is 20V, a Fixed Supply of 20V can BUS be negotiated as part of an Explicit Contract where the absolute maximum voltage that can be applied to the cable is 21.5V. The V Current Handling Capability field (B6…5) Shall indicate whether the cable is capable of carrying 3A or 5A. BUS The V Current Handling Capability Shall only be Valid when the V Through Cable field indicates an end to end BUS BUS V wire. BUS The V Through Cable field (B4) Shall indicate whether the cable contains an end to end V wire. BUS BUS The SOP’’ Controller Present field (B3) Shall indicate whether one of the Cable Plugs is capable of SOP’’ Communication in addition to the Normative SOP’ Communication. The USB SuperSpeed Signaling Support field (B2…0) Shall indicate whether the cable supports only [USB 2.0] , or in addition Supports [USB 3.1] Gen1, or Gen1 and Gen2.", "page_start": 140, "page_end": 140, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 373, "tags": ["control"]}
{"section_id": "6.4.4.3.1.5", "title": "Alternate Mode Adapter VDO", "content": "The Alternate Mode Adapter (AMA) VDO defined in this section Shall be sent when the Product Type is given as Alternate Mode Adapter. Table 6-37 defines the AMA VDO which Shall be sent. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 141 Table 6-37 AMA VDO Bit(s) Field Description B31…28 HW Version 0000b…1111b assigned by the VID owner B27…24 Firmware Version 0000b…1111b assigned by the VID owner B23…21 VDO Version Version Number of the VDO (not this specification Version):  Version 1.0 = 000b Values 001b…111b are Reserved and Shall Not be used B20…8 Reserved. Shall be set to zero. B7…5 VCONN power When the VCONN required field is set to “Yes” VCONN power needed by adapter for full functionality 000b = 1W 001b = 1.5W 010b = 2W 011b = 3W 100b = 4W 101b = 5W 110b = 6W 111b = Reserved, Shall Not be used When the VCONN required field is set to “No” Reserved, Shall be set to zero. B4 VCONN required 0 = No", "page_start": 141, "page_end": 141, "content_type": "text", "tables": [{"table_id": "Alternate Mode Adapter. Table 6-37 defines the AMA VDO which Shall be sent.", "caption": "Alternate Mode Adapter. Table 6-37 defines the AMA VDO which Shall be sent.", "page": 141, "data": []}, {"table_id": "Table 6-37 AMA VDO", "caption": "Table 6-37 AMA VDO", "page": 142, "data": []}], "figures": [], "subsections": [], "word_count": 170, "tags": []}
{"section_id": "1", "title": "= Yes", "content": "B3 VBUS required 0 = No", "page_start": 142, "page_end": 141, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "1", "title": "= Yes", "content": "B2…0 USB SuperSpeed Signaling 000b = [USB 2.0] only Support 001b = [USB 3.1] Gen1 and USB 2.0 010b = [USB 3.1] Gen1, Gen2 and USB 2.0 011b = [USB 2.0] billboard only 100b…111b = Reserved, Shall Not be used The HW Version field (B31…28) contains a HW Version assigned by the VID owner. The FW Version field (B27…24) contains a FW Version assigned by the VID owner. The VDO Version field (B23…20) contains a VDO version for this VDM version number. This field indicates the expected content for this VDO. When the VCONN required field indicates that VCONN is required the VCONN power field Shall indicate how much power the AMA needs in order to fully operate. The VCONN required field Shall indicate whether VCONN is needed for the AMA to operate. The V required field Shall indicate whether V is needed for the AMA to operate. BUS BUS The USB SuperSpeed Signaling Support field (B2…0) Shall indicate whether the cable supports only [USB 2.0] , or in addition Supports [USB 3.1] Gen1, or Gen1 and Gen2 or [USB 2.0] billboard only.", "page_start": 142, "page_end": 141, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 183, "tags": []}
{"section_id": "6.4.4.3.2", "title": "Discover SVIDs", "content": "The Discover SVIDs Command is used by an Initiator to determine the SVIDs for which a Responder has Modes. The Discover SVIDs Command is used in conjunction with the Discover Modes Command in the Discovery Process to determine which Modes a device supports. The list of SVIDs is always terminated with one or two 0x0000 SVIDs. The SVID in the Discover SVIDs Command Shall be set to the PD SID (see Table 6-27) by both the Initiator and the Responder for this Command. The Number of Data Objects field in the Message Header in the Discover SVIDs Command request Shall be set to 1 since the Discover SVIDs Command request Shall Not contain any VDOs. Page 142 USB Power Delivery Specification Revision 3.0, Version 1.1 The Discover SVIDs Command ACK sent back by the Responder Shall contain one or more SVIDs. The SVIDs are returned 2 per VDO (see Table 6-38). If there are an odd number of supported SVIDs, the Discover SVIDs Command is returned ending with a SVID value of 0x0000 in the last part of the last VDO. If there are an even number of supported SVIDs, the Discover SVIDs Command is returned ending with an additional VDO containing two SVIDs with values of 0x0000. A Responder Shall only return SVIDs for which a Discover Modes Command request for that SVID will return at least one Mode. A Responder that does not support any SVIDs Shall return a NAK. The Number of Data Objects field in the Message Header in the Discover SVIDs Command NAK and BUSY responses Shall be set to 1 since they Shall Not contain any VDOs. If the Responder supports 12 or more SVIDs then the Discover SVIDs Command Shall be executed multiple times until a Discover SVIDs VDO is returned ending either with a SVID value of 0x0000 in the last part of the last VDO or with a VDO containing two SVIDs with values of 0x0000. Each Discover SVID ACK Message, other than the one containing the terminating 0x0000 SVID, Shall convey 12 SVIDs. The Responder Shall restart the list of SVIDs each time a Discover Identity Command request is received from the Initiator. Note: that since a Cable Plug does not retry Messages if the GoodCRC Message from the Initiator becomes corrupted the Cable Plug will consider the Discover SVIDs Command ACK unsent and will send the same list of SVIDs again. Figure 6-16 shows an example response to the Discover SVIDs Command request with two VDOs containing three SVIDs. Figure 6-17 shows an example response with two VDOs containing four SVIDs followed by an empty VDO to terminate the response. Figure 6-18 shows an example response with six VDOs containing twelve SVIDs followed by an additional request that returns an empty VDO indicating there are no more SVIDs to return. Table 6-38 Discover SVIDs Responder VDO Bit(s) Field Description B31…16 SVID n 16 bit unsigned integer, assigned by the USB-IF or 0x0000 if this is the last VDO and the Responder supports an even number of SVIDs. B15…0 SVID n+1 16 bit unsigned integer, assigned by the USB-IF or 0x0000 if this is the last VDO and the Responder supports an odd or even number of SVIDs. Figure 6-16 Example Discover SVIDs response with 3 SVIDs VDO 1 VDO 2 Header VDM Header No. of Data Objects = 3 SVID 0 SVID 1 SVID 2 0x0000 (B31..16) (B15..0) (B31..16) (B15..0) Figure 6-17 Example Discover SVIDs response with 4 SVIDs VDO 1 VDO 2 VDO 3 Header VDM Header No. of Data Objects = 4 SVID 0 SVID 1 SVID 2 SVID 3 0x0000 0x0000 (B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0) USB Power Delivery Specification Revision 3.0, Version 1.1 Page 143 Figure 6-18 Example Discover SVIDs response with 12 SVIDs followed by an empty response VDO 1 VDO 2 VDO 3 VDO 4 VDO 5 VDO 6 Header VDM Header No. of Data Objects = 7 SVID 0 SVID 1 SVID 2 SVID 3 SVID 4 SVID 5 SVID 6 SVID 7 SVID 8 SVID 9 SVID 10 SVID 11 (B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0) VDO 1 Header VDM Header No. of Data Objects = 2 0x0000 0x0000 (B31..16) (B15..0)", "page_start": 142, "page_end": 143, "content_type": "text", "tables": [{"table_id": "The SVID in the Discover SVIDs Command Shall be set to the PD SID (see Table 6-27) by both the Initiator and the", "caption": "The SVID in the Discover SVIDs Command Shall be set to the PD SID (see Table 6-27) by both the Initiator and the", "page": 142, "data": []}, {"table_id": "returned 2 per VDO (see Table 6-38). If there are an odd number of supported SVIDs, the Discover SVIDs Command is", "caption": "returned 2 per VDO (see Table 6-38). If there are an odd number of supported SVIDs, the Discover SVIDs Command is", "page": 143, "data": []}, {"table_id": "Table 6-38 Discover SVIDs Responder VDO", "caption": "Table 6-38 Discover SVIDs Responder VDO", "page": 143, "data": []}], "figures": [{"figure_id": "Figure 6-16 shows an example response to the Discover SVIDs Command request with two VDOs containing three", "caption": "Figure 6-16 shows an example response to the Discover SVIDs Command request with two VDOs containing three", "page": 143}, {"figure_id": "SVIDs. Figure 6-17 shows an example response with two VDOs containing four SVIDs followed by an empty VDO to", "caption": "SVIDs. Figure 6-17 shows an example response with two VDOs containing four SVIDs followed by an empty VDO to", "page": 143}, {"figure_id": "terminate the response. Figure 6-18 shows an example response with six VDOs containing twelve SVIDs followed by", "caption": "terminate the response. Figure 6-18 shows an example response with six VDOs containing twelve SVIDs followed by", "page": 143}, {"figure_id": "Figure 6-16 Example Discover SVIDs response with 3 SVIDs", "caption": "Figure 6-16 Example Discover SVIDs response with 3 SVIDs", "page": 143}, {"figure_id": "Figure 6-17 Example Discover SVIDs response with 4 SVIDs", "caption": "Figure 6-17 Example Discover SVIDs response with 4 SVIDs", "page": 143}, {"figure_id": "Figure 6-18 Example Discover SVIDs response with 12 SVIDs followed by an empty response", "caption": "Figure 6-18 Example Discover SVIDs response with 12 SVIDs followed by an empty response", "page": 144}], "subsections": [], "word_count": 707, "tags": []}
{"section_id": "6.4.4.3.3", "title": "Discover Modes", "content": "The Discover Modes Command is used by an Initiator to determine the Modes a Responder supports for a given SVID. The SVID in the Discover Modes Command Shall be set to the SVID for which Modes are being requested by both the Initiator and the Responder for this Command. The Number of Data Objects field in the Message Header in the Discover Modes Command request Shall be set to 1 since the Discover Modes Command request Shall Not contain any VDOs. The Discover Modes Command ACK sent back by the Responder Shall contain one or more Modes. The Discover Modes Command ACK Shall contain a Message Header with the Number of Data Objects field set to a value of 1 to 7 (the actual value is the number of Mode objects plus one). If the ID is a VID, the structure and content of the VDO is left to the Vendor. If the ID is a SID, the structure and content of the VDO is defined by the relevant Standard. A Responder that does not support any Modes Shall return a NAK. The Number of Data Objects field in the Message Header in the Discover Modes Command NAK and BUSY responses Shall be set to 1 since they Shall Not contain any VDOs. Figure 6-19 shows an example of a Discover Modes Command response from a Responder which supports three Modes for a given SVID. Figure 6-19 Example Discover Modes response for a given SVID with 3 Modes Header VDM Header Mode 1 Mode 2 Mode 3 No. of Data Objects = 4", "page_start": 144, "page_end": 143, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-19 shows an example of a Discover Modes Command response from a Responder which supports three", "caption": "Figure 6-19 shows an example of a Discover Modes Command response from a Responder which supports three", "page": 144}, {"figure_id": "Figure 6-19 Example Discover Modes response for a given SVID with 3 Modes", "caption": "Figure 6-19 Example Discover Modes response for a given SVID with 3 Modes", "page": 144}], "subsections": [], "word_count": 263, "tags": []}
{"section_id": "6.4.4.3.4", "title": "Enter Mode Command", "content": "The Enter Mode Command is used by an Initiator (DFP) to command a Responder (UFP or Cable Plug) to enter a specified Mode of operation. Only a DFP is allowed to initiate the Enter Mode Process which it starts after it has successfully completed the Discovery Process. The value in the Object Position field in the VDM Header Shall indicate to which Mode in the Discover Modes Command the VDO refers (see Figure 6-19). The value 1 always indicates the first Mode as it is the first object following the VDM Header. The value 2 refers to the next Mode and so forth. The Number of Data Objects field in the Message Header in the Command request Shall be set to either 1 or 2 since the Enter Mode Command request Shall Not contain more than 1 VDO. When a VDO is included in an Enter Mode Command request the contents of the 32 bit VDO is defined by the Mode. The Number of Data Objects field in the Command response Shall be set to 1 since an Enter Mode Command response (ACK, NAK, BUSY) Shall Not contain any VDOs. Page 144 USB Power Delivery Specification Revision 3.0, Version 1.1 Before entering a Mode, by sending the Enter Mode Command request, that requires the reconfiguring of any pins on entry to that Mode, the Initiator Shall ensure that those pins being reconfigured are placed into the USB Safe State. Before entering a Mode that requires the reconfiguring of any pins, the Responder Shall ensure that those pins being reconfigured are placed into either USB operation or the USB Safe State. A device May support multiple Modes with one or more active at any point in time. Any interactions between them are the responsibility of the Standard or Vendor. Where there are multiple Active Modes at the same time Modal Operation Shall start on entry to the first Mode. On receiving an Enter Mode Command request the Responder Shall respond with either an ACK or a NAK response. The Responder is not allowed to return a BUSY response. The value in the Object Position field of the Enter Mode Command response Shall contain the same value as the received Enter Mode Command request. If the Responder responds to the Enter Mode Command request with an ACK, the Responder Shall enter the Mode before sending the ACK. The Initiator Shall enter the Mode on reception of the ACK. Receipt of the GoodCRC Message corresponding to the ACK confirms to the Responder that the Initiator is in an Active Mode and is ready to operate. If the Responder responds to the Enter Mode Command request with a NAK, the Mode is not entered. If not presently in Modal Operation the Initiator Shall return to USB operation. If not presently in Modal Operation the Responder Shall remain in either USB operation or the USB Safe State. If the Initiator fails to receive a response within tVDMWaitModeEntry it Shall Not enter the Mode but return to USB operation. Figure 6-20 shows the sequence of events during the transition between USB operation and entering a Mode. It illustrates when the Responder’s Mode changes and when the Initiator’s Mode changes. Figure 6-21 shows a sequence that is Interrupted by a Source_Capabilities Message, that completes a Contract Negotiation, and then the sequence is Re-run. Figure 6-22 illustrates that when the Responder returns a NAK the transition to a Mode do not take place and the Responder and Initiator remain in their default USB roles. Figure 6-20 Successful Enter Mode sequence DFP (Initiator) UFP (Responder) USB USB or USB Safe State Enter Mode GoodCRC USB Safe State ACK New Mode New GoodCRC Mode USB Power Delivery Specification Revision 3.0, Version 1.1 Page 145 Figure 6-21 Enter Mode sequence Interrupted by Source Capabilities and then Re-run DFP (Initiator) UFP (Responder) USB USB or USB Safe State Enter Mode USB Safe State GoodCRC Source interrupts AMS Source_Capabilites USB GoodCRC Contract negotiation completed Enter Mode Re-tried Enter Mode GoodCRC USB Safe State ACK New Mode GoodCRC New Mode Figure 6-22 Unsuccessful Enter Mode sequence due to NAK DFP (Initiator) UFP (Responder) USB USB or USB Safe State Enter Mode GoodCRC USB Safe State NAK GoodCRC USB Page 146 USB Power Delivery Specification Revision 3.0, Version 1.1 Once the Mode is entered, the device Shall remain in that Active Mode until the Exit Mode Command is successful (see Section 6.4.4.3.5). The following events Shall also cause the Port Partners and Cable Plug(s) to exit all Active Modes:  A PD Hard Reset.  The Port Partners or Cable Plug(s) are Detached.  A Cable Reset (only exits the Cable Plug’s Active Modes). The Initiator Shall return to USB Operation within tVDMExitMode of a disconnect or of Hard Reset Signaling being detected. The Responder Shall return to either USB operation or USB Safe State within tVDMExitMode of a disconnect or of Hard Reset Signaling being detected. A DR_Swap Message Shall Not be sent during Modal Operation between the Port Partners (see Section 6.3.9).", "page_start": 144, "page_end": 146, "content_type": "text", "tables": [], "figures": [{"figure_id": "Command the VDO refers (see Figure 6-19). The value 1 always indicates the first Mode as it is the first object", "caption": "Command the VDO refers (see Figure 6-19). The value 1 always indicates the first Mode as it is the first object", "page": 144}, {"figure_id": "Figure 6-20 shows the sequence of events during the transition between USB operation and entering a Mode. It", "caption": "Figure 6-20 shows the sequence of events during the transition between USB operation and entering a Mode. It", "page": 145}, {"figure_id": "illustrates when the Responder’s Mode changes and when the Initiator’s Mode changes. Figure 6-21 shows a", "caption": "illustrates when the Responder’s Mode changes and when the Initiator’s Mode changes. Figure 6-21 shows a", "page": 145}, {"figure_id": "sequence is Re-run. Figure 6-22 illustrates that when the Responder returns a NAK the transition to a Mode do not", "caption": "sequence is Re-run. Figure 6-22 illustrates that when the Responder returns a NAK the transition to a Mode do not", "page": 145}, {"figure_id": "Figure 6-20 Successful Enter Mode sequence", "caption": "Figure 6-20 Successful Enter Mode sequence", "page": 145}, {"figure_id": "Figure 6-21 Enter Mode sequence Interrupted by Source Capabilities and then Re-run", "caption": "Figure 6-21 Enter Mode sequence Interrupted by Source Capabilities and then Re-run", "page": 146}, {"figure_id": "Figure 6-22 Unsuccessful Enter Mode sequence due to NAK", "caption": "Figure 6-22 Unsuccessful Enter Mode sequence due to NAK", "page": 146}], "subsections": [], "word_count": 839, "tags": []}
{"section_id": "6.4.4.3.5", "title": "Exit Mode Command", "content": "The Exit Mode Command is used by an Initiator (DFP) to command a Responder (UFP or Cable Plug) to exit its Active Mode and return to normal USB operation. Only the DFP is allowed to initiate the Exit Mode Process. The value in the Object Position field Shall indicate to which Mode in the Discover Modes Command the VDO refers (see Figure 6-19) and Shall have been used previously in an Enter Mode Command request for an Active Mode. The value 1 always indicates the first Mode as it is the first object following the VDM Header. The value 2 refers to the next Mode and so forth. A value of 111b in the Object Position field Shall indicate that all Active Modes Shall be exited. The Number of Data Objects field in both the Command request and Command response (ACK, NAK, BUSY) Shall be set to 1 since an Exit Mode Command Shall Not contain any VDOs. The Responder Shall exit its Active Mode before sending the response Message. The Initiator Shall exit its Active Mode before sending GoodCRC Message in response to the ACK. Receipt of the GoodCRC Message confirms to the Responder that the Initiator has exited the Mode. The Responder Shall Not return a BUSY acknowledgement and Shall only return a NAK acknowledgement to a request not containing an Active Mode (i.e. Invalid object position). An Initiator which fails to receive an ACK within tVDMWaitModeExit or receives a NAK or BUSY response Shall exit its Active Mode. Figure 6-23 shows the sequence of events during the transition between exiting an Active Mode and USB operation. It illustrates when the Responder’s Mode changes and when the Initiator’s Mode changes. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 147 Figure 6-23 Exit Mode sequence DFP (Initiator) UFP (Responder) Mode Mode Exit Mode GoodCRC USB Safe State ACK USB or USB Safe State GoodCRC USB", "page_start": 147, "page_end": 147, "content_type": "text", "tables": [], "figures": [{"figure_id": "(see Figure 6-19) and Shall have been used previously in an Enter Mode Command request for an Active Mode. The", "caption": "(see Figure 6-19) and Shall have been used previously in an Enter Mode Command request for an Active Mode. The", "page": 147}, {"figure_id": "Figure 6-23 shows the sequence of events during the transition between exiting an Active Mode and USB operation. It", "caption": "Figure 6-23 shows the sequence of events during the transition between exiting an Active Mode and USB operation. It", "page": 147}, {"figure_id": "Figure 6-23 Exit Mode sequence", "caption": "Figure 6-23 Exit Mode sequence", "page": 148}], "subsections": [], "word_count": 317, "tags": []}
{"section_id": "6.4.4.3.6", "title": "Attention", "content": "The Attention Command May be used by the Initiator to notify the Responder that it requires service. The value in the Object Position field Shall indicate to which Mode in the Discover Modes Command the VDO refers (see Figure 6-19) and Shall have been used previously in an Enter Mode Command request for an Active Mode. The value 1 always indicates the first Mode as it is the first object following the VDM Header. The value 2 refers to the next Mode and so forth. A value of 000b or 111b in the Object Position field Shall Not be used by the Attention Command. The Number of Data Objects field in the Message Header Shall be set to 1 or 2 since the Attention Command Shall Not contain more than 1 VDO. When a VDO is included in an Attention Command the contents of the 32 bit VDO is defined by the Mode. Figure 6-24 Attention Command request/response sequence Responder Initiator Command (Attention) GoodCRC Command Complete", "page_start": 148, "page_end": 147, "content_type": "text", "tables": [], "figures": [{"figure_id": "(see Figure 6-19) and Shall have been used previously in an Enter Mode Command request for an Active Mode. The", "caption": "(see Figure 6-19) and Shall have been used previously in an Enter Mode Command request for an Active Mode. The", "page": 148}, {"figure_id": "Figure 6-24 Attention Command request/response sequence", "caption": "Figure 6-24 Attention Command request/response sequence", "page": 148}], "subsections": [], "word_count": 166, "tags": []}
{"section_id": "6.4.4.4", "title": "Command Processes", "content": "The Message flow of Commands during a Process is a query followed by a response. Every Command request sent has to be responded to with a GoodCRC Message. The GoodCRC Message only indicates the Command request was received correctly; it does not mean that the Responder understood or even supports a particular SVID. Figure 6-25 shows the request/response sequence including the GoodCRC Messages. Page 148 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 6-25 Command request/response sequence Initiator Responder Command (request) GoodCRC Command (response) GoodCRC Command Complete In order for the Initiator to know that the Command request was actually consumed, it needs an acknowledgement from the Responder. There are three responses that indicate the Responder received and processed the Command request:  ACK.  NAK.  BUSY. The Responder Shall complete:  Enter Mode requests within tVDMEnterMode.  Exit Mode requests within tVDMExitMode.  Other requests within tVDMReceiverResponse. An Initiator not receiving a response within the following times Shall timeout and return to either the PE_SRC_Ready or PE_SNK_Ready state (as appropriate):  Enter Mode requests within tVDMWaitModeEntry.  Exit Mode requests within tVDMWaitModeExit.  Other requests within tVDMSenderResponse. The Responder Shall respond with:  ACK if it recognizes the SVID and can process it at this time  NAK: o if it recognizes the SVID but cannot process the Command request o or if it does not recognize the SVID o or if it does not support the Command o or if a VDO has been supplied which is Invalid.  BUSY if it recognizes the SVID and the Command but cannot process the Command request at this time. The ACK, NAK or BUSY response Shall contain the same SVID as the Command request.", "page_start": 148, "page_end": 148, "content_type": "text", "tables": [], "figures": [{"figure_id": "received correctly; it does not mean that the Responder understood or even supports a particular SVID. Figure 6-25", "caption": "received correctly; it does not mean that the Responder understood or even supports a particular SVID. Figure 6-25", "page": 148}, {"figure_id": "Figure 6-25 Command request/response sequence", "caption": "Figure 6-25 Command request/response sequence", "page": 149}], "subsections": [], "word_count": 286, "tags": []}
{"section_id": "6.4.4.4.1", "title": "Discovery Process", "content": "The Initiator (usually the DFP) always begins the Discovery Process. The Discovery Process has two phases. In the first phase, the Discover SVIDs Command request is sent by the Initiator to get the list of SVIDs the Responder supports. In the second phase, the Initiator sends a Discover Modes Command request for each SVID supported by both the Initiator and Responder. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 149", "page_start": 149, "page_end": 149, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 71, "tags": []}
{"section_id": "6.4.4.4.2", "title": "Enter Vendor Mode / Exit Vendor Mode Processes", "content": "The result of the Discovery Process is that both the Initiator and Responder identify the Modes they mutually support. The Initiator (DFP), upon finding a suitable Mode, uses the Enter Mode Command to enable the Mode. The Responder (UFP or Cable Plug) and Initiator continue using the Active Mode until the Active Mode is exited. In a managed termination, using the Exit Mode Command, the Active Mode Shall be exited in a controlled manner as described in Section 6.4.4.3.5. In an unmanaged termination, triggered by a Power Delivery Hard Reset (i.e. Hard Reset Signaling sent by either Port Partner) or by cable Detach (device unplugged), the Active Mode Shall still be exited but there Shall Not be a transition through the USB Safe State. In both the managed and unmanaged terminations the Initiator and Responder return to USB operation as defined in [USB Type-C 1.2] following an exit from a Mode. The overall Message flow is illustrated in Figure 6-26. Page 150 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 6-26 Enter/Exit Mode Process Initiator (DFP) Responder (UFP or Cable Plug) Establish PD Contract Discover SVIDs USB List of SVIDs For every DFP supported SVID Discover Modes (SVID) USB or USB Safe State Modes for SVID Stay in USB mode N Modes Supported? USB or USB Safe Y State Enter Mode USB Safe State ACK (Responder switched to Mode) Alternate Mode Initiator and Responder operate using Mode N Alternate Mode Exit Mode or PD Hard Reset or cable unplugged or power removed? USB USB Y Return to USB mode", "page_start": 150, "page_end": 150, "content_type": "text", "tables": [], "figures": [{"figure_id": "The overall Message flow is illustrated in Figure 6-26.", "caption": "The overall Message flow is illustrated in Figure 6-26.", "page": 150}, {"figure_id": "Figure 6-26 Enter/Exit Mode Process", "caption": "Figure 6-26 Enter/Exit Mode Process", "page": 151}], "subsections": [], "word_count": 260, "tags": []}
{"section_id": "6.4.4.5", "title": "VDM Message Timing and Normal PD Messages", "content": "Any Command Process or other VDM sequence May be interrupted by any other USB PD Message. The Vendor or Standards defined state operation Shall comprehend this and continue to operate as expected when processing any other USB PD Messages. The timing and interspersing of VDMs between regular PD Messages Shall be done without perturbing the PD Message sequences. This requirement Shall apply to both Unstructured VDMs and Structured VDMs. The use of Structured VDMs by an Initiator Shall Not interfere with the normal PD Message timing requirements nor Shall either the Initiator or Responder interrupt a PD Message sequence (e.g. Power Negotiation, Power Role Swap, Data Role Swap etc.). The use of Unstructured VDMs Shall Not interfere with normal PD Message timing. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 151 VDM sequences Shall be interruptible after the return of a GoodCRC Message has been completed. In the case where there is an error in transmission of the Vendor_Defined Message, as for any other PD Message, the Vendor_Defined Message will not be retried, but instead the incoming Message will be processed by the Policy Engine. This means that the Vendor_Defined Message sequence will need to be Re-run after the USB PD Message sequence has completed.", "page_start": 151, "page_end": 151, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 206, "tags": ["messages"]}
{"section_id": "6.4.5", "title": "Battery_Status Message", "content": "The Battery_Status Message Shall be sent in response to a Get_Battery_Status Message. The Battery_Status Message contains one Battery Status Data Object (BSDO) for one of the Batteries it supports as reported by Battery field in the Source_Capabilities_Extended Message. The returned BSDO Shall correspond to the Battery requested in the Battery Status Ref field contained in the Get_Battery_Status Message. The Battery_Status Message returns a BSDO whose format Shall be as shown in Figure 6-27 and Table 6-39. The Number of Data Objects field in the Battery_Status Message Shall be set to 1. Figure 6-27 Battery_Status Message Header BSDO No. of Data Objects = 1 Table 6-39 Battery Status Data Object (BSDO) Bit(s) Field Size Value Description B31…16 Battery Present Capacity 2 1/10 WH Battery’s State of Charge (SoC) Note: 0xFFFF = Battery’s SOC unknown B15…8 Battery Info 1 Bit Field Bit Description", "page_start": 152, "page_end": 151, "content_type": "text", "tables": [{"table_id": "The Battery_Status Message returns a BSDO whose format Shall be as shown in Figure 6-27 and Table 6-39. The", "caption": "The Battery_Status Message returns a BSDO whose format Shall be as shown in Figure 6-27 and Table 6-39. The", "page": 152, "data": []}, {"table_id": "Table 6-39 Battery Status Data Object (BSDO)", "caption": "Table 6-39 Battery Status Data Object (BSDO)", "page": 152, "data": []}], "figures": [{"figure_id": "The Battery_Status Message returns a BSDO whose format Shall be as shown in Figure 6-27 and Table 6-39. The", "caption": "The Battery_Status Message returns a BSDO whose format Shall be as shown in Figure 6-27 and Table 6-39. The", "page": 152}, {"figure_id": "Figure 6-27 Battery_Status Message", "caption": "Figure 6-27 Battery_Status Message", "page": 152}], "subsections": [], "word_count": 141, "tags": ["messages"]}
{"section_id": "0", "title": "Invalid Battery reference", "content": "", "page_start": 152, "page_end": 151, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "Battery is present when set", "content": "3…2 When Battery is present Shall contain the Battery charging status: 00b: Battery is Charging 01b: Battery is Discharging 10b: Battery is Idle 11b: Reserved, Shall Not be used When Battery is not present: 11b…00b: Reserved, Shall Not be used 7…4 Reserved and Shall be set to zero B7…0 Reserved 2 Numeric Shall be set to zero", "page_start": 152, "page_end": 151, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 57, "tags": []}
{"section_id": "6.4.5.1", "title": "Battery Present Capacity", "content": "The Battery Present Capacity field Shall return either the Battery’s State of Charge (SoC) in tenths of WH or indicate that the Battery’s present State of Charge (SOC) is unknown.", "page_start": 152, "page_end": 151, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 30, "tags": []}
{"section_id": "6.4.5.2", "title": "Battery Info", "content": "The Battery Info field Shall be used to report additional information about the Battery’s present status. The Battery Info field’s bits Shall reflect the present conditions under which the Battery is operating in the systems. Page 152 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 152, "page_end": 152, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 45, "tags": []}
{"section_id": "6.4.5.2.1", "title": "Invalid Battery Reference", "content": "The Invalid Battery Reference bit Shall be set when the Get_Battery_Status Message contains a reference to a Battery that does not exist.", "page_start": 153, "page_end": 152, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "6.4.5.2.2", "title": "Battery is Present", "content": "The Battery is Present bit Shall be set whenever the Battery is present. It Shall always be set for Batteries that are not Hot Swappable Batteries. For Hot Swappable Batteries, Battery is Present bit Shall indicate whether the Battery is Attached or Detached.", "page_start": 153, "page_end": 152, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 43, "tags": []}
{"section_id": "6.4.5.2.3", "title": "Battery Charging Status", "content": "The Battery charging status bits indicate whether the Battery is being charged, discharged or is idle (neither charging nor discharging). These bits Shall be set when the Battery is present bit is set. Otherwise when the Battery is present bit is zero the Battery charging status bits Shall also be zero.", "page_start": 153, "page_end": 152, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 51, "tags": []}
{"section_id": "6.4.6", "title": "Alert Message", "content": "The Alert Message is provided to allow Port Partners to inform each other when there is a status change event. Some of the events are critical such as OCP, OVP and OTP, while others are informative such as change in a Battery’s status from charging to neither charging nor discharging. The Alert Message Shall only be sent when the Source or Sink detects a status change. The Alert Message Shall contain exactly one Alert Data Object (ADO) and the format Shall be as shown in Figure 6-28 and Table 6-40. Figure 6-28 Alert Message Header ADO No. of Data Objects = 1 Table 6-40 Alert Data Object Bit(s) Field Value Description B31…24 Type of Alert Bit Field Bit Description", "page_start": 153, "page_end": 152, "content_type": "text", "tables": [{"table_id": "and Table 6-40.", "caption": "and Table 6-40.", "page": 153, "data": []}, {"table_id": "Table 6-40 Alert Data Object", "caption": "Table 6-40 Alert Data Object", "page": 153, "data": []}], "figures": [{"figure_id": "The Alert Message Shall contain exactly one Alert Data Object (ADO) and the format Shall be as shown in Figure 6-28", "caption": "The Alert Message Shall contain exactly one Alert Data Object (ADO) and the format Shall be as shown in Figure 6-28", "page": 153}, {"figure_id": "Figure 6-28 Alert Message", "caption": "Figure 6-28 Alert Message", "page": 153}], "subsections": [], "word_count": 119, "tags": ["messages"]}
{"section_id": "0", "title": "Reserved and Shall be set to zero", "content": "", "page_start": 153, "page_end": 152, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "Battery Status Change", "content": "Event(Attach/Detach/charging/discharging/idle)", "page_start": 153, "page_end": 152, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "2", "title": "OCP event when set (Source only, for Sink", "content": "Reserved and Shall be set to zero)", "page_start": 153, "page_end": 152, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": ["source", "sink"]}
{"section_id": "3", "title": "OTP event when set", "content": "", "page_start": 153, "page_end": 152, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "Operating Condition Change when set", "content": "", "page_start": 153, "page_end": 152, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "5", "title": "Source Input Change Event when set", "content": "", "page_start": 153, "page_end": 152, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source"]}
{"section_id": "6", "title": "OVP event when set (Sink only, for Source", "content": "Reserved and Shall be set to zero)", "page_start": 153, "page_end": 152, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": ["source", "sink"]}
{"section_id": "7", "title": "Reserved and Shall be set to zero", "content": "B23…20 Fixed Batteries Bit Field When Battery Status Change bit set indicates which Fixed Batteries have had a status change. B20 corresponds to Battery 0 and B23 corresponds to Battery 3. B19…16 Hot Swappable Bit Field When Battery Status Change bit set indicates which Hot Swappable Batteries have Batteries had a status change. B16 corresponds to Battery 4 and B19 corresponds to Battery 7. B15…0 Reserved n/a Shall be set to zero USB Power Delivery Specification Revision 3.0, Version 1.1 Page 153", "page_start": 153, "page_end": 153, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 82, "tags": []}
{"section_id": "6.4.6.1", "title": "Type of Alert", "content": "The Type of Alert field Shall be used to report Source or Sink status changes. Only one Alert Message Shall be generated for each Event or Change; however multiple Type of Alert bits May be set in one Alert Message. Once the Alert Message has been sent the Type of Alert field Shall be cleared. A Get_Battery_Status Message Should be sent in response to a Battery status change in an Alert Message to get the details of the change. A Get_Status Message Should be sent in response to a non-Battery status change in an Alert Message from to get the details of the change.", "page_start": 154, "page_end": 153, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 104, "tags": []}
{"section_id": "6.4.6.1.1", "title": "Battery Status Change", "content": "The Battery Status Change bit Shall be set when any Battery’s power state changes between charging, discharging, neither. For Hot Swappable Batteries, it Shall also be set when a Battery is Attached or Detached.", "page_start": 154, "page_end": 153, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": []}
{"section_id": "6.4.6.1.2", "title": "Over-Current Protection Event", "content": "The Over-Current Protection Event bit Shall be set when a Source detects its output current exceeds its limits triggering its protection circuitry. This bit is Reserved for a Sink.", "page_start": 154, "page_end": 153, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": []}
{"section_id": "6.4.6.1.3", "title": "Over-Temperature Protection Event", "content": "The Over-Temperature Protection Event bit Shall be set when a Source or Sink shuts down due to over-temperature triggering its protection circuitry.", "page_start": 154, "page_end": 153, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "6.4.6.1.4", "title": "Operating Condition Change", "content": "The Operating Condition Change bit Shall be set when a Source or Sink detects its Operating Condition enters or exits either the ‘warning’ or ‘over temperature’ temperature states. The Operating Condition Change bit Shall be set when the Source operating in the Programmable Power Supply mode detects it has changed its operating condition between Constant Voltage (CV) and Current Foldback (CF).", "page_start": 154, "page_end": 153, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 61, "tags": []}
{"section_id": "6.4.6.1.5", "title": "Source Input Change Event", "content": "The Source Input Event bit Shall be set when the Source/Sink’s input changes. For example when the AC input is removed and the Source/Sink continues to be powered from one or more of its batteries or when AC returns and the Source/Sink transitions from Battery to AC operation or when the Source/Sink changes operation from one (or more) Battery to another (or more) Battery.", "page_start": 154, "page_end": 153, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 64, "tags": ["source"]}
{"section_id": "6.4.6.1.6", "title": "Over-Voltage Protection Event", "content": "The Over-Voltage Protection Event bit Shall be set when the Sink detects its output voltage exceeds its limits triggering its protection circuitry. This bit is Reserved for a Source.", "page_start": 154, "page_end": 153, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": ["voltage"]}
{"section_id": "6.4.6.2", "title": "Fixed Batteries", "content": "The Fixed Batteries field indicates which Fixed Batteries have had a status change. B20 corresponds to Battery 0 and B23 corresponds to Battery 3. Once the Alert Message has been sent the Fixed Batteries field Shall be cleared.", "page_start": 154, "page_end": 153, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": []}
{"section_id": "6.4.6.3", "title": "Hot Swappable Batteries", "content": "The Hot Swappable Batteries field indicates which Hot Swappable Batteries have had a status change. B16 corresponds to Battery 0 and B19 corresponds to Battery 3. Once the Alert Message has been sent the Hot Swappable Batteries field Shall be cleared. Page 154 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 154, "page_end": 154, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 51, "tags": []}
{"section_id": "6.4.7", "title": "Get_Country_Info Message", "content": "The Get_Country_Info Message Shall be sent by a port to get country specific information from its port partner using the country’s Alpha-2 Country Code defined by [ISO 3166]. The port partner responds with a Country_Info Message that contains the country specific information. The Get_Country_Info Message Shall be as shown in Figure 6-29 and Table 6-41. For example, if the request is for China information, then the Country Code Data Object would be CCDO[31:0] = 434E0000h for “CN” country code. Figure 6-29 Get_Country_Info Message Header Country Code No. of Data Objects = 1 Data Object Table 6-41 Country Code Data Object Bit(s) Value Parameter Description B31…24 Byte First character of the Alpha-2 Country Code defined by [ISO 3166] B23…16 Byte Second character of the Alpha-2 Country Code defined by [ISO 3166] B15…0 Shall be set to zero. Reserved", "page_start": 155, "page_end": 154, "content_type": "text", "tables": [{"table_id": "Table 6-41.", "caption": "Table 6-41.", "page": 155, "data": []}, {"table_id": "Table 6-41 Country Code Data Object", "caption": "Table 6-41 Country Code Data Object", "page": 155, "data": []}], "figures": [{"figure_id": "that contains the country specific information. The Get_Country_Info Message Shall be as shown in Figure 6-29 and", "caption": "that contains the country specific information. The Get_Country_Info Message Shall be as shown in Figure 6-29 and", "page": 155}, {"figure_id": "Figure 6-29 Get_Country_Info Message", "caption": "Figure 6-29 Get_Country_Info Message", "page": 155}], "subsections": [], "word_count": 137, "tags": ["messages"]}
{"section_id": "6.5", "title": "Extended Message", "content": "An Extended Message Shall contain an Extended Message Header (indicated by the Extended field in the Message Header being set) and be followed by zero or more data bytes. The format of the Extended Message is defined by the Message Header’s Message Type field and is summarized in Table 6-42. The Sent by column indicates entities which May send the given Message (Source, Sink or Cable Plug); entities not listed Shall Not issue the corresponding Message. The Valid Start of Packet column indicates the Messages which Shall only be issued in SOP Packets and the Messages which May be issued in SOP* Packets. Table 6-42 Extended Message Types Bits Type Sent by Description Valid Start 4…0 of Packet", "page_start": 155, "page_end": 154, "content_type": "text", "tables": [{"table_id": "Table 6-42. The Sent by column indicates entities which May send the given Message (Source, Sink or Cable Plug);", "caption": "Table 6-42. The Sent by column indicates entities which May send the given Message (Source, Sink or Cable Plug);", "page": 155, "data": []}, {"table_id": "Table 6-42 Extended Message Types", "caption": "Table 6-42 Extended Message Types", "page": 155, "data": []}], "figures": [], "subsections": [], "word_count": 118, "tags": ["messages"]}
{"section_id": "0", "title": "0000 Reserved All values not explicitly defined", "content": "are Reserved and Shall Not be used.", "page_start": 155, "page_end": 154, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": []}
{"section_id": "0", "title": "0001 Source_Capabilities_Extended Source or Dual- SOP only", "content": "See Section 6.5.1 Role Power", "page_start": 155, "page_end": 154, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": ["source"]}
{"section_id": "0", "title": "0010 Status Source or Sink See Section 6.5.2 SOP only", "content": "", "page_start": 155, "page_end": 154, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "0011 Get_Battery_Cap Source or Sink See Section 6.5.3 SOP only", "content": "", "page_start": 155, "page_end": 154, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "0100 Get_Battery_Status Source or Sink See Section 6.5.4", "content": "", "page_start": 155, "page_end": 154, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "0101 Battery_Capabilities Source or Sink See Section 6.5.5 SOP only", "content": "", "page_start": 155, "page_end": 154, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "0110 Get_Manufacturer_Info Source or Sink See Section6.5.6 SOP*", "content": "", "page_start": 155, "page_end": 154, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "0111 Manufacturer_Info Source, Sink or See Section 6.5.7 SOP*", "content": "Cable Plug", "page_start": 155, "page_end": 154, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1000 Security_Request Source or Sink See Section 6.5.8.1 SOP*", "content": "", "page_start": 155, "page_end": 154, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1001 Security_Response Source, Sink or See Section 6.5.8.2 SOP*", "content": "Cable Plug USB Power Delivery Specification Revision 3.0, Version 1.1 Page 155 Bits Type Sent by Description Valid Start 4…0 of Packet", "page_start": 155, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1010 Firmware_Update_Request Source or Sink See Section 6.5.9.1 SOP*", "content": "", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1011 Firmware_Update_Response Source, Sink or See Section 6.5.9.2 SOP*", "content": "Cable Plug", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1100 PPS_Status Source See Section 6.5.10 SOP only", "content": "", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source"]}
{"section_id": "0", "title": "1101 Country_Info Source, Sink or See Section 6.5.12 SOP*", "content": "Cable Plug", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1110 Country_Codes Source, Sink or See Section 6.5.11 SOP*", "content": "Cable Plug", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": ["source", "sink"]}
{"section_id": "0", "title": "1111 - Reserved All values not explicitly defined", "content": "", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "1111 are Reserved and Shall Not be", "content": "used.", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "6.5.1", "title": "Source_Capabilities_Extended Message", "content": "The Source_Capabilities_Extended Message Should be sent in response to a Get_Source_Cap_Extended Message. The Source_Capabilities_Extended Message enables a Source or a DRP to inform the Sink about its capabilities as a Source. The Source_Capabilities_Extended Message Shall return a 24-byte Source Capabilities Extended Data Block (SCEDB) whose format Shall be as shown in Figure 6-30 and Table 6-43. Figure 6-30 Source_Capabilities_Extended Message Extended Header SCEDB Data Size = 24 (24-byte Data Block) Table 6-43 Source Capabilities Extended Data Block (SCEDB) Offset Field Size Value Description", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [{"table_id": "whose format Shall be as shown in Figure 6-30 and Table 6-43.", "caption": "whose format Shall be as shown in Figure 6-30 and Table 6-43.", "page": 156, "data": []}, {"table_id": "Table 6-43 Source Capabilities Extended Data Block (SCEDB)", "caption": "Table 6-43 Source Capabilities Extended Data Block (SCEDB)", "page": 156, "data": []}], "figures": [{"figure_id": "whose format Shall be as shown in Figure 6-30 and Table 6-43.", "caption": "whose format Shall be as shown in Figure 6-30 and Table 6-43.", "page": 156}, {"figure_id": "Figure 6-30 Source_Capabilities_Extended Message", "caption": "Figure 6-30 Source_Capabilities_Extended Message", "page": 156}], "subsections": [], "word_count": 83, "tags": ["messages", "source"]}
{"section_id": "0", "title": "VID 2 Numeric Vendor ID (assigned by the USB-IF)", "content": "", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "PID 2 Numeric Product ID (assigned by the manufacturer)", "content": "", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "XID 4 Numeric Value provided by the USB-IF assigned to the product", "content": "", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8", "title": "FW Version 1 Numeric Firmware version number", "content": "", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "9", "title": "HW Version 1 Numeric Hardware version number", "content": "", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "10", "title": "Voltage Regulation 1 Bit Field", "content": "Bit Description 1…0 00b: 150mA/µs Load Step (default) 01b: 500mA/µs Load Step 11b…10b: Reserved and Shall Not be used", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["voltage"]}
{"section_id": "2", "title": "0b: 25% IoC (default)", "content": "1b: 90% IoC 3…7 Reserved and Shall be set to zero", "page_start": 156, "page_end": 155, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "11", "title": "Holdup Time 1 Numeric Output will stay with regulated limits for this number of", "content": "milliseconds after removal of the AC from the input. 0x00 = feature not supported Note: a value of 3ms Should be used Page 156 USB Power Delivery Specification Revision 3.0, Version 1.1 Offset Field Size Value Description", "page_start": 156, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": []}
{"section_id": "12", "title": "Compliance 1 Bit Field", "content": "Bit Description", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": []}
{"section_id": "0", "title": "LPS compliant when set", "content": "", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "PS1 compliant when set", "content": "", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "PS2 compliant when set", "content": "3…7 Reserved and Shall be set to zero", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "13", "title": "Touch Current 1 Bit Field", "content": "Bit Description", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": []}
{"section_id": "0", "title": "Low touch Current EPS when set", "content": "", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "Ground pin supported", "content": "when set", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": []}
{"section_id": "2", "title": "Ground pin intended for protective earth", "content": "when set 3…7 Reserved and Shall be set to zero", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": []}
{"section_id": "14", "title": "Peak Current1 2 Bit field", "content": "Bit Description 0…4 Percent overload in 10% increments Values higher than 25 (11001b) are clipped to 250%. 5…10 Overload period in 20ms", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "11.14", "title": "Duty cycle in 5% increments", "content": "", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "15", "title": "VBUS Voltage droop", "content": "", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["voltage"]}
{"section_id": "16", "title": "Peak Current2 2 Bit field", "content": "Bit Description 0…4 Percent overload in 10% increments Values higher than 25 (11001b) are clipped to 250%. 5…10 Overload period in 20ms", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "11.14", "title": "Duty cycle in 5% increments", "content": "", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "15", "title": "VBUS Voltage droop", "content": "", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["voltage"]}
{"section_id": "18", "title": "Peak Current3 2 Bit field", "content": "Bit Description 0…4 Percent overload in 10% increments Values higher than 25 (11001b) are clipped to 250%. 5…10 Overload period in 20ms", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "11.14", "title": "Duty cycle in 5% increments", "content": "", "page_start": 157, "page_end": 156, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "15", "title": "VBUS Voltage droop", "content": "USB Power Delivery Specification Revision 3.0, Version 1.1 Page 157 Offset Field Size Value Description", "page_start": 157, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["voltage"]}
{"section_id": "20", "title": "Touch Temp 1 Value Temperature conforms to:", "content": "", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "= [IEC 60950-1] (default)", "content": "", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "= [IEC 62368-1] TS1", "content": "", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "= [IEC 62368-1] TS2", "content": "Note: All other values Reserved", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": []}
{"section_id": "21", "title": "Source Inputs 1 Bit field", "content": "Bit Description", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": ["source"]}
{"section_id": "0", "title": "0b: No external supply", "content": "1b: External supply present", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": []}
{"section_id": "1", "title": "If bit 0 is set:", "content": "0b: External supply is constrained 1b: External supply is unconstrained If bit 0 is not set Reserved and Shall be set to zero", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": []}
{"section_id": "2", "title": "0b: No internal Battery", "content": "1b: Internal Battery present 3…7 Reserved and Shall be set to zero", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "22", "title": "Batteries 1 Byte Upper Nibble = Number of Hot Swappable Batteries (0…4)", "content": "Lower Nibble = Number of Fixed Batteries (0…4)", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "23", "title": "Source PDP 1 Byte 0…6: Source’s rated PDP", "content": "7: Reserved and Shall be set to zero", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["source"]}
{"section_id": "6.5.1.1", "title": "Vendor ID (VID) Field", "content": "The Vendor ID field Shall contain the 16-bit Vendor ID (VID) assigned to the Source’s vendor by the USB-IF. If the vendor does not have a VID, the Vendor ID field Shall be set to zero. Devices that have a USB data interface Shall report the same VID as the idVendor in the Standard Device Descriptor (see [USB 2.0] and [USB 3.1]).", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 62, "tags": []}
{"section_id": "6.5.1.2", "title": "Product ID (PID) Field", "content": "The Product ID field Shall contain the 16-bit Product ID (PID) assigned by the Source’s vendor. Devices that have a USB data interface Shall report the same PID as the idProduct in the Standard Device Descriptor (see [USB 2.0] and [USB 3.1]).", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 42, "tags": []}
{"section_id": "6.5.1.1", "title": "XID Field", "content": "The XID field Shall contain the 32-bit XID provided by the USB-IF to the vendor who in turns assigns it to a product. If the vendor does not have an XID, then it Shall return zero in this field (see [USB 2.0] and [USB 3.1]).", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 45, "tags": []}
{"section_id": "6.5.1.2", "title": "Firmware Version Field", "content": "The Firmware Version field Shall contain an 8-bit firmware version number assigned to the device by the vendor.", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": []}
{"section_id": "6.5.1.3", "title": "Hardware Version Field", "content": "The Hardware Version field Shall contain an 8-bit hardware version number assigned to the device by the vendor.", "page_start": 158, "page_end": 157, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": []}
{"section_id": "6.5.1.4", "title": "Voltage Regulation Field", "content": "The Voltage Regulation field contains bits covering Load Step Slew Rate and Magnitude. See Section 7.1.12.1 for further details. Page 158 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 158, "page_end": 158, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": ["voltage"]}
{"section_id": "6.5.1.4.1", "title": "Load Step Slew Rate", "content": "The Source Shall report its load step response capability in bits 0…1 of the Voltage Regulation bit field.", "page_start": 159, "page_end": 158, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": []}
{"section_id": "6.5.1.4.2", "title": "Load Step Magnitude", "content": "The Source Shall report its load step magnitude rate as a percentage of IoC in bit 2 of the Voltage Regulation field.", "page_start": 159, "page_end": 158, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "6.5.1.5", "title": "Holdup Time Field", "content": "The Holdup Time field Shall contain the Source’s holdup time (see Section 7.1.12.2).", "page_start": 159, "page_end": 158, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": []}
{"section_id": "6.5.1.6", "title": "Compliance Field", "content": "The Compliance field Shall contain the standards the Source is compliant with (see Section 7.1.12.3).", "page_start": 159, "page_end": 158, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": []}
{"section_id": "6.5.1.7", "title": "Touch Current", "content": "The Touch Current field reports whether the Source meets certain leakage current levels and if it has a ground pin. A Source Shall set the Touch Current bit (bit-0) when their leakage current is less than 65µA rms when Source’s maximum capability is less than or equal to 30W, or when their leakage current is less than 100 µA rms when its power capability is between 30W and 100W. The total combined leakage current Shall be measured in accordance with [IEC 60950-1] when tested at 250VAC rms at 50 Hz. A Source with a ground pin Shall set the Ground pin bit (bit-1). A Source whose Ground pin is intended to be connected to a protective earth Shall set both bit1 and bit 2.", "page_start": 159, "page_end": 158, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 124, "tags": []}
{"section_id": "6.5.1.8", "title": "Peak Current", "content": "The Peak Current field Shall contain the combinations of Peak Current that the Source supports (see Section 7.1.12.4). Peak Current provides a means for Source report its ability to provide current in excess of the negotiated amount for short periods. The Peak Current descriptor defines up to three combinations of % overload, duration and duty cycle defined as PeakCurrent1, PeakCurrent2 and PeakCurrent3 that the Source supports. A Source May offer no Peak Current capability. A Source Shall populate unused Peak Current bit fields with zero. The Bit Fields within Peak Current1, Peak Current2, and Peak Current3 contain the following subfields:  Percentage Overload Shall be the maximum peak current reported in 10% increments as a percentage of the negotiated operating current (IoC) offered by the Source. Values higher than 25 (11001b) are clipped to 250%.  Overload Period Shall be the minimum rolling average time window in 20ms increments, where a value of 20ms is recommended.  Duty Cycle Shall be the maximum percentage of overload period reported in 5% increments. The values Should be 5%, 10% and 50% for PeakCurrent1, PeakCurrent2 and PeakCurrent3 respectively.  V Droop Shall be set to one to indicate there is an additional 5% voltage droop on V when the overload BUS BUS conditions occur. However, it is recommended that the Source Should provide V in the range of vSrcNew when BUS overload conditions occur and set this bit to zero.", "page_start": 159, "page_end": 158, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 237, "tags": []}
{"section_id": "6.5.1.9", "title": "Touch Temp", "content": "The Touch Temp field Shall report the IEC standard used to determine the surface temperature of the Source’s enclosure. Safety limits for the Source’s touch temperature are set in applicable product safety standards (e.g. [IEC 60950-1] or [IEC 62368-1]). The Source May report when its touch temperature performance conforms to the TS1 or TS2 limits described in [IEC 62368-1]. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 159", "page_start": 159, "page_end": 159, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 69, "tags": []}
{"section_id": "6.5.1.10", "title": "Source Inputs", "content": "The Source Inputs field Shall identify the possible inputs that provide power to the Source. Note some Sources are only powered by a Battery (e.g. an automobile) rather than the more common mains.  When bit 0 is set, the Source can be sourced by an external power supply.  When bits 0 and 1 are set, the Source can be sourced by an external power supply which is assumed to be effectively “infinite” i.e. it won’t run down over time.  When bit 2 is set the Source can be sourced by an internal Battery. Bit 2 May be set independently of bits 0 and 1.", "page_start": 160, "page_end": 159, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 107, "tags": ["source"]}
{"section_id": "6.5.1.11", "title": "Batteries", "content": "The Batteries field Shall report the number of batteries the source supports. It Shall independently report the number of Hot Swappable Batteries and the number of Fixed batteries. The maximum number of each type of Battery Shall be no more than 4.", "page_start": 160, "page_end": 159, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 42, "tags": []}
{"section_id": "6.5.1.12", "title": "Source PDP", "content": "The Source PDP field Shall report the Source’s rated PDP as defined in Table 10-2.", "page_start": 160, "page_end": 159, "content_type": "text", "tables": [{"table_id": "The Source PDP field Shall report the Source’s rated PDP as defined in Table 10-2.", "caption": "The Source PDP field Shall report the Source’s rated PDP as defined in Table 10-2.", "page": 160, "data": []}], "figures": [], "subsections": [], "word_count": 15, "tags": ["source"]}
{"section_id": "6.5.2", "title": "Status Message", "content": "The Status Message Shall be sent in response to a Get_Status Message. The Status Message enables a Port to inform its Port Partner about the present status of the Source or Sink. Typically a Get_Status Message will be sent by the Port after receipt of an Alert Message. Some of the reported events are critical such as OCP, OVP and OTP, while others are informative such as change in a Battery’s status from charging to neither charging nor discharging. The Status Message returns a 5-byte Status Data Block (SDB) whose format Shall be as shown in Figure 6-31 and Table 6-44. Figure 6-31 Status Message Extended Header SDB Data Size = 5 (5-byte block) Table 6-44 Status Data Block (SDB) Offset Field Size Value Description (Byte)", "page_start": 160, "page_end": 159, "content_type": "text", "tables": [{"table_id": "Table 6-44.", "caption": "Table 6-44.", "page": 160, "data": []}, {"table_id": "Table 6-44 Status Data Block (SDB)", "caption": "Table 6-44 Status Data Block (SDB)", "page": 160, "data": []}], "figures": [{"figure_id": "The Status Message returns a 5-byte Status Data Block (SDB) whose format Shall be as shown in Figure 6-31 and", "caption": "The Status Message returns a 5-byte Status Data Block (SDB) whose format Shall be as shown in Figure 6-31 and", "page": 160}, {"figure_id": "Figure 6-31 Status Message", "caption": "Figure 6-31 Status Message", "page": 160}], "subsections": [], "word_count": 126, "tags": ["messages"]}
{"section_id": "0", "title": "Internal Temp 1 Numeric Source or Sink’s internal temperature in degrees centigrade.", "content": "", "page_start": 160, "page_end": 159, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "0", "title": "= feature not supported", "content": "", "page_start": 160, "page_end": 159, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "= temperature is less than 2°C.", "content": "2-255 = temperature in °C.", "page_start": 160, "page_end": 159, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": []}
{"section_id": "1", "title": "Present Input 1 Bit field", "content": "Bit Description", "page_start": 160, "page_end": 159, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": []}
{"section_id": "0", "title": "Reserved and Shall be set to zero", "content": "", "page_start": 160, "page_end": 159, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "External Power when set", "content": "", "page_start": 160, "page_end": 159, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power"]}
{"section_id": "2", "title": "External Power AC/DC (Valid when Bit 1 set)", "content": "0: DC 1: AC Reserved when Bit 1 is zero", "page_start": 160, "page_end": 159, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["power"]}
{"section_id": "3", "title": "Internal Power from Battery when set", "content": "", "page_start": 160, "page_end": 159, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power"]}
{"section_id": "4", "title": "Internal Power from non-Battery power", "content": "source when set 5…7 Reserved and Shall be set to zero Page 160 USB Power Delivery Specification Revision 3.0, Version 1.1 Offset Field Size Value Description (Byte)", "page_start": 160, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": ["power"]}
{"section_id": "2", "title": "Present Battery Input 1 Bit field When Present Input field bit 3 set Shall contain the bit", "content": "corresponding to the Battery or Batteries providing power: Upper nibble = Hot Swappable Battery (b7…4) Lower nibble = Fixed Battery (b3…0) When Present Source Input field bit 3 is not set this field is Reserved and Shall be set to zero.", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": []}
{"section_id": "3", "title": "Event Flags 1 Bit field Bit Description", "content": "", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "Reserved and Shall be set to zero", "content": "", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "OCP event when set", "content": "", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "OTP event when set", "content": "", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "OVP event when set (Sink only, for Source", "content": "Reserved and Shall be set to zero)", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": ["source", "sink"]}
{"section_id": "4", "title": "CF mode when set, CV mode when cleared", "content": "5…7 Reserved and Shall be set to zero", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "4", "title": "Temperature Status 1 Bit field Bit Description", "content": "", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "Reserved and Shall be set to zero", "content": "1…2 00 – Not Supported", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": []}
{"section_id": "01", "title": "– Normal", "content": "", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "10", "title": "– Warning", "content": "", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "11", "title": "– Over temperature", "content": "3…7 Reserved and Shall be set to zero", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "6.5.2.1", "title": "Internal Temp", "content": "The Internal Temp field reports the instantaneous temperature of a portion of the Source or Sink.", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 16, "tags": []}
{"section_id": "6.5.2.2", "title": "Present Input", "content": "The Present Input field indicates which supplies are presently powering the Source or Sink. The following bits are defined:  Bit 1 indicates that an external Source is present.  Bit 2 indicates whether the external unconstrained Source is AC or DC.  Bit 3 indicates that power is being provided from Battery.  Bit4 indicates an alternative internal source of power that is not a Battery.", "page_start": 161, "page_end": 160, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 67, "tags": []}
{"section_id": "6.5.2.3", "title": "Present Battery Input", "content": "The Present Battery Input field indicates which Battery or Batteries are presently supplying power to the Source or Sink. The Present Battery Input field is only Valid when the Present Input field indicates that there is Internal Power from Battery. The upper nibble of the field indicates which Hot Swappable Battery/Batteries are supplying power with bit 4 in upper nibble corresponding to Battery 4 and bit 7 in the upper nibble corresponding to Battery 7 (see Section 6.5.3 and Section 6.5.4). The lower nibble of the field indicates which Fixed Battery/Batteries are supplying power with bit 0 in lower nibble corresponding to Battery 0 and bit 3 in the lower nibble corresponding to Battery 3 (see Section 6.5.3 and Section 6.5.4). USB Power Delivery Specification Revision 3.0, Version 1.1 Page 161", "page_start": 161, "page_end": 161, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 131, "tags": []}
{"section_id": "6.5.2.4", "title": "Event Flags Field", "content": "The Event Flags field returns event flags. The OTP, OVP and OCP event flags Shall be set when there is an event and Shall only be cleared when read with the Get_PPS_Status Message. When the OTP event flag is set the Temperature Status field Shall also be set to over temperature. The CF/CV mode bit is only Valid when operating as a Programmable Power Supply and Shall be Ignored otherwise. When the Source is operating as a Programmable Power Supply the CF/CV mode bit Shall be set when operating in Current Foldback mode (CF mode) and Shall be cleared when operating in Constant Voltage mode (CV mode).", "page_start": 162, "page_end": 161, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 107, "tags": []}
{"section_id": "6.5.2.5", "title": "Temperature Status", "content": "The Temperature Status field returns the current temperature status of the device either: normal, warning and over temperature. When the Temperature Status field is set to over temperature the OTP event flag Shall also be set.", "page_start": 162, "page_end": 161, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": []}
{"section_id": "6.5.3", "title": "Get_Battery_Cap Message", "content": "The Get_Battery_Cap (Get Battery Capabilities) Message is used to request the capability of a Battery present in its Port Partner. The Port Shall respond by returning a Battery_Capabilities Message (see Section 6.5.5) containing a Battery Capabilities Data Block (BCDB) for the targeted Battery. The Get_Battery_Cap Message contains a 1 byte Get Battery Cap Data Block (GBCDB), whose format Shall be as shown in Figure 6-32 and Table 6-45. This block defines for which Battery the request is being made. The Data Size field in the Get_Battery_Cap Message Shall be set to 1. Figure 6-32 Get_Battery_Cap Message Extended Header GBCDB Data Size = 1 Table 6-45 Get Battery Cap Data Block (GBCDB) Offset Field Size Value Description", "page_start": 162, "page_end": 161, "content_type": "text", "tables": [{"table_id": "in Figure 6-32 and Table 6-45. This block defines for which Battery the request is being made.", "caption": "in Figure 6-32 and Table 6-45. This block defines for which Battery the request is being made.", "page": 162, "data": []}, {"table_id": "Table 6-45 Get Battery Cap Data Block (GBCDB)", "caption": "Table 6-45 Get Battery Cap Data Block (GBCDB)", "page": 162, "data": []}], "figures": [{"figure_id": "in Figure 6-32 and Table 6-45. This block defines for which Battery the request is being made.", "caption": "in Figure 6-32 and Table 6-45. This block defines for which Battery the request is being made.", "page": 162}, {"figure_id": "Figure 6-32 Get_Battery_Cap Message", "caption": "Figure 6-32 Get_Battery_Cap Message", "page": 162}], "subsections": [], "word_count": 116, "tags": ["messages"]}
{"section_id": "0", "title": "Battery Cap Ref 1 Value Number of the Battery indexed from zero:", "content": " Values 0…3 represent the Fixed Batteries.  Values 4…7 represent the Hot Swappable Batteries.  Values 8…255 are Reserved and Shall Not be used.", "page_start": 162, "page_end": 161, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": []}
{"section_id": "6.5.4", "title": "Get_Battery_Status Message", "content": "The Get_Battery_Status (Get Battery Status) Message is used to request the status of a Battery present in its Port Partner. The port Shall respond by returning a Battery_Status Message (see Section 6.4.5) containing a Battery Status Data Object (BSDO) for the targeted Battery. The Get_Battery_Status Message contains a 1 byte Get Battery Status Data Block (GBSDB) whose format Shall be as shown in Figure 6-33 and Table 6-46. This block contains details of the requested Battery. The Data Size field in the Get_Battery_Status Message Shall be set to 1. Figure 6-33 Get_Battery_Status Message Extended Header GBSDB Data Size = 1 Page 162 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 6-46 Get Battery Status Data Block (GBSDB) Offset Field Size Value Description", "page_start": 162, "page_end": 162, "content_type": "text", "tables": [{"table_id": "shown in Figure 6-33 and Table 6-46. This block contains details of the requested Battery. The Data Size field in the", "caption": "shown in Figure 6-33 and Table 6-46. This block contains details of the requested Battery. The Data Size field in the", "page": 162, "data": []}, {"table_id": "Table 6-46 Get Battery Status Data Block (GBSDB)", "caption": "Table 6-46 Get Battery Status Data Block (GBSDB)", "page": 163, "data": []}], "figures": [{"figure_id": "shown in Figure 6-33 and Table 6-46. This block contains details of the requested Battery. The Data Size field in the", "caption": "shown in Figure 6-33 and Table 6-46. This block contains details of the requested Battery. The Data Size field in the", "page": 162}, {"figure_id": "Figure 6-33 Get_Battery_Status Message", "caption": "Figure 6-33 Get_Battery_Status Message", "page": 162}], "subsections": [], "word_count": 123, "tags": ["messages"]}
{"section_id": "0", "title": "Battery Status Ref 1 Value Number of the Battery indexed from zero:", "content": " Values 0…3 represent the Fixed Batteries.  Values 4…7 represent the Hot Swappable Batteries.  Values 8…255 are Reserved and Shall Not be used.", "page_start": 163, "page_end": 162, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": []}
{"section_id": "6.5.5", "title": "Battery_Capabilities Message", "content": "The Battery_Capabilities Message is sent in response to a Get_Battery_Cap Message. The Battery_Capabilities Message contains one Battery Capability Data Block (BCDB) for one of the Batteries its supports as reported by Battery field in the Source_Capabilities_Extended Message. The returned BCDB Shall correspond to the Battery requested in the Battery Cap Ref field contained in the Get_Battery_Cap Message. The Battery_Capabilities Message returns a 9-byte BCDB whose format Shall be as shown in Figure 6-34 and Table 6-44. Figure 6-34 Battery_Capabilities Message Extended Header BCDB Data Size = 9 Table 6-47 Battery Capability Data Block (BCDB) Offset Field Size Value Description (Byte)", "page_start": 163, "page_end": 162, "content_type": "text", "tables": [{"table_id": "The Battery_Capabilities Message returns a 9-byte BCDB whose format Shall be as shown in Figure 6-34 and Table", "caption": "The Battery_Capabilities Message returns a 9-byte BCDB whose format Shall be as shown in Figure 6-34 and Table", "page": 163, "data": []}, {"table_id": "Table 6-47 Battery Capability Data Block (BCDB)", "caption": "Table 6-47 Battery Capability Data Block (BCDB)", "page": 163, "data": []}], "figures": [{"figure_id": "The Battery_Capabilities Message returns a 9-byte BCDB whose format Shall be as shown in Figure 6-34 and Table", "caption": "The Battery_Capabilities Message returns a 9-byte BCDB whose format Shall be as shown in Figure 6-34 and Table", "page": 163}, {"figure_id": "Figure 6-34 Battery_Capabilities Message", "caption": "Figure 6-34 Battery_Capabilities Message", "page": 163}], "subsections": [], "word_count": 100, "tags": ["messages"]}
{"section_id": "0", "title": "VID 2 Numeric Vendor ID (assigned by the USB-IF)", "content": "", "page_start": 163, "page_end": 162, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "PID 2 Numeric Product ID (assigned by the manufacturer)", "content": "", "page_start": 163, "page_end": 162, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "Battery Design Capacity 2 1/10 WH Battery’s design capacity", "content": "Note: 0x0000 = Battery not present 0xFFFF = design capacity unknown", "page_start": 163, "page_end": 162, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "6", "title": "Battery Last Full Charge 2 1/10 WH Battery’s last full charge capacity", "content": "Capacity Note: 0x0000 = Battery not present 0xFFFF = last full charge capacity unknown", "page_start": 163, "page_end": 162, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": []}
{"section_id": "8", "title": "Battery Type 1 Bit Field", "content": "Bit Description", "page_start": 163, "page_end": 162, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": []}
{"section_id": "0", "title": "Invalid Battery reference", "content": "1-7 Reserved", "page_start": 163, "page_end": 162, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": []}
{"section_id": "6.5.5.1", "title": "Battery Design Capacity Field", "content": "The Battery Design Capacity field Shall return the Battery’s design capacity in tenths of WH. If the Battery is Hot Swappable and is not present, the Battery Design Capacity field Shall be set to 0. If the Battery is unable to report its Design Capacity, it Shall return 0xFFFF.", "page_start": 163, "page_end": 162, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 49, "tags": []}
{"section_id": "6.5.5.2", "title": "Battery Last Full Charge Capacity Field", "content": "The Battery Last Full Charge Capacity field Shall return the Battery’s last full charge capacity in tenths of WH. If the Battery is Hot Swappable and is not present, the Battery Last Full Charge Capacity field Shall be set to 0. If the Battery is unable to report its Design Capacity, the Battery Last Full Charge Capacity field Shall be set to 0xFFFF. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 163", "page_start": 163, "page_end": 163, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 73, "tags": []}
{"section_id": "6.5.5.3", "title": "Battery Type Field", "content": "The Battery Type Field is used to report additional information about the Battery’s capabilities.", "page_start": 164, "page_end": 163, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": []}
{"section_id": "6.5.5.3.1", "title": "Invalid Battery Reference", "content": "The Invalid Battery Reference bit Shall be set when the Get_Battery_Cap Message contains a reference to a Battery that does not exist.", "page_start": 164, "page_end": 163, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "6.5.6", "title": "Get_Manufacturer_Info Message", "content": "The Get_Manufacturer_Info (Get Manufacturer Info) Message is sent by a Port to request manufacturer specific information relating to its Port Partner or Cable Plug or of a Battery behind a Port. The Port or Cable Plug Shall respond by returning a Manufacturer_Info Message (Section 6.5.7) containing a Manufacturer Info Data Block (MIDB). The Get_Manufacturer_Info Message contains a 2-byte Get Manufacturer Info Data Block (GMIDB). This block defines whether it is the Device or Battery manufacturer information being requested and for which Battery the request is being made. The Get_Manufacturer_Info Message returns a GMIDB whose format Shall be as shown in Figure 6-33 and Table 6-48. Figure 6-35 Get_Manufacturer_Info Message Extended Header GMIDB Data Size = 2 Table 6-48 Get Manufacturer Info Data Block (GMIDB) Offset Field Size Value Description", "page_start": 164, "page_end": 163, "content_type": "text", "tables": [{"table_id": "The Get_Manufacturer_Info Message returns a GMIDB whose format Shall be as shown in Figure 6-33 and Table", "caption": "The Get_Manufacturer_Info Message returns a GMIDB whose format Shall be as shown in Figure 6-33 and Table", "page": 164, "data": []}, {"table_id": "Table 6-48 Get Manufacturer Info Data Block (GMIDB)", "caption": "Table 6-48 Get Manufacturer Info Data Block (GMIDB)", "page": 164, "data": []}], "figures": [{"figure_id": "The Get_Manufacturer_Info Message returns a GMIDB whose format Shall be as shown in Figure 6-33 and Table", "caption": "The Get_Manufacturer_Info Message returns a GMIDB whose format Shall be as shown in Figure 6-33 and Table", "page": 164}, {"figure_id": "Figure 6-35 Get_Manufacturer_Info Message", "caption": "Figure 6-35 Get_Manufacturer_Info Message", "page": 164}], "subsections": [], "word_count": 129, "tags": ["messages"]}
{"section_id": "0", "title": "Manufacturer Info Target 1 Value 0: Port/Cable Plug", "content": "1: Battery 255…2: Reserved Shall Not be used.", "page_start": 164, "page_end": 163, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["cable"]}
{"section_id": "1", "title": "Manufacturer Info Ref 1 Value If Manufacturer Info Target subfield is Battery (01b) the", "content": "Manufacturer Info Ref field Shall contain the Battery number reference which is the number of the Battery indexed from zero:  Values 0…3 represent the Fixed Batteries.  Values 4…7 represent the Hot Swappable Batteries. Otherwise this field is Reserved and Shall be set to zero.", "page_start": 164, "page_end": 163, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 46, "tags": []}
{"section_id": "6.5.7", "title": "Manufacturer_Info Message", "content": "The Manufacturer_Info Message Shall be sent in response to a Get_Manufacturer_Info Message. The Manufacturer_Info Message contains the USB VID and the Vendor’s PID to identify the device or Battery and the device or Battery’s manufacturer byte array in a variable length Data Block of up to MaxExtendedMsgLegacyLen . The Manufacturer_Info Message returns a Manufacturer Info Data Block (MIDB) whose format Shall be as shown in Figure 6-34 and Table 6-44. Figure 6-36 Manufacturer_Info Message Extended Header MIDB Data Size = 4..26 Page 164 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 6-49 Manufacturer Info Data Block (MIDB) Offset Field Size Value Description", "page_start": 164, "page_end": 164, "content_type": "text", "tables": [{"table_id": "Figure 6-34 and Table 6-44.", "caption": "Figure 6-34 and Table 6-44.", "page": 164, "data": []}, {"table_id": "Table 6-49 Manufacturer Info Data Block (MIDB)", "caption": "Table 6-49 Manufacturer Info Data Block (MIDB)", "page": 165, "data": []}], "figures": [{"figure_id": "Figure 6-34 and Table 6-44.", "caption": "Figure 6-34 and Table 6-44.", "page": 164}, {"figure_id": "Figure 6-36 Manufacturer_Info Message", "caption": "Figure 6-36 Manufacturer_Info Message", "page": 164}], "subsections": [], "word_count": 103, "tags": ["messages"]}
{"section_id": "0", "title": "VID 2 Numeric Vendor ID (assigned by the USB-IF)", "content": "", "page_start": 165, "page_end": 164, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "PID 2 Numeric Product ID (assigned by the manufacturer)", "content": "", "page_start": 165, "page_end": 164, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "Manufacturer String 0…22 String Vendor defined byte array", "content": "If the Manufacturer Info Target field or Manufacturer Info Ref field in the Get_Manufacturer_Info Message is unrecognized return zero bytes.", "page_start": 165, "page_end": 164, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": []}
{"section_id": "6.5.7.1", "title": "Vendor ID (VID)", "content": "This field Shall contain the device’s or Battery’s16-bit vendor ID assigned by the USB.", "page_start": 165, "page_end": 164, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": []}
{"section_id": "6.5.7.2", "title": "Product ID (PID)", "content": "This field Shall contain the device’s or Battery’s 16-bit product identifier designated by the vendor.", "page_start": 165, "page_end": 164, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": []}
{"section_id": "6.5.7.3", "title": "Manufacturer String", "content": "This field Shall contain the device’s or Battery’s manufacturer string as defined by the vendor. If the Manufacturer Info Target field or Manufacturer Info Ref field in the Get_Manufacturer_Info Message is unrecognized the field Shall return zero bytes.", "page_start": 165, "page_end": 164, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": []}
{"section_id": "6.5.8", "title": "Security Messages", "content": "The authentication process between Port Partners or a Port and Cable Plug is fully described in [USBTypeCAuthentication 1.0]. This specification describes two Extended Messages used by the authentication process when applied to PD. In the authentication process described in [USBTypeCAuthentication 1.0] there are three basic exchanges that serve to:  Get the Port or Cable Plug’s certificates.  Get the Port or Cable Plug’s digest.  Challenge the Port Partner or Cable Plug. Certificates are used to convey information, attested to by a signer, which attests to the Port Partner’s or Cable Plug’s authenticity. The Port’s or Cable Plug’s certificates are needed when a Port encounters a Port Partner or Cable Plug it has not been Attached to before. To minimize calculations after the initial Attachment, a Port can also use a digest consisting of hashes of the certificates rather than the certificates themselves. Once the port has the certificates and has calculated the hashes, it stores the hashes and uses the digest in future exchanges. After the port gets the certificates or digest, it challenges its Port Partner or the Cable Plug to detect replay attacks. For further details refer to [USBTypeCAuthentication 1.0].", "page_start": 165, "page_end": 164, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 194, "tags": ["messages"]}
{"section_id": "6.5.8.1", "title": "Security_Request", "content": "The Security_Request Message is used by a Port to pass a security data structure to its Port Partner or a Cable Plug. The Security_Request Message contains a Security Request Data Block (SRQDB) whose format Shall be as shown in Figure 6-37. The contents of the SRQDB and its use are defined in [USBTypeCAuthentication 1.0]. Figure 6-37 Security_Request Message Extended Header SRQDB Data Size = 4..260 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 165", "page_start": 165, "page_end": 165, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-37. The contents of the SRQDB and its use are defined in [USBTypeCAuthentication 1.0].", "caption": "Figure 6-37. The contents of the SRQDB and its use are defined in [USBTypeCAuthentication 1.0].", "page": 165}, {"figure_id": "Figure 6-37 Security_Request Message", "caption": "Figure 6-37 Security_Request Message", "page": 165}], "subsections": [], "word_count": 75, "tags": []}
{"section_id": "6.5.8.2", "title": "Security_Response", "content": "The Security_Response Message is used by a Port or Cable Plug to pass a security data structure to the Port that sent the Security_Request Message. The Security_Response Message contains a Security Response Data Block (SRPDB) whose format Shall be as shown in Figure 6-38. The contents of the SRPDB and its use are defined in [USBTypeCAuthentication 1.0]. Figure 6-38 Security_Response Message Extended Header SRPDB Data Size = 4..260", "page_start": 166, "page_end": 165, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-38. The contents of the SRPDB and its use are defined in [USBTypeCAuthentication 1.0].", "caption": "Figure 6-38. The contents of the SRPDB and its use are defined in [USBTypeCAuthentication 1.0].", "page": 166}, {"figure_id": "Figure 6-38 Security_Response Message", "caption": "Figure 6-38 Security_Response Message", "page": 166}], "subsections": [], "word_count": 68, "tags": []}
{"section_id": "6.5.9", "title": "Firmware Update Messages", "content": "The firmware update process between Port Partners or a Port and Cable Plug is fully described in [USBPDFirmwareUpdate 1.0]. This specification describes two Extended Messages used by the firmware update process when applied to PD.", "page_start": 166, "page_end": 165, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages"]}
{"section_id": "6.5.9.1", "title": "Firmware_Update_Request", "content": "The Firmware_Update_Request Message is used by a Port to pass a firmware update data structure to its Port Partner or a Cable Plug. The Firmware_Update_Request Message contains a Firmware Update Request Data Block (FRQDB) whose format Shall be as shown in Figure 6-39. The contents of the FRQDB and its use are defined in [USBPDFirmwareUpdate 1.0]. Figure 6-39 Firmware_Update_Request Message Extended Header FRQDB Data Size = 4..260", "page_start": 166, "page_end": 165, "content_type": "text", "tables": [], "figures": [{"figure_id": "Shall be as shown in Figure 6-39. The contents of the FRQDB and its use are defined in [USBPDFirmwareUpdate", "caption": "Shall be as shown in Figure 6-39. The contents of the FRQDB and its use are defined in [USBPDFirmwareUpdate", "page": 166}, {"figure_id": "Figure 6-39 Firmware_Update_Request Message", "caption": "Figure 6-39 Firmware_Update_Request Message", "page": 166}], "subsections": [], "word_count": 67, "tags": []}
{"section_id": "6.5.9.2", "title": "Firmware_Update_Response", "content": "The Firmware_Update_Response Message is used by a Port or Cable Plug to pass a firmware update data structure to the Port that sent the Firmware_Update_Request Message. The Firmware_Update_Response Message contains a Firmware Update Response Data Block (FRPDB) whose format Shall be as shown in Figure 6-40. The contents of the FRPDB and its use are defined in [USBPDFirmwareUpdate 1.0]. Figure 6-40 Firmware_Update_Response Message Extended Header FRPDB Data Size = 4..260", "page_start": 166, "page_end": 165, "content_type": "text", "tables": [], "figures": [{"figure_id": "Shall be as shown in Figure 6-40. The contents of the FRPDB and its use are defined in [USBPDFirmwareUpdate 1.0].", "caption": "Shall be as shown in Figure 6-40. The contents of the FRPDB and its use are defined in [USBPDFirmwareUpdate 1.0].", "page": 166}, {"figure_id": "Figure 6-40 Firmware_Update_Response Message", "caption": "Figure 6-40 Firmware_Update_Response Message", "page": 166}], "subsections": [], "word_count": 70, "tags": []}
{"section_id": "6.5.10", "title": "PPS_Status Message", "content": "The PPS_Status Message Shall be sent in response to a Get_PPS_Status Message. The PPS_Status Message enables a Sink to query the Source to get additional information about its operational state. The Get_PPS_Status Message and the PPS_Status Message Shall only be supported when the Alert Message is also supported. The PPS_Status Message Shall return a 4-byte PPS Status Data Block (PPSSDB) whose format Shall be as shown in Figure 6-41 and Table 6-50. Page 166 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 6-41 PPS_Status Message Extended Header PPSSDB Data Size = 4 (4-byte Data Block) Table 6-50 PPS Status Data Block (PPSSDB) Offset Field Size Value Description", "page_start": 166, "page_end": 166, "content_type": "text", "tables": [{"table_id": "Figure 6-41 and Table 6-50.", "caption": "Figure 6-41 and Table 6-50.", "page": 166, "data": []}, {"table_id": "Table 6-50 PPS Status Data Block (PPSSDB)", "caption": "Table 6-50 PPS Status Data Block (PPSSDB)", "page": 167, "data": []}], "figures": [{"figure_id": "Figure 6-41 and Table 6-50.", "caption": "Figure 6-41 and Table 6-50.", "page": 166}, {"figure_id": "Figure 6-41 PPS_Status Message", "caption": "Figure 6-41 PPS_Status Message", "page": 167}], "subsections": [], "word_count": 108, "tags": ["messages"]}
{"section_id": "0", "title": "Output Voltage 1 Word Source’s output voltage in 20mV units.", "content": "When set to 0xFFFF, the Source does not support this field.", "page_start": 167, "page_end": 166, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": ["voltage", "source"]}
{"section_id": "2", "title": "Output Current 1 Byte Source’s output current in 50mA units.", "content": "When set to 0xFF, the Source does not support this field.", "page_start": 167, "page_end": 166, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": ["source"]}
{"section_id": "3", "title": "Real Time Flags 1 Bit Field Bit Description", "content": "", "page_start": 167, "page_end": 166, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "Reserved and Shall be set to zero", "content": "1…2 PTF: 00 – Not Supported PTF: 01 – Normal PTF: 10 – Warning PTF: 11 – Over temperature", "page_start": 167, "page_end": 166, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": []}
{"section_id": "3", "title": "OMF set when operating in Current Foldback", "content": "mode, and cleared when operating in Constant Voltage mode. 4…7 Reserved and Shall be set to zero", "page_start": 167, "page_end": 166, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": []}
{"section_id": "6.5.10.1", "title": "Output Voltage Field", "content": "The Output Voltage field Shall return the Source’s output voltage at the time of the request. It is measured at the Source’s receptacle or if the Source has a captive cable, it measured where the voltage is applied to the cable. If the Source does not support this field, it Shall be set to 0xFFFF.", "page_start": 167, "page_end": 166, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 55, "tags": ["voltage"]}
{"section_id": "6.5.10.2", "title": "Output Current Field", "content": "The Output Current field Shall return the Source’s output current at the time of the request. If the Source does not support this field, it Shall be set to 0xFF.", "page_start": 167, "page_end": 166, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 30, "tags": []}
{"section_id": "6.5.10.3", "title": "Real Time Flags Field", "content": "Real Time flags provide a real time indication of the Source’s operating state.  The PTF (Present Temperature Flag) Shall provide a real time indication of the Source’s internal thermal status. If the PTF is not supported, it will be set to zero. o Normal indicates that that the Source is operating within its normal thermal envelope. o Warning indicates that the Source is over-heating, but is not in imminent danger of shutting down. o Over Temperature indicates that the Source is over heated and will shut down soon or has already shutdown and has sent an OTP in an Alert Message.  The OMF (Operating Mode Flag) Shall provide a real time indication of the Source’s operating mode. When set, the Source is operating in Current Foldback mode; when cleared it is operating Constant Voltage mode. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 167", "page_start": 167, "page_end": 167, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 147, "tags": []}
{"section_id": "6.5.11", "title": "Country_Codes Message", "content": "The Country_Codes Message Shall be sent in response to a Get_Country_Codes Message. The Country_Codes Message enables a Port to query its Port partner to get a list of alpha-2 country codes as defined in [ISO 3166] for which the Port Partner has country specific information. The Country_Codes Message Shall contain a 4-260 byte Country Code Data Block (CCDB) whose format Shall be as shown in Figure 6-42 and Table 6-51. Figure 6-42 Country_Codes Message Extended Header CCDB Data Size = 4-260 (4-260 byte Data Block) Table 6-51 Country Codes Data Block (CCDB) Offset Field Size Value Description", "page_start": 168, "page_end": 167, "content_type": "text", "tables": [{"table_id": "shown in Figure 6-42 and Table 6-51.", "caption": "shown in Figure 6-42 and Table 6-51.", "page": 168, "data": []}, {"table_id": "Table 6-51 Country Codes Data Block (CCDB)", "caption": "Table 6-51 Country Codes Data Block (CCDB)", "page": 168, "data": []}], "figures": [{"figure_id": "shown in Figure 6-42 and Table 6-51.", "caption": "shown in Figure 6-42 and Table 6-51.", "page": 168}, {"figure_id": "Figure 6-42 Country_Codes Message", "caption": "Figure 6-42 Country_Codes Message", "page": 168}], "subsections": [], "word_count": 97, "tags": ["messages"]}
{"section_id": "0", "title": "Length 1 Word Number of country codes in the message", "content": "", "page_start": 168, "page_end": 167, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["messages"]}
{"section_id": "2", "title": "1st Country Code 2 Bytes First character of the Alpha-2 Country Code defined by", "content": "[ISO 3166] Second character of the Alpha-2 Country Code defined by [ISO 3166]", "page_start": 168, "page_end": 167, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": []}
{"section_id": "4", "title": "2nd Country Code 2 Bytes", "content": "… Length * 2n nth Country Code 2 Bytes", "page_start": 168, "page_end": 167, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": []}
{"section_id": "6.5.11.1", "title": "Country Code Field", "content": "The Country Code field Shall contain the Alpha-2 Country Code defined by [ISO 3166].", "page_start": 168, "page_end": 167, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": []}
{"section_id": "6.5.12", "title": "Country_Info Message", "content": "The Country_Info Message Shall be sent in response to a Get_Country_Info Message. The Country_Info Message enables a Port to get additional country specific information from its Port Partner. The Country_Info Message Shall contain a 4-260 byte Country Info Data Block (CIDB) whose format Shall be as shown in Figure 6-43 and Table 6-52. Figure 6-43 Country_Info Message Extended Header CIDB Data Size = 4-260 (4-260 byte Data Block) Table 6-52 Country Info Data Block (CIDB) Offset Field Size Value Description", "page_start": 168, "page_end": 167, "content_type": "text", "tables": [{"table_id": "shown in Figure 6-43 and Table 6-52.", "caption": "shown in Figure 6-43 and Table 6-52.", "page": 168, "data": []}, {"table_id": "Table 6-52 Country Info Data Block (CIDB)", "caption": "Table 6-52 Country Info Data Block (CIDB)", "page": 168, "data": []}], "figures": [{"figure_id": "shown in Figure 6-43 and Table 6-52.", "caption": "shown in Figure 6-43 and Table 6-52.", "page": 168}, {"figure_id": "Figure 6-43 Country_Info Message", "caption": "Figure 6-43 Country_Info Message", "page": 168}], "subsections": [], "word_count": 80, "tags": ["messages"]}
{"section_id": "0", "title": "Country Code 2 Bytes First character of the Alpha-2 Country Code defined by", "content": "[ISO 3166] Second character of the Alpha-2 Country Code defined by [ISO 3166] Page 168 USB Power Delivery Specification Revision 3.0, Version 1.1 Offset Field Size Value Description", "page_start": 168, "page_end": 168, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": []}
{"section_id": "2", "title": "Reserved 1 Word Shall be set to 0.", "content": "", "page_start": 169, "page_end": 168, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "Country Specific Data 0-256 Byte Content defined by the country’s authority.", "content": "", "page_start": 169, "page_end": 168, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["data"]}
{"section_id": "6.5.12.1", "title": "Country Code Field", "content": "The Country Code field Shall contain the Alpha-2 Country Code defined by [ISO 3166].", "page_start": 169, "page_end": 168, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": []}
{"section_id": "6.5.12.2", "title": "Country Specific Data Field", "content": "The Country Specific Data field Shall contain content defined by and formatted in a manner determined by an official agency of the country indicated in the Country Code field.", "page_start": 169, "page_end": 168, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": ["data"]}
{"section_id": "6.6", "title": "Timers", "content": "All the following timers are defined in terms of bits on the bus regardless of where they are implemented in terms of the logical architecture. This is to ensure a fixed reference for the starting and stopping of timers. It is left to the implementer to ensure that this timing is observed in a real system.", "page_start": 169, "page_end": 168, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 56, "tags": []}
{"section_id": "6.6.1", "title": "CRCReceiveTimer", "content": "The CRCReceiveTimer Shall be used by the sender’s Protocol Layer to ensure that a Message has not been lost. Failure to receive an acknowledgement of a Message (a GoodCRC Message) whether caused by a bad CRC on the receiving end or by a garbled Message within tReceive is detected when the CRCReceiveTimer expires. The sender’s Protocol Layer response when a CRCReceiveTimer expires Shall be to retry nRetryCount times. Note: that Cable Plugs do not retry Messages and large Extended Messages that are not Chunked are not retried (see Section 6.7.2). Sending of the Preamble corresponding to the retried Message Shall start within tRetry of the CRCReceiveTimer expiring. The CRCReceiveTimer Shall be started when the last bit of the Message EOP has been transmitted by the Physical Layer. The CRCReceiveTimer Shall be stopped when the last bit of the EOP corresponding to the GoodCRC Message has been received by the Physical Layer. The Protocol Layer receiving a Message Shall respond with a GoodCRC Message within tTransmit in order to ensure that the sender’s CRCReceiveTimer does not expire. The tTransmit Shall be measured from when the last bit of the Message EOP has been received by the Physical Layer until the first bit of the Preamble of the GoodCRC Message has been transmitted by the Physical Layer.", "page_start": 169, "page_end": 168, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 215, "tags": []}
{"section_id": "6.6.2", "title": "SenderResponseTimer", "content": "The SenderResponseTimer Shall be used by the sender’s Policy Engine to ensure that a Message requesting a response (e.g. Get_Source_Cap Message) is responded to within a bounded time of tSenderResponse. Failure to receive the expected response is detected when the SenderResponseTimer expires. The Policy Engine’s response when the SenderResponseTimer expires Shall be dependent on the Message sent (see Section 8.3). The SenderResponseTimer Shall be started from the time the last bit of the GoodCRC Message EOP (i.e. the GoodCRC Message corresponding to the Message requesting a response) has been received by the Physical Layer. The SenderResponseTimer Shall be stopped when the last bit of the expected response Message EOP has been received by the Physical Layer. The receiver of a Message requiring a response Shall respond within tReceiverResponse in order to ensure that the sender’s SenderResponseTimer does not expire. The tReceiverResponse time Shall be measured from the time the last bit of the Message EOP has been received by the Physical Layer until the first bit of the response Message Preamble has been transmitted by the Physical Layer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 169", "page_start": 169, "page_end": 169, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 188, "tags": []}
{"section_id": "6.6.3", "title": "Capability Timers", "content": "Sources and Sinks use Capability Timers to determine Attachment of a PD Capable device. By periodically sending or requesting capabilities it is possible to determine PD device Attachment when a response is received.", "page_start": 170, "page_end": 169, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": []}
{"section_id": "6.6.3.1", "title": "SourceCapabilityTimer", "content": "Prior to a successful negotiation a Source Shall use the SourceCapabilityTimer to periodically send out a Source_Capabilities Message every tTypeCSendSourceCap while:  The Port is Attached.  The Source is not in an active connection with a PD Sink Port. Whenever there is a SourceCapabilityTimer timeout the Source Shall send a Source_Capabilities Message. It Shall then re-initialize and restart the SourceCapabilityTimer. The SourceCapabilityTimer Shall be stopped when the last bit of the EOP corresponding to the GoodCRC Message has been received by the Physical Layer since a PD connection has been established. At this point the Source waits for a Request Message or a response timeout. See Section 8.3.3.2 more details of when Source_Capabilities Messages are transmitted.", "page_start": 170, "page_end": 169, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 117, "tags": ["source"]}
{"section_id": "6.6.3.2", "title": "SinkWaitCapTimer", "content": "The Sink Shall support the SinkWaitCapTimer. When a Sink observes an absence of Source_Capabilities Messages, after V is present, for a duration of tTypeCSinkWaitCap the Sink Shall issue Hard Reset Signaling in order to BUS restart the sending of Source_Capabilities Messages by the Source (see Section 6.7.4). See Section 8.3.3.3 for more details of when the SinkWaitCapTimer are run.", "page_start": 170, "page_end": 169, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 59, "tags": ["sink"]}
{"section_id": "6.6.3.3", "title": "tFirstSourceCap", "content": "After Port Partners are Attached or after a Hard Reset or after a Power Role Swap or after a Fast Role Swap a Source Shall send its first Source_Capabilities Message within tFirstSourceCap of V reaching vSafe5V. This ensures that BUS the Sink receives a Source_Capabilities Message before the Sink’s SinkWaitCapTimer expires.", "page_start": 170, "page_end": 169, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 51, "tags": ["source"]}
{"section_id": "6.6.4", "title": "Wait Timers and Times", "content": "", "page_start": 170, "page_end": 169, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6.6.4.1", "title": "SinkRequestTimer", "content": "The SinkRequestTimer is used to ensure that the time before the next Sink Request Message, after a Wait Message has been received from the Source in response to a Sink Request Message, is a minimum of tSinkRequest min (see Section 6.3.12). The SinkRequestTimer Shall be started when the EOP of a Wait Message has been received and Shall be stopped if any other Message is received or during a Hard Reset. The Sink Shall wait at least tSinkRequest, after receiving the EOP of a Wait Message sent in response to a Sink Request Message, before sending a new Request Message. Whenever there is a SinkRequestTimer timeout the Sink May send a Request Message. It Shall then re-initialize and restart the SinkRequestTimer.", "page_start": 170, "page_end": 169, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 121, "tags": ["sink"]}
{"section_id": "6.6.4.2", "title": "tPRSwapWait", "content": "The time before the next PR_Swap Message, after a Wait Message has been received in response to a PR_Swap Message is a minimum of tPRSwapWait min (see Section 6.3.12). The Port Shall wait at least tPRSwapWait after receiving the EOP of a Wait Message sent in response to a PR_Swap Message, before sending a new PR_Swap Message.", "page_start": 170, "page_end": 169, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 57, "tags": []}
{"section_id": "6.6.4.3", "title": "tDRSwapWait", "content": "The time before the next DR_Swap Message, after a Wait Message has been received in response to a DR_Swap Message is a minimum of tDRSwapWait min (see Section 6.3.12). The Port Shall wait at least tDRSwapWait after Page 170 USB Power Delivery Specification Revision 3.0, Version 1.1 receiving the EOP of a Wait Message sent in response to a DR_Swap Message, before sending a new DR_Swap Message.", "page_start": 170, "page_end": 170, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 67, "tags": []}
{"section_id": "6.6.4.4", "title": "tVconnSwapWait", "content": "The time before the next VCONN_Swap Message, after a Wait Message has been received in response to a VCONN_Swap Message is a minimum of tVCONNSwapWait min (see Section 6.3.12). The Port Shall wait at least tVCONNSwapWait after receiving the EOP of a Wait Message sent in response to a VCONN_Swap Message, before sending a new VCONN_Swap Message.", "page_start": 171, "page_end": 170, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 57, "tags": []}
{"section_id": "6.6.5", "title": "Power Supply Timers", "content": "", "page_start": 171, "page_end": 170, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power"]}
{"section_id": "6.6.5.1", "title": "PSTransitionTimer", "content": "The PSTransitionTimer is used by the Policy Engine to timeout on a PS_RDY Message. It is started when a request for a new Capability has been accepted and will timeout after tPSTransition if a PS_RDY Message has not been received. This condition leads to a Hard Reset and a return to USB Default Operation. The PSTransitionTimer relates to the time taken for the Source to transition from one voltage, or current level, to another (see Section 7.1). The PSTransitionTimer Shall be started when the last bit of an Accept or GotoMin Message EOP has been received by the Physical Layer. The PSTransitionTimer Shall be stopped when the last bit of the PS_RDY Message EOP has been received by the Physical Layer.", "page_start": 171, "page_end": 170, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 121, "tags": []}
{"section_id": "6.6.5.2", "title": "PSSourceOffTimer", "content": "", "page_start": 171, "page_end": 170, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source"]}
{"section_id": "6.6.5.2.1", "title": "Use during Power Role Swap", "content": "The PSSourceOffTimer is used by the Policy Engine in Dual-Role Power Device that is currently acting as a Sink to timeout on a PS_RDY Message during a Power Role Swap sequence. This condition leads to USB Type-C Error Recovery. If a PR_Swap Message request has been sent by the Dual-Role Power Device currently acting as a Source the Sink can respond with an Accept Message. When the last bit of the EOP of the GoodCRC Message corresponding to this Accept Message is received by the Sink, then the PSSourceOffTimer Shall be started. If a PR_Swap Message request has been sent by the Dual-Role Power Device currently acting as a Sink the Source can respond with an Accept Message. When the last bit of the EOP of this Accept Message is received by the Sink then the PSSourceOffTimer Shall be started. The PSSourceOffTimer Shall be stopped when:  The last bit of the EOP of the PS_RDY Message is received. The PSSourceOffTimer relates to the time taken for the remote Dual-Role Power Device to stop supplying power (see also Section 7.3.9 and Section 7.3.10). The timer Shall time out if a PS_RDY Message has not been received from the remote Dual-Role Power Device within tPSSourceOff indicating this has occurred.", "page_start": 171, "page_end": 170, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 208, "tags": ["power"]}
{"section_id": "6.6.5.2.2", "title": "Use during Fast Role Swap", "content": "The PSSourceOffTimer is used by the Policy Engine in Dual-Role Power Device that is the initial Sink (currently providing vSafe5V) to timeout on a PS_RDY Message during a Fast Role Swap sequence. This condition leads to USB Type-C Error Recovery. When the FR_Swap Message request has been sent by the initial Sink, the initial Source Shall respond with an Accept Message. When the last bit of the EOP of the GoodCRC Message corresponding to this Accept Message is received by the initial Sink, then the PSSourceOffTimer Shall be started. The PSSourceOffTimer Shall be stopped when:  The last bit of the EOP of the PS_RDY Message is received. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 171 The PSSourceOffTimer relates to the time taken for the initial Source to stop supplying power and for V to revert BUS to vSafe5V (see also Section 7.2.10 and Section 7.3.15). The timer Shall time out if a PS_RDY Message has not been received from the initial Source within tPSSourceOff indicating this has occurred.", "page_start": 171, "page_end": 171, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 171, "tags": []}
{"section_id": "6.6.5.3", "title": "PSSourceOnTimer", "content": "", "page_start": 172, "page_end": 171, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source"]}
{"section_id": "6.6.5.3.1", "title": "Use during Power Role Swap", "content": "The PSSourceOnTimer is used by the Policy Engine in Dual-Role Power Device that has just stopped sourcing power and is waiting to start sinking power to timeout on a PS_RDY Message during a Power Role Swap. This condition leads to USB Type-C Error Recovery. The PSSourceOnTimer Shall be started when:  The last bit of the EOP of the GoodCRC Message corresponding to the transmitted PS_RDY Message is received by the Physical Layer. The PSSourceOnTimer Shall be stopped when:  The last bit of the EOP of the PS_RDY Message is received by the Physical Layer. The PSSourceOnTimer relates to the time taken for the remote Dual-Role Power Device to start sourcing power (see also Section 7.3.9 and Section 7.3.10) and will time out if a PS_RDY Message indicating this has not been received within tPSSourceOn.", "page_start": 172, "page_end": 171, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 136, "tags": ["power"]}
{"section_id": "6.6.5.3.2", "title": "Use during Fast Role Swap", "content": "The PSSourceOnTimer is used by the Policy Engine in Dual-Role Power Device that has just stopped sourcing power and is waiting to start sinking power to timeout on a PS_RDY Message during a Fast Role Swap. This condition leads to USB Type-C Error Recovery. The PSSourceOnTimer Shall be started when:  The last bit of the EOP of the GoodCRC Message corresponding to the transmitted PS_RDY Message is received by the Physical Layer. The PSSourceOnTimer Shall be stopped when:  The last bit of the EOP of the PS_RDY Message is received by the Physical Layer. The PSSourceOnTimer relates to the time taken for the remote Dual-Role Power Device to start sourcing power (see also Section 7.2.10 and Section 7.3.15) and will time out if a PS_RDY Message indicating this has not been received within tPSSourceOn.", "page_start": 172, "page_end": 171, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 136, "tags": []}
{"section_id": "6.6.6", "title": "NoResponseTimer", "content": "The NoResponseTimer is used by the Policy Engine in a Source or Sink to determine that its Port Partner is not responding after a Hard Reset. When the NoResponseTimer times out, the Policy Engine Shall issue up to nHardResetCount additional Hard Resets before determining that the Port Partner is non-responsive to USB Power Delivery messaging. If the Source fails to receive a GoodCRC Message in response to a Source_Capabilities Message within tNoResponse of:  The last bit of a Hard Reset Signaling being sent by the PHY Layer if the Hard Reset Signaling was initiated by the Sink.  The last bit of a Hard Reset Signaling being received by the PHY Layer if the Hard Reset Signaling was initiated by the Source. Then the Source Shall issue additional Hard Resets up to nHardResetCount times (see Section 6.8.2). Page 172 USB Power Delivery Specification Revision 3.0, Version 1.1 For a non-responsive device, the Policy Engine in a Source May either decide to continue sending Source_Capabilities Messages or to go to non-USB Power Delivery operation and cease sending Source_Capabilities Messages.", "page_start": 172, "page_end": 172, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 179, "tags": []}
{"section_id": "6.6.7", "title": "BIST Timers", "content": "", "page_start": 173, "page_end": 172, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6.6.7.1", "title": "tBISTMode", "content": "tBISTMode is used to define the maximum time that a UUT has to enter a BIST mode when requested by a Tester. A UUT Shall enter the appropriate BIST mode within tBISTMode of the last bit of the EOP of the BIST Message used to initiate the test is received by the Physical Layer. In BIST Carrier Mode when transmitting a continuous carrier signal transmission Shall start as soon as the UUT enters BIST mode.", "page_start": 173, "page_end": 172, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 75, "tags": []}
{"section_id": "6.6.7.2", "title": "BISTContModeTimer", "content": "The BISTContModeTimer is used by a UUT to ensure that a Continuous BIST Mode (i.e. BIST Carrier Mode) is exited in a timely fashion. A UUT that has been put into a Continuous BIST Mode Shall return to normal operation (either PE_SRC_Transition_to_default, PE_SNK_Transition_to_default, or PE_CBL_Ready) within tBISTContMode of the last bit of the bit of the EOP of GoodCRC Message sent in response to the BIST Message used to enable the Continuous BIST Mode.", "page_start": 173, "page_end": 172, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 74, "tags": []}
{"section_id": "6.6.8", "title": "Power Role Swap Timers", "content": "", "page_start": 173, "page_end": 172, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power"]}
{"section_id": "6.6.8.1", "title": "SwapSourceStartTimer", "content": "The SwapSourceStartTimer Shall be used by the new Source, after a Power Role Swap or Fast Role Swap, to ensure that it does not send Source_Capabilities Message before the new Sink is ready to receive the Source_Capabilities Message. The new Source Shall Not send the Source_Capabilities Message earlier than tSwapSourceStart after the last bit of the EOP of GoodCRC Message sent in response to the PS_RDY Message sent by the new Source indicating that its power supply is ready. The Sink Shall be ready to receive a Source_Capabilities Message tSwapSinkReady after having sent the last bit of the EOP of GoodCRC Message sent in response to the PS_RDY Message sent by the new Source indicating that its power supply is ready.", "page_start": 173, "page_end": 172, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 121, "tags": ["source"]}
{"section_id": "6.6.9", "title": "Soft Reset Timers", "content": "", "page_start": 173, "page_end": 172, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6.6.9.1", "title": "tSoftReset", "content": "A failure to see a GoodCRC Message in response to any Message within tReceive (after nRetryCount retries), when a Port Pair is Connected, is indicative of a communications failure. This Shall cause the Source or Sink to send a Soft_Reset Message, transmission of which Shall be completed within tSoftReset of the CRCReceiveTimer expiring.", "page_start": 173, "page_end": 172, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 53, "tags": []}
{"section_id": "6.6.9.2", "title": "tProtErrSoftReset", "content": "If the Protocol Error occurs that causes the Source or Sink to send a Soft_Reset Message, the transmission of the Soft_Reset Message Shall be completed within tProtErrSoftReset of the EOP of the GoodCRC sent in response to the Message that caused the Protocol Error.", "page_start": 173, "page_end": 172, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 44, "tags": []}
{"section_id": "6.6.10", "title": "Hard Reset Timers", "content": "", "page_start": 173, "page_end": 172, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6.6.10.1", "title": "HardResetCompleteTimer", "content": "The HardResetCompleteTimer is used by the Protocol Layer in the case where it has asked the PHY Layer to send Hard Reset Signaling and the PHY Layer is unable to send the Signaling within a reasonable time due to a non-idle channel. If the PHY Layer does not indicate that the Hard Reset Signaling has been sent within tHardResetComplete of the Protocol Layer requesting transmission, then the Protocol Layer Shall inform the Policy Engine that the Hard Reset Signaling has been sent in order to ensure the power supply is reset in a timely fashion. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 173", "page_start": 173, "page_end": 173, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 105, "tags": []}
{"section_id": "6.6.10.2", "title": "PSHardResetTimer", "content": "The PSHardResetTimer is used by the Policy Engine in a Source to ensure that the Sink has had sufficient time to process Hard Reset Signaling before turning off its power supply to V . BUS When a Hard Reset occurs the Source stops driving VCONN, removes Rp from the VCONN pin and starts to transition the V voltage to vSafe0V either: BUS  tPSHardReset after the last bit of the Hard Reset Signaling has been received from the Sink or  tPSHardReset after the last bit of the Hard Reset Signaling has been sent by the Source. See Section 7.1.5.", "page_start": 174, "page_end": 173, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 100, "tags": []}
{"section_id": "6.6.10.3", "title": "tDRSwapHardReset", "content": "If a DR_Swap Message is received during Modal Operation then a Hard Reset Shall be initiated by the recipient of the unexpected DR_Swap Message; Hard Reset Signaling Shall be generated within tDRSwapHardReset of the EOP of the GoodCRC sent in response to the DR_Swap Message.", "page_start": 174, "page_end": 173, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 45, "tags": []}
{"section_id": "6.6.10.4", "title": "tProtErrHardReset", "content": "If a Protocol Error occurs that directly leads to a Hard Reset, the transmission of the Hard Reset Signaling Shall be completed within tProtErrHardReset of the EOP of the GoodCRC sent in response to the Message that caused the Protocol Error.", "page_start": 174, "page_end": 173, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": []}
{"section_id": "6.6.11", "title": "Structured VDM Timers", "content": "", "page_start": 174, "page_end": 173, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6.6.11.1", "title": "VDMResponseTimer", "content": "The VDMResponseTimer Shall be used by the Initiator’s Policy Engine to ensure that a Structured VDM Command request needing a response (e.g. Discover Identity Command request) is responded to within a bounded time of tVDMSenderResponse. The VDMResponseTimer Shall be applied to all Structured VDM Commands except the Enter Mode and Exit Mode Commands which have their own timers (VDMModeEntryTimer and VDMModeExitTimer respectively). Failure to receive the expected response is detected when the VDMResponseTimer expires. The Policy Engine’s response when the VDMResponseTimer expires Shall be dependent on the Message sent (see Section 8.3). The VDMResponseTimer Shall be started from the time the last bit of the GoodCRC Message EOP (i.e. the GoodCRC Message corresponding to the VDM Command requesting a response) has been received by the Physical Layer. The VDMResponseTimer Shall be stopped when the last bit of the expected VDM Command response EOP has been received by the Physical Layer. The receiver of a Message requiring a response Shall respond within tVDMReceiverResponse in order to ensure that the sender’s VDMResponseTimer does not expire. The tVDMReceiverResponse time Shall be measured from the time the last bit of the Message EOP has been received by the Physical Layer until the first bit of the response Message Preamble has been transmitted by the Physical Layer.", "page_start": 174, "page_end": 173, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 212, "tags": []}
{"section_id": "6.6.11.2", "title": "VDMModeEntryTimer", "content": "The VDMModeEntryTimer Shall be used by the Initiator’s Policy Engine to ensure that the response to a Structured VDM Enter Mode Command request (ACK or NAK with ACK indicating that the requested Mode has been entered) arrives within a bounded time of tVDMWaitModeEntry. Failure to receive the expected response is detected when the VDMModeEntryTimer expires. The Policy Engine’s response when the VDMModeEntryTimer expires is to inform the Device Policy Manager (see Section 8.3.3.20.1). Page 174 USB Power Delivery Specification Revision 3.0, Version 1.1 The VDMModeEntryTimer Shall be started from the time the last bit of the GoodCRC Message EOP (i.e. the GoodCRC Message corresponding to the VDM Command request) has been received by the Physical Layer. The VDMModeEntryTimer Shall be stopped when the last bit of the expected Structured VDM Command response (ACK, NAK or BUSY) EOP has been received by the Physical Layer. The receiver of a Message requiring a response Shall respond within tVDMEnterMode in order to ensure that the sender’s VDMModeEntryTimer does not expire. The tVDMEnterMode time Shall be measured from the time the last bit of the Message EOP has been received by the Physical Layer until the first bit of the response Message Preamble has been transmitted by the Physical Layer.", "page_start": 174, "page_end": 174, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 206, "tags": []}
{"section_id": "6.6.11.3", "title": "VDMModeExitTimer", "content": "The VDMModeExitTimer Shall be used by the Initiator’s Policy Engine to ensure that the ACK response to a Structured VDM Exit Mode Command, indicating that the requested Mode has been exited, arrives within a bounded time of tVDMWaitModeExit. Failure to receive the expected response is detected when the VDMModeExitTimer expires. The Policy Engine’s response when the VDMModeExitTimer expires is to inform the Device Policy Manager (see Section 8.3.3.20.2). The VDMModeExitTimer Shall be started from the time the last bit of the GoodCRC Message EOP (i.e. the GoodCRC Message corresponding to the VDM Command requesting a response) has been received by the Physical Layer. The VDMModeExitTimer Shall be stopped when the last bit of the expected Structured VDM Command response ACK EOP has been received by the Physical Layer. The receiver of a Message requiring a response Shall respond within tVDMExitMode in order to ensure that the sender’s VDMModeExitTimer does not expire. The tVDMExitMode time Shall be measured from the time the last bit of the Message EOP has been received by the Physical Layer until the first bit of the response Message Preamble has been transmitted by the Physical Layer.", "page_start": 175, "page_end": 174, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 190, "tags": []}
{"section_id": "6.6.11.4", "title": "tVDMBusy", "content": "The Initiator Shall wait at least tVDMBusy, after receiving a BUSY Command response, before repeating the Structured VDM request again.", "page_start": 175, "page_end": 174, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": []}
{"section_id": "6.6.12", "title": "VCONN Timers", "content": "", "page_start": 175, "page_end": 174, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6.6.12.1", "title": "VCONNOnTimer", "content": "The VCONNOnTimer is used during a VCONN Swap. The VCONNOnTimer Shall be started when:  The last bit of the EOP of the Accept Message is received.  The last bit of the EOP of GoodCRC Message corresponding to the Accept Message is received. The VCONNOnTimer Shall be stopped when:  The last bit of the EOP of the PS_RDY Message is received. Prior to sending the PS_RDY Message, the Port Shall have turned VCONN On.", "page_start": 175, "page_end": 174, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 76, "tags": []}
{"section_id": "6.6.12.2", "title": "tVCONNSourceOff", "content": "The tVCONNSourceOff time applies during a Vconn Swap. The initial VCONN Source Shall cease sourcing VCONN within tVCONNSourceOff of receipt of the last bit of the EOP of the PS_RDY Message. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 175", "page_start": 175, "page_end": 175, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["source"]}
{"section_id": "6.6.13", "title": "tCableMessage", "content": "Ports compliant with this Revision of the specification Shall Not wait tCableMessage before sending an SOP’ or SOP’’ Packet even when communicating using [USBPD 2.0] with a Cable Plug. This specification defines collision avoidance mechanisms that obviate the need for this time. Cable Plugs Shall only wait tCableMessage before sending an SOP’ or SOP’’ Packet when operating at [USBPD 2.0]. When operating at Revisions higher than [USBPD 2.0] Cable Plugs Shall Not wait tCableMessage before sending an SOP’ or SOP’’ Packet.", "page_start": 176, "page_end": 175, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 81, "tags": ["cable", "messages"]}
{"section_id": "6.6.14", "title": "DiscoverIdentityTimer", "content": "The DiscoverIdentityTimer is used during an Explicit Contract when discovering whether a Cable Plug is PD Capable using SOP’. When performing cable discovery during an Explicit Contract the Discover Identity Command request Shall be sent every tDiscoverIdentity. No more than nDiscoverIdentityCount Discover Identity Messages without a GoodCRC Message response Shall be sent. If no GoodCRC Message response is received after nDiscoverIdentityCount Discover Identity Command requests have been sent by a Port, the Port Shall Not send any further SOP’/SOP’’ Messages.", "page_start": 176, "page_end": 175, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 80, "tags": []}
{"section_id": "6.6.15", "title": "Collision Avoidance Timers", "content": "The SinkTxTimer is used by the Protocol Layer in a Source to allow the Sink to complete its transmission before initiating an AMS. The Source Shall wait a minimum of tSinkTx after changing Rp from SinkTxOk to SinkTxNG before initiating an AMS by sending a Message. A Sink Shall only initiate an AMS when it has determined that Rp is set to SinkTxOk.", "page_start": 176, "page_end": 175, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 63, "tags": ["avoidance"]}
{"section_id": "6.6.16", "title": "tFRSwapInit", "content": "That last bit of the EOP of the FR_Swap Message Shall be transmitted by the new Source no later than tFRSwapInit after the Fast Role Swap request has been detected (see Section 5.8.6.3).", "page_start": 176, "page_end": 175, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": []}
{"section_id": "6.6.17", "title": "Chunking Timers", "content": "", "page_start": 176, "page_end": 175, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6.6.17.1", "title": "ChunkingNotSupportedTimer", "content": "The ChunkingNotSupportedTimer is used by a Source or Sink which does not support multi-chunk Chunking but has received a Message Chunk. The ChunkingNotSupportedTimer Shall be started when:  The last bit of the EOP of a Message Chunk of a multi-chunk Message is received. The Policy Engine Shall Not send its Not_Supported Message before the ChunkingNotSupportedTimer expires.", "page_start": 176, "page_end": 175, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 57, "tags": []}
{"section_id": "6.6.17.2", "title": "ChunkSenderRequestTimer", "content": "The ChunkSenderRequestTimer is used during a Chunked Message transmission. The ChunkSenderRequestTimer Shall be used by the sender’s Chunking state machine to ensure that a Chunk Response is responded to within a bounded time of tChunkSenderRequest. Failure to receive the expected response is detected when the ChunkSenderRequestTimer expires. The ChunkSenderRequestTimer Shall be started when:  The last bit of the EOP of the GoodCRC Message corresponding to the Chunk Response Message is received. The ChunkSenderRequestTimer Shall be stopped when:  The last bit of the EOP of the Chunk Request Message is received. Page 176 USB Power Delivery Specification Revision 3.0, Version 1.1  A Message other than a Chunk Request is received from the Protocol Layer Rx. The receiver of a Chunk Response requiring a Chunk Request Shall respond with a Chunk Request within tChunkReceiverRequest in order to ensure that the sender’s ChunkSenderRequestTimer does not expire. The tChunkReceiverRequest time Shall be measured from the time the last bit of the Message EOP has been received by the Physical Layer until the first bit of the response Message Preamble has been transmitted by the Physical Layer.", "page_start": 176, "page_end": 176, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 185, "tags": []}
{"section_id": "6.6.17.3", "title": "ChunkSenderResponseTimer", "content": "The ChunkSenderResponseTimer is used during a Chunked Message transmission. The ChunkSenderResponseTimer Shall be used by the sender’s Chunking state machine to ensure that a Chunk Request is responded to within a bounded time of tChunkSenderResponse. Failure to receive the expected response is detected when the ChunkSenderResponseTimer expires. The ChunkSenderResponseTimer Shall be started when:  The last bit of the EOP of GoodCRC Message corresponding to the Chunk Request Message is received. The ChunkSenderResponseTimer Shall be stopped when:  The last bit of the EOP of the Chunk Response Message is received.  A Message other than a Chunk is received from the Protocol Layer. The receiver of a Chunk Request requiring a Chunk Response Shall respond with a Chunk Response within tChunkReceiverResponse in order to ensure that the sender’s ChunkSenderResponseTimer does not expire. The tChunkReceiverResponse time Shall be measured from the time the last bit of the Message EOP has been received by the Physical Layer until the first bit of the response Message Preamble has been transmitted by the Physical Layer.", "page_start": 177, "page_end": 176, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 172, "tags": []}
{"section_id": "6.6.18", "title": "Programmable Power Supply Timers", "content": "", "page_start": 177, "page_end": 176, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power"]}
{"section_id": "6.6.18.1", "title": "SinkPPSPeriodicTimer", "content": "The SinkPPSPeriodicTimer Shall be used by the Sink’s Policy Engine to ensure that a Request Message requesting a PPS APDO is sent periodically within a bounded time of tPPSRequest. The tPPSRequest time Shall be measured from the time the last bit of the EOP of the GoodCRC Message sent by the Source in response to the previous Request Message. SinkPPSPeriodicTimer Shall be re-initialized and restarted when the last bit of the EOP of the GoodCRC Message sent in response to a Request Message for a PPS APDO has been received by the Physical Layer. The Sink Shall stop the SinkPPSPeriodicTimer when:  The Sink requests something other than PPS APDO.  There is a Power Role Swap.  There is a Hard Reset.", "page_start": 177, "page_end": 176, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 123, "tags": ["sink"]}
{"section_id": "6.6.18.2", "title": "SourcePPSCommTimer", "content": "The SourcePPSCommTimer Shall be used by the Source’s Policy Engine to ensure that a Request Message requesting a PPS APDO is received periodically within a bounded time of tPPSTimeout. The tPPSTimeout time Shall be measured from the time the last bit of the EOP of the GoodCRC Message sent in response to the previous Request Message for a PPS APDO has been sent by the Physical Layer. The SourcePPSCommTimer Shall be re-initialized and restarted when the last bit of the EOP of the GoodCRC Message sent in response to a Request Message for a PPS APDO has been sent by the Physical Layer. The Source Shall stop the SourcePPSCommTimer when: USB Power Delivery Specification Revision 3.0, Version 1.1 Page 177  A Request Message has been received.  There is a Power Role Swap.  There is a Hard Reset. When the SourcePPSCommTimer times out the Source Shall issue Hard Reset Signaling.", "page_start": 177, "page_end": 177, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 152, "tags": ["source"]}
{"section_id": "6.6.19", "title": "Time Values and Timers", "content": "Table 6-53 summarizes the values for the timers listed in this section. For each Timer Value, a given implementation Shall pick a fixed value within the range specified. Table 6-54 lists the timers. Page 178 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 6-53 Time Values Parameter Value (min) Value (max) Units Reference tBISTContMode 30 60 ms Section 6.6.7.2 tBISTMode 300 ms Section 6.6.7.1 tCableMessage 750 µs Section 6.6.13 tChunkingNotSupported 40 50 ms Section 6.6.17.1 tChunkSenderRequest 24 30 ms Section 6.6.17.2 tChunkSenderResponse 24 30 ms Section 6.6.17.3 tChunkReceiverRequest 15 ms Section 6.6.17.2 tChunkReceiverResponse 15 ms Section 6.6.17.3 tDiscoverIdentity 40 50 ms Section 6.6.13 tDRSwapHardReset 15 ms Section 6.6.10.3 tDRSwapWait 100 ms Section 6.6.4.3 tFirstSourceCap 250 ms Section 6.6.3.3 tFRSwapInit 15 ms Section 6.3.17 tHardReset 5 ms Section 6.3.13 tHardResetComplete 4 5 ms Section 6.6.9 tNoResponse 4.5 5.5 s Section 6.6.6 tPPSRequest 10 s Section 6.6.18.1 tPPSTimeout 15 s Section 6.6.18.2 tProtErrHardReset 15 ms Section 6.6.10.4 tProtErrSoftReset 15 ms Section 6.6.9.2 tPRSwapWait 100 ms Section 6.6.4.2 tPSHardReset 25 35 ms Section 6.6.10.2 tPSSourceOff 750 920 ms Section 6.6.5.2 tPSSourceOn 390 480 ms Section 6.6.5.3 tPSTransition 450 550 ms Section 6.6.5.1 tReceive 0.9 1.1 ms Section 6.6.1 tReceiverResponse 15 ms Section 6.6.2 tRetry 75 µs Section 6.6.1 tSenderResponse 24 30 ms Section 6.6.2 tSinkRequest 100 ms Section 6.6.4.1 tSinkTx 16 20 ms Section 6.6.15 tSoftReset 15 ms Section 6.8.1 tSwapSinkReady 15 ms Section 6.6.8.1 tSwapSourceStart 20 ms Section 6.6.8.1 tTransmit 195 µs Section 6.6.1 tTypeCSendSourceCap 100 200 ms Section 6.6.3.1 tTypeCSinkWaitCap 310 620 ms Section 6.6.3.2 tVCONNSourceOff 25 ms Section 6.6.12 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 179 Parameter Value (min) Value (max) Units Reference tVCONNSourceOn 100 ms Section 6.6.12 tVCONNSwapWait 100 ms Section 6.6.4.4 tVDMBusy 50 ms Section 6.6.11.4 tVDMEnterMode 25 ms Section 6.6.11.2 tVDMExitMode 25 ms Section 6.6.11.3 tVDMReceiverResponse 15 ms Section 6.6.11.1 tVDMSenderResponse 24 30 ms Section 6.6.11.1 tVDMWaitModeEntry 40 50 ms Section 6.6.11.2 tVDMWaitModeExit 40 50 ms Section 6.6.11.3 Table 6-54 Timers Timer Parameter Used By Reference BISTContModeTimer tBISTContMode Policy Engine Section 6.6.7.2 ChunkingNotSupportedTimer tChunkingNotSupported Policy Engine Section 6.6.17.1 ChunkSenderRequestTimer tChunkSenderRequest Protocol Section 6.6.17.2 ChunkSenderResponseTimer tChunkSenderResponse Protocol Section 6.6.17.3 CRCReceiveTimer tReceive Protocol Section 6.6.1 DiscoverIdentityTimer tDiscoverIdentity Policy Engine Section 6.6.14 HardResetCompleteTimer tHardResetComplete Protocol Section 6.6.9 NoResponseTimer tNoResponse Policy Engine Section 6.6.6 PSHardResetTimer tPSHardReset Policy Engine Section 6.6.10.2 PSSourceOffTimer tPSSourceOff Policy Engine Section 6.6.5.2 PSSourceOnTimer tPSSourceOn Policy Engine Section 6.6.5.3 PSTransitionTimer tPSTransition Policy Engine Section 6.6.5.1 SenderResponseTimer tSenderResponse Policy Engine Section 6.6.2 SinkPPSPeriodicTimer tPPSRequest Policy Engine Section 6.6.18.1 SinkRequestTimer tSinkRequest Policy Engine Section 6.6.4 SinkWaitCapTimer tTypeCSinkWaitCap Policy Engine Section 6.6.3.2 SourceCapabilityTimer tTypeCSendSourceCap Policy Engine Section 6.6.3.1 SourcePPSCommTimer tPPSTimeout Policy Engine Section 6.6.18.2 SinkTxTimer tSinkTx Protocol Layer Section 6.6.15 SwapSourceStartTimer tSwapSourceStart Policy Engine Section 6.6.8.1 VCONNOnTimer tVCONNSourceOn Policy Engine Section 6.6.12.1 VDMModeEntryTimer tVDMWaitModeEntry Policy Engine Section 6.6.11.2 VDMModeExitTimer tVDMWaitModeExit Policy Engine Section 6.6.11.3 VDMResponseTimer tVDMSenderResponse Policy Engine Section 6.6.11.1 Page 180 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 178, "page_end": 180, "content_type": "text", "tables": [{"table_id": "Table 6-53 summarizes the values for the timers listed in this section. For each Timer Value, a given implementation", "caption": "Table 6-53 summarizes the values for the timers listed in this section. For each Timer Value, a given implementation", "page": 178, "data": []}, {"table_id": "Shall pick a fixed value within the range specified. Table 6-54 lists the timers.", "caption": "Shall pick a fixed value within the range specified. Table 6-54 lists the timers.", "page": 178, "data": []}, {"table_id": "Table 6-53 Time Values", "caption": "Table 6-53 Time Values", "page": 179, "data": []}, {"table_id": "Table 6-54 Timers", "caption": "Table 6-54 Timers", "page": 180, "data": []}], "figures": [], "subsections": [], "word_count": 483, "tags": []}
{"section_id": "6.7", "title": "Counters", "content": "", "page_start": 181, "page_end": 180, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6.7.1", "title": "MessageID Counter", "content": "The MessageIDCounter is a rolling counter, ranging from 0 to nMessageIDCount, used to detect duplicate Messages. This value is used for the MessageID field in the Message Header of each transmitted Message. Each Port Shall maintain a copy of the last MessageID value received from its Port Partner. Devices that support multiple ports, such as Hubs, Shall maintain copies of the last MessageID on a per Port basis. A Port which communicates using SOP* Packets Shall maintain copies of the last MessageID for each type of SOP* it uses. The transmitter Shall use the MessageID in a GoodCRC Message to verify that a particular Message was received correctly. The receiver Shall use the MessageID to detect duplicate Messages.", "page_start": 181, "page_end": 180, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 118, "tags": ["messages"]}
{"section_id": "6.7.1.1", "title": "Transmitter Usage", "content": "The Transmitter Shall use the MessageID as follows:  Upon receiving either Hard Reset Signaling, or a Soft_Reset Message, the transmitter Shall set its MessageIDCounter to zero and re-initialize its retry mechanism.  If a GoodCRC Message with a MessageID matching the MessageIDCounter is not received before the CRCReceiveTimer expires, it Shall retry the same packet up to nRetryCount times using the same MessageID.  If a GoodCRC Message is received with a MessageID matching the current MessageIDCounter before the CRCReceiveTimer expires, the transmitter Shall re-initialize its retry mechanism and increment its MessageIDCounter.  If the Message is aborted by the Policy Engine, the transmitter Shall delete the Message from its transmit buffer, re-initialize its retry mechanism and increment its MessageIDCounter.  The MessageID is incremented if a GoodCRC Message is not received and the RetryCounter has reached nRetryCount.", "page_start": 181, "page_end": 180, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 139, "tags": []}
{"section_id": "6.7.1.2", "title": "Receiver Usage", "content": "The Receiver Shall use the MessageID as follows:  When the first good packet is received after a reset, the receiver Shall store a copy of the received MessageID value.  For subsequent Messages, if MessageID value in a received Message is the same as the stored value, the receiver Shall return a GoodCRC Message with that MessageID value and drop the Message (this is a retry of an already received Message). Note: this Shall Not apply to the Soft_Reset Message which always has a MessageID value of zero.  If MessageID value in the received Message is different than the stored value, the receiver Shall return a GoodCRC Message with the new MessageID value, store a copy of the new MessageID value and process the Message.", "page_start": 181, "page_end": 180, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 127, "tags": []}
{"section_id": "6.7.2", "title": "Retry Counter", "content": "The RetryCounter is used by a Port whenever there is a Message transmission failure (timeout of CRCReceiveTimer). If the nRetryCount retry fails, then the link Shall be reset using the Soft Reset mechanism. The following rules apply to retries when there is a Message transmission failure (see also Section 6.11.2.1):  Cable Plugs Shall Not retry Messages.  Extended Messages of Data Size > MaxExtendedMsgLegacyLen that are not Chunked (Chunked flag set to zero) Shall Not be retried .  Extended Messages of Data Size ≤ MaxExtendedMsgLegacyLen (Chunked flag set to zero or one) Shall be retried. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 181  Extended Messages of Data Size > MaxExtendedMsgLegacyLen that are Chunked (Chunked flag set to one) individual Chunks Shall be retried. When messages are not retried, then the RetryCounter is not used. Higher layer protocols are expected to accommodate message delivery failure or failure to receive a GoodCRC Message.", "page_start": 181, "page_end": 181, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 156, "tags": []}
{"section_id": "6.7.3", "title": "Hard Reset Counter", "content": "The HardResetCounter is used to retry the Hard Reset whenever there is no response from the remote device (see Section 6.6.6). Once the Hard Reset has been retried nHardResetCount times then it Shall be assumed that the remote device is non-responsive.", "page_start": 182, "page_end": 181, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": []}
{"section_id": "6.7.4", "title": "Capabilities Counter", "content": "The CapsCounter is used to count the number of Source_Capabilities Messages which have been sent by a Source at power up or after a Hard Reset. Implementation of the CapsCounter is Optional but May be used by any Source which wishes to preserve power by not sending Source_Capabilities Messages after a period of time. When the CapsCounter is implemented and the Source detects that a Sink is Attached then after nCapsCount Source_Capabilities Messages have been sent the Source Shall decide that the Sink is non-responsive, stop sending Source_Capabilities Messages and disable PD. A Sink Shall use the SinkWaitCapTimer to trigger the resending of Source_Capabilities Messages by a USB Power Delivery capable Source which has previously stopped sending Source_Capabilities Messages. Any Sink which is Attached and does not detect a Source_Capabilities Message, Shall issue Hard Reset Signaling when the SinkWaitCapTimer times out in order to reset the Source. Resetting the Source Shall also reset the CapsCounter and restart the sending of Source_Capabilities Messages.", "page_start": 182, "page_end": 181, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 162, "tags": []}
{"section_id": "6.7.5", "title": "Discover Identity Counter", "content": "When sending Discover Identity Messages to a Cable Plug a Port Shall maintain a count of Messages sent (DiscoverIdentityCounter). No more than nDiscoverIdentityCount Discover Identity Messages Shall be sent by the Port receiving a GoodCRC Message response. A Data Role Swap Shall reset the DiscoverIdentityCounter to zero.", "page_start": 182, "page_end": 181, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 47, "tags": []}
{"section_id": "6.7.6", "title": "VDMBusyCounter", "content": "When sending Responder Busy responses to a Structured Vendor_Defined Message a UFP or Cable Plug Shall maintain a count of Messages sent (VDMBusyCounter). No more than nBusyCount Responder Busy responses Shall be sent. The VDMBusyCounter Shall be reset on sending a non-Busy response. Products wishing to meet [USB Type- C 1.2] requirements for Mode entry Should use an nBusyCount of 1.", "page_start": 182, "page_end": 181, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 61, "tags": []}
{"section_id": "6.7.7", "title": "Counter Values and Counters", "content": "Table 6-56 lists the counters used in this section and Table 6-55 shows the corresponding parameters. Table 6-55 Counter parameters Parameter Value Reference nBusyCount 5 Section 6.7.6 nCapsCount 50 Section 6.7.4 nDiscoverIdentityCount 20 Section 6.7.5 nHardResetCount 2 Section 6.7.3 nMessageIDCount 7 Section 6.7.1 nRetryCount 2 Section 6.7.2 Page 182 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 6-56 Counters Counter Max Reference CapsCounter nCapsCount Section 6.7.4 DiscoverIdentityCounter nDiscoverIdentityCount Section 6.7.5 HardResetCounter nHardResetCount Section 6.7.3 MessageIDCounter nMessageIDCount Section 6.7.1 RetryCounter nRetryCount Section 6.7.2 VDMBusyCounter nBusyCount Section 6.7.6", "page_start": 182, "page_end": 182, "content_type": "text", "tables": [{"table_id": "Table 6-56 lists the counters used in this section and Table 6-55 shows the corresponding parameters.", "caption": "Table 6-56 lists the counters used in this section and Table 6-55 shows the corresponding parameters.", "page": 182, "data": []}, {"table_id": "Table 6-55 Counter parameters", "caption": "Table 6-55 Counter parameters", "page": 182, "data": []}, {"table_id": "Table 6-56 Counters", "caption": "Table 6-56 Counters", "page": 183, "data": []}], "figures": [], "subsections": [], "word_count": 87, "tags": []}
{"section_id": "6.8", "title": "Reset", "content": "Resets are a necessary response to protocol or other error conditions. USB Power Delivery defines two different types of reset; a Soft Reset, that resets protocol, and a Hard Reset which resets both the power supplies and protocol.", "page_start": 183, "page_end": 182, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": []}
{"section_id": "6.8.1", "title": "Soft Reset and Protocol Error", "content": "A Soft_Reset Message is used to cause a Soft Reset of protocol communication when this has broken down in some way. It Shall Not have any impact on power supply operation, but is used to correct a Protocol Error occurring during an Atomic Message Sequence (AMS). The Soft Reset May be triggered by either Port Partner in response to the Protocol Error. Protocol Errors are any unexpected Message during an AMS. If the first Message in an AMS has been passed to the Protocol Layer by the Policy Engine but has not yet been sent (GoodCRC Message not received) when the Protocol Error occurs, the Policy Engine Shall Not issue a Soft Reset but Shall return to the PE_SNK_Ready or PE_SRC_Ready state and then process the incoming Message. If the Protocol Error occurs during an Interruptible AMS then the Policy Engine Shall Not issue a Soft Reset but Shall return to the PE_SNK_Ready or PE_SRC_Ready state and then process the incoming Message. If the incoming Message is an Unexpected Message received in the PE_SNK_Ready or PE_SRC_Ready state the Policy Engine Shall issue a Soft Reset. If the Protocol Error occurs during a Non-interruptible AMS this Shall lead to a Soft Reset in order to re-synchronize the Policy Engine state machines (see Section 8.3.3.4) except when the voltage is transition when a Protocol Error Shall lead to a Hard Reset (see Section 6.6.10.4 and Section 8.3.3.2). Details of Interruptible and Non-interruptible AMS’s can be found in Section 8.3.2.1.3. An unrecognized or unsupported Message received in the PE_SNK_Ready or PE_SRC_Ready states, Shall Not cause a Soft_Reset Message to be generated but instead a Not_Supported Message Shall be generated. A Soft_Reset Message Shall be sent regardless of the Rp value either SinkTxOk or SinkTxNG if it is the correct response in that state, Table 6-57 and Table 6-58 summarize the responses that Shall be made to an incoming Message including VDMs. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 183 Table 6-57 Response to an incoming Message (except VDM) Incoming Message Recognized Recipient's Recipient's state Power Role Supported Unrecognized Unsupported Expected Unexpected Not_Supported Message (except Process Soft_Reset for VDM) PE_SRC_Ready Not_Supported Message Message Message See 6.4.4.1 for UVDM, 6.12.4 for SVDM During Process return to PE_SRC_Ready state and process Message Interruptible AMS Message Source During Non- interruptible AMS Process Soft_Reset Message (not power Message transitioned) During Non- interruptible AMS Process Hard Reset Signaling (power Message transitioned) Not_Supported Message (except for Process Soft_Reset Not_Supported PE_SNK_Ready VDM) Message Message Message See 6.4.4.1 for UVDM, 6.12.4 for SVDM During Process return to PE_SNK_Ready state and process Message Interruptible AMS Message Sink During Non- interruptible AMS Process Soft_Reset Message (not power Message transitioned) During Non- interruptible AMS Process Hard Reset Signaling (power Message transitioned) Table 6-58 Response to an incoming VDM Recipient's Supported Unsupported Unrecognized Unsupported Unrecognized Supported SVDM Role UVDM UVDM UVDM SVDM SVDM Defined by Not_Supported Not_Supported Not_Supported DFP or UFP See 6.12.4 NAK Command vendor Message Message Message Defined by Cable Plug Message Ignored Message Ignored See 6.12.4 Message Ignored NAK Command vendor A failure to see a GoodCRC Message in response to any Message within tReceive (after nRetryCount retries), when a Port Pair is Connected, is indicative of a communications failure resulting in a Soft Reset (see Section 6.6.9.1). A Soft Reset Shall impact the USB Power Delivery layers in the following ways:  Physical Layer: Reset not required since the Physical Layer resets on each packet transmission/reception. Page 184 USB Power Delivery Specification Revision 3.0, Version 1.1  Protocol Layer: Reset MessageIDCounter, RetryCounter and state machines.  Policy Engine: Reset state dependent behavior by performing an Explicit Contract negotiation.  Power supply: Shall Not change. A Soft Reset is performed using a sequence of protocol Messages (see Table 8-7). Message numbers Shall be set to zero prior to sending the Soft_Reset/Accept Message since the issue might be with the counters. The sender of a Soft_Reset Message Shall reset its MessageIDCounter and RetryCounter, the receiver of the Message Shall reset its MessageIDCounter and RetryCounter before sending the Accept Message response. Any failure in the Soft Reset process will trigger a Hard Reset when SOP Packets are being used or Cable Reset for any other SOP* Packets; for example a GoodCRC Message is not received during the Soft Reset process (see Section 6.8.2 and Section 6.8.3).", "page_start": 183, "page_end": 184, "content_type": "text", "tables": [{"table_id": "Table 6-57 and Table 6-58 summarize the responses that Shall be made to an incoming Message including VDMs.", "caption": "Table 6-57 and Table 6-58 summarize the responses that Shall be made to an incoming Message including VDMs.", "page": 183, "data": []}, {"table_id": "Table 6-57 Response to an incoming Message (except VDM)", "caption": "Table 6-57 Response to an incoming Message (except VDM)", "page": 184, "data": []}, {"table_id": "Table 6-58 Response to an incoming VDM", "caption": "Table 6-58 Response to an incoming VDM", "page": 184, "data": []}, {"table_id": "A Soft Reset is performed using a sequence of protocol Messages (see Table 8-7). Message numbers Shall be set to", "caption": "A Soft Reset is performed using a sequence of protocol Messages (see Table 8-7). Message numbers Shall be set to", "page": 185, "data": []}], "figures": [], "subsections": [], "word_count": 723, "tags": ["protocol"]}
{"section_id": "6.8.2", "title": "Hard Reset", "content": "Hard Resets are signaled by an ordered set as defined in Section 5.6.4. Both the sender and recipient Shall cause their power supplies to return to their default states (see Section 7.3.12 and Section 7.3.13 for details of voltage transitions). In addition their respective Protocol Layers Shall be reset as for the Soft Reset. This allows the Attached devices to be in a state where they can re-establish USB PD communication. Hard Reset is retried up to nHardResetCount times (see also Section 6.6.6 and Section 6.7.3). Note: that even though V drops to vSafe0V BUS during a Hard Reset a Sink will not see this as a disconnect since this is expected behavior. A Hard Reset Shall Not cause any change to either the Rp/Rd resistor being asserted. If there has been a Data Role Swap the Hard Reset Shall cause the Port Data Role to be changed back to DFP for a Port with the Rp resistor asserted and UFP for a Port with the Rd resistor asserted. When VCONN is supported (see [USB Type-C 1.2]) the Hard Reset Shall cause the Port with the Rp resistor asserted to supply VCONN and the Port with the Rd resistor asserted to turn off VCONN. In effect the Hard Reset will revert the Ports to their default state based on their CC line resistors. Removing and reapplying VCONN from the Cable Plugs also ensures that they re-establish their configuration as either SOP’ or SOP’’ based on the location of VCONN (see [USB Type-C 1.2]). If the Hard Reset is insufficient to clear the error condition then the Port Should use Error Recovery mechanisms as defined in [USB Type-C 1.2]. A Sink Shall be able to send Hard Reset signaling regardless of the value of Rp (see Section 5.7).", "page_start": 185, "page_end": 184, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 297, "tags": []}
{"section_id": "6.8.2.1", "title": "Cable Plugs and Hard Reset", "content": "Cable Plugs Shall Not generate Hard Reset Signaling but Shall monitor for Hard Reset Signaling between the Port Partners and Shall reset when this is detected (see Section 8.3.3.22.2.2). The Cable Plugs Shall perform the equivalent of a power cycle returning to their initial power up state. This allows the Attached products to be in a state where they can re-establish USB PD communication.", "page_start": 185, "page_end": 184, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 64, "tags": ["cable"]}
{"section_id": "6.8.2.2", "title": "Modal Operation and Hard Reset", "content": "A Hard Reset Shall cause all Active Modes to be exited by both Port Partners and any Cable Plugs (see Section 6.4.4.3.4).", "page_start": 185, "page_end": 184, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "6.8.3", "title": "Cable Reset", "content": "Cable Resets are signaled by an ordered set as defined in Section 5.6.5. Both the sender and recipient of Cable Reset Signaling Shall reset their respective Protocol Layers. The Cable Plugs Shall perform the equivalent of a power cycle returning to their initial power up state. This allows the Attached products to be in a state where they can re-establish USB PD communication. The DFP has to be supplying VCONN prior to a Cable Reset to ensure that the Cable Plugs correctly configure SOP’ and SOP’’ after the Cable Reset is complete. If VCONN has been turned off the DFP Shall turn on VCONN prior to generating USB Power Delivery Specification Revision 3.0, Version 1.1 Page 185 Cable Reset Signaling. If there has been a VCONN Swap and the UFP is currently supplying VCONN, the DFP Shall perform a VCONN Swap such that it is supplying VCONN prior to generating Cable Reset Signaling. Only a DFP Shall generate Cable Reset Signaling. A DFP Shall only generate Cable Reset Signaling within an Explicit Contract. A Cable Reset Shall cause all Active Modes in the Cable Plugs to be exited (see Section 6.4.4.3.4).", "page_start": 185, "page_end": 185, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 191, "tags": ["cable"]}
{"section_id": "6.9", "title": "Collision Avoidance", "content": "In order to avoid message collisions due to asynchronous Messaging sent from the Sink, the Source sets Rp to SinkTxOk to indicate to the Sink that it is ok to initiate an AMS. When the Source wishes to initiate an AMS it sets Rp to SinkTxNG. When the Sink detects that Rp is set to SinkTxOk it May initiate an AMS. When the Sink detects that Rp is set to SinkTxNG it Shall Not initiate an AMS and Shall only send Messages that are part of an AMS the Source has initiated. Note that this restriction applies to SOP* AMS’s i.e. for both Port to Port and Port to Cable Plug communications. Note: a Sink can still send Hard Reset signaling at any time.", "page_start": 186, "page_end": 185, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 124, "tags": ["avoidance"]}
{"section_id": "6.10", "title": "Message Discarding", "content": "On receiving a received Message on SOP, the Protocol Layer Shall Discard any pending SOP* Messages. A received Message on SOP’/SOP’’ Shall Not cause any pending SOP* Messages to be Discarded. It is assumed that Messages using SOP’/SOP’’ constitute a simple request/response AMS, with the Cable Plug providing the response so there is no reason for a pending SOP* Message to be Discarded. There can only be one AMS between the Port Partners and these also take priority over Cable Plug communications so a Message received on SOP will always cause a Message pending on SOP* to be Discarded. See Table 6-59 for details of the Messages that Shall/ Shall Not be Discarded. Table 6-59 Message discarding Message pending Message received Discard pending transmission? transmission SOP SOP Yes SOP SOP’/SOP’’ No SOP’ SOP Yes SOP’ SOP’ No SOP’ SOP’’ No SOP’’ SOP Yes SOP’’ SOP’ No SOP’’ SOP’’ No Page 186 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 186, "page_end": 186, "content_type": "text", "tables": [{"table_id": "See Table 6-59 for details of the Messages that Shall/ Shall Not be Discarded.", "caption": "See Table 6-59 for details of the Messages that Shall/ Shall Not be Discarded.", "page": 186, "data": []}, {"table_id": "Table 6-59 Message discarding", "caption": "Table 6-59 Message discarding", "page": 186, "data": []}], "figures": [], "subsections": [], "word_count": 159, "tags": ["messages"]}
{"section_id": "6.11", "title": "State behavior", "content": "", "page_start": 187, "page_end": 186, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6.11.1", "title": "Introduction to state diagrams used in Chapter 6", "content": "The state diagrams defined in Section 6.11 are Normative and Shall define the operation of the Power Delivery protocol layer. Note that these state diagrams are not intended to replace a well written and robust design. Figure 6-44 shows an outline of the states defined in the following sections. At the top there is the name of the state. This is followed by “Actions on entry” a list of actions carried out on entering the state and in some states “Actions on exit” a list of actions carried out on exiting the state. Figure 6-44 Outline of States <Name of State> Actions on entry: “List of actions to carry out on entering the state” Actions on exit: “List of actions to carry out on exiting the state” Transitions from one state to another are indicated by arrows with the conditions listed on the arrow. Where there are multiple conditions these are connected using either a logical OR “|” or a logical AND “&”. The inverse of a condition is shown with a “NOT” in front of the condition. In some cases there are transitions which can occur from any state to a particular state. These are indicated by an arrow which is unconnected to a state at one end, but with the other end (the point) connected to the final state. In some state diagrams it is necessary to enter or exit from states in other diagrams. Figure 6-45 indicates how such references are made. The reference is indicated with a hatched box. The box contains the name of the referenced state. Figure 6-45 References to states <Name of reference state> Timers are included in many of the states. Timers are initialized (set to their starting condition) and run (timer is counting) in the particular state it is referenced. As soon as the state is exited then the timer is no longer active. Timeouts of the timers are listed as conditions on state transitions. Conditions listed on state transitions will come from one of three sources:  Messages received from the PHY Layer  Events triggered within the Protocol Layer e.g. timer timeouts  Message and related indications passed up to the Policy Engine from the Protocol Layer (Message sent, Message received etc.)", "page_start": 187, "page_end": 186, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-44 shows an outline of the states defined in the following sections. At the top there is the name of the state.", "caption": "Figure 6-44 shows an outline of the states defined in the following sections. At the top there is the name of the state.", "page": 187}, {"figure_id": "Figure 6-44 Outline of States", "caption": "Figure 6-44 Outline of States", "page": 187}, {"figure_id": "In some state diagrams it is necessary to enter or exit from states in other diagrams. Figure 6-45 indicates how such", "caption": "In some state diagrams it is necessary to enter or exit from states in other diagrams. Figure 6-45 indicates how such", "page": 187}, {"figure_id": "Figure 6-45 References to states", "caption": "Figure 6-45 References to states", "page": 187}], "subsections": [], "word_count": 373, "tags": []}
{"section_id": "6.11.2", "title": "State Operation", "content": "The following section details Protocol Layer State Operation when sending and receiving SOP* Packets. For each SOP* Communication being sent and received there Shall be separate Protocol Layer Transmission and Protocol Layer Reception and Hard Reset State Machine instances, with their own counter and timer instances. When Chunking is supported there Shall be separate Chunked Tx, Chunked Tx and Chunked Message Router State Machine instances. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 187 Soft Reset Shall only apply to the State Machine instances it is targeted at based on the type of SOP* Packet used to send the Soft_Reset Message. The Hard Reset State Machine (including Cable Reset) Shall apply simultaneously to all Protocol Layer State Machine instances active in the DFP, UFP and Cable Plug (if present).", "page_start": 187, "page_end": 187, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 130, "tags": []}
{"section_id": "6.11.2.1", "title": "Protocol Layer Chunking", "content": "", "page_start": 188, "page_end": 187, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["protocol"]}
{"section_id": "6.11.2.1.1", "title": "Architecture of Device Including Chunking Layer", "content": "The Chunking component resides in the Protocol Layer between the Policy Engine and Protocol Tx/Rx. Figure 6-46 illustrates the relationship between components. The Chunking Layer comprises three related state machines:  Chunked Rx.  Chunked Tx.  Chunked Message Router. Note that the consequence of this architecture is that the Policy Engine deals entirely in un-chunked messages. It will not receive (and might not respond to) a message until all the related chunks have been collated. If a PD Device or Cable Marker has no requirement to handle any message requiring more than one Chunk of any Extended Message, it May omit the Chunking Layer. In this case it Shall implement the ChunkingNotSupportedTimer to ensure compatible operation with partners which support Chunking (see Section", "page_start": 188, "page_end": 187, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Chunking component resides in the Protocol Layer between the Policy Engine and Protocol Tx/Rx. Figure 6-46", "caption": "The Chunking component resides in the Protocol Layer between the Policy Engine and Protocol Tx/Rx. Figure 6-46", "page": 188}], "subsections": [], "word_count": 124, "tags": ["devices"]}
{"section_id": "6.6.17.1", "title": "and Section 8.3.3.5).", "content": "Figure 6-46 Chunking architecture Showing Message and Control Flow Policy Engine Protocol Layer AMS Notification Chunked Rx Chunked Tx Chunked Message Router Chunking Protocol Layer Rx Hard Reset Protocol Layer Tx Rp Control or PHY Layer Detection Page 188 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 188, "page_end": 188, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-46 Chunking architecture Showing Message and Control Flow", "caption": "Figure 6-46 Chunking architecture Showing Message and Control Flow", "page": 188}], "subsections": [], "word_count": 47, "tags": []}
{"section_id": "6.11.2.1.1.1", "title": "Optional Abort Mechanism", "content": "Long Chunked Messages bring with them the potential problem that they could prevent urgent messages from being transmitted in a timely manner. An optional Abort mechanism is provided to remedy this problem. The Abort Flag referred to in the diagrams below May be set and examined by the Policy Engine. The specific means are left to the implementer.", "page_start": 189, "page_end": 188, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 58, "tags": []}
{"section_id": "6.11.2.1.1.2", "title": "Aborting Sending a Long Chunked Message", "content": "A long Chunked Message being sent May be aborted by setting the Optional Abort Flag. The message Shall be considered aborted when the Abort Flag is again cleared by the Chunked Tx state machine.", "page_start": 189, "page_end": 188, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages"]}
{"section_id": "6.11.2.1.1.3", "title": "Aborting Receiving a Long Chunked Message", "content": "If the optional Abort mechanism has been implemented, any message sent while a Chunked Message receive is in progress will result in an error report being received by the Policy Engine, to indicate that the message request has been Discarded. If the message was urgent the Policy Engine might set the Abort Flag, which will result in the incoming Chunked Message being aborted. The Abort Flag being cleared by the Chunked Rx state machine indicates that the urgent message can now be sent. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 189", "page_start": 189, "page_end": 189, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 93, "tags": ["messages"]}
{"section_id": "6.11.2.1.2", "title": "Chunked Rx State Diagram", "content": "Figure 6-47 shows the state behavior for the Chunked Rx State Machine. This recognizes whether chunked received messages are involved, and deals with requesting chunks when they are. It also performs validity checks on all messages related to chunking. Figure 6-47 Chunked Rx State Diagram Start Soft Reset occured | Exit from Hard Reset Any Message Received and RCH_Wait_For_ RCH_Report_Error not in state RCH_Waiting_Chunk Message_From_ or RCH_Wait_For_Message_From_ Protocol_Layer Reported A Re c p ti o o r n t s E o rr n o e r n to tr P y o : licy Engine. Protocol_Layer Message Passed Actions on entry: If a Message was received, pass it to C C l l e e a a r r E A x b t o e r n t d F e la d g Rx Buffer Chunked != the Policy Engine. Chunking Other Message Received from Protocol Layer | Received Non-Extended Message | ChunkSenderResponseTimer timeout (Received Extended Message & (Chunking = 0 & Chunked = 0) ) Abort Flag Set Transmission Error RCH_Pass_Up_Message Unexpected from Protocol Layer | Actions on entry: Received Chunk Number Message Received Pass Message to Policy Engine Extended Message & from Protocol Layer (Chunking = 1 & Chunked = 1) Message is Complete (Num bytes received >= specified Data Size)2 RCH_Processing_ RCH_Requesting_Chunk RCH_Waiting_Chunk Extended_Message Actions on entry: Message Actions on entry: Actions on entry: Message Send Chunk Request to Protocol Transmitted Start ChunkSenderResponseTimer If first chunk: set not Layer with Chunk Number = received from Chunk_Number_Expected = 0 and Complete Chunk_Number_Expected Protocol Layer Num bytes received = 0 If expected Chunk Number: Append data to Extended_Message_Buffer; Increment Chunk_Number_Expected and adjust Num bytes received. Chunk Response Received from Protocol Layer 1 Chunking is an internal state that is set to 1 if the ‘Unchunked Extended Messages Supported’ bit in either Source Capabilities or Request is 0. It defaults to 1 and is set after the first exchange of Source Capabilities and Request. It is also set to 1 for SOP’ or SOP’’ communication. 2 Additional bytes received over specified Data Size will be as a result of padding in the last chunk.", "page_start": 190, "page_end": 189, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-47 shows the state behavior for the Chunked Rx State Machine. This recognizes whether chunked received", "caption": "Figure 6-47 shows the state behavior for the Chunked Rx State Machine. This recognizes whether chunked received", "page": 190}, {"figure_id": "Figure 6-47 Chunked Rx State Diagram", "caption": "Figure 6-47 Chunked Rx State Diagram", "page": 190}], "subsections": [], "word_count": 357, "tags": []}
{"section_id": "6.11.2.1.2.1", "title": "RCH_Wait_For_Message_From_Protocol_Layer State", "content": "The Chunked Rx State Machine Shall enter the RCH_Wait_For_Message_From_Protocol_Layer state:  At startup.  As a result of a Soft Reset occurring.  On exit from a Hard Reset. On entry to the RCH_Wait_For_Message_From_Protocol_Layer state the Chunked Rx state machine clears the Extended Rx Buffer, and clears the optional Abort Flag. In the RCH_Wait_For_Message_From_Protocol_Layer state the Chunked Rx state machine waits until the Chunked Message Router passes up a received message. The Chunked Rx State Machine Shall transition to the RCH_Pass_Up_Message state when:  A non-Extended Message is passed up from the Chunked Message Router.  An Extended Message is passed up from the Chunked Message Router, and the Policy Engine has determined that we are not doing Chunking, and the Message has its Chunked bit set to 0b. Page 190 USB Power Delivery Specification Revision 3.0, Version 1.1 The Chunked Rx State Machine Shall transition to the RCH_Processing_Extended_Message state when:  An Extended Message is passed up from the Chunked Message Router, and the Policy Engine has determined that we are doing Chunking, and the Message has its Chunked bit set to 1b.", "page_start": 190, "page_end": 190, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 184, "tags": ["messages", "protocol"]}
{"section_id": "6.11.2.1.2.2", "title": "RCH_Pass_Up_Message State", "content": "On entry to the RCH_Pass_Up_Message state the Chunked Rx state machine Shall pass the received message to the Policy Engine. The Chunked Rx State Machine Shall transition to the RCH_Wait_For_Message_From_Protocol_Layer state when:  The Message has been passed.", "page_start": 191, "page_end": 190, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": ["messages"]}
{"section_id": "6.11.2.1.2.3", "title": "RCH_Processing_Extended_Message State", "content": "On entry to the RCH_Processing_Extended_Message state the Chunked Rx state machine Shall:  If this is the first chunk: o Set Chunk_Number_Expected = 0. o Set Num bytes received = 0.  If chunk contains the expected Chunk Number: o Append its data to the Extended_Message_Buffer. o Increment Chunk_Number_Expected. o Adjust Num bytes received. The Chunked Rx State Machine Shall transition to the RCH_Pass_Up_Message state when:  The message is complete (i.e. Num bytes received >= specified Data Size. Note that the inequality allows for padding bytes in the last chunk, which are not actually part of the extended message). The Chunked Rx State Machine Shall transition to the RCH_Requesting_Chunk state when:  The Message is not yet complete. The Chunked Rx State Machine Shall transition to the RCH_Report_Error state when:  An unexpected Chunk Number is received. The Chunked Rx State Machine Shall transition to the RCH_Wait_For_Message_From_Protocol_Layer state when:  The optional Abort Flag is set.", "page_start": 191, "page_end": 190, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 157, "tags": ["messages"]}
{"section_id": "6.11.2.1.2.4", "title": "RCH_Requesting_Chunk State", "content": "On entry to the RCH_Requesting_Chunk state the Chunked Rx state machine Shall:  Send Chunk Request to Protocol Layer with Chunk Number = Chunk_Number_Expected. The Chunked Rx State Machine Shall transition to the RCH_Waiting_Chunk state when:  Message Transmitted is received from the Protocol Layer. The Chunked Rx State Machine Shall transition to the RCH_Report_Error state when:  Transmission Error is received from the Protocol Layer, or  A Message is received from the Protocol Layer.", "page_start": 191, "page_end": 190, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 76, "tags": []}
{"section_id": "6.11.2.1.2.5", "title": "RCH_Waiting_Chunk State", "content": "On entry to the RCH_Waiting_Chunk state the Chunked Rx state machine Shall:  Start the ChunkSenderResponseTimer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 191 The Chunked Rx State Machine Shall transition to the RCH_Processing_Extended_Message state when:  A Chunk is received from the Protocol Layer. The Chunked Rx State Machine Shall transition to the RCH_Report_Error state when:  A Message, other than a Chunk, is received from the Protocol Layer, or  The ChunkSenderResponseTimer expires.", "page_start": 191, "page_end": 191, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 77, "tags": []}
{"section_id": "6.11.2.1.2.6", "title": "RCH_Report_Error State", "content": "The Chunked Rx State Machine Shall enter the RCH_Report_Error state:  When any Message is received and the Chunked Rx State Machine is not in one of the states RCH_Waiting_Chunk or RCH_Wait_For_Message_From_Protocol_Layer. On entry to the RCH_Report_Error state the Chunked Rx state machine Shall:  Report the error to the Policy Engine.  If the state was entered because a Message was received, this Message Shall be passed to the Policy Engine. The Chunked Rx State Machine Shall transition to the RCH_Wait_For_Message_From_Protocol_Layer state when:  The error has been reported.  Any message received was passed to the Policy Engine. Page 192 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 192, "page_end": 192, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 110, "tags": []}
{"section_id": "6.11.2.1.3", "title": "Chunked Tx State Diagram", "content": "Figure 6-48 shows the state behavior for the Chunked Tx State Machine. This recognizes whether chunked transmitted messages are involved, and deals with sending chunks and waiting for chunk requests when they are. It also performs validity checks on all related messages related to chunking. Figure 6-48 Chunked Tx State Diagram Soft Reset occured | Exit from Hard Reset Start TCH_ Wait_ For_Message_Request_From_Policy_Engine Actions on entry: Clear Abort Flag Informed Non-Exten N de o d t C M h e u s n s k a in g g e Request | (Rx S C ta h te u n != ki ng Abort Flag Set Extended C h M u e n s k s in a g g e & Request (Rx Chunking M to e s C s h a u g n e k p e a d s R se x d A Pa c T s ti s o C M n H s e _ o s P s n a a e g s n e s t _ t r o D y : P o r w ot n o _ c M ol e La s y s e a r ge P A M R r b o C e o t s H o r s t c _ a o W S g l_ e u a L _ p it a F p _ y r o F o e r o m t r e ) r _ _ d & Reported A 'C c T h t u i C o n C H n k s h N _ o u P u n m n r e e b k n e p t e r r a y d T : r o _ e M Se _T n e d s o ' s = _ a S 0 g e e n d_ A P b M R o ro C e rt t s H o N s S c _ a o o t W g a t l _ e t S a e L _ i u t a F ! _ = p y r F p o e o o m r) r r _ t _ & ed A C P T l a c e t s a C i s o r H M n E s e x _ o s t M e s n a n e e g d n e s e t d s t r o y a M : C g e h e s u s _ n a R k g e e e d B c R u e x f i fe v r e s d Message Passed Tran T s C m H i _ s W io a n i _ t C _F o o m r p _ lete P T r x o t E o r c r o o l r L fr a o y m er Action T s C o H n e _ n R t e ry p : ort_Error Chunk Number Set Actions on entry: Report Error to Policy Engine Any Message Received and not in state TCH_Wait_Chunk_Request TCH_Construct_ (Chunk Request Rcvd & Chunked_Message Mes P r s e r a o c g t e o e iv c T e o r d l a L n f a r s o y m m er i tted Chu C n h k u N nk u m N b u e m r b to e r S != e nd) Tran E s r m ro is r sion A C to o c t n P i s r o o t n r t u s o c o c t o n M l e L e n a s t y s r e a y r g : e Chunk and pass M R O e e c s th e sa e iv g r e e d TCH_Message_Sent Chunk Actions on entry: Passed Inform Policy Engine of Message Sent Chunk Request Rcvd & TCH_Sending_ Chu C n h k u N nk u m N b u e m r b t e o r S = e nd Message Transmitted Chunked_Message received from Protocol Layer & Actions on entry: Last Chunk ChunkSenderRequestTimer timeout Message Transmitted from Protocol Layer & Not Last Chunk TCH_Wait_Chunk_Request Actions on entry: Increment Chunk Number to Send Start ChunkSenderRequestTimer", "page_start": 193, "page_end": 192, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-48 shows the state behavior for the Chunked Tx State Machine. This recognizes whether chunked", "caption": "Figure 6-48 shows the state behavior for the Chunked Tx State Machine. This recognizes whether chunked", "page": 193}, {"figure_id": "Figure 6-48 Chunked Tx State Diagram", "caption": "Figure 6-48 Chunked Tx State Diagram", "page": 193}], "subsections": [], "word_count": 772, "tags": []}
{"section_id": "6.11.2.1.3.1", "title": "TCH_Wait_For_Message_Request_From_Policy_Engine State", "content": "The Chunked Tx State Machine Shall enter the TCH_Wait_For_Message_Request_From_Policy_Engine state:  At startup.  As a result of a Soft Reset occurring.  On exit from a Hard Reset. On entry to the TCH_Wait_For_Message_Request_From_Policy_Engine state the Chunked Tx state machine clears the optional Abort Flag. In the TCH_Wait_For_Message_Request_From_Policy_Engine state the Chunked Tx State Machine waits until the Policy Engine sends it a Message Request. The Chunked Tx State Machine Shall transition to the TCH_Pass_Down_Message state when: USB Power Delivery Specification Revision 3.0, Version 1.1 Page 193  A non-Extended Message Request is received from the Policy Engine, or  A Message Request is received from the Policy Engine and the link is not Chunking. The Chunked Tx State Machine Shall transition to the TCH_Prepare_To_Send_Chunked_Message state when:  An Extended Message Request is received from the Policy Engine, and the link is Chunking. The Chunked Tx State Machine Shall Discard the Message Request and remain in the TCH_Wait_For_Message_Request_From_Policy_Engine state when:  The Chunked Rx state is any other than TCH_Wait_For_Message_Request_From_Policy_Engine, and the optional Abort Flag has not been implemented. The Chunked Tx State Machine Shall Discard the Message Request and enter the TCH_Report_Error state when:  The Chunked Rx state is any other than TCH_Wait_For_Message_Request_From_Policy_Engine, and the optional Abort Flag has been implemented.", "page_start": 193, "page_end": 193, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 212, "tags": ["messages", "policy"]}
{"section_id": "6.11.2.1.3.2", "title": "TCH_Pass_Down_Message State", "content": "On entry to the TCH_Pass_Down_Message state the Chunked Tx State Machine Shall pass the message to the Protocol Layer. The Chunked Tx State Machine Shall transition to the TCH_Wait_For_Transmision_Complete state when:  The message has been passed to the Protocol Layer.", "page_start": 194, "page_end": 193, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["messages"]}
{"section_id": "6.11.2.1.3.3", "title": "TCH_Wait_For_Transmision_Complete State", "content": "The Chunked Tx State Machine Shall transition to the TCH_Message_Sent state when:  Message Transmitted has been received from the Protocol Layer. The Chunked Tx State Machine Shall transition to the TCH_Report_Error state when:  Transmission Error has been received from the Protocol Layer.", "page_start": 194, "page_end": 193, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 44, "tags": []}
{"section_id": "6.11.2.1.3.4", "title": "TCH_Message_Sent State", "content": "On entry to the TCH_Message_Sent state the Chunked Tx State Machine Shall:  Inform the Policy Engine that the Message has been sent. The Chunked Tx State Machine Shall transition to the TCH_Wait_For_Message_Request_From_Policy_Engine state when:  The Policy Engine has been informed.", "page_start": 194, "page_end": 193, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 42, "tags": ["messages"]}
{"section_id": "6.11.2.1.3.5", "title": "TCH_Prepare_To_Send_Chunked_Message State", "content": "On entry to the TCH_Prepare_To_Send_Chunked_Message state the Chunked Tx State Machine Shall:  Set 'Chunk Number To Send' to zero. The Chunked Tx State Machine Shall transition to the TCH_Construct_Chunked_Message state when:  'Chunk Number To Send' has been set to zero.", "page_start": 194, "page_end": 193, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 42, "tags": ["messages"]}
{"section_id": "6.11.2.1.3.6", "title": "TCH_Construct_Chunked_Message State", "content": "On entry to the TCH_Construct_Chunked_Message state the Chunked Tx State Machine Shall:  Construct a Message Chunk and pass it to the Protocol Layer. Page 194 USB Power Delivery Specification Revision 3.0, Version 1.1 The Chunked Tx State Machine Shall transition to the TCH_Sending_Chunked_Message state when:  The Message Chunk has been passed to the Protocol Layer. The Chunked Tx State Machine Shall transition to the TCH_Wait_For_Message_Request_From_Policy_Engine state when:  The optional Abort Flag is set.", "page_start": 194, "page_end": 194, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 76, "tags": ["messages"]}
{"section_id": "6.11.2.1.3.7", "title": "TCH_Sending_Chunked_Message State", "content": "The Chunked Tx State Machine Shall transition to the TCH_Wait_Chunk_Request state when:  Message Transmitted is received from Protocol Layer and this was not the last chunk. The Chunked Tx State Machine Shall transition to the TCH_Message_Sent state when:  Message Transmitted is received from Protocol Layer and this was the last chunk. The Chunked Tx State Machine Shall transition to the TCH_Report_Error state when:  Transmission Error has been received from the Protocol Layer.", "page_start": 195, "page_end": 194, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 75, "tags": ["messages"]}
{"section_id": "6.11.2.1.3.8", "title": "TCH_Wait_Chunk_Request State", "content": "On entry to the TCH_Wait_Chunk_Request state the Chunked Tx State Machine Shall:  Increment Chunk Number to Send.  Start ChunkSenderRequestTimer. The Chunked Tx State Machine Shall transition to the TCH_Report_Error state when:  A Chunk Request has been received and the Chunk Number does not equal Chunk Number to Send). The Chunked Tx State Machine Shall transition to the TCH_Message_Sent state when:  ChunkSenderRequestTimer has expired. Note that this is the mechanism which allows the remote port partner or cable marker to omit the chunking layer. The Policy Engine will receive a Message Sent signal if the remote port partner or cable marker is present (GoodCRC Message received) but does not sent a Chunk Request. After this the remote port partner will send a Not_Supported Message, or the Cable Marker will Ignore the Chunked Message. The Chunked Tx State Machine Shall transition to the TCH_Message_Received state when:  Any other message than Chunk Request is received.", "page_start": 195, "page_end": 194, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 157, "tags": []}
{"section_id": "6.11.2.1.3.9", "title": "TCH_Message_Received State", "content": "The Chunked Tx State Machine Shall enter the TCH_Message_Received state:  When any Message is received and the Chunked Tx State Machine is not in the TCH_Wait_Chunk_Request state. On entry to the TCH_Message_Received state the Chunked Tx State Machine Shall:  Clear the Extended Message Buffers.  Pass the received Message to Chunked Rx Engine. The Chunked Tx State Machine Shall transition to the TCH_Wait_For_Message_Request_From_Policy_Engine state when:  The received message has been passed to the Chunked Rx Engine. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 195", "page_start": 195, "page_end": 195, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 89, "tags": ["messages"]}
{"section_id": "6.11.2.1.3.10", "title": "TCH_Report_Error State", "content": "On entry to the TCH_Report_Error state the Chunked Tx State Machine Shall:  Report the error to the Policy Engine. The Chunked Tx State Machine Shall transition to the TCH_Wait_For_Message_Request_From_Policy_Engine state when:  The error has been reported. Page 196 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 196, "page_end": 196, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": []}
{"section_id": "6.11.2.1.4", "title": "Chunked Message Router State Diagram", "content": "Figure 6-49 shows the state behavior for the Chunked Message Router. This determines to which state machine an incoming message is routed to (Chunked Rx, Chunked Tx or direct to Policy Engine). Figure 6-49 Chunked Message Router State Diagram Start RTR_Wait_for_ Soft Reset occured | Message_From_ Exit from Hard Reset Protocol_Layer Actions on entry: Sent Sent Received Ping From Protocol Layer Message (not Ping) Message (not Ping) Received from Received from Protocol Layer & Sent Protocol Layer & Not Doing Tx Chunks1 Doing Tx Chunks1 RTR_Rx_Chunks RTR_Ping RTR_Tx_Chunks Actions on entry: Actions on entry: Actions on entry: Send message to Rx Chunk Send message to Policy Engine Send message to Tx Chunk Machine Machine", "page_start": 197, "page_end": 196, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-49 shows the state behavior for the Chunked Message Router. This determines to which state machine an", "caption": "Figure 6-49 shows the state behavior for the Chunked Message Router. This determines to which state machine an", "page": 197}, {"figure_id": "Figure 6-49 Chunked Message Router State Diagram", "caption": "Figure 6-49 Chunked Message Router State Diagram", "page": 197}], "subsections": [], "word_count": 114, "tags": ["messages"]}
{"section_id": "1", "title": "Doing Tx Chunks means that Chunked Tx State Machine is not in the", "content": "TCH_Wait_For_Message_Request_From_Policy_Engine state", "page_start": 197, "page_end": 196, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": []}
{"section_id": "2", "title": "Messages are taken to include notification about transmission success or otherwise of Messages", "content": "", "page_start": 197, "page_end": 196, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["messages"]}
{"section_id": "6.11.2.1.4.1", "title": "RTR_Wait_for_Message_From_Protocol_Layer State", "content": "In the RTR_Wait_for_Message_From_Protocol_Layer state the Chunked Message Router waits until the Protocol Layer sends it a received Message. The Chunked Message Router Shall transition to the RTR_Rx_Chunks state when:  A Message other than a Ping Message is received from the Protocol Layer, and the combined Chunking is not doing Tx Chunks. The Chunked Message Router Shall transition to the RTR_Tx_Chunks state when:  A Message other than a Ping Message is received from the Protocol Layer, and the combined Chunking is doing Tx Chunks. The Chunked Message Router Shall transition to the RTR_Ping state when:  A Ping Message is received from the Protocol Layer.", "page_start": 197, "page_end": 196, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 106, "tags": ["messages", "protocol"]}
{"section_id": "6.11.2.1.4.2", "title": "RTR_Rx_Chunks State", "content": "On entry to the RTR_Rx_Chunks state the Chunked Message Router Shall:  Send the message to the Chunked Rx State Machine.  Transition to the RTR_Wait_for_Message_From_Protocol_Layer state. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 197", "page_start": 197, "page_end": 197, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": []}
{"section_id": "6.11.2.1.4.3", "title": "RTR_Ping State", "content": "On entry to the RTR_Ping state the Chunked Message Router Shall:  Send the message to the Policy Engine.  Transition to the RTR_Wait_for_Message_From_Protocol_Layer state.", "page_start": 198, "page_end": 197, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": []}
{"section_id": "6.11.2.1.4.4", "title": "RTR_Tx_Chunks State", "content": "On entry to the RTR_Tx_Chunks state the Chunked Message Router Shall:  Send the message to the Chunked Tx State Machine.  Transition to the RTR_Wait_for_Message_From_Protocol_Layer state. Page 198 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 198, "page_end": 198, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": []}
{"section_id": "6.11.2.2", "title": "Protocol Layer Message Transmission", "content": "", "page_start": 199, "page_end": 198, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["messages", "protocol"]}
{"section_id": "6.11.2.2.1", "title": "Common Protocol Layer Message Transmission State Diagram", "content": "Figure 6-50 shows the state behavior, common between the Source and the Sink, for the Protocol Layer when transmitting a Message. Figure 6-50 Common Protocol Layer Message transmission State Diagram Start Soft Reset Message from PHY Layer | Exit from Hard Reset PRL_Tx_Discard_Message Protocol Layer PRL_Tx_PHY_Layer_Reset Actions on entry: message reception If any message is currently awaiting in PRL_Rx_Store_MessageID state | Actions on entry: Discarding transmission Discard4 and Fast Role Swap signal transmitted | Reset PHY Layer complete increment MessageID Counter Fast Role Swap signal detected PRL_Tx_Layer_Reset_for _Transmit Actions on entry: PHY Layer reset Reset MessageIDCounter. complete Protocol Layer message reception transitions to PRL_Rx_Wait_for_PHY_Message state. Soft Reset Message request received Layer Reset Complete from Policy Engine PRL_Tx_Wait_for_ PRL_Tx_Construct_Message Message_Request Actions on entry: Actions on entry: Message request received Construct message Reset RetryCounter from Policy Engine (except Soft Reset) Pass message to PHY Layer (RetryCounter ≤ nRetryCount) & Message sent to P o o f li T c r y a E ns n m gi i n s e si o in n f o E rm rro e r d smal n l o E t x C te a n b d l e e d P M lu e g s & sage3 PHY Layer Policy Engine PRL_Tx_Transmission_Error > ( n R R e e tr t y r C yC o o u u n n te t) r | PRL_Tx_Check_RetryCounter CRCReceiveTimer PRL_Tx_Wait_for_PHY_response me i s n s fo a r g m e e s d ent A I I T n n r c c f a t o r i n o r e s m n m m s e P i o n s o n s t l i i M e o c n y n e t s E E r s y n r a : r g g o i e n r I e D o C f o unter Exte C n a d b e la l d e r g M P e l e u s g s a | ge3 A I R f c e D t t i r F o y P n C s o o r o u n U n t F e e P n r t i r n y c : rement and check Message T di i s m c e a o rd u e t d | bus Idle2 A In c i t t i i o a n li s z e o n a n e d n t r r u y n : CRCReceiveTimer1 GoodCRC response MessageID mismatch received from PHY Layer PRL_Tx_Message_Sent PRL_Tx_Match_MessageID Actions on entry: MessageID match Actions on entry: Increment MessageIDCounter Match MessageIDCounter and Inform Policy Engine message response MessageID sent 1 The CRCReceiveTimer is only started after the PHY has sent the message. If the message is not sent due to a busy channel then the CRCReceiveTimer will not be started (see Section 6.6.1). 2 This indication is sent by the PHY Layer when a message has been Discarded due to CC being busy, and after CC becomes idle again (see Section 5.7). The CRCReceiveTimer is not running in this case since no message has been sent. 3 A “small” Extended Message is either an Extended Message with Data Size ≤ MaxExtendedMsgLegacyLen bytes or an Extended Message with Data Size > MaxExtendedMsgLegacyLen bytes that has been Chunked. A “large” Extended Message is an Extended Message with Data Size > MaxExtendedMsgLegacyLen bytes that has not been Chunked.", "page_start": 199, "page_end": 198, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-50 shows the state behavior, common between the Source and the Sink, for the Protocol Layer when", "caption": "Figure 6-50 shows the state behavior, common between the Source and the Sink, for the Protocol Layer when", "page": 199}, {"figure_id": "Figure 6-50 Common Protocol Layer Message transmission State Diagram", "caption": "Figure 6-50 Common Protocol Layer Message transmission State Diagram", "page": 199}], "subsections": [], "word_count": 597, "tags": ["messages", "protocol"]}
{"section_id": "4", "title": "See Section 6.10 for details of when Messages are Discarded.", "content": "", "page_start": 199, "page_end": 198, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["messages"]}
{"section_id": "6.11.2.2.1.1", "title": "PRL_Tx_PHY_Layer_Reset State", "content": "The Protocol Layer Shall enter the PRL_Tx_PHY_Layer_Reset state:  At startup.  As a result of a Soft Reset request being received by the PHY Layer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 199  On exit from a Hard Reset. On entry to the PRL_Tx_PHY_Layer_Reset state the Protocol Layer Shall reset the PHY Layer (clear any outstanding Messages and enable communications). The Protocol Layer Shall transition to the PRL_Tx_Wait_for_Message_Request state when:  When the PHY Layer reset is complete.", "page_start": 199, "page_end": 199, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 82, "tags": []}
{"section_id": "6.11.2.2.1.2", "title": "PRL_Tx_Wait_for_Message_Request State", "content": "In the PRL_Tx_Wait_for_Message_Request state the Protocol Layer waits until the Policy Engine directs it to send a Message. On entry to the PRL_Tx_Wait_for_Message_Request state the Protocol Layer Shall reset the RetryCounter. The Protocol Layer Shall transition to the PRL_Tx_Construct_Message state when:  A Message request is received from the Policy Engine which is not a Soft_Reset Message. The Protocol Layer Shall transition to the PRL_Tx_Layer_Reset_for_Transmit state when:  A Message request is received from the Policy Engine which is a Soft_Reset Message.", "page_start": 200, "page_end": 199, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 82, "tags": ["messages"]}
{"section_id": "6.11.2.2.1.3", "title": "PRL_Tx_Layer_Reset_for_Transmit State", "content": "On entry to the PRL_Tx_Layer_Reset_for_Transmit state the Protocol Layer Shall reset the MessageIDCounter. The Protocol Layer Shall transition Protocol Layer Message reception to the PRL_Rx_Wait_for_PHY_Message state (see Section 6.11.2.3.1) in order to reset the stored MessageID. The Protocol Layer Shall transition to the PRL_Tx_Construct_Message state when:  The layer reset actions in this state have been completed.", "page_start": 200, "page_end": 199, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 57, "tags": []}
{"section_id": "6.11.2.2.1.4", "title": "PRL_Tx_Construct_Message State", "content": "On entry to the PRL_Tx_Construct_Message state the Protocol Layer Shall construct the Message requested by the Policy Engine, or resend a previously constructed Message, and then pass this Message to the PHY Layer. The Protocol Layer Shall transition to the PRL_Tx_Wait_for_PHY_Response state when:  The Message has been sent to the PHY Layer.", "page_start": 200, "page_end": 199, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 53, "tags": ["messages"]}
{"section_id": "6.11.2.2.1.5", "title": "PRL_Tx_Wait_for_PHY_Response State", "content": "On entry to the PRL_Tx_Wait_for_PHY_Response state, once the Message has been sent, the Protocol Layer Shall initialize and run the CRCReceiveTimer (see Section 6.6.1). The Protocol Layer Shall transition to the PRL_Tx_Match_MessageID state when:  A GoodCRC Message response is received from the PHY Layer. The Protocol Layer Shall transition to the PRL_Tx_Check_RetryCounter state when:  The CRCReceiveTimer times out.  Or the PHY Layer indicates that a Message has been Discarded due to the channel being busy but the channel is now idle (see Section 5.7).", "page_start": 200, "page_end": 199, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 87, "tags": []}
{"section_id": "6.11.2.2.1.6", "title": "PRL_Tx_Match_MessageID State", "content": "On entry to the PRL_Tx_Match_MessageID state the Protocol Layer Shall compare the MessageIDCounter and the MessageID of the received GoodCRC Message. The Protocol Layer Shall transition to the PRL_Tx_Message_Sent state when: Page 200 USB Power Delivery Specification Revision 3.0, Version 1.1  The MessageIDCounter and the MessageID of the received GoodCRC Message match. The Protocol Layer Shall transition to the PRL_Tx_Check_RetryCounter state when:  The MessageIDCounter and the MessageID of the received GoodCRC Message do not match.", "page_start": 200, "page_end": 200, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 77, "tags": ["messages"]}
{"section_id": "6.11.2.2.1.7", "title": "PRL_Tx_Message_Sent State", "content": "On entry to the PRL_Tx_Message_Sent state the Protocol Layer Shall increment the MessageIDCounter and inform the Policy Engine that the Message has been sent. The Protocol Layer Shall transition to the PRL_Tx_Wait_for_Message_Request state when:  The Policy Engine has been informed that the Message has been sent.", "page_start": 201, "page_end": 200, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 47, "tags": ["messages"]}
{"section_id": "6.11.2.2.1.8", "title": "PRL_Tx_Check_RetryCounter State", "content": "On entry to the PRL_Tx_Check_RetryCounter state the Protocol Layer in a DFP or UFP Shall increment the value of the RetryCounter and then check it in order to determine whether it is necessary to retry sending the Message. Note that Cable Plugs do not retry Messages and so do not use the RetryCounter. The Protocol Layer Shall transition to the PRL_Tx_Construct_Message state in order to retry Message sending when:  RetryCounter ≤ nRetryCount and  This is not a Cable Plug and  This is an Extended Message with Data Size ≤ MaxExtendedMsgLegacyLen or  This is an Extended Message that has been Chunked. The Protocol Layer Shall transition to the PRL_Tx_Transmission_Error state when:  RetryCounter > nRetryCount or  This is a Cable Plug, which does not retry.  This is an Extended Message with Data Size > MaxExtendedMsgLegacyLen that has not been Chunked.", "page_start": 201, "page_end": 200, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 145, "tags": []}
{"section_id": "6.11.2.2.1.9", "title": "PRL_Tx_Transmission_Error State", "content": "On entry to the PRL_Tx_Transmission_Error state the Protocol Layer Shall increment the MessageIDCounter and inform the Policy Engine of the transmission error. The Protocol Layer Shall transition to the PRL_Tx_Wait_for_Message_Request state when:  The Policy Engine has been informed of the transmission error.", "page_start": 201, "page_end": 200, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 43, "tags": []}
{"section_id": "6.11.2.2.1.10", "title": "PRL_Tx_Discard_Message State", "content": "Protocol Layer Message transmission Shall enter the PRL_Tx_Discard_Message state whenever:  Protocol Layer Message reception receives an incoming Message or  The Fast Role Swap signal is being transmitted (see Section 5.8.5.6)  The Fast Role Swap signal is detected (see Section 5.8.6.3). On entry to the PRL_Tx_Discard_Message state, if there is a Message queued awaiting transmission, the Protocol Layer Shall Discard the Message according to the rules in Section 6.10 and increment the MessageIDCounter. The Protocol Layer Shall transition to the PRL_Tx_PHY_Layer_Reset state when:  Discarding is complete i.e. the Message queue is empty. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 201", "page_start": 201, "page_end": 201, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 105, "tags": ["messages"]}
{"section_id": "6.11.2.2.2", "title": "Source Protocol Layer Message Transmission State Diagram", "content": "Figure 6-51 shows the state behavior for the Protocol Layer in a Source when transmitting a Message. Figure 6-51 Source Protocol Layer Message transmission State Diagram PRL_Tx_Src_Sink_Tx Actions on entry: Set Rp = SinkTxOk Rp set End of AMS notification received from Policy Engine PRL_Tx_Wait_for_Message_Request Start of AMS notification received from Policy Engine PRL_Tx_Src_Source_Tx Actions on entry: Set Rp = SinkTxNG Message request from Policy Engine PRL_Tx_Src_Pending Actions on entry: Start SinkTxTimer Soft Reset Message pending & Message pending (except Soft Reset) & SinkTxTimer timeout SinkTxTimer timeout PRL_Tx_Layer_Reset_for_Transmit PRL_Tx_Construct_Message", "page_start": 202, "page_end": 201, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-51 shows the state behavior for the Protocol Layer in a Source when transmitting a Message.", "caption": "Figure 6-51 shows the state behavior for the Protocol Layer in a Source when transmitting a Message.", "page": 202}, {"figure_id": "Figure 6-51 Source Protocol Layer Message transmission State Diagram", "caption": "Figure 6-51 Source Protocol Layer Message transmission State Diagram", "page": 202}], "subsections": [], "word_count": 89, "tags": ["messages", "source", "protocol"]}
{"section_id": "6.11.2.2.2.1", "title": "PRL_Tx_Src_Sink_Tx State", "content": "In the PRL_Tx_Src_Sink_Tx state the Source sets Rp to SinkTxOk allowing the Sink to start an Atomic Message Sequence (AMS). The Protocol Layer in a Source Shall transition from the PRL_Tx_Wait_for_Message_Request state to the PRL_Tx_Src_Sink_Tx state when:  A notification is received from the Policy Engine that the end of an AMS has been reached. On entry to the PRL_Tx_Src_Sink_Tx state the Protocol Layer Shall request the PHY Layer to Rp to SinkTxOk. Page 202 USB Power Delivery Specification Revision 3.0, Version 1.1 The Protocol Layer Shall transition to the PRL_Tx_Wait_for_Message_Request state when:  Rp has been set", "page_start": 202, "page_end": 202, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 98, "tags": ["sink"]}
{"section_id": "6.11.2.2.2.2", "title": "PRL_Tx_Src_Source_Tx State", "content": "In the PRL_Tx_Src_Source_Tx state the Source sets Rp to SinkTxNG allowing the Source to start an Atomic Message Sequence (AMS). The Protocol Layer in a Source Shall transition from the PRL_Tx_Wait_for_Message_Request state to the PRL_Tx_Src_Source_Tx state when:  A notification is received from the Policy Engine that an AMS will be starting. On entry to the PRL_Tx_Src_Source_Tx state the Protocol Layer Shall set Rp to SinkTxNG. The Protocol Layer Shall transition to the PRL_Tx_Src_Pending state when:  A Message request is received from the Policy Engine.", "page_start": 203, "page_end": 202, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 86, "tags": ["source"]}
{"section_id": "6.11.2.2.2.3", "title": "PRL_Tx_Src_Pending State", "content": "In the PRL_Tx_Src_Pending state the Protocol Layer has a Message buffered ready for transmission. On entry to the PRL_Tx_Src_Pending state the SinkTxTimer Shall be initialized and run. The Protocol Layer Shall transition to the PRL_Tx_Construct_Message state when:  The pending Message request from the Policy Engine is not a Soft_Reset Message and  The SinkTxTimer times out. The Protocol Layer Shall transition to the PRL_Tx_Layer_Reset_for_Transmit state when:  The pending Message request from the Policy Engine is a Soft_Reset Message and  The SinkTxTimer times out. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 203", "page_start": 203, "page_end": 203, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 96, "tags": []}
{"section_id": "6.11.2.2.3", "title": "Sink Protocol Layer Message Transmission State Diagram", "content": "Figure 6-52 shows the state behavior for the Protocol Layer in a Source when transmitting a Message. Figure 6-52 Sink Protocol Layer Message transmission State Diagram PRL_Tx_Wait_for_Message_Request First Message in AMS notification received from Policy Engine PRL_Tx_Snk_Start_of_AMS Actions on entry: Message Request from Policy Engine PRL_Tx_Snk_Pending Actions on entry: Soft Reset Message pending & Message pending (except Soft Reset) & Rp = SinkTxOk Rp = SinkTxOk PRL_Tx_Layer_Reset_for_Transmit PRL_Tx_Construct_Message", "page_start": 204, "page_end": 203, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-52 shows the state behavior for the Protocol Layer in a Source when transmitting a Message.", "caption": "Figure 6-52 shows the state behavior for the Protocol Layer in a Source when transmitting a Message.", "page": 204}, {"figure_id": "Figure 6-52 Sink Protocol Layer Message transmission State Diagram", "caption": "Figure 6-52 Sink Protocol Layer Message transmission State Diagram", "page": 204}], "subsections": [], "word_count": 68, "tags": ["messages", "sink", "protocol"]}
{"section_id": "6.11.2.2.3.1", "title": "PRL_Tx_Snk_Start_of_AMS State", "content": "In the PRL_Tx_Snk_Start_of_AMS state the Protocol Layer waits for the first Message in a Sink initiated AMS. The Protocol Layer in a Sink Shall transition from the PRL_Tx_Wait_for_Message_Request state to the PRL_Tx_Snk_Start_of_AMS state when:  A notification is received from the Policy Engine that the next Message the Sink will send is the start of an AMS. The Protocol Layer Shall transition to the PRL_Tx_Snk_Pending state when:  A Message request is received from the Policy Engine.", "page_start": 204, "page_end": 203, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 77, "tags": []}
{"section_id": "6.11.2.2.3.2", "title": "PRL_Tx_Snk_Pending State", "content": "In the PRL_Tx_Snk_Pending state the Protocol Layer has the first Message in a Sink initiated AMS ready to send and is waiting for Rp to transition to SinkTxOk before sending the Message. The Protocol Layer Shall transition to the PRL_Tx_Construct_Message state when:  A Message is Pending that is not a Soft_Reset Message and  Rp is set to SinkTxOk. The Protocol Layer Shall transition to the PRL_Tx_Layer_Reset_for_Transmit state when:  A Soft_Reset Message is pending and  Rp is set to SinkTxOk. Page 204 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 204, "page_end": 204, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 93, "tags": []}
{"section_id": "6.11.2.3", "title": "Protocol Layer Message Reception", "content": "Figure 6-53 shows the state behavior for the Protocol Layer when receiving a Message. Figure 6-53 Protocol layer Message reception PRL_Rx_Layer_Reset_ for_Receive Actions on entry: Reset MessageIDCounter and clear stored MessageID value Soft Reset request from Policy Engine | Protocol Layer message Exit from Hard Reset transmission transitions to PRL_Tx_PHY_Layer_Reset state. Start Soft Reset Message received Soft Reset complete from PHY Message received PRL_Rx_Wait_for_PHY_ from PHY (except Soft Reset) PRL_Rx_Send_GoodCRC message Actions on entry: Message discarded bus Idle1 A Se c n ti d o n G s o o o n d C e R n C tr m y: essage to PHY MessageID = stored Message passed to MessageID (GoodCRC sent | Message discarded bus Idle1) Policy Engine PRL_Rx_Store_MessageID PRL_Rx_Check_MessageID A Pr c o ti t o o n c s o l o L n a e y n e t r r m y: essage transmission MessageID <> stored A If c t t h io e n re s i o s n a e s n to tr r y e : d value compare transitions to PRL_Tx_Discard_Message MessageID | MessageID with stored value. state2. no stored value Store new MessageID Pass message to Policy Engine 1 This indication is sent by the PHY when a message has been Discarded due to CC being busy, and after CC becomes idle again (see Section 5.7). Two alternate allowable transitions are shown. 2 In the case of a Ping message being received, in order to maintain robust communications in the presence of collisions, the outgoing message Should Not be Discarded.", "page_start": 205, "page_end": 204, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-53 shows the state behavior for the Protocol Layer when receiving a Message.", "caption": "Figure 6-53 shows the state behavior for the Protocol Layer when receiving a Message.", "page": 205}, {"figure_id": "Figure 6-53 Protocol layer Message reception", "caption": "Figure 6-53 Protocol layer Message reception", "page": 205}], "subsections": [], "word_count": 264, "tags": ["messages", "protocol"]}
{"section_id": "6.11.2.3.1", "title": "PRL_Rx_Wait_for_PHY_Message state", "content": "The Protocol Layer Shall enter the PRL_Rx_Wait_for_PHY_Message state:  At startup.  As a result of a Soft Reset request from the Policy Engine.  On exit from a Hard Reset. In the PRL_Rx_Wait_for_PHY_Message state the Protocol Layer waits until the PHY Layer passes up a received Message. The Protocol Layer Shall transition to the PRL_Rx_Send_GoodCRC state when:  A Message is passed up from the PHY Layer. The Protocol Layer Shall transition to the PRL_Rx_Layer_Reset_for_Receive state when:  A Soft_Reset Message is received from the PHY Layer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 205", "page_start": 205, "page_end": 205, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 98, "tags": ["messages"]}
{"section_id": "6.11.2.3.2", "title": "PRL_Rx_Layer_Reset_for_Receive state", "content": "On entry to the PRL_Rx_Layer_Reset_for_Receive state the Protocol Layer Shall reset the MessageIDCounter and clear the stored MessageID. The Protocol Layer Shall transition Protocol Layer Message transmission to the PRL_Tx_Wait_for_Message_Request state (see Section 6.11.2.2.1.1). The Protocol Layer Shall transition to the PRL_Rx_Send_GoodCRC State when:  The Soft Reset actions in this state have been completed.", "page_start": 206, "page_end": 205, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 55, "tags": []}
{"section_id": "6.11.2.3.3", "title": "PRL_Rx_Send_GoodCRC state", "content": "On entry to the PRL_Rx_Send_GoodCRC state the Protocol Layer Shall construct a GoodCRC Message and request the PHY Layer to transmit it. The Protocol Layer Shall transition to the PRL_Rx_Check_MessageID state when:  The GoodCRC Message has been passed to the PHY Layer. When the PHY Layer indicates that a Message has been Discarded due to CC being busy but CC is now idle (see Section 5.7), the Protocol Layer Shall either:  Transition to the PRL_Rx_Check_MessageID state or  Transition to the PRL_Rx_Wait_for_PHY_Message state.", "page_start": 206, "page_end": 205, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 85, "tags": []}
{"section_id": "6.11.2.3.4", "title": "PRL_Rx_Check_MessageID state", "content": "On entry to the PRL_Rx_Check_MessageID state the Protocol Layer Shall compare the MessageID of the received Message with its stored value if a value has previously been stored. The Protocol Layer Shall transition to the PRL_Rx_Wait_for_PHY_Message state when:  The MessageID of the received Message equals the stored MessageID value since this is a Message retry which Shall be Discarded. The Protocol Layer Shall transition to the PRL_Rx_Store_MessageID state when:  The MessageID of the received Message does not equal the stored MessageID value since this is a new Message or  This is the first received Message and no MessageID value is currently stored.", "page_start": 206, "page_end": 205, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 105, "tags": ["messages"]}
{"section_id": "6.11.2.3.5", "title": "PRL_Rx_Store_MessageID state", "content": "On entry to the PRL_Rx_Store_MessageID state the Protocol Layer Shall transition Protocol Layer Message transmission to the PRL_Tx_Discard_Message state (except when a Ping Message has been received in which case the PRL_Tx_Discard_Message state Should Not be entered), replace the stored value of MessageID with the value of MessageID in the received Message and pass the Message up to the Policy Engine. The Protocol Layer Shall transition to the PRL_Rx_Wait_for_PHY_Message state when:  The Message has been passed up to the Policy Engine. Page 206 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 206, "page_end": 206, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 92, "tags": ["messages"]}
{"section_id": "6.11.2.4", "title": "Hard Reset operation", "content": "Figure 6-54 shows the state behavior for the Protocol Layer when receiving a Hard Reset or Cable Reset request from the Policy Engine or Hard Reset Signaling or Cable Reset Signaling from the Physical Layer (see also Section 6.8.2 and Section 6.8.3). Figure 6-54 Hard/Cable Reset Hard Reset request received from Policy Engine2 | Cable Reset request received from Policy Engine4 | Hard Reset signalling received By PHY Layer | Cable Reset signalling received By PHY Layer3 PRL_HR_Reset_Layer Actions on entry: Reset MessageIDCounter. Protocol Layer message transmission transitions to PRL_Tx_Wait_For_Message_Request state. Protocol Layer message reception transitions to PRL_Rx_Wait_for_PHY_Message state. Protocol Layer reset complete & Protocol Layer reset complete & (Hard Reset was Initiated by Policy Engine |(Hard Reset was initiated by Port Partner | Cable Reset was Initiated by Policy Engine) Cable Reset received by Cable Plug) PRL_HR_Request_Hard_Reset PRL_HR_Indicate_Hard_Reset Actions on entry: Actions on entry: Request PHY to perform a Hard Reset Inform the Policy Engine of the Hard or Cable Reset Reset or Cable Reset PHY Hard Reset request sent | PHY Cable Reset request sent PRL_HR_Wait_For_PHY_ Hard_Reset_Complete Actions on entry: Start HardResetCompleteTimer Wait for Hard Reset or Cable Reset complete indication from PHY Policy Engine informed Hard Reset complete from PHY | Cable Reset complete from PHY | HardResetCompleteTimer timeout1 PRL_HR_PHY_Hard_Reset_Requested Actions on entry: Inform Policy Engine Hard Reset or Cable Reset request has been sent Policy Engine informed PRL_HR_Wait_For_PE_Hard_Reset_Complete Actions on entry: Wait for Hard Reset or Cable Reset complete indication from Policy Engine. Hard Reset complete from Policy Engine | Cable Reset complete from Policy Engine PRL_HR_PE_Hard_Reset_Complete Actions on entry: Inform Physical Layer Hard Reset or Cable Reset is complete Physical Layer informed Exit from Hard Reset 1 If the HardResetCompleteTimer timeout occurs this means that the PHY is still waiting to send the Hard Reset due to a non-idle channel. This condition will be cleared once the PE Hard Reset is completed. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 207 2 Cable Plugs do not generate Hard Reset signaling but are required to monitor for Hard Reset signaling between the Port Partners and respond by resetting.", "page_start": 207, "page_end": 207, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 6-54 shows the state behavior for the Protocol Layer when receiving a Hard Reset or Cable Reset request from", "caption": "Figure 6-54 shows the state behavior for the Protocol Layer when receiving a Hard Reset or Cable Reset request from", "page": 207}, {"figure_id": "Figure 6-54 Hard/Cable Reset", "caption": "Figure 6-54 Hard/Cable Reset", "page": 207}], "subsections": [], "word_count": 353, "tags": []}
{"section_id": "3", "title": "Cable Reset signaling is only recognized by a Cable Plug.", "content": "", "page_start": 208, "page_end": 207, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["cable"]}
{"section_id": "4", "title": "Cable Reset signaling cannot be generated by Cable Plugs", "content": "", "page_start": 208, "page_end": 207, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["cable"]}
{"section_id": "6.11.2.4.1", "title": "PRL_HR_Reset_Layer state", "content": "The PRL_HR_Reset_Layer State defines the mode of operation of both the Protocol Layer transmission and reception state machines during a Hard Reset or Cable Reset. During Hard Reset no USB Power Delivery protocol Messages are sent or received; only Hard Reset Signaling is present after which the communication channel is assumed to have been disabled by the Physical Layer until completion of the Hard Reset. During Cable Reset no USB Power Delivery protocol Messages are sent to or received by the Cable Plug but other USB Power Delivery communication May continue. The Protocol Layer Shall enter the PRL_HR_Reset_Layer state from any other state when:  A Hard Reset Request is received from the Policy Engine or  Hard Reset Signaling is received from the Physical Layer or  A Cable Reset Request is received from the Policy Engine or  Cable Reset Signaling is received from the Physical Layer. On entry to the PRL_HR_Reset_Layer state the Protocol Layer Shall reset the MessageIDCounter. It Shall also reset the states of the Protocol Layer transmission and reception state machines to their starting points. The Protocol Layer transmission state machine Shall transition to the PRL_Tx_Wait_for_Message_Request state. The Protocol Layer reception state machine Shall transition to the PRL_Rx_Wait_for_PHY_Message state. The Protocol Layer Shall transition to the PRL_HR_Request_Hard_Reset state when:  The Protocol Layer’s reset is complete and o The Hard Reset request has originated from the Policy Engine or o The Cable Reset request has originated from the Policy Engine. The Protocol Layer Shall transition to the PRL_HR_Indicate_Hard_Reset state when:  The Protocol Layer’s reset is complete and o The Hard Reset request has been passed up from the Physical Layer or o A Cable Reset request has been passed up from the Physical Layer (Cable Plug only).", "page_start": 208, "page_end": 207, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 294, "tags": []}
{"section_id": "6.11.2.4.2", "title": "PRL_HR_Indicate_Hard_Reset state", "content": "On entry to the PRL_HR_Indicate_Hard_Reset state the Protocol Layer Shall indicate to the Policy Engine that either Hard Reset Signaling or Cable Reset Signaling has been received. The Protocol Layer Shall transition to the PRL_HR_Wait_for_PE_Hard_Reset_Complete state when:  The Indication to the Policy Engine has been sent.", "page_start": 208, "page_end": 207, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 47, "tags": []}
{"section_id": "6.11.2.4.3", "title": "PRL_HR_Request_Hard_Reset state", "content": "On entry to the PRL_HR_Request_Hard_Reset state the Protocol Layer Shall request the Physical Layer to send either Hard Reset Signaling or Cable Reset signaling. The Protocol Layer Shall transition to the PRL_HR_Wait_for_PHY_Hard_Reset_Complete state when:  The Physical Layer Hard Reset Signaling request has been sent or  The Physical Layer Cable Reset Signaling request has been sent. Page 208 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 208, "page_end": 208, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 67, "tags": []}
{"section_id": "6.11.2.4.4", "title": "PRL_HR_Wait_for_PHY_Hard_Reset_Complete state", "content": "In the PRL_HR_Wait_for_PHY_Hard_Reset_Complete state the Protocol Layer Shall start the HardResetCompleteTimer and wait for the PHY Layer to indicate that the Hard Reset or Cable Reset has been completed. The Protocol Layer Shall transition to the PRL_HR_PHY_Hard_Reset_Requested state when:  A Hard Reset complete indication is received from the PHY Layer or  A Cable Reset complete indication is received from the PHY Layer or  The HardResetCompleteTimer times out.", "page_start": 209, "page_end": 208, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 70, "tags": []}
{"section_id": "6.11.2.4.5", "title": "PRL_HR_PHY_Hard_Reset_Requested state", "content": "On entry to the PRL_HR_PHY_Hard_Reset_Requested state the Protocol Layer Shall inform the Policy Engine that the PHY Layer has been requested to perform a Hard Reset or Cable Reset. The Protocol Layer Shall transition to the PRL_HR_Wait_for_PE_Hard_Reset_Complete state when:  The Indication to the Policy Engine has been sent.", "page_start": 209, "page_end": 208, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 49, "tags": []}
{"section_id": "6.11.2.4.6", "title": "PRL_HR_Wait_for_PE_Hard_Reset_Complete state", "content": "In the PRL_HR_Wait_for_PE_Hard_Reset_Complete state the Protocol Layer Shall wait for the Policy Engine to indicate that the Hard Reset or Cable Reset has been completed. The Protocol Layer Shall transition to the PRL_HR_PE_Hard_Reset_Complete state when:  A Hard Reset complete indication is received from the Policy Engine or  A Cable Reset complete indication is received from the Policy Engine.", "page_start": 209, "page_end": 208, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 60, "tags": []}
{"section_id": "6.11.2.4.7", "title": "PRL_HR_PE_Hard_Reset_Complete", "content": "On entry to the PRL_HR_PE_Hard_Reset_Complete state the Protocol Layer Shall inform the Physical Layer that the Hard Reset or Cable Reset is complete. The Protocol Layer Shall exit from the Hard Reset and return to normal operation when:  The Physical Layer has been informed that the Hard Reset is complete so that it will re-enable the communications channel. If Hard Reset Signaling is still pending due to a non-idle channel this Shall be cleared and not sent or  The Physical Layer has been informed that the Cable Reset is complete. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 209", "page_start": 209, "page_end": 209, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 102, "tags": []}
{"section_id": "6.11.3", "title": "List of Protocol Layer States", "content": "Table 6-60 lists the states used by the various state machines. Table 6-60 Protocol Layer States State name Reference Protocol Layer Message Transmission Common Protocol Layer Message Transmission PRL_Tx_PHY_Layer_Reset Section 6.11.2.2.1.1 PRL_Tx_Wait_for_Message_Request Section 6.11.2.2.1.2 PRL_Tx_Layer_Reset_for_Transmit Section 6.11.2.2.1.3 PRL_Tx_Construct_Message Section 6.11.2.2.1.4 PRL_Tx_Wait_for_PHY_Response Section 6.11.2.2.1.5 PRL_Tx_Match_MessageID Section 6.11.2.2.1.6 PRL_Tx_Message_Sent Section 6.11.2.2.1.7 PRL_Tx_Check_RetryCounter Section 6.11.2.2.1.8 PRL_Tx_Transmission_Error Section 6.11.2.2.1.9 PRL_Tx_Discard_Message Section 6.11.2.2.1.10 Source Protocol Layer Message Transmission PRL_Tx_Src_Sink_Tx Section 6.11.2.2.2.1 PRL_Tx_Src_Source_Tx Section 6.11.2.2.2.2 PRL_Tx_Src_Pending Section 6.11.2.2.2.3 Sink Protocol Layer Message Transmission PRL_Tx_Snk_Start_of_AMS Section 6.11.2.2.3.1 PRL_Tx_Snk_Pending Section 6.11.2.2.3.2 Protocol Layer Message Reception PRL_Rx_Wait_for_PHY_Message Section 6.11.2.3.1 PRL_Rx_Layer_Reset_for_Receive Section 6.11.2.3.2 PRL_Rx_Send_GoodCRC Section 6.11.2.3.3 PRL_Rx_Check_MessageID Section 6.11.2.3.4 PRL_Rx_Store_MessageID Section 6.11.2.3.5 Hard Reset Operation PRL_HR_Reset_Layer Section 6.11.2.4.1 PRL_HR_Indicate_Hard_Reset Section 6.11.2.4.2 PRL_HR_Request_Hard_Reset Section 6.11.2.4.3 PRL_HR_Wait_for_PHY_Hard_Reset_Complete Section 6.11.2.4.4 PRL_HR_PHY_Hard_Reset_Requested Section 6.11.2.4.5 PRL_HR_Wait_for_PE_Hard_Reset_Complete Section 6.11.2.4.6 PRL_HR_PE_Hard_Reset_Complete Section 6.11.2.4.7 Chunking Chunked Rx RCH_Wait_For_Message_From_Protocol_Layer Section 6.11.2.1.2.1 Page 210 USB Power Delivery Specification Revision 3.0, Version 1.1 State name Reference RCH_Pass_Up_Message Section 6.11.2.1.2.2 RCH_Processing_Extended_Message Section 6.11.2.1.2.3 RCH_Requesting_Chunk Section 6.11.2.1.2.4 RCH_Waiting_Chunk Section 6.11.2.1.2.5 RCH_Report_Error Section 6.11.2.1.2.6 Chunked Tx TCH_Wait_For_Message_Request_From_Policy_Engine Section 6.11.2.1.3.1 TCH_Pass_Down_Message Section 6.11.2.1.3.2 TCH_Wait_For_Transmision_Complete Section 6.11.2.1.3.3 TCH_Message_Sent Section 6.11.2.1.3.4 TCH_Prepare_To_Send_Chunked_Message Section 6.11.2.1.3.5 TCH_Construct_Chunked_Message Section 6.11.2.1.3.6 TCH_Sending_Chunked_Message Section 6.11.2.1.3.7 TCH_Wait_Chunk_Request Section 6.11.2.1.3.8 TCH_Message_Received Section 6.11.2.1.3.9 TCH_Report_Error Section 6.11.2.1.3.10 Chunked Message Router RTR_Wait_for_Message_From_Protocol_Layer Section 6.11.2.1.4.1 RTR_Rx_Chunks Section 6.11.2.1.4.2 RTR_Ping Section 6.11.2.1.4.3 RTR_Tx_Chunks Section 6.11.2.1.4.4 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 211", "page_start": 210, "page_end": 211, "content_type": "text", "tables": [{"table_id": "Table 6-60 lists the states used by the various state machines.", "caption": "Table 6-60 lists the states used by the various state machines.", "page": 210, "data": []}, {"table_id": "Table 6-60 Protocol Layer States", "caption": "Table 6-60 Protocol Layer States", "page": 210, "data": []}], "figures": [], "subsections": [], "word_count": 217, "tags": ["protocol"]}
{"section_id": "6.12", "title": "Message Applicability", "content": "The following tables outline the Messages supported by a given port, depending on its capability. When a Message is supported the feature and Message sequence implied by the Message Shall also be supported. For example Sinks using power for charging that support the GotoMin Message Shall be able to reduce their current draw when requested via a GotoMin Message. The following abbreviations are used:  N – Normative; Shall be supported by this Port/Cable Plug  CN – Conditional Normative ; Shall be supported by a given Port/Cable Plug based on features  R – Recommended; Should be supported by this Port/Cable Plug  O – Optional; May be supported by this Port/Cable Plug  NS – Not Supported; Shall result in a Not_Supported Message response by this Port/Cable Plug when received.  I – Ignore; Shall be Ignored by this Port/Cable Plug when received.  NK – NAK; this Port/Cable Plug Shall return Responder NAK to this Command when received  NA – Not allowed; Shall Not be transmitted by this Port/Cable Plug.  DR – Don't Recognize; there Shall no response at all (i.e. not even a GoodCRC Message) from this Port/Cable Plug when received. For the case of Conditional Normative a note has been added to indicate the condition. “CN/” notation is used to indicate the level of support when the condition is not present. “R/” and “O/” notation is used to indicate the response when the Recommended or Optional Message is not supported. Note: that where NS/RJ/NK is indicated for Received Messages this Shall apply to the PE_CBL_Ready, PE_SNK_Ready or PE_SRC_Ready states only since unexpected Messages received during a Message sequence are Protocol Errors (see Section 6.8.1). This section covers Control and Data Message support for Sources, Sink and Cable Plugs. It also covers VDM Command support for DFPs, UFPs and Cable Plugs. Page 212 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 212, "page_end": 212, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 317, "tags": ["messages"]}
{"section_id": "6.12.1", "title": "Applicability of Control Messages", "content": "Table 6-61 details Control Messages that Shall/Should/ Shall Not be transmitted and received by a Source, Sink or Cable Plug. Requirements for Dual-Role Power Ports and Dual-Role Data Ports Shall override any requirements for Source-only or Sink-Only Ports. Table 6-61 Applicability of Control Messages Message Type Source Sink Dual-Role Dual-Role Cable Plug Power Data Transmitted Message Accept N N N DR_Swap O O N NA FR_Swap NA NA R NA Get_Country_Codes CN10/NA CN10/NA NA Get_PPS_Status NA CN9 NA Get_Sink_Cap R NA N NA Get_Source_Cap NA R N NA Get_Source_Cap_Extended NA R R NA Get_Status R R NA GoodCRC N N N GotoMin CN1/O NA NA Ping O NA NA PR_Swap NA NA N NA PS_RDY N NA N NA Reject N NA O O NA Soft_Reset N N NA VCONN_Swap R R NA Wait CN2/O NA O O NA Received Message Accept N N N N I DR_Swap O/NS O/NS N I FR_Swap NS NS CN7/NS I Get_Country_Codes CN10/NS CN10/NS I Get_PPS_Status CN9/NS NS I Get_Sink_Cap NS N N I Get_Source_Cap N NS N I Get_Source_Cap_Extended CN5/NS NS CN5/NS I Get_Status CN6/NS CN6/NS CN6/NS I GoodCRC N N N GotoMin NS R3 I Ping NS I I PR_Swap NS NS N I USB Power Delivery Specification Revision 3.0, Version 1.1 Page 213 Message Type Source Sink Dual-Role Dual-Role Cable Plug Power Data PS_RDY NS N N I Reject CN8/NS N N N I Soft_Reset N N N VCONN_Swap CN4/ NS CN4/ NS I Wait CN8/NS N N N I Note 1: Shall be supported by a Hub with multiple Downstream Ports. Should be supported by a Host with multiple Downstream Ports. Note 2: Shall be supported when transmission of GotoMin Messages is supported. Note 3: Should be supported by Sinks which use PD power for charging. Note 4: Shall be supported by any Port that can operate as a VCONN Source. Note 5: Shall be supported products that support the Source_Capabilities_Extended Message. Note 6: Shall be supported by Sources that support the Alert Message. Note 7: Shall be supported when the Fast Role Swap signal is supported. Note 8: Shall be supported when VCONN_Swap is supported. Note 9: Shall be supported when PPS is supported. Note 10: Shall be supported when required by a country authority.", "page_start": 213, "page_end": 213, "content_type": "text", "tables": [{"table_id": "Table 6-61 details Control Messages that Shall/Should/ Shall Not be transmitted and received by a Source, Sink or", "caption": "Table 6-61 details Control Messages that Shall/Should/ Shall Not be transmitted and received by a Source, Sink or", "page": 213, "data": []}, {"table_id": "Table 6-61 Applicability of Control Messages", "caption": "Table 6-61 Applicability of Control Messages", "page": 213, "data": []}], "figures": [], "subsections": [], "word_count": 376, "tags": ["messages", "control"]}
{"section_id": "6.12.2", "title": "Applicability of Data Messages", "content": "Table 6-62 details Data Messages (except for VDM Commands) that Shall/Should/ Shall Not be transmitted and received by a Source, Sink or Cable Plug. Requirements for Dual-Role Power Ports Shall override any requirements for Source-only or Sink-Only Ports. Table 6-62 Applicability of Data Messages Message Type Source Sink Dual-Role Cable Plug Power Transmitted Message Source_Capabilities N NA N NA Request NA N NA Get_Country_Info CN5/O CN5/O NA BIST N1 N1 NA Sink_Capabilities NA N N NA Battery_Status CN2 CN2 NA Alert R R NA Received Message Source_Capabilities NS N N I Request N NS I Get_Country_Info CN5/NS CN5/NS I BIST N1 N1 N1 Sink_Capabilities CN4 NS CN4 I Battery_Status CN3/NS CN3/NS I Alert R/NS R/NS I Page 214 USB Power Delivery Specification Revision 3.0, Version 1.1 Message Type Source Sink Dual-Role Cable Plug Power Note 1: For details of which BIST Modes and Messages Shall be supported see Section 5.9 and Section 6.4.3. Note 2: Shall be supported by products that contain batteries. Note 3: Shall be supported by products that support the Get_Battery_Status Message. Note 4: Shall be supported by products that support the Get_Sink_Cap Message. Note 5: Shall be supported when required by a country authority.", "page_start": 214, "page_end": 214, "content_type": "text", "tables": [{"table_id": "Table 6-62 details Data Messages (except for VDM Commands) that Shall/Should/ Shall Not be transmitted and", "caption": "Table 6-62 details Data Messages (except for VDM Commands) that Shall/Should/ Shall Not be transmitted and", "page": 214, "data": []}, {"table_id": "Table 6-62 Applicability of Data Messages", "caption": "Table 6-62 Applicability of Data Messages", "page": 214, "data": []}], "figures": [], "subsections": [], "word_count": 198, "tags": ["messages", "data"]}
{"section_id": "6.12.3", "title": "Applicability of Extended Messages", "content": "Table 6-63 details Extended Messages (except for Extended VDM Commands) that Shall/Should/ Shall Not be transmitted and received by a Source, Sink or Cable Plug. Requirements for Dual-Role Power Ports Shall override any requirements for Source-only or Sink-Only Ports. Table 6-63 Applicability of Extended Messages Message Type Source Sink Dual-Role Cable Plug Power Transmitted Message Battery_Capabilities CN1/NA CN1/NA NA Country_Codes CN10/NA CN10/NA NA Country_Info CN10/NA CN10/NA NA Firmware_Update_Request CN7/NA CN7/NA NA Firmware_Update_Response CN7/NA CN7/NA CN7/NA Get_Battery_Cap R R NA Get_Battery_Status R R NA Get_Manufacturer_Info R R NA Manufacturer_Info R R R PPS_Status CN8/NA NA NA Security_Request CN6/NA CN6/NA NA Security_Response CN6/NA CN6/NA CN6/NA Source_Capabilities_Extended R NA R NA Status R R R NA Received Message Battery_Capabilities CN4/NS CN4/NS I Country_Codes CN10/NS CN10/NS I Country_Info CN10/NS CN10/NS I Firmware_Update_Request CN7/NS CN7/NS CN7/I Firmware_Update_Response CN7/NS CN7/NS I Get_Battery_Cap CN1/NS CN1/NS I Get_Battery_Status CN1/NS CN1/NS I Get_Manufacturer_Info R/NS R/NS R Manufacturer_Info CN5/NS CN5/NS I PPS_Status NS CN9/NS I Security_Request CN6/NS CN6/NS CN6/I USB Power Delivery Specification Revision 3.0, Version 1.1 Page 215 Message Type Source Sink Dual-Role Cable Plug Power Security_Response CN6/NS CN6/NS I Source_Capabilities_Extended NS CN2/NS CN2/NS I Status CN3/NS CN3/NS I Note 1: Shall be supported by products that contain batteries. Note 2: Shall be supported by products that can transmit the Get_Source_Cap_Extended Message. Note 3: Shall be supported by products that can transmit the Get_Status Message. Note 4: Shall be supported by products that can transmit the Get_Battery_Cap Message. Note 5: Shall be supported by products that can transmit the Get_Manufacturer_Info Message Note 6: Shall be supported by products that support USB security communication as defined in [USBTypeCAuthentication 1.0] Note 7: Shall be supported by products that support USB firmware update communication as defined in [USBPDFirmwareUpdate 1.0] Note 8: Shall be supported when PPS is supported. Note 9: Shall be supported by products that can transmit the Get_PPS_Status. Note 10: Shall be supported when required by a country authority.", "page_start": 215, "page_end": 215, "content_type": "text", "tables": [{"table_id": "Table 6-63 details Extended Messages (except for Extended VDM Commands) that Shall/Should/ Shall Not be", "caption": "Table 6-63 details Extended Messages (except for Extended VDM Commands) that Shall/Should/ Shall Not be", "page": 215, "data": []}, {"table_id": "Table 6-63 Applicability of Extended Messages", "caption": "Table 6-63 Applicability of Extended Messages", "page": 215, "data": []}], "figures": [], "subsections": [], "word_count": 319, "tags": ["messages"]}
{"section_id": "6.12.4", "title": "Applicability of Structured VDM Commands", "content": "Table 6-64 details Structured VDM Commands that Shall/Should/ Shall Not be transmitted and received by a DFP, UFP or Cable Plug. If Structured VDMs are not supported, the DFP or UFP receiving a VDM Command Shall send a Not_Supported Message in response. Table 6-64 Applicability of Structured VDM Commands Command Type DFP UFP Cable Plug Transmitted Command Request Discover Identity CN1/R R2 NA Discover SVIDs CN1/O O NA Discover Modes CN1/O O NA Enter Mode CN1/NA NA NA Exit Mode CN1/NA NA NA Attention O O NA Received Command Request/Transmitted Command Response Discover Identity O/NK3 CN1/R/NK3 N Discover SVIDs O/NK3 CN1/NK3 CN1/NK Discover Modes O/NK3 CN1/NK3 CN1/NK Enter Mode NK3 CN1/NK3 CN1/NK Exit Mode NK3 CN1/NK3 CN1/NK Attention O/I3 O/I3 I Note 1: Shall be supported when Modal Operation is supported. Note 2: May be transmitted by a UFP/Source during discovery (see Section", "page_start": 216, "page_end": 215, "content_type": "text", "tables": [{"table_id": "Table 6-64 details Structured VDM Commands that Shall/Should/ Shall Not be transmitted and received by a DFP,", "caption": "Table 6-64 details Structured VDM Commands that Shall/Should/ Shall Not be transmitted and received by a DFP,", "page": 216, "data": []}, {"table_id": "Table 6-64 Applicability of Structured VDM Commands", "caption": "Table 6-64 Applicability of Structured VDM Commands", "page": 216, "data": []}], "figures": [], "subsections": [], "word_count": 143, "tags": []}
{"section_id": "6.4.4.3.1", "title": "and Section 8.3.3.22.3).", "content": "Note 3: If Structured VDMs are not supported, the DFP or UFP receiving a VDM Command Shall send a Not_Supported Message in response. Page 216 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 216, "page_end": 216, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": []}
{"section_id": "6.12.5", "title": "Applicability of Reset Signaling", "content": "Table 6-65 details Reset Signaling that Shall/Should/ Shall Not be transmitted and received by a DFP/UFP or Cable Plug. Table 6-65 Applicability of Reset Signaling Signaling Type DFP UFP Cable Plug Transmitted Message/Signaling Soft_Reset N N NA Hard Reset N N NA Cable Reset CN1 NA NA Received Message/Signaling Soft_Reset N N N Hard Reset N N N Cable Reset DR DR N Note 1: Shall be supported when transmission of SOP’ Packets are supported.", "page_start": 217, "page_end": 216, "content_type": "text", "tables": [{"table_id": "Table 6-65 details Reset Signaling that Shall/Should/ Shall Not be transmitted and received by a DFP/UFP or Cable", "caption": "Table 6-65 details Reset Signaling that Shall/Should/ Shall Not be transmitted and received by a DFP/UFP or Cable", "page": 217, "data": []}, {"table_id": "Table 6-65 Applicability of Reset Signaling", "caption": "Table 6-65 Applicability of Reset Signaling", "page": 217, "data": []}], "figures": [], "subsections": [], "word_count": 75, "tags": []}
{"section_id": "6.12.6", "title": "Applicability of Fast Role Swap signal", "content": "Table 6-65 details the Fast Role Swap signal that Shall/Should/ Shall Not be transmitted and received by a Source or Sink. Table 6-66 Applicability of Fast Role Swap signal Command Type Source Sink Dual-Role Power Transmitted Message/Signaling Fast Role Swap NA NA R Received Message/Signaling Fast Role Swap NA NA R USB Power Delivery Specification Revision 3.0, Version 1.1 Page 217", "page_start": 217, "page_end": 217, "content_type": "text", "tables": [{"table_id": "Table 6-65 details the Fast Role Swap signal that Shall/Should/ Shall Not be transmitted and received by a Source or", "caption": "Table 6-65 details the Fast Role Swap signal that Shall/Should/ Shall Not be transmitted and received by a Source or", "page": 217, "data": []}, {"table_id": "Table 6-66 Applicability of Fast Role Swap signal", "caption": "Table 6-66 Applicability of Fast Role Swap signal", "page": 217, "data": []}], "figures": [], "subsections": [], "word_count": 61, "tags": []}
{"section_id": "6.13", "title": "Value Parameters", "content": "Table 6-67 contains value parameters used in this section. Table 6-67 Value Parameters Parameter Description Value Unit Reference MaxExtendedMsgLen Maximum length of an 260 Byte Section 6.5 Extended Message as expressed in the Data Size field. MaxExtendedMsgChunkLen 26 Byte Section 6.5 MaxExtendedMsgLegacyLen 26 Byte Section 6.5 Page 218 USB Power Delivery Specification Revision 3.0, Version 1.1 7. Power Supply", "page_start": 218, "page_end": 218, "content_type": "text", "tables": [{"table_id": "Table 6-67 contains value parameters used in this section.", "caption": "Table 6-67 contains value parameters used in this section.", "page": 218, "data": []}, {"table_id": "Table 6-67 Value Parameters", "caption": "Table 6-67 Value Parameters", "page": 218, "data": []}], "figures": [], "subsections": [], "word_count": 59, "tags": []}
{"section_id": "7.1", "title": "Source Requirements", "content": "", "page_start": 219, "page_end": 218, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source"]}
{"section_id": "7.1.1", "title": "Behavioral Aspects", "content": "A USB PD Source exhibits the following behaviors:  Shall be backward compatible with legacy V ports. BUS  Shall supply the default [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2] voltage and current to V when BUS the USB cable is Attached (USB Default Operation).  Shall supply the default [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2] voltage and current to V when a BUS Contract does not exist (USB Default Operation).  Shall return vSafe0V for some time then return to vSafe5V when Hard Reset Signaling is received.  Shall control V voltage transitions as bound by undershoot, overshoot and transition time requirements. BUS", "page_start": 219, "page_end": 218, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 111, "tags": []}
{"section_id": "7.1.2", "title": "Source Bulk Capacitance", "content": "The Source bulk capacitance Shall Not be placed between the transceiver isolation impedance and the USB receptacle. The Source bulk capacitance consists of C1 and C2 as shown in Figure 7-1. The Ohmic Interconnect might consist of PCB traces for power distribution or power switching devices. The capacitance might be a single capacitor, a capacitor bank or distributed capacitance. If the power supply is shared across multiple ports, the bulk capacitance is defined as cSrcBulkShared. If the power supply is dedicated to a single Port, the minimum bulk capacitance is defined as cSrcBulk. The Source bulk capacitance is allowed to change for a newly negotiated power level. The capacitance change Shall occur before the Source is ready to operate at the new power level. During a Power Role Swap, the Default Source Shall transition to Swap Standby before operating as the new Sink. Any change in bulk capacitance required to complete the Power Role Swap Shall occur during Swap Standby. Figure 7-1 Placement of Source Bulk Capacitance Ohmic VBUS Interconnect C2 GND SHIELD USB Power Delivery Specification Revision 3.0, Version 1.1 Page 219 ... VBUS Data Lines GND SHIELD ... SOURCE CABLE Power Supply Data Lines C1 Source Bulk Capacitance", "page_start": 219, "page_end": 218, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Source bulk capacitance consists of C1 and C2 as shown in Figure 7-1. The Ohmic Interconnect might consist of", "caption": "The Source bulk capacitance consists of C1 and C2 as shown in Figure 7-1. The Ohmic Interconnect might consist of", "page": 219}, {"figure_id": "Figure 7-1 Placement of Source Bulk Capacitance", "caption": "Figure 7-1 Placement of Source Bulk Capacitance", "page": 219}], "subsections": [], "word_count": 200, "tags": ["source"]}
{"section_id": "7.1.3", "title": "Types of Sources", "content": "Consistent with the Power Data Objects discussed in Section 6.4.1, the power supply types that are available as Sources in a USB Power Delivery System are:  The Fixed Supply PDO exposes well-regulated fixed voltage power supplies. Sources Shall support at least one Fixed Supply capable of supplying vSafe5V. The output voltage of a Fixed Supply Shall remain within the range defined by the relative tolerance vSrcNew and the absolute band vSrcValid as listed in Table 7-19 and described in Section 7.1.8.  The Variable Supply (non-Battery) PDO exposes very poorly regulated Sources. The output voltage of a Variable Supply (non-Battery) Shall remain within the absolute maximum output voltage and the absolute minimum output voltage exposed in the Variable Supply PDO.  The Battery Supply PDO exposes Batteries than can be connected directly as a Source to V . The output voltage BUS of a Battery Supply Shall remain within the absolute maximum output voltage and the absolute minimum output exposed in the Battery Supply PDO.  The Programmable Power Supply (PPS) Augmented PDO (APDO) exposes a Source with an output voltage that can be adjusted programmatically over a defined range. The output voltage of the Programmable Power Supply Shall remain within a range defined by the relative tolerance vPpsNew and the absolute band vPpsValid.", "page_start": 219, "page_end": 219, "content_type": "text", "tables": [{"table_id": "defined by the relative tolerance vSrcNew and the absolute band vSrcValid as listed in Table 7-19 and described", "caption": "defined by the relative tolerance vSrcNew and the absolute band vSrcValid as listed in Table 7-19 and described", "page": 219, "data": []}], "figures": [], "subsections": [], "word_count": 215, "tags": ["source"]}
{"section_id": "7.1.4", "title": "Source Transitions", "content": "", "page_start": 220, "page_end": 219, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source"]}
{"section_id": "7.1.4.1", "title": "Fixed Supply Positive Voltage Transitions", "content": "The Source Shall transition V from the starting voltage to the higher new voltage in a controlled manner. The BUS negotiated new voltage (e.g. 5V, 9V, 15V or 20V) defines the nominal value for vSrcNew. During the positive transition the Source Shall be able to supply the Sink standby power and the transient current to charge the total bulk capacitance on V . The slew rate of the positive transition Shall Not exceed vSrcSlewPos. The transitioning Source BUS output voltage Shall settle within vSrcNew by tSrcSettle. The Source Shall be able to supply the negotiated power level at the new voltage by tSrcReady. The positive voltage transition Shall remain monotonic while the transitioning voltage is below vSrcValid min and Shall remain within the vSrcValid range upon crossing vSrcValid min as shown in Figure 7-2. The starting time, t0, in Figure 7-2 starts tSrcTransition after the last bit of the EOP of the GoodCRC Message has been received by the Source. Figure 7-2 Transition Envelope for Positive Voltage Transitions Upper bound of valid Source range vSrcValid(max) vSrcNew(max) vSrcNew(typ) vSrcNew(min) vSrcValid(min) Lower bound of valid Source range ≈ vSrcSlewPos Starting voltage ≈ vSrcValid(min) beyond min/max limits of starting voltage t0 tSrcSettle tSrcReady At the start of the positive voltage transition the V voltage level Shall Not droop vSrcValid min below either BUS vSrcNew (i.e., if the starting V voltage level is not vSafe5V) or vSafe5V as applicable. BUS", "page_start": 220, "page_end": 219, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 7-2. The starting time, t0, in Figure 7-2 starts tSrcTransition after the last bit of the EOP of the GoodCRC", "caption": "Figure 7-2. The starting time, t0, in Figure 7-2 starts tSrcTransition after the last bit of the EOP of the GoodCRC", "page": 220}, {"figure_id": "Figure 7-2 Transition Envelope for Positive Voltage Transitions", "caption": "Figure 7-2 Transition Envelope for Positive Voltage Transitions", "page": 220}], "subsections": [], "word_count": 236, "tags": ["voltage"]}
{"section_id": "7.1.4.2", "title": "Fixed Supply Negative Voltage Transitions", "content": "Negative voltage transitions are defined as shown in Figure 7-3 and are specified in a similar manner to positive voltage transitions. Figure 7-3 does not apply to vSafe0V transitions. The slew rate of the negative transition Shall Page 220 USB Power Delivery Specification Revision 3.0, Version 1.1 Not exceed vSrcSlewNeg. The negative voltage transition Shall remain monotonic while the transitioning voltage is above vSrcValid max and Shall remain within the vSrcValid range upon crossing vSrcValid max as shown in Figure 7-3. The starting time, t0, in Figure 7-3 starts tSrcTransition after the last bit of the EOP of the GoodCRC Message has been received by the Source. Figure 7-3 Transition Envelope for Negative Voltage Transitions Starting voltage vSrcSlewNeg ≈ Upper bound of valid Source range vSrcValid(max) vSrcNew(max) vSrcNew(typ) vSrcNew(min) vSrcValid(min) Lower bound of valid Source range ≈ t0 tSrcSettle tSrcReady If the newly negotiated voltage is vSafe5V, then the vSrcValid limits Shall determine the transition window and the transitioning Source Shall settle within the vSafe5V limits by tSrcSettle.", "page_start": 220, "page_end": 220, "content_type": "text", "tables": [], "figures": [{"figure_id": "Negative voltage transitions are defined as shown in Figure 7-3 and are specified in a similar manner to positive", "caption": "Negative voltage transitions are defined as shown in Figure 7-3 and are specified in a similar manner to positive", "page": 220}, {"figure_id": "voltage transitions. Figure 7-3 does not apply to vSafe0V transitions. The slew rate of the negative transition Shall", "caption": "voltage transitions. Figure 7-3 does not apply to vSafe0V transitions. The slew rate of the negative transition Shall", "page": 220}, {"figure_id": "7-3. The starting time, t0, in Figure 7-3 starts tSrcTransition after the last bit of the EOP of the GoodCRC Message has", "caption": "7-3. The starting time, t0, in Figure 7-3 starts tSrcTransition after the last bit of the EOP of the GoodCRC Message has", "page": 221}, {"figure_id": "Figure 7-3 Transition Envelope for Negative Voltage Transitions", "caption": "Figure 7-3 Transition Envelope for Negative Voltage Transitions", "page": 221}], "subsections": [], "word_count": 168, "tags": ["voltage"]}
{"section_id": "7.1.4.3", "title": "Programmable Power Supply Voltage Transitions", "content": "The Programmable Power Supply (PPS) Shall transition V over the defined voltage range in a controlled manner. BUS The Output Voltage value in the Programmable RDO defines the nominal value of the PPS output voltage after completing a voltage change and Shall settle within the limits defined by vPpsNew by tPpsSrcTransition. Any undershoot or overshoot beyond vPpsNew Shall Not exceed vPpsValid at any time. The PPS output voltage May change in a step-wise or linear manner and the slew rate of either type of change Shall Not exceed vPpsSlewPos for voltage increases or vPpsSlewNeg for voltage decreases. The nominal requested voltage of all linear voltage changes Shall equate to an integer number of LSB changes. An LSB change of the PPS output voltage is defined as vPpsStep. A PPS Shall be able to supply the negotiated current level as it change its output voltage to the requested level. All PPS voltage increases Shall result in a voltage that is greater than the previous PPS output voltage. Likewise, all PPS voltage decreases Shall result in a voltage that is less than the previous PPS output voltage. Figure 7-4 and Figure 7-5 below show the output voltage behavior of a Programmable Power Supply in response to positive and negative voltage change requests while operating with a PPS. The parameters vPpsMinVoltage and vPpsMaxVoltage define the lower and upper limits of the PPS range respectively. vPpsMinVoltage corresponds to Minimum Voltage field in the PPS APDO and vPpsMaxVoltage corresponds to Maximum Voltage field in the PPS APDO. If the Sink negotiates for a new PPS APDO, then the transition between the two PPS APDOs Shall occur as described in Section 7.3.18. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 221 Figure 7-4 PPS Positive Voltage Transitions Page 222 USB Power Delivery Specification Revision 3.0, Version 1.1 egatloVniMspPv egatloVniMspPv + 1 = )2(V ≈≈ ≈≈ vPpsMinVoltage V(1) egnaR tuptuO ylppuS rewoP elbammargorP vvvPPPpppsssSSSllleeewwwPPPooosss ≈≈ egatloVniMspPv + n+1 = )3(V ≈≈ ≈≈", "page_start": 221, "page_end": 221, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 7-4 and Figure 7-5 below show the output voltage behavior of a Programmable Power Supply in response to", "caption": "Figure 7-4 and Figure 7-5 below show the output voltage behavior of a Programmable Power Supply in response to", "page": 221}, {"figure_id": "Figure 7-4 PPS Positive Voltage Transitions", "caption": "Figure 7-4 PPS Positive Voltage Transitions", "page": 222}], "subsections": [], "word_count": 326, "tags": ["power", "voltage"]}
{"section_id": "0", "title": "Volts", "content": "egatloVxaMspPv V(4) > V(3) vPpsMaxVoltage V(4) vvvPPPpppsssSSSllleeewwwPPPooosss ≈≈ vvPPppssVVaalliidd V(3) > V(2) ≈≈≈ Nominal V(3) vvPPppssNNeeww ≈≈≈ vvPPppssVVaalliidd vvvPPPpppsssSSSllleeewwwPPPooosss ≈≈ ≈≈ vvPPppssVVaalliidd V(2) > V(1) ≈≈≈ Nominal V(2) vvPPppssNNeeww ≈≈≈ vvPPppssVVaalliidd ≈≈ ≈≈ ≈≈ ≈≈ Figure 7-5 PPS Negative Voltage Transitions USB Power Delivery Specification Revision 3.0, Version 1.1 Page 223 egatloVniMspPv + 1 = )c(V egatloVniMspPv ≈≈ ≈≈ vPpsMinVoltage V(d) egnaR tuptuO ylppuS rewoP elbammargorP ≈≈ egatloVniMspPv + n + 1 = )b(V ≈≈ ≈≈", "page_start": 222, "page_end": 222, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 7-5 PPS Negative Voltage Transitions", "caption": "Figure 7-5 PPS Negative Voltage Transitions", "page": 223}], "subsections": [], "word_count": 76, "tags": []}
{"section_id": "0", "title": "Volts", "content": "egatloVxaMspPv vPpsMaxVoltage V(a) vvPPppssSSlleewwNNeegg ≈≈ vvPPppssVVaalliidd ≈≈≈ V(b) < V(a) vvPPppssNNeeww Nominal V(b) ≈≈≈ vvPPppssVVaalliidd vvPPppssSSlleewwNNeegg ≈≈ ≈≈ vvPPppssVVaalliidd ≈≈≈ V(c) < V(b) vvPPppssNNeeww Nominal V(c) ≈≈≈ vvPPppssSSlleewwNNeegg vvPPppssVVaalliidd V(d) < V(c) ≈≈ ≈≈ ≈≈ ≈≈ The PPS output voltage ripple is expected to exceed the magnitude of one or more LSB as show in the Figure 7-6. Figure 7-6 Expected PPS Ripple Relative to an LSB time egatlov +1 LSB +1 LSB", "page_start": 223, "page_end": 222, "content_type": "text", "tables": [], "figures": [{"figure_id": "The PPS output voltage ripple is expected to exceed the magnitude of one or more LSB as show in the Figure 7-6.", "caption": "The PPS output voltage ripple is expected to exceed the magnitude of one or more LSB as show in the Figure 7-6.", "page": 223}, {"figure_id": "Figure 7-6 Expected PPS Ripple Relative to an LSB", "caption": "Figure 7-6 Expected PPS Ripple Relative to an LSB", "page": 223}], "subsections": [], "word_count": 73, "tags": []}
{"section_id": "7.1.4.4", "title": "Programmable Power Supply Current Foldback", "content": "The Programmable Power Supply Shall foldback its output current to the Operating Current value in the Programmable RDO when the Sink attempts to draw more current than the Output Current level. The programming step size for the Output Current is iPpsCfStep. All programming changes of the Operating Current Shall settle to the new Operating Current value within tPpsCfProgramSettle. The PPS Operating Current regulation accuracy during current foldback is defined as iPpsCfNew. The minimum programmable foldback level is iPpsCfMin. A Source that supports PPS Shall support foldback programmability between iPpsCfMin and the Maximum Current value in the PPS APDO. Any current overshoot or undershoot that occurs due to a load change during Current Foldback Shall Not exceed iPpsCfTransient and Shall settle to the Operating Current value within tPpsCfSettle. Voltage overshoot or undershoot caused by a transition from Current Foldback mode to Constant Voltage mode Shall Not exceed vPpsCfCvTransient and Shall settle to the Operating Voltage value within tPpsCfCvTransient. Likewise, current overshoot or undershoot caused by a transition from Constant Voltage mode to Current Foldback mode Shall Not exceed iPpsCvCfTransient and Shall settle to the Operating Current value within tPpsCvCfTransient. The PPS Shall maintain its output voltage within the Minimum Voltage and Maximum Voltage values advertised in the PPS APDO for all static and dynamic load conditions during Current Foldback operation. The PPS is not expected to deliver power if the load condition results in an output voltage that is lower than the Minimum Voltage value advertised in the PPS APDO. Rather, the Source Shall send Hard Reset Signaling and discharge V to vSafe0V then BUS resume default operation at vSafe5V. The relationship between PPS programmable output voltage and PPS programmable Current Foldback Shall be as shown in Figure 7-7. Figure 7-7 PPS Programmable Voltage and Foldback vPpsNew, vPpsValid tolerance band Programmable Voltage Only Programmable Voltage Region & Programmable Current Foldback Region Programmed PPS Operating Voltage PPS Source protects itself and stops providing power Page 224 USB Power Delivery Specification Revision 3.0, Version 1.1 egatloV tuptuO SPP tnerruC gnitarepO SPP demmargorP PPS APDO Min Voltage iPpsCfMin PPS Output Current dnab ecnarelot dilaVfCspPi ,weNfCspPi vPpsNew, vPpsValid tolerance band niMfCspPi = kcabdloF tnerruC muminiM SPP PPS APDO Max Voltage (0,0) PPS APDO Max Current petSspPv iPpsCfStep", "page_start": 223, "page_end": 223, "content_type": "text", "tables": [], "figures": [{"figure_id": "shown in Figure 7-7.", "caption": "shown in Figure 7-7.", "page": 224}, {"figure_id": "Figure 7-7 PPS Programmable Voltage and Foldback", "caption": "Figure 7-7 PPS Programmable Voltage and Foldback", "page": 224}], "subsections": [], "word_count": 372, "tags": ["power"]}
{"section_id": "7.1.5", "title": "Response to Hard Resets", "content": "Hard Reset Signaling indicates a communication failure has occurred and the Source Shall stop driving VCONN, Shall remove Rp from the VCONN pin and Shall drive V BUS to vSafe0V as shown in Figure 7-8. The USB connection May reset during a Hard Reset since the V voltage will be less than vSafe5V for an extended period of time. After establishing BUS the vSafe0V voltage condition on V BUS , the Source Shall wait tSrcRecover before re-applying VCONN and restoring V BUS to vSafe5V. A Source Shall conform to the VCONN timing as specified in [USB Type-C 1.2]. Device operation during and after a Hard Reset is defined as follows:  Self-powered devices Should Not disconnect from USB during a Hard Reset (see Section 9.1.2).  Self-powered devices operating at more than vSafe5V May Not maintain full functionality after a Hard Reset.  Bus powered devices will disconnect from USB during a Hard Reset due to the loss of their power source. When a Hard Reset occurs the Source Shall stop driving VCONN, Shall remove Rp from the VCONN pin and Shall start to transition the V voltage to vSafe0V either: BUS  tPSHardReset after the last bit of the Hard Reset Signaling has been received from the Sink or  tPSHardReset after the last bit of the Hard Reset Signaling has been sent by the Source. The Source Shall meet both tSafe5V and tSafe0V relative to the start of the voltage transition as shown in Figure 7-8. Figure 7-8 Source VBUS and VCONN Response to Hard Reset Old voltage ≈≈ vSafe5V(max), VCONN(max) vSafe0V(max) vVconnDischarge 0V t0 vSrcNeg(max) tVconnDischarge tVconnOn tSafe5V tSrcRecover tSafe0V tSrcTurnOn VCONN will meet tVconnDischarge relative to the start of the voltage transition as shown in Figure 7-8 due to the discharge circuitry in the Cable Plug. VCONN Shall meet tVconnOn relative to V BUS reaching vSafe5V. Note tVconnOn and tVconnDischarge are defined in [USB Type-C 1.2].", "page_start": 224, "page_end": 224, "content_type": "text", "tables": [], "figures": [{"figure_id": "to vSafe0V as shown in Figure 7-8. The USB connection May reset", "caption": "to vSafe0V as shown in Figure 7-8. The USB connection May reset", "page": 224}, {"figure_id": "The Source Shall meet both tSafe5V and tSafe0V relative to the start of the voltage transition as shown in Figure 7-8.", "caption": "The Source Shall meet both tSafe5V and tSafe0V relative to the start of the voltage transition as shown in Figure 7-8.", "page": 225}, {"figure_id": "Figure 7-8 Source VBUS and VCONN Response to Hard Reset", "caption": "Figure 7-8 Source VBUS and VCONN Response to Hard Reset", "page": 225}, {"figure_id": "VCONN will meet tVconnDischarge relative to the start of the voltage transition as shown in Figure 7-8 due to the", "caption": "VCONN will meet tVconnDischarge relative to the start of the voltage transition as shown in Figure 7-8 due to the", "page": 225}], "subsections": [], "word_count": 320, "tags": []}
{"section_id": "7.1.6", "title": "Changing the Output Power Capability", "content": "Some USB Power Delivery negotiations will require the Source to adjust its output power capability without changing the output voltage. In this case the Source Shall be able to supply a higher or lower load current within tSrcReady.", "page_start": 225, "page_end": 224, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": ["power"]}
{"section_id": "7.1.7", "title": "Robust Source Operation", "content": "", "page_start": 225, "page_end": 224, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source"]}
{"section_id": "7.1.7.1", "title": "Output Over Current Protection", "content": "Sources Shall implement output over current protection to prevent damage from output current that exceeds the current handling capability of the Source. The definition of current handling capability is left to the discretion of the Source implementation and Shall take into consideration the current handling capability of the connector contacts. The response to over current Shall Not interfere with the negotiated V current level. BUS Sources Should attempt to send a Hard Reset message when over current protection engages followed by an Alert Message indicating an OCP event once an Explicit Contract has been established. The over current protection response May engage at either the port or system level. Systems or ports that have engaged over current protection Should attempt to resume default operation after determining that the cause of over current is no longer present and May latch off to protect the port or system. The definition of how to detect if the cause of over current is still present is left to the discretion of the Source implementation. The Source Shall renegotiate with the Sink (or Sinks) after choosing to resume default operation. The decision of how to renegotiate after an over current event is left to the discretion of the Source implementation. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 225 The Source Shall prevent continual system or port cycling if over current protection continues to engage after initially resuming either default operation or renegotiation. Latching off the port or system is an acceptable response to recurring over current. During the over current response and subsequent system or port shutdown, all affected Source ports operating with V greater than vSafe5V Shall discharge V to vSafe5V by the time tSafe5V and vSafe0V by the time tSafe0V. BUS BUS", "page_start": 225, "page_end": 225, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 291, "tags": []}
{"section_id": "7.1.7.2", "title": "Over Temperature Protection", "content": "Sources Shall implement over temperature protection to prevent damage from temperature that exceeds the thermal capability of the Source. The definition of thermal capability and the monitoring locations used to trigger the over temperature protection are left to the discretion of the Source implementation. Sources Should attempt to send a Hard Reset message when over temperature protection engages followed by an Alert Message indicating an OTP event once an Explicit Contract has been established. The over temperature protection response May engage at either the port or system level. Systems or ports that have engaged over temperature protection Should attempt to resume default operation and May latch off to protect the port or system. The Source Shall renegotiate with the Sink (or Sinks) after choosing to resume default operation. The decision of how to renegotiate after an over temperature event is left to the discretion of the Source implementation. The Source Shall prevent continual system or port cycling if over temperature protection continues to engage after initially resuming either default operation or renegotiation. Latching off the port or system is an acceptable response to recurring over temperature. During the over temperature response and subsequent system or port shutdown, all affected Source ports operating with V greater than vSafe5V Shall discharge V to vSafe5V by the time tSafe5V and vSafe0V by the time tSafe0V. BUS BUS", "page_start": 226, "page_end": 225, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 224, "tags": []}
{"section_id": "7.1.7.3", "title": "vSafe5V Externally Applied to Ports Supplying vSafe5V", "content": "Safe operation mandates that Power Delivery Sources Shall be tolerant of vSafe5V being present on V when BUS simultaneously applying power to V . Normal USB PD communication Shall be supported when this vSafe5V to BUS vSafe5V connection exists.", "page_start": 226, "page_end": 225, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 39, "tags": []}
{"section_id": "7.1.7.4", "title": "Detach", "content": "A USB Detach is detected electrically using CC detection on the USB Type-C connector. When the Source is Detached the Source Shall transition to vSafe0V by tSafe0V relative to when the Detach event occurred. During the transition to vSafe0V the V voltage Shall be below vSafe5V max by tSafe5V relative to when the Detach event occurred and BUS Shall Not exceed vSafe5V max after this time.", "page_start": 226, "page_end": 225, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 66, "tags": []}
{"section_id": "7.1.8", "title": "Output Voltage Tolerance and Range", "content": "After a voltage transition is complete (i.e. after tSrcReady) and during static load conditions the Source output voltage Shall remain within the vSrcNew or vSafe5V limits as applicable. The ranges defined by vSrcNew and vSafe5V account for DC regulation accuracy, line regulation, load regulation and output ripple. After a voltage transition is complete (i.e. after tSrcReady) and during transient load conditions the Source output voltage Shall Not go beyond the range specified by vSrcValid. The amount of time the Source output voltage can be in the band between either vSrcNew or vSafe5V and vSrcValid Shall Not exceed tSrcTransient. Refer to Table 7-19 for the output voltage tolerance specifications. Figure 7-9 illustrates the application of vSrcNew and vSrcValid after the voltage transition is complete. The vSrcNew and vSrcValid limits Shall Not apply to V during the V discharge and switchover that occurs during BUS BUS a Fast Role Swap as described in Section 7.1.13. Page 226 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 7-9 Application of vSrcNew and vSrcValid limits after tSrcReady vSrcValid(max) vSrcNew(max) vSrcNew(typ) vSrcNew(min) tSrcTransient window vSrcValid(min) iLoadStepRate Sink Load I1 tSrcReady USB Power Delivery Specification Revision 3.0, Version 1.1 Page 227 ≈ tSrcTransient windows ≈ ≈ Sink Load I2 iLoadReleaseRate The Source output voltage Shall be measured at the connector receptacle. The stability of the Source Shall be tested in 25% load step increments from minimum load to maximum load and also from maximum load to minimum load. The transient behavior of the load current is defined in Section 7.2.6. The time between each step Shall be sufficient to allow for the output voltage to settle between load steps. In some systems it might be necessary to design the Source to compensate for the voltage drop between the output stage of the power supply electronics and the receptacle contact. The determination of whether compensation is necessary is left to the discretion of the Source implementation.", "page_start": 226, "page_end": 226, "content_type": "text", "tables": [{"table_id": "vSrcNew or vSafe5V and vSrcValid Shall Not exceed tSrcTransient. Refer to Table 7-19 for the output voltage", "caption": "vSrcNew or vSafe5V and vSrcValid Shall Not exceed tSrcTransient. Refer to Table 7-19 for the output voltage", "page": 226, "data": []}], "figures": [{"figure_id": "tolerance specifications. Figure 7-9 illustrates the application of vSrcNew and vSrcValid after the voltage transition is", "caption": "tolerance specifications. Figure 7-9 illustrates the application of vSrcNew and vSrcValid after the voltage transition is", "page": 226}, {"figure_id": "Figure 7-9 Application of vSrcNew and vSrcValid limits after tSrcReady", "caption": "Figure 7-9 Application of vSrcNew and vSrcValid limits after tSrcReady", "page": 227}], "subsections": [], "word_count": 319, "tags": ["voltage"]}
{"section_id": "7.1.8.1", "title": "Programmable Power Supply Output Voltage Tolerance and Range", "content": "After a voltage transition of a Programmable Power Supply is complete (i.e. after tPpsSrcTransition) and during static load conditions the Source output voltage Shall remain within the vPpsNew limits. The range defined by vPpsNew accounts for DC regulation accuracy, line regulation, load regulation and output ripple. After a voltage transition is complete (i.e. after tPpsSrcTransition) and during transient load conditions the Source output voltage Shall Not go beyond the range specified by vPpsValid. The amount of time the Source output voltage can be in the band between vPpsNew and vPpsValid Shall Not exceed tPpsTransient.", "page_start": 227, "page_end": 226, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 94, "tags": ["power", "voltage"]}
{"section_id": "7.1.9", "title": "Charging and Discharging the Bulk Capacitance on V", "content": "BUS The Source Shall charge and discharge the bulk capacitance on V whenever the Source voltage is negotiated to a BUS different value. The charging or discharging occurs during the voltage transition and Shall Not interfere with the Source’s ability to meet tSrcReady.", "page_start": 227, "page_end": 226, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 43, "tags": []}
{"section_id": "7.1.10", "title": "Swap Standby for Sources", "content": "Sources and Sinks of a Dual-Role Power Port Shall support Swap Standby. Swap Standby occurs for the Source after the Source power supply has discharged the bulk capacitance on V to vSafe0V as part of the Power Role Swap BUS transition. While in Swap Standby:  The Source Shall Not drive V that is therefore expected to remain at vSafe0V. BUS  Any discharge circuitry that was used to achieve vSafe0V Shall be removed from V . BUS  The Dual-Role Power Port Shall be configured as a Sink.  The USB connection Shall Not reset even though vSafe5V is no longer present on V (see Section 9.1.2). BUS The PS_RDY Message associated with the Source being in Swap Standby Shall be sent after the V drive is removed. BUS The time for the Source to transition to Swap Standby Shall Not exceed tSrcSwapStdby. Upon entering Swap Standby the Source has relinquished its role as Source and is ready to become the new Sink. The transition time from Swap Standby to being the new Sink Shall be no more than tNewSnk. The new Sink May start using power after the new Source sends the PS_RDY Message.", "page_start": 227, "page_end": 227, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 196, "tags": ["source"]}
{"section_id": "7.1.11", "title": "Source Peak Current Operation", "content": "A Source that has the Fixed Supply PDO Peak Current bits set to 01b, 10b and 11b Shall be designed to support one of the overload capabilities defined in Table 6-10. The overload conditions are bound in magnitude, duration and duty cycle as listed in Table 6-10. Sources are not required to support continuous overload operation. When overload conditions occur, the Source is allowed the range of vSrcPeak (instead of vSrcNew) relative to the nominal value (see Figure 7-10). When the overload capability is exceeded, the Source is expected take whatever action is necessary to prevent electrical or thermal damage to the Source. The Source May send a new Source_Capabilities Message with the Fixed Supply PDO Peak Current bits set to 00b to prohibit overload operation even if an overload capability was previously negotiated with the Sink. Figure 7-10 Source Peak Current Overload Operating range for supply that DOES Source Port Voltage NOT support overload capability Additional operating range for vSrcNew(max)/ Fixed Supply that supports vSrcPeak(max) overload capability Nominal Voltage vSrcNew(min) vSrcPeak(min) Sink Port Current I level % level with respect to I OC OC as requested in the Operating as advertised in the Peak Current Current field of an RDO field of Fixed Supply PDO Page 228 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 228, "page_end": 228, "content_type": "text", "tables": [{"table_id": "the overload capabilities defined in Table 6-10. The overload conditions are bound in magnitude, duration and duty", "caption": "the overload capabilities defined in Table 6-10. The overload conditions are bound in magnitude, duration and duty", "page": 228, "data": []}, {"table_id": "cycle as listed in Table 6-10. Sources are not required to support continuous overload operation. When overload", "caption": "cycle as listed in Table 6-10. Sources are not required to support continuous overload operation. When overload", "page": 228, "data": []}], "figures": [{"figure_id": "Figure 7-10). When the overload capability is exceeded, the Source is expected take whatever action is necessary to", "caption": "Figure 7-10). When the overload capability is exceeded, the Source is expected take whatever action is necessary to", "page": 228}, {"figure_id": "Figure 7-10 Source Peak Current Overload", "caption": "Figure 7-10 Source Peak Current Overload", "page": 228}], "subsections": [], "word_count": 216, "tags": ["source"]}
{"section_id": "7.1.12", "title": "Source Capabilities Extended Parameters", "content": "Implementers can choose to make available certain characteristics of a USB PD Source as a set of static and/or dynamic parameters to improve interoperability between external power sources and portable computing devices. The complete list of reportable static parameters are described in full in Section 6.5.1 and listed in Figure 6-30. The subset of parameters listed below directly represent Source capabilities and are described in the rest of this section.  Voltage Regulation.  Holdup Time.  Compliance.  Peak Current.  Source Inputs.  Batteries.", "page_start": 229, "page_end": 228, "content_type": "text", "tables": [], "figures": [{"figure_id": "The complete list of reportable static parameters are described in full in Section 6.5.1 and listed in Figure 6-30. The", "caption": "The complete list of reportable static parameters are described in full in Section 6.5.1 and listed in Figure 6-30. The", "page": 229}], "subsections": [], "word_count": 86, "tags": ["source"]}
{"section_id": "7.1.12.1", "title": "Voltage Regulation Field", "content": "The power consumption of a device can change dynamically. The ability of the Source to regulate its voltage output might be important if the device is sensitive to fluctuations in voltage. The Voltage Regulation bit field is used to convey information about the Sources output regulation and tolerance to various load steps.", "page_start": 229, "page_end": 228, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 52, "tags": ["voltage"]}
{"section_id": "7.1.12.1.1", "title": "Load Step Slew Rate", "content": "The default load step slew rate is established at 150mA/µs. A Source Shall meet the following requirements under the load step reported in the Extended Source Capabilities:  The Source Shall maintain V regulation within the vSrcValid range. BUS  The noise on the CC line Shall remain below vNoiseIdle and vNoiseActive. Test conditions require a change in both positive and negative load steps from 1Hz to 5000Hz, up to the advertised Load Step Magnitude of the full load output including from both 10 mA and 10% initial load. The Source Shall ensure that PD Communications meet the transmit and receive masks as specified in Section 5.8.2 under all load conditions.", "page_start": 229, "page_end": 228, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 111, "tags": []}
{"section_id": "7.1.12.1.2", "title": "Load Step Magnitude", "content": "The default load step magnitude rate Shall be 25% of IoC. The Source May report higher capability tolerating a load step of 90% of IoC.", "page_start": 229, "page_end": 228, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": []}
{"section_id": "7.1.12.2", "title": "Holdup Time Field", "content": "The Holdup Time field Shall return a numeric value of the number of milliseconds the output voltage stays in regulation upon a short interruption of AC mains. A mains supplied Source Shall report its holdup time in this field. The holdup time is measured with the load at rated maximum, with AC mains at 115VAC rms and 60Hz (or at 230VAC rms and 50Hz for a Source that does not support 115VAC mains). The reported time describes the minimum length of time from the last completed AC mains input cycle (zero degree phase angle) until when the output voltage decays below vSrcValid(min). Power sources are recommended to support a minimum of 3ms and are preferred to support over 10 milliseconds holdup time (equivalent to a half cycle drop from the AC Mains). USB Power Delivery Specification Revision 3.0, Version 1.1 Page 229 Figure 7-11 Holdup Time Measurement AC mains voltage ≈ V BUS vSrcValid(min) Hold Up Time", "page_start": 229, "page_end": 229, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 7-11 Holdup Time Measurement", "caption": "Figure 7-11 Holdup Time Measurement", "page": 230}], "subsections": [], "word_count": 157, "tags": []}
{"section_id": "7.1.12.3", "title": "Compliance Field", "content": "A Source claiming LPS, PS1 or PS2 compliance (see [IEC 62368-1]) Shall report its capabilities in the Compliance field. Since the Source May have several potential output voltage and current settings, every Source supply (indicated by a PDO) Shall be compliant to LPS requirements. Note: according to the requirements of [IEC 60950-1], a device tested and certified with an LPS Source is prohibited to use a non-LPS Source. Alternatively, [IEC 62368-1], classifies power sources according to their maximum, constrained power output (15watts or 100watts).", "page_start": 230, "page_end": 229, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 84, "tags": []}
{"section_id": "7.1.12.4", "title": "Peak Current", "content": "The Source reports its ability to source peak current delivery in excess of the negotiated amount in the Peak Current field. The duration of peak current Shall be followed by a current consumption below the Operating Current (IoC) in order to maintain average power delivery below the IoC current. A Source May have greater capability to source peak current than can be reported using the Peak Current field in the Fixed Supply PDO. In this case the Source Shall report its additional capability in the Peak Current field in the Source_Capabilities_Extended Message. Each overload period Shall be followed by a period of reduced current draw such that the rolling average current over the Overload Period field value with the specified Duty Cycle field value (see Section 6.5.1.8) Shall Not exceed the negotiated current. This is calculated as: Period of reduced current = (1 – value in Duty Cycle field/100) * value in Overload Period field", "page_start": 230, "page_end": 229, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 155, "tags": []}
{"section_id": "7.1.12.5", "title": "Source Inputs", "content": "The Source Inputs field identifies the possible inputs that provide power to the Source. Note some Sources are only powered by a Battery (e.g., an automobile) rather than the more common mains. Page 230 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 230, "page_end": 230, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 42, "tags": ["source"]}
{"section_id": "7.1.12.6", "title": "Batteries", "content": "The Batteries field Shall report the number of Batteries the Source supports. The Source Shall independently report the number of Hot Swappable Batteries and the number of Fixed batteries.", "page_start": 231, "page_end": 230, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": []}
{"section_id": "7.1.13", "title": "Fast Role Swap", "content": "A Fast Role Swap limits the interruption of V power to a bus powered accessory connected to a Hub DFP that has a BUS UFP attached to a power source and a DRP attached to a Host port supporting DRP as shown in Figure 7-12 V BUS Power during Fast Role Swap Figure 7-12 VBUS Power during Fast Role Swap DRP DRP DFP Bus Powered Power flow before the Accessory Fast Role Swap USB PD Capable USB PD Capable Host Hub Power flow after the UFP Power Source Fast Role Swap When the power source connected to the Hub UFP stops sourcing power and V at the Hub DRP connector BUS discharges below vSrcValid(min), if V has been negotiated to a higher voltage thanvSafe5V, or vSafe5V (min) the BUS Fast Role Swap signal Shall be sent from the Hub DRP to the Host DRP and the Hub DRP Shall sink power. In the Fast Role Swap use case, the Hub DRP behaves like a bidirectional power path. The Hub DRP Shall Not enable V BUS discharge circuitry when changing operation from initial Source to new Sink. The new Sink Shall be limited to USB Type-C Current (see [USB Type-C 1.2]) until a new Explicit Contract is negotiated. All Sink requirements Shall apply to the new Sink after the Fast Role Swap is complete. The Fast Role Swap response of the Host DRP is described in Section 7.2.10 since the Host DRP is operating as the initial Sink prior to the Fast Role Swap. After the V voltage level at the Hub DRP connector drops below vSafe5V a PS_RDY Message Shall be sent to the BUS Host DRP as shown in the Fast Role Swap transition diagram of Section 7.3.15. Figure 7-13 shows the V detection and timing for the new Source during a Fast Role Swap after the Fast Role Swap BUS signal has been received. The new Source May turn on the V output switch once V is below vSafe5V (max). In BUS BUS this case, the new Source prevents V from falling below vSafe5V (min). The new source Shall turn on the V BUS BUS output switch within tSrcFRSwap of falling below vSafe5V (min). Note: V might have started at vSafe5V or at higher voltage. When the Fast Role Swap Signal is detected, V could BUS BUS therefore be either above vSafe5V (max), within the vSafe5V range, or below vSafe5V (min). USB Power Delivery Specification Revision 3.0, Version 1.1 Page 231 Figure 7-13 VBUS detection and timing during Fast Role Swap Old Voltage V BUS New Source may turn on at any time ≈ after V falls below BUS vSafe5V(max) vSafe5V(max) vSafe5V(min) Old Source detects power loss and signals Fast Role Swap 0V tSrcFRSwap", "page_start": 231, "page_end": 231, "content_type": "text", "tables": [], "figures": [{"figure_id": "UFP attached to a power source and a DRP attached to a Host port supporting DRP as shown in Figure 7-12 V", "caption": "UFP attached to a power source and a DRP attached to a Host port supporting DRP as shown in Figure 7-12 V", "page": 231}, {"figure_id": "Figure 7-12 VBUS Power during Fast Role Swap", "caption": "Figure 7-12 VBUS Power during Fast Role Swap", "page": 231}, {"figure_id": "Figure 7-13 shows the V detection and timing for the new Source during a Fast Role Swap after the Fast Role Swap", "caption": "Figure 7-13 shows the V detection and timing for the new Source during a Fast Role Swap after the Fast Role Swap", "page": 231}, {"figure_id": "Figure 7-13 VBUS detection and timing during Fast Role Swap", "caption": "Figure 7-13 VBUS detection and timing during Fast Role Swap", "page": 232}], "subsections": [], "word_count": 456, "tags": []}
{"section_id": "7.1.14", "title": "Non-application of V Slew Rate Limits", "content": "BUS Scenarios where V slew rate limits do not apply and V May transition faster than specified are as follows: BUS BUS  When first applying V to a port operating as DFP. BUS  When discharging V to vSafe0V during a Hard Reset. BUS  When increasing V from vSafe0V to vSafe5V during a Hard Reset. BUS  During a Fast Role Swap when the V power source connected to the Hub UFP stops sourcing power. BUS Page 232 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 232, "page_end": 232, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 88, "tags": []}
{"section_id": "7.2", "title": "Sink Requirements", "content": "", "page_start": 233, "page_end": 232, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["sink"]}
{"section_id": "7.2.1", "title": "Behavioral Aspects", "content": "A USB PD Sink exhibits the following behaviors.  Shall be backward compatible with legacy V ports. BUS  Shall draw the default [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2] V current when the USB cable is BUS Attached (USB Default Operation).  Shall draw the default [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2] V current when a Contract does BUS not exist (USB Default Operation).  Shall return to the default [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2] V when responding to a Hard BUS Reset (USB Default Operation).  Shall control V in-rush current when increasing current consumption. BUS", "page_start": 233, "page_end": 232, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 110, "tags": []}
{"section_id": "7.2.2", "title": "Sink Bulk Capacitance", "content": "The Sink bulk capacitance consists of C3 and C4 as shown in Figure 7-14. The Ohmic Interconnect might consist of PCB traces for power distribution or power switching devices. The capacitance might be a single capacitor, a capacitor bank or distributed capacitance. An upper bound of cSnkBulkPd Shall Not be exceeded so that the transient charging, or discharging, of the total bulk capacitance on V can be accounted for during voltage transitions. BUS The Sink bulk capacitance that is within the cSnkBulk max or cSnkBulkPd max limits is allowed to change to support a newly negotiated power level. The capacitance can be changed when the Sink enters Sink Standby or during a voltage transition or when the Sink begins to operate at the new power level. Changing the Sink bulk capacitance Shall Not cause a transient current on V that violates the present Contract. During a Power Role Swap the Default BUS Sink Shall transition to Swap Standby before operating as the new Source. Any change in bulk capacitance required to complete the Power Role Swap Shall occur during Swap Standby. Figure 7-14 Placement of Sink Bulk Capacitance VBUS GND SHIELD USB Power Delivery Specification Revision 3.0, Version 1.1 Page 233 ... VBUS Data Lines C3 GND SHIELD ... CABLE SINK Ohmic Load Interconnect Data Lines C4 Sink Bulk Capacitance", "page_start": 233, "page_end": 232, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Sink bulk capacitance consists of C3 and C4 as shown in Figure 7-14. The Ohmic Interconnect might consist of", "caption": "The Sink bulk capacitance consists of C3 and C4 as shown in Figure 7-14. The Ohmic Interconnect might consist of", "page": 233}, {"figure_id": "Figure 7-14 Placement of Sink Bulk Capacitance", "caption": "Figure 7-14 Placement of Sink Bulk Capacitance", "page": 233}], "subsections": [], "word_count": 220, "tags": ["sink"]}
{"section_id": "7.2.3", "title": "Sink Standby", "content": "The Sink Shall transition to Sink Standby before a positive or negative voltage transition of V . During Sink Standby BUS the Sink Shall reduce its power draw to pSnkStdby. This allows the Source to manage the voltage transition as well as supply sufficient operating current to the Sink to maintain PD operation during the transition. The Sink Shall complete this transition to Sink Standby within tSnkStdby after evaluating the Accept Message from the Source. The transition when returning to Sink operation from Sink Standby Shall be completed within tSnkNewPower. The pSnkStdby requirement Shall only apply if the Sink power draw is higher than this level. See Section 7.3 for details of when pSnkStdby Shall be applied for any given transition.", "page_start": 233, "page_end": 233, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 121, "tags": ["sink"]}
{"section_id": "7.2.3.1", "title": "Programmable Power Supply Sink Standby", "content": "A Sink is not required to transition to Sink Standby when operating within the negotiated PPS APDO. A Sink May consume the Operating Current value in the Programmable RDO during PPS output voltage changes. However, prior to operating the PPS in current foldback, the Sink Shall program the PPS Operating Voltage to the lowest practical level that satisfies the Sink load requirement. Doing so will minimize the inrush current that occurs when the transition to current foldback occurs. When operating with a PPS that is in current foldback, the Sink Shall Not change its load in a manner that exceeds iPpsCfLoadStepRate or iPpsCfLoadReleaseRate. The load change magnitude Shall Not exceed iPpsCfLoadStep or iPpsCfLoadRelease. If the Sink negotiates for a new PPS APDO, then the Sink Shall transition to Sink Standby while changing between PPS APDOs as described in Section 7.3.18.", "page_start": 234, "page_end": 233, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 140, "tags": ["power", "sink"]}
{"section_id": "7.2.4", "title": "Suspend Power Consumption", "content": "When Source has set its USB Suspend Supported flag (see Section 6.4.1.2.2.2), a Sink Shall go to the lowest power state during USB suspend. The lowest power state Shall be pSnkSusp or lower for a PDUSB Peripheral and pHubSusp or lower for a PDUSB Hub. There is no requirement for the Source voltage to be changed during USB suspend.", "page_start": 234, "page_end": 233, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 59, "tags": ["power"]}
{"section_id": "7.2.5", "title": "Zero Negotiated Current", "content": "When a Sink Requests zero current as part of a power negotiation with a Source, the Sink Shall go to the lowest power state, pSnkSusp or lower, where it can still communicate using PD signaling.", "page_start": 234, "page_end": 233, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": []}
{"section_id": "7.2.6", "title": "Transient Load Behavior", "content": "When a Sink’s operating current changes due to a load step, load release or any other change in load level, the positive or negative overshoot of the new load current Shall Not exceed the range defined by iOvershoot. For the purposes of measuring iOvershoot the new load current value is defined as the average steady state value of the load current after the load step has settled. The rate of change of any shift in Sink load current during normal operation Shall Not exceed iLoadStepRate (for load steps) and iLoadReleaseRate (for load releases) as measured at the Sink receptacle. The Sink’s operating current Shall Not change faster than the value reported in the Source’s Load Step Slew Rate field and Shall ensure that PD Communications meet the transmit and receive masks as specified in Section 5.8.2.", "page_start": 234, "page_end": 233, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 136, "tags": []}
{"section_id": "7.2.7", "title": "Swap Standby for Sinks", "content": "The Sink capability in a Dual-Role Power Port Shall support Swap Standby. Swap Standby occurs for the Sink after evaluating the Accept Message from the Source during a Power Role Swap negotiation. While in Swap Standby the Sink’s current draw Shall Not exceed iSnkSwapStdby from V and the Dual-Role Power Port Shall be configured as BUS a Source after V has been discharged to vSafe0V by the existing Initial Source. The Sink’s USB connection Should BUS Not be reset even though vSafe5V is not present on the V conductor (see Section 9.1.2). The time for the Sink to BUS transition to Swap Standby Shall be no more than tSnkSwapStdby. When in Swap Standby the Sink has relinquished its role as Sink and will prepare to become the new Source. The transition time from Swap Standby to new Source Shall be no more than tNewSrc.", "page_start": 234, "page_end": 233, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 144, "tags": ["sink"]}
{"section_id": "7.2.8", "title": "Sink Peak Current Operation", "content": "Sinks Shall only make use of a Source overload capability when the corresponding Fixed Supply PDO Peak Current bits are set to 01b, 10b and 11b (see Section 6.4.1.2.2.7). Sinks Shall manage thermal aspects of the overload event by not exceeding the average negotiated output of a Fixed Supply that supports Peak Current operation. Sinks that depend on the Peak Current capability for enhanced system performance Shall also function correctly when Attached to a Source that does not offer the Peak Current capability or when the Peak Current capability has been inhibited by the Source. Page 234 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 234, "page_end": 234, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 105, "tags": ["sink"]}
{"section_id": "7.2.9", "title": "Robust Sink Operation", "content": "", "page_start": 235, "page_end": 234, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["sink"]}
{"section_id": "7.2.9.1", "title": "Sink Bulk Capacitance Discharge at Detach", "content": "When a Source is Detached from a Sink, the Sink Shall continue to draw power from its input bulk capacitance until V is discharged to vSafe5V or lower by no longer than tSafe5V from the Detach event. This safe Sink requirement BUS Shall apply to all Sinks operating with a negotiated V level greater than vSafe5V and Shall apply during all low BUS power and high power operating modes of the Sink. If the Detach is detected during a Sink low power state, such as USB Suspend, the Sink can then draw as much power as needed from its bulk capacitance since a Source is no longer Attached. In order to achieve a successful Detach detect based on V voltage level droop, the Sink power consumption Shall be high enough so that V will decay BUS BUS below vSrcValid(min) well within tSafe5V after the Source bulk capacitance is removed due to the Detach. Once adequate V droop has been achieved, a discharge circuit can be enabled to meet the safe Sink requirement. BUS To illustrate the point, the following set of Sink conditions will not meet the safe Sink requirement without additional discharge circuitry:  Negotiated V = 20V. BUS  Maximum allowable supplied V voltage = 21.5V. BUS  Maximum bulk capacitance = 30µF.  Power consumption at Detach = 12.5mW. When the Detach occurs (hence removal of the Source bulk capacitance) the 12.5mW power consumption will draw down the V voltage from the worst-case maximum level of 21.5V to 17V in approximately 205ms. At this point, BUS with V well below vSrcValid (min) an approximate 100mW discharge circuit can be enabled to increase the rate of BUS Sink bulk capacitance discharge and meet the safe Sink requirement. The power level of the discharge circuit is dependent on how much time is left to discharge the remaining voltage on the Sink bulk capacitance. If a Sink has the ability to detect the Detach in a different manner and in much less time than tSafe5V, then this different manner of detection can be used to enable a discharge circuit, allowing even lower power dissipation during low power modes such as USB Suspend. In most applications, the safe Sink requirement will limit the maximum Sink bulk capacitance well below the cSnkBulkPd limit. A Detach occurring during Sink high power operating modes must quickly discharge the Sink bulk capacitance to vSafe5V or lower as long as the Sink continues to draw adequate power until V has decayed to BUS vSafe5V or lower.", "page_start": 235, "page_end": 234, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 420, "tags": ["sink"]}
{"section_id": "7.2.9.2", "title": "Input Over Voltage Protection", "content": "Sinks Shall implement input over voltage protection to prevent damage from input voltage that exceeds the voltage handling capability of the Sink. The definition of voltage handling capability is left to the discretion of the Sink implementation. The response to over voltage Shall Not interfere with the negotiated V voltage level. BUS Sinks Should attempt to send a Hard Reset message when over voltage protection engages followed by an Alert Message indicating an OVP event once an Explicit Contract has been established. The over voltage protection response May engage at either the port or system level. Systems or ports that have engaged over voltage protection Shall resume default operation when the Source has re-established vSafe5V on V . BUS The Sink Shall be able to renegotiate with the Source after resuming default operation. The decision of how to respond to renegotiation after an over voltage event is left to the discretion of the Sink implementation. The Sink Shall prevent continual system or port cycling if over voltage protection continues to engage after initially resuming either default operation or renegotiation. Latching off the port or system is an acceptable response to recurring over voltage. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 235", "page_start": 235, "page_end": 235, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 203, "tags": ["voltage"]}
{"section_id": "7.2.9.3", "title": "Over Temperature Protection", "content": "Sinks Shall implement over temperature protection to prevent damage from temperature that exceeds the thermal capability of the Sink. The definition of thermal capability and the monitoring locations used to trigger the over temperature protection are left to the discretion of the Sink implementation. Sinks Shall attempt to send a Hard Reset message when over temperature protection engages followed by an Alert Message indicating an OTP event once an Explicit Contract has been established. The over temperature protection response May engage at either the port or system level. Systems or ports that have engaged over temperature protection Should attempt to resume default operation after sufficient cooling is achieved and May latch off to protect the port or system. The definition of sufficient cooling is left to the discretion of the Sink implementation. The Sink Shall be able to renegotiate with the Source after resuming default operation. The decision of how to respond to renegotiation after an over temperature event is left to the discretion of the Sink implementation. The Sink Shall prevent continual system or port cycling if over temperature protection continues to engage after initially resuming either default operation or renegotiation. Latching off the port or system is an acceptable response to recurring over temperature.", "page_start": 236, "page_end": 235, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 206, "tags": []}
{"section_id": "7.2.9.4", "title": "Over Current Protection", "content": "Sinks that operate with a Programmable Power Supply Shall implement their own internal current protection mechanism to protect against internal V current faults as well as erratic Source current regulation. The Sink Shall BUS never draw higher current than the Maximum Current value in the PPS APDO.", "page_start": 236, "page_end": 235, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 47, "tags": []}
{"section_id": "7.2.10", "title": "Fast Role Swap", "content": "As described in Section 7.1.13 a Fast Role Swap limits the interruption of V power to a bus powered accessory BUS connected to a Hub DFP that has a UFP attached to a power source and a DRP attached to a Host port that supports DRP. This configuration is shown in Figure 7-12 V Power during Fast Role Swap BUS When the Host DRP that supports Fast Role Swap detects the Fast Role Swap signal, the Host DRP Shall stop sinking current and Shall be ready and able to source vSafe5V if the residual V voltage level at the Host DRP connector is BUS greater than vSafe5V. When the residual V voltage level at the Host DRP connector discharges below vSafe5V(min) BUS the Host DRP as the new Source Shall supply vSafe5V to the Hub DRP within tSrcFRSwap. The Host DRP Shall Not enable V discharge circuitry when changing roles from initial Sink to new Source. BUS The new Source Shall supply vSafe5V at USB Type-C Current (see [USB Type-C 1.2]) at the value advertised in the Fast Role Swap USB Type-C Current field (see Section 6.4.1.3.1.6). All Source requirements Shall apply to the new Source after the Fast Role Swap is complete The Fast Role Swap response of the Hub DRP is described in Section", "page_start": 236, "page_end": 235, "content_type": "text", "tables": [], "figures": [{"figure_id": "DRP. This configuration is shown in Figure 7-12 V Power during Fast Role Swap", "caption": "DRP. This configuration is shown in Figure 7-12 V Power during Fast Role Swap", "page": 236}], "subsections": [], "word_count": 216, "tags": []}
{"section_id": "7.1.13", "title": "since the Hub DRP is operating as the initial Source prior to the Fast Role Swap.", "content": "After the Host DRP is providing V power to the Hub DRP, a PS_RDY Message Shall be sent to the Hub DRP as BUS defined by the Fast Role Swap signaling and messaging sequence detailed in Section 7.3.15. Page 236 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 236, "page_end": 236, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["source"]}
{"section_id": "7.3", "title": "Transitions", "content": "The following sections illustrate the power supply’s response to various types of negotiations. The negotiation cases take into consideration for the examples are as follows:  Higher Power Transitions o Increase the current o Increase the voltage o Increase the voltage and the current  Relatively Constant Power Transitions o Increase the voltage and decrease the current o Decrease the voltage and increase the current  Lower Power Transitions o Decrease the current o Decrease the voltage o Decrease the voltage and the current  Power Role Swap Transitions o Source requests a Power Role Swap o Sink requests a Power Role Swap  Go To Minimum Current Transition  Response to Hard Reset Signaling o Source issues Hard Reset Signaling o Sink issues Hard Reset Signaling  No change in Current or Voltage. The transition from [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2] operation into Power Delivery Mode can also lead to a Power Transition since this is the initial Contract negotiation. The following types of Power Transitions Shall also be applied when moving from [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2] operation into Power Delivery Mode:  High Power  Relatively Constant Power  Lower Power Transitions  No change in Current or Voltage. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 237", "page_start": 237, "page_end": 237, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 222, "tags": []}
{"section_id": "7.3.1", "title": "Increasing the Current", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed when increasing the current is shown in Figure 7-15. The sequence that Shall be followed is described in Table 7-1. The timing parameters that Shall be followed are listed in Table 7-19 and Table 7-20. Note in this figure, the Sink has previously sent a Request Message to the Source. Figure 7-15 Transition Diagram for Increasing the Current", "page_start": 238, "page_end": 237, "content_type": "text", "tables": [{"table_id": "current is shown in Figure 7-15. The sequence that Shall be followed is described in Table 7-1. The timing", "caption": "current is shown in Figure 7-15. The sequence that Shall be followed is described in Table 7-1. The timing", "page": 238, "data": []}, {"table_id": "parameters that Shall be followed are listed in Table 7-19 and Table 7-20. Note in this figure, the Sink has previously", "caption": "parameters that Shall be followed are listed in Table 7-19 and Table 7-20. Note in this figure, the Sink has previously", "page": 238, "data": []}], "figures": [{"figure_id": "current is shown in Figure 7-15. The sequence that Shall be followed is described in Table 7-1. The timing", "caption": "current is shown in Figure 7-15. The sequence that Shall be followed is described in Table 7-1. The timing", "page": 238}, {"figure_id": "Figure 7-15 Transition Diagram for Increasing the Current", "caption": "Figure 7-15 Transition Diagram for Increasing the Current", "page": 238}], "subsections": [], "word_count": 73, "tags": []}
{"section_id": "1", "title": "4", "content": "Source Port Send Send Policy Engine Accept PS_RDY", "page_start": 238, "page_end": 237, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "2", "title": "5 PSTransitionTimer (running)", "content": "Sink Port Evaluate Evaluate Policy Engine Accept PS_RDY 3 Source Port Source Device Policy Mgr ñ I Source Port Power Supply", "page_start": 238, "page_end": 237, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "6", "title": "7", "content": "Sink Port ... Sink Device Policy Mgr ñ I Sink Port Power Supply Sink ≤ IOLD t2 Sink ≤ INEW Source Port Voltage VBUS doesn’t change Sink Port Current ≤ INEW ≤ IOLD Page 238 USB Power Delivery Specification Revision 3.0, Version 1.1 ≈ tSrcTransition Port to Port Messaging Source Port Interaction Source VOLD t1 Source VOLD Sink Port Interaction Source V Voltage BUS Sink V Current BUS Table 7-1 Sequence Description for Increasing the Current Step Source Port Sink Port", "page_start": 238, "page_end": 238, "content_type": "text", "tables": [{"table_id": "Table 7-1 Sequence Description for Increasing the Current", "caption": "Table 7-1 Sequence Description for Increasing the Current", "page": 239, "data": []}], "figures": [], "subsections": [], "word_count": 81, "tags": []}
{"section_id": "1", "title": "Policy Engine sends the Accept Message to the", "content": "Policy Engine receives the Accept Message and starts Sink. the PSTransitionTimer. 2 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. The Policy Engine tells the Device Policy Engine then evaluates the Accept Message. Policy Manager to instruct the power supply to modify its output power.", "page_start": 239, "page_end": 238, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 55, "tags": ["messages", "policy"]}
{"section_id": "3", "title": "tSrcTransition after the GoodCRC Message was", "content": "received the power supply starts to change its output power capability. The power supply Shall be ready to operate at the new power level within tSrcReady (t1). The power supply informs the Device Policy Manager that it is ready to operate at the new power level. The power supply status is passed to the Policy Engine. 4 The Policy Engine sends the PS_RDY Message to The Policy Engine receives the PS_RDY Message from the the Sink. Source. 5 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. Policy Engine then evaluates the PS_RDY Message from the Source and tells the Device Policy Manager it is okay to operate at the new power level.", "page_start": 239, "page_end": 238, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 122, "tags": ["messages"]}
{"section_id": "6", "title": "The Sink May begin operating at the new power level any", "content": "time after evaluation of the PS_RDY Message. This time duration is indeterminate.", "page_start": 239, "page_end": 238, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": ["power", "sink"]}
{"section_id": "7", "title": "The Sink Shall Not violate the transient load behavior", "content": "defined in Section 7.2.6 while transitioning to and operating at the new power level. The time duration (t2) depends on the magnitude of the load change. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 239", "page_start": 239, "page_end": 239, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": ["sink"]}
{"section_id": "7.3.2", "title": "Increasing the Voltage", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed when increasing the voltage is shown in Figure 7-16. The sequence that Shall be followed is described in Table 7-2. The timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the Sink has previously sent a Request Message to the Source. Figure 7-16 Transition Diagram for Increasing the Voltage", "page_start": 240, "page_end": 239, "content_type": "text", "tables": [{"table_id": "voltage is shown in Figure 7-16. The sequence that Shall be followed is described in Table 7-2. The timing", "caption": "voltage is shown in Figure 7-16. The sequence that Shall be followed is described in Table 7-2. The timing", "page": 240, "data": []}, {"table_id": "parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the Sink has", "caption": "parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the Sink has", "page": 240, "data": []}], "figures": [{"figure_id": "voltage is shown in Figure 7-16. The sequence that Shall be followed is described in Table 7-2. The timing", "caption": "voltage is shown in Figure 7-16. The sequence that Shall be followed is described in Table 7-2. The timing", "page": 240}, {"figure_id": "Figure 7-16 Transition Diagram for Increasing the Voltage", "caption": "Figure 7-16 Transition Diagram for Increasing the Voltage", "page": 240}], "subsections": [], "word_count": 75, "tags": ["voltage"]}
{"section_id": "1", "title": "5", "content": "Source Port Send Send Policy Engine Accept PS_RDY", "page_start": 240, "page_end": 239, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "2", "title": "6", "content": "Sink Port Evaluate Evaluate Policy Engine Accept PS_RDY 4 Source Port Source Device Policy Mgr ñ V Source Port Power Supply Source VOLD t2 Source VNEW", "page_start": 240, "page_end": 239, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": []}
{"section_id": "3", "title": "7 8", "content": "Sink Port Sink to Sink ... Sink Standby Device Policy Mgr Standby to Sink Sink Port Power Supply Sink ≤ IOLD t1 Sink pSnkStdby t3 Sink ≤ IOLD Source Port Voltage VNEW VOLD Sink Port I2 Current ≤ IOLD ≤ IOLD I1 I1 I1 ≤ (pSnkStdby/VBUS) I2 ≤ (pSnkStdby/VBUS) + cSnkBulkPd(DVBUS/Dt) Page 240 USB Power Delivery Specification Revision 3.0, Version 1.1 ≈ tSrcTransition Port to Port PSTransitionTimer (running) Messaging Source Port Interaction Sink Port Interaction Source V Voltage BUS Sink V Current BUS Table 7-2 Sequence Description for Increasing the Voltage Step Source Port Sink Port 1 Policy Engine sends the Accept Message to the Policy Engine receives the Accept Message and starts the Sink. PSTransitionTimer. 2 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. The Policy Engine tells the Device Policy Engine. Policy Engine then evaluates the Accept Policy Manager to instruct the power supply to Message. modify its output power.", "page_start": 240, "page_end": 240, "content_type": "text", "tables": [{"table_id": "Table 7-2 Sequence Description for Increasing the Voltage", "caption": "Table 7-2 Sequence Description for Increasing the Voltage", "page": 241, "data": []}], "figures": [], "subsections": [], "word_count": 162, "tags": []}
{"section_id": "3", "title": "Policy Engine tells the Device Policy Manager to instruct", "content": "the power supply to reduce power consumption to pSnkStdby within tSnkStdby (t1); t1 Shall complete before tSrcTransition. The Sink Shall Not violate transient load behavior defined in Section 7.2.6 while transitioning to and operating at the new power level.", "page_start": 241, "page_end": 240, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 39, "tags": ["devices", "policy"]}
{"section_id": "4", "title": "tSrcTransition after the GoodCRC Message was", "content": "received the power supply starts to change its output power capability. The power supply Shall be ready to operate at the new power level within tSrcReady (t2). The power supply informs the Device Policy Manager that it is ready to operate at the new power level. The power supply status is passed to the Policy Engine. 5 The Policy Engine sends the PS_RDY Message to The Policy Engine receives the PS_RDY Message from the the Sink. Source. 6 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. Policy Engine then evaluates the PS_RDY Message from the Source and tells the Device Policy Manager it is okay to operate at the new power level.", "page_start": 241, "page_end": 240, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 122, "tags": ["messages"]}
{"section_id": "7", "title": "The Sink May begin operating at the new power level any", "content": "time after evaluation of the PS_RDY Message. This time duration is indeterminate.", "page_start": 241, "page_end": 240, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": ["power", "sink"]}
{"section_id": "8", "title": "The Sink Shall Not violate the transient load behavior", "content": "defined in Section 7.2.6 while transitioning to and operating at the new power level. The time duration (t3) depends on the magnitude of the load change. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 241", "page_start": 241, "page_end": 241, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": ["sink"]}
{"section_id": "7.3.3", "title": "Increasing the Voltage and Current", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed when increasing the voltage and current is shown in Figure 7-17. The sequence that Shall be followed is described in Table 7-3. The timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the Sink has previously sent a Request Message to the Source. Figure 7-17 Transition Diagram for Increasing the Voltage and Current", "page_start": 242, "page_end": 241, "content_type": "text", "tables": [{"table_id": "voltage and current is shown in Figure 7-17. The sequence that Shall be followed is described in Table 7-3. The", "caption": "voltage and current is shown in Figure 7-17. The sequence that Shall be followed is described in Table 7-3. The", "page": 242, "data": []}, {"table_id": "timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the", "caption": "timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the", "page": 242, "data": []}], "figures": [{"figure_id": "voltage and current is shown in Figure 7-17. The sequence that Shall be followed is described in Table 7-3. The", "caption": "voltage and current is shown in Figure 7-17. The sequence that Shall be followed is described in Table 7-3. The", "page": 242}, {"figure_id": "Figure 7-17 Transition Diagram for Increasing the Voltage and Current", "caption": "Figure 7-17 Transition Diagram for Increasing the Voltage and Current", "page": 242}], "subsections": [], "word_count": 79, "tags": ["voltage"]}
{"section_id": "1", "title": "5", "content": "Send Send Accept PS_RDY", "page_start": 242, "page_end": 241, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": []}
{"section_id": "2", "title": "6", "content": "Evaluate Evaluate Accept PS_RDY 4 Source ñ V ñ I Source VOLD t2 Source VNEW", "page_start": 242, "page_end": 241, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": []}
{"section_id": "3", "title": "7", "content": "Sink to Sink Sink Standby Standby to Sink Sink ≤ IOLD t1 Sink pSnkStdby t3 Sink ≤ INEW VNEW VOLD I2 ≤ INEW ≤ IOLD I1 I1 Page 242 USB Power Delivery Specification Revision 3.0, Version 1.1 ≈ tSrcTransition Source Port Policy Engine Port to Port Messaging PSTransitionTimer (running) Sink Port Policy Engine Source Port Device Policy Mgr Source Port Interaction Source Port Power Supply 8 Sink Port ... Device Policy Mgr Sink Port Interaction Sink Port Power Supply Source Port Voltage Source V Voltage BUS Sink Port Current Sink V Current BUS I1 ≤ (pSnkStdby/VBUS) I2 ≤ (pSnkStdby/VBUS) + cSnkBulkPd(DVBUS/Dt) Table 7-3 Sequence Diagram for Increasing the Voltage and Current Step Source Port Sink Port 1 Policy Engine sends the Accept Message to the Policy Engine receives the Accept Message and starts the Sink. PSTransitionTimer. 2 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. The Policy Engine tells the Device Policy Engine then evaluates the Accept Message. Policy Manager to instruct the power supply to modify its output power.", "page_start": 242, "page_end": 242, "content_type": "text", "tables": [{"table_id": "Table 7-3 Sequence Diagram for Increasing the Voltage and Current", "caption": "Table 7-3 Sequence Diagram for Increasing the Voltage and Current", "page": 243, "data": []}], "figures": [], "subsections": [], "word_count": 180, "tags": []}
{"section_id": "3", "title": "Policy Engine tells the Device Policy Manager to instruct", "content": "the power supply to reduce power consumption to pSnkStdby within tSnkStdby (t1); t1 Shall complete before tSrcTransition. The Sink Shall Not violate transient load behavior defined in Section 7.2.6 while transitioning to and operating at the new power level.", "page_start": 243, "page_end": 242, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 39, "tags": ["devices", "policy"]}
{"section_id": "4", "title": "tSrcTransition after the GoodCRC Message was", "content": "received the power supply starts to change its output power capability. The power supply Shall be ready to operate at the new power level within tSrcReady (t2). The power supply informs the Device Policy Manager that it is ready to operate at the new power level. The power supply status is passed to the Policy Engine.", "page_start": 243, "page_end": 242, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 56, "tags": ["messages"]}
{"section_id": "5", "title": "The Policy Engine sends the PS_RDY Message to", "content": "The Policy Engine receives the PS_RDY Message from the Sink. the Source. 6 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. Policy Engine then evaluates the PS_RDY Message from the Source and tells the Device Policy Manager it is okay to operate at the new power level.", "page_start": 243, "page_end": 242, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 57, "tags": ["messages", "policy"]}
{"section_id": "7", "title": "The Sink May begin operating at the new power level any", "content": "time after evaluation of the PS_RDY Message. This time duration is indeterminate.", "page_start": 243, "page_end": 242, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": ["power", "sink"]}
{"section_id": "8", "title": "The Sink Shall Not violate the transient load behavior", "content": "defined in Section 7.2.6 while transitioning to and operating at the new power level. The time duration (t3) depends on the magnitude of the load change. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 243", "page_start": 243, "page_end": 243, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": ["sink"]}
{"section_id": "7.3.4", "title": "Increasing the Voltage and Decreasing the Current", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed when increasing the voltage and decreasing the current is shown in Figure 7-18. The sequence that Shall be followed is described in Table 7-4. The timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the Sink has previously sent a Request Message to the Source. Figure 7-18 Transition Diagram for Increasing the Voltage and Decreasing the Current", "page_start": 244, "page_end": 243, "content_type": "text", "tables": [{"table_id": "voltage and decreasing the current is shown in Figure 7-18. The sequence that Shall be followed is described in Table", "caption": "voltage and decreasing the current is shown in Figure 7-18. The sequence that Shall be followed is described in Table", "page": 244, "data": []}, {"table_id": "7-4. The timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this", "caption": "7-4. The timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this", "page": 244, "data": []}], "figures": [{"figure_id": "voltage and decreasing the current is shown in Figure 7-18. The sequence that Shall be followed is described in Table", "caption": "voltage and decreasing the current is shown in Figure 7-18. The sequence that Shall be followed is described in Table", "page": 244}, {"figure_id": "Figure 7-18 Transition Diagram for Increasing the Voltage and Decreasing the Current", "caption": "Figure 7-18 Transition Diagram for Increasing the Voltage and Decreasing the Current", "page": 244}], "subsections": [], "word_count": 83, "tags": ["voltage"]}
{"section_id": "1", "title": "5", "content": "Source Port Send Send Policy Engine Accept PS_RDY", "page_start": 244, "page_end": 243, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "2", "title": "6 PSTransitionTimer (running)", "content": "Sink Port Evaluate Evaluate Policy Engine Accept PS_RDY 4 Source Port Source Device Policy Mgr ñ V òI Source Port Power Supply Source VOLD t2 Source VNEW", "page_start": 244, "page_end": 243, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": []}
{"section_id": "3", "title": "7 8", "content": "Sink Port Sink to Sink ... Sink Standby Device Policy Mgr Standby to Sink Sink Port Power Supply Sink ≤ IOLD t1 Sink pSnkStdby t3 Sink ≤ INEW Source Port Voltage VNEW VOLD Sink Port I2 Current ≤ IOLD I1 ≤ INEW I1 I1 ≤ (pSnkStdby/VBUS) I2 ≤ (pSnkStdby/VBUS) + cSnkBulkPd(DVBUS/Dt) Page 244 USB Power Delivery Specification Revision 3.0, Version 1.1 ≈ tSrcTransition Port to Port Messaging Source Port Interaction Sink Port Interaction Source V Voltage BUS Sink V Current BUS Table 7-4 Sequence Description for Increasing the Voltage and Decreasing the Current Step Source Port Sink Port 1 Policy Engine sends the Accept Message to the Policy Engine evaluates the Accept Message and starts the Sink. PSTransitionTimer. 2 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. The Policy Engine tells the Device Policy Engine then evaluates the Accept Message. Policy Manager to instruct the power supply to modify its output power.", "page_start": 244, "page_end": 244, "content_type": "text", "tables": [{"table_id": "Table 7-4 Sequence Description for Increasing the Voltage and Decreasing the Current", "caption": "Table 7-4 Sequence Description for Increasing the Voltage and Decreasing the Current", "page": 245, "data": []}], "figures": [], "subsections": [], "word_count": 162, "tags": []}
{"section_id": "3", "title": "Policy Engine tells the Device Policy Manager to instruct", "content": "the power supply to reduce power consumption to pSnkStdby within tSnkStdby (t1); t1 Shall complete before tSrcTransition. The Sink Shall Not violate transient load behavior defined in Section 7.2.6 while transitioning to and operating at the new power level.", "page_start": 245, "page_end": 244, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 39, "tags": ["devices", "policy"]}
{"section_id": "4", "title": "tSrcTransition after the GoodCRC Message was", "content": "received the power supply starts to change its output power capability. The power supply Shall be ready to operate at the new power level within tSrcReady (t2). The power supply informs the Device Policy Manager that it is ready to operate at the new power level. The power supply status is passed to the Policy Engine. 5 The Policy Engine sends the PS_RDY Message to The Policy Engine receives the PS_RDY Message from the the Sink. Source. 6 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. Policy Engine then evaluates the PS_RDY Message from the Source and tells the Device Policy Manager it is okay to operate at the new power level.", "page_start": 245, "page_end": 244, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 122, "tags": ["messages"]}
{"section_id": "7", "title": "The Sink May begin operating at the new power level any", "content": "time after evaluation of the PS_RDY Message. This time duration is indeterminate.", "page_start": 245, "page_end": 244, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": ["power", "sink"]}
{"section_id": "8", "title": "The Sink Shall Not violate the transient load behavior", "content": "defined in Section 7.2.6 while transitioning to and operating at the new power level. The time duration (t3) depends on the magnitude of the load change. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 245", "page_start": 245, "page_end": 245, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": ["sink"]}
{"section_id": "7.3.5", "title": "Decreasing the Voltage and Increasing the Current", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed when decreasing the voltage and increasing the current is shown in Figure 7-19. The sequence that Shall be followed is described in Table 7-5. The timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the Sink has previously sent a Request Message to the Source. Figure 7-19 Transition Diagram for Decreasing the Voltage and Increasing the Current", "page_start": 246, "page_end": 245, "content_type": "text", "tables": [{"table_id": "voltage and increasing the current is shown in Figure 7-19. The sequence that Shall be followed is described in Table", "caption": "voltage and increasing the current is shown in Figure 7-19. The sequence that Shall be followed is described in Table", "page": 246, "data": []}, {"table_id": "7-5. The timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this", "caption": "7-5. The timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this", "page": 246, "data": []}], "figures": [{"figure_id": "voltage and increasing the current is shown in Figure 7-19. The sequence that Shall be followed is described in Table", "caption": "voltage and increasing the current is shown in Figure 7-19. The sequence that Shall be followed is described in Table", "page": 246}, {"figure_id": "Figure 7-19 Transition Diagram for Decreasing the Voltage and Increasing the Current", "caption": "Figure 7-19 Transition Diagram for Decreasing the Voltage and Increasing the Current", "page": 246}], "subsections": [], "word_count": 83, "tags": ["voltage"]}
{"section_id": "1", "title": "5", "content": "Send Send Accept PS_RDY", "page_start": 246, "page_end": 245, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": []}
{"section_id": "2", "title": "6", "content": "Evaluate Evaluate Accept PS_RDY 4 Source ò V ñ I Source VOLD t2 Source VNEW", "page_start": 246, "page_end": 245, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": []}
{"section_id": "3", "title": "7 8", "content": "Sink to Sink ... Sink Standby Standby to Sink Sink ≤ IOLD t1 Sink pSnkStdby t3 Sink ≤ INEW VOLD VNEW ≤ INEW ≤ IOLD I1 I1 I2 Page 246 USB Power Delivery Specification Revision 3.0, Version 1.1 ≈ tSrcTransition Source Port Policy Engine Port to Port PSTransitionTimer (running) Messaging Sink Port Policy Engine Source Port Device Policy Mgr Source Port Source Port Interaction Power Supply Sink Port Device Policy Mgr Sink Port Sink Port Interaction Power Supply Source Port Voltage Source V Voltage BUS Sink Port Current Sink V Current BUS I1 ≤ (pSnkStdby/VBUS) I2 ≤ (pSnkStdby/VBUS) + cSnkBulkPd(DVBUS/Dt) Table 7-5 Sequence Description for Decreasing the Voltage and Increasing the Current Step Source Port Sink Port 1 Policy Engine sends the Accept Message to the Policy Engine receives the Accept Message and starts the Sink. PSTransitionTimer. 2 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. The Policy Engine tells the Device Policy Engine then evaluates the Accept Message. Policy Manager to instruct the power supply to modify its output power.", "page_start": 246, "page_end": 246, "content_type": "text", "tables": [{"table_id": "Table 7-5 Sequence Description for Decreasing the Voltage and Increasing the Current", "caption": "Table 7-5 Sequence Description for Decreasing the Voltage and Increasing the Current", "page": 247, "data": []}], "figures": [], "subsections": [], "word_count": 181, "tags": []}
{"section_id": "3", "title": "Policy Engine tells the Device Policy Manager to instruct", "content": "the power supply to reduce power consumption to pSnkStdby within tSnkStdby (t1); t1 Shall complete before tSrcTransition. The Sink Shall Not violate transient load behavior defined in Section 7.2.6 while transitioning to and operating at the new power level.", "page_start": 247, "page_end": 246, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 39, "tags": ["devices", "policy"]}
{"section_id": "4", "title": "tSrcTransition after the GoodCRC Message was", "content": "received the power supply starts to change its output power capability. The power supply Shall be ready to operate at the new power level within tSrcReady (t2). The power supply informs the Device Policy Manager that it is ready to operate at the new power level. The power supply status is passed to the Policy Engine. 5 The Policy Engine sends the PS_RDY Message to The Policy Engine receives the PS_RDY Message from the the Sink. Source. 6 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. Policy Engine then evaluates the PS_RDY Message from the Source and tells the Device Policy Manager it is okay to operate at the new power level.", "page_start": 247, "page_end": 246, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 122, "tags": ["messages"]}
{"section_id": "7", "title": "The Sink May begin operating at the new power level any", "content": "time after evaluation of the PS_RDY Message. This time duration is indeterminate.", "page_start": 247, "page_end": 246, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": ["power", "sink"]}
{"section_id": "8", "title": "The Sink Shall Not violate the transient load behavior", "content": "defined in Section 7.2.6 while transitioning to and operating at the new power level. The time duration (t3) depends on the magnitude of the load change. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 247", "page_start": 247, "page_end": 247, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": ["sink"]}
{"section_id": "7.3.6", "title": "Decreasing the Current", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed when decreasing the current is shown in Figure 7-20. The sequence that Shall be followed is described in Table 7-6. The timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the Sink has previously sent a Request Message to the Source. Figure 7-20 Transition Diagram for Decreasing the Current", "page_start": 248, "page_end": 247, "content_type": "text", "tables": [{"table_id": "current is shown in Figure 7-20. The sequence that Shall be followed is described in Table 7-6. The timing", "caption": "current is shown in Figure 7-20. The sequence that Shall be followed is described in Table 7-6. The timing", "page": 248, "data": []}, {"table_id": "parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the Sink has", "caption": "parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the Sink has", "page": 248, "data": []}], "figures": [{"figure_id": "current is shown in Figure 7-20. The sequence that Shall be followed is described in Table 7-6. The timing", "caption": "current is shown in Figure 7-20. The sequence that Shall be followed is described in Table 7-6. The timing", "page": 248}, {"figure_id": "Figure 7-20 Transition Diagram for Decreasing the Current", "caption": "Figure 7-20 Transition Diagram for Decreasing the Current", "page": 248}], "subsections": [], "word_count": 75, "tags": []}
{"section_id": "1", "title": "5", "content": "tSrcTransition Source Port Send Send Policy Engine Accept PS_RDY Port to Port", "page_start": 248, "page_end": 247, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "2", "title": "6", "content": "Sink Port Evaluate PSTransitionTimer (running) Evaluate Messaging Policy Engine Accept PS_RDY 4 Source Port Source Device Policy Mgr ò I Source Port S P o o u w r e c r e S P u o p r p t ly Source VOLD t2 Source VOLD Interaction 3 Sink Port Sink Device Policy Mgr ò I Sink Port Sink Port Interaction Power Supply Sink ≤ IOLD t1 Sink ≤ INEW Source Port Voltage VBUS does not change Source V Voltage BUS Sink Port Current ≤ IOLD Sink ≤ INEW V BUS Current Page 248 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 7-6 Sequence Description for Decreasing the Current Step Source Port Sink Port", "page_start": 248, "page_end": 248, "content_type": "text", "tables": [{"table_id": "Table 7-6 Sequence Description for Decreasing the Current", "caption": "Table 7-6 Sequence Description for Decreasing the Current", "page": 249, "data": []}], "figures": [], "subsections": [], "word_count": 116, "tags": []}
{"section_id": "1", "title": "Policy Engine sends the Accept Message to the Policy Engine receives the Accept Message starts", "content": "Sink. PSTransitionTimer. 2 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. The Policy Engine tells the Device Policy Engine then evaluates the Accept Message. Policy Policy Manager to instruct the power supply to Engine tells the Device Policy Manager to instruct the modify its output power. power supply to reduce power consumption.", "page_start": 249, "page_end": 248, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 62, "tags": ["messages", "policy"]}
{"section_id": "3", "title": "The Sink Shall Not violate the transient load behavior", "content": "defined in Section 7.2.6 while transitioning to and operating at the new power level. The Sink Shall be able to operate with lower current within tSnkNewPower (t1); t1 Shall complete before tSrcTransition.", "page_start": 249, "page_end": 248, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 32, "tags": ["sink"]}
{"section_id": "4", "title": "tSrcTransition after the GoodCRC Message was", "content": "received the power supply starts to change its output power capability. The power supply Shall be ready to operate at the new power level within tSrcReady (t2). The power supply informs the Device Policy Manager that it is ready to operate at the new power level. The power supply status is passed to the Policy Engine. 5 The Policy Engine sends the PS_RDY Message to The Policy Engine receives the PS_RDY Message from the the Sink. Source. 6 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. Policy Engine evaluates the PS_RDY Message from the Source. The Sink is already operating at the new power level so no further action is required. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 249", "page_start": 249, "page_end": 249, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 131, "tags": ["messages"]}
{"section_id": "7.3.7", "title": "Decreasing the Voltage", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed when decreasing the voltage is shown in Figure 7-21. The sequence that Shall be followed is described in Table 7-7. The timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the Sink has previously sent a Request Message to the Source. Figure 7-21 Transition Diagram for Decreasing the Voltage", "page_start": 250, "page_end": 249, "content_type": "text", "tables": [{"table_id": "voltage is shown in Figure 7-21. The sequence that Shall be followed is described in Table 7-7. The timing", "caption": "voltage is shown in Figure 7-21. The sequence that Shall be followed is described in Table 7-7. The timing", "page": 250, "data": []}, {"table_id": "parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the Sink has", "caption": "parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the Sink has", "page": 250, "data": []}], "figures": [{"figure_id": "voltage is shown in Figure 7-21. The sequence that Shall be followed is described in Table 7-7. The timing", "caption": "voltage is shown in Figure 7-21. The sequence that Shall be followed is described in Table 7-7. The timing", "page": 250}, {"figure_id": "Figure 7-21 Transition Diagram for Decreasing the Voltage", "caption": "Figure 7-21 Transition Diagram for Decreasing the Voltage", "page": 250}], "subsections": [], "word_count": 75, "tags": ["voltage"]}
{"section_id": "1", "title": "5", "content": "Send Send Accept PS_RDY", "page_start": 250, "page_end": 249, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": []}
{"section_id": "2", "title": "6", "content": "Evaluate Evaluate Accept PS_RDY 4 Source ò V Source VOLD t2 Source VNEW", "page_start": 250, "page_end": 249, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": []}
{"section_id": "3", "title": "7", "content": "Sink to Sink Sink Standby Standby to Sink Sink ≤ IOLD t1 Sink pSnkStdby t3 Sink ≤ IOLD VOLD ≤ IOLD ≤ IOLD I1 I1 I2 Page 250 USB Power Delivery Specification Revision 3.0, Version 1.1 ≈ tSrcTransition Source Port Policy Engine Port to Port PSTransitionTimer (running) Messaging Sink Port Policy Engine Source Port Device Policy Mgr Source Port Interaction Source Port Power Supply 8 Sink Port ... Device Policy Mgr Sink Port Interaction Sink Port Power Supply Source Port Voltage Source V Voltage VNEW BUS Sink Port Current Sink V Current BUS I1 ≤ (pSnkStdby/VBUS) I2 ≤ (pSnkStdby/VBUS) + cSnkBulkPd(DVBUS/Dt) Table 7-7 Sequence Description for Decreasing the Voltage Step Source Port Sink Port 1 Policy Engine sends the Accept Message to the Policy Engine receives the Accept Message and starts the Sink. PSTransitionTimer. 2 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. The Policy Engine tells the Device Policy Engine then evaluates the Accept Message. Policy Manager to instruct the power supply to modify its output power.", "page_start": 250, "page_end": 250, "content_type": "text", "tables": [{"table_id": "Table 7-7 Sequence Description for Decreasing the Voltage", "caption": "Table 7-7 Sequence Description for Decreasing the Voltage", "page": 251, "data": []}], "figures": [], "subsections": [], "word_count": 178, "tags": []}
{"section_id": "3", "title": "Policy Engine tells the Device Policy Manager to instruct", "content": "the power supply to reduce power consumption to pSnkStdby within tSnkStdby (t1); t1 Shall complete before tSrcTransition. The Sink Shall Not violate transient load behavior defined in Section 7.2.6 while transitioning to and operating at the new power level.", "page_start": 251, "page_end": 250, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 39, "tags": ["devices", "policy"]}
{"section_id": "4", "title": "tSrcTransition after the GoodCRC Message was", "content": "received the power supply starts to change its output power capability. The power supply Shall be ready to operate at the new power level within tSrcReady (t2). The power supply informs the Device Policy Manager that it is ready to operate at the new power level. The power supply status is passed to the Policy Engine. 5 The Policy Engine sends the PS_RDY Message to The Policy Engine receives the PS_RDY Message from the the Sink. Source. 6 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. Policy Engine then evaluates the PS_RDY Message from the Source and tells the Device Policy Manager it is okay to operate at the new power level.", "page_start": 251, "page_end": 250, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 122, "tags": ["messages"]}
{"section_id": "7", "title": "The Sink May begin operating at the new power level any", "content": "time after evaluation of the PS_RDY Message. This time duration is indeterminate.", "page_start": 251, "page_end": 250, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": ["power", "sink"]}
{"section_id": "8", "title": "The Sink Shall Not violate the transient load behavior", "content": "defined in Section 7.2.6 while transitioning to and operating at the new power level. The time duration (t3) depends on the magnitude of the load change. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 251", "page_start": 251, "page_end": 251, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": ["sink"]}
{"section_id": "7.3.8", "title": "Decreasing the Voltage and the Current", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed when decreasing the voltage and current is shown in Figure 7-22. The sequence that Shall be followed is described in Table 7-8. The timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the Sink has previously sent a Request Message to the Source. Figure 7-22 Transition Diagram for Decreasing the Voltage and the Current", "page_start": 252, "page_end": 251, "content_type": "text", "tables": [{"table_id": "voltage and current is shown in Figure 7-22. The sequence that Shall be followed is described in Table 7-8. The", "caption": "voltage and current is shown in Figure 7-22. The sequence that Shall be followed is described in Table 7-8. The", "page": 252, "data": []}, {"table_id": "timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the", "caption": "timing parameters that Shall be followed are listed in Table 7-19, Table 7-20 and Table 7-21. Note in this figure, the", "page": 252, "data": []}], "figures": [{"figure_id": "voltage and current is shown in Figure 7-22. The sequence that Shall be followed is described in Table 7-8. The", "caption": "voltage and current is shown in Figure 7-22. The sequence that Shall be followed is described in Table 7-8. The", "page": 252}, {"figure_id": "Figure 7-22 Transition Diagram for Decreasing the Voltage and the Current", "caption": "Figure 7-22 Transition Diagram for Decreasing the Voltage and the Current", "page": 252}], "subsections": [], "word_count": 80, "tags": ["voltage"]}
{"section_id": "1", "title": "5", "content": "tSrcTransition Send Send Accept PS_RDY", "page_start": 252, "page_end": 251, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": []}
{"section_id": "2", "title": "6", "content": "PSTransitionTimer (running) Evaluate Evaluate Accept PS_RDY 4 Source ò V ò I Source VOLD t2 Source VNEW", "page_start": 252, "page_end": 251, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": []}
{"section_id": "3", "title": "7", "content": "Sink to Sink ... Sink Standby Standby to Sink Sink ≤ IOLD t1 Sink pSnkStdby t3 Sink ≤ INEW VOLD VNEW ≤ IOLD ≤ INEW I1 I1 I2 Page 252 USB Power Delivery Specification Revision 3.0, Version 1.1 ≈ Source Port Policy Engine Port to Port Messaging Sink Port Policy Engine Source Port Device Policy Mgr Source Port Source Port Interaction Power Supply Sink Port Device Policy Mgr Sink Port Sink Port Interaction Power Supply Source Port Voltage Source V Voltage BUS Sink Port Current Sink V Current BUS I1 ≤ (pSnkStdby/VBUS) I2 ≤ (pSnkStdby/VBUS) + cSnkBulkPd(DVBUS/Dt) Table 7-8 Sequence Description for Decreasing the Voltage and the Current Step Source Port Sink Port 1 Policy Engine sends the Accept Message to the Policy Engine receives the Accept Message and starts the Sink. PSTransitionTimer. 2 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. The Policy Engine tells the Device Policy Engine then evaluates the Accept Message. Policy Manager to instruct the power supply to modify its output power.", "page_start": 252, "page_end": 252, "content_type": "text", "tables": [{"table_id": "Table 7-8 Sequence Description for Decreasing the Voltage and the Current", "caption": "Table 7-8 Sequence Description for Decreasing the Voltage and the Current", "page": 253, "data": []}], "figures": [], "subsections": [], "word_count": 177, "tags": []}
{"section_id": "3", "title": "Policy Engine tells the Device Policy Manager to instruct", "content": "the power supply to reduce power consumption to pSnkStdby within tSnkStdby (t1); t1 Shall complete before tSrcTransition. The Sink Shall Not violate transient load behavior defined in Section 7.2.6 while transitioning to and operating at the new power level.", "page_start": 253, "page_end": 252, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 39, "tags": ["devices", "policy"]}
{"section_id": "4", "title": "tSrcTransition after the GoodCRC Message was", "content": "received the power supply starts to change its output power capability. The power supply Shall be ready to operate at the new power level within tSrcReady (t2). The power supply informs the Device Policy Manager that it is ready to operate at the new power level. The power supply status is passed to the Policy Engine. 5 The Policy Engine sends the PS_RDY Message to The Policy Engine receives the PS_RDY Message from the the Sink. Source. 6 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. Policy Engine then evaluates the PS_RDY Message from the Source and tells the Device Policy Manager it is okay to operate at the new power level.", "page_start": 253, "page_end": 252, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 122, "tags": ["messages"]}
{"section_id": "7", "title": "The Sink May begin operating at the new power level any", "content": "time after evaluation of the PS_RDY Message. This time duration is indeterminate.", "page_start": 253, "page_end": 252, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": ["power", "sink"]}
{"section_id": "8", "title": "The Sink Shall Not violate the transient load behavior", "content": "defined in Section 7.2.6 while transitioning to and operating at the new power level. The time duration (t3) depends on the magnitude of the load change. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 253", "page_start": 253, "page_end": 253, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": ["sink"]}
{"section_id": "7.3.9", "title": "Sink Requested Power Role Swap", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed during a Sink requested Power Role Swap is shown in Figure 7-23. The sequence that Shall be followed is described in Table 7-9. The timing parameters that Shall be followed are listed in Table 7-20. Note in this figure, the Sink has previously sent a PR_Swap Message to the Source. Figure 7-23 Transition Diagram for a Sink Requested Power Role Swap", "page_start": 254, "page_end": 253, "content_type": "text", "tables": [{"table_id": "Power Role Swap is shown in Figure 7-23. The sequence that Shall be followed is described in Table 7-9. The timing", "caption": "Power Role Swap is shown in Figure 7-23. The sequence that Shall be followed is described in Table 7-9. The timing", "page": 254, "data": []}, {"table_id": "parameters that Shall be followed are listed in Table 7-20. Note in this figure, the Sink has previously sent a PR_Swap", "caption": "parameters that Shall be followed are listed in Table 7-20. Note in this figure, the Sink has previously sent a PR_Swap", "page": 254, "data": []}], "figures": [{"figure_id": "Power Role Swap is shown in Figure 7-23. The sequence that Shall be followed is described in Table 7-9. The timing", "caption": "Power Role Swap is shown in Figure 7-23. The sequence that Shall be followed is described in Table 7-9. The timing", "page": 254}, {"figure_id": "Figure 7-23 Transition Diagram for a Sink Requested Power Role Swap", "caption": "Figure 7-23 Transition Diagram for a Sink Requested Power Role Swap", "page": 254}], "subsections": [], "word_count": 76, "tags": ["power", "sink"]}
{"section_id": "1", "title": "5 9", "content": "Initial Source Port Send tSrcTransition Send PSSourceOnTimer (running) Evaluate Policy Engine Accept PS_RDY PS_RDY Port to Port Initial Sink Port Eva 2 luate PSSourceOffTimer (running) Eva 6 luate Sen 8 d Messaging Policy Engine Accept PS_RDY PS_RDY Initial Source 4 10 New Sink Initial Source Port Source to Swap Standby Device Policy Mgr Swap Standby to Sink Source Port ◄ Rp to Rd S P o o u w r e c r e S à up S p i l n y k Source VOLD t2 Swap Standby t4 Sink default current Interaction Initial Sink 3 7 New Source Initial Sink Port Sink to Swap Swap Standby Device Policy Mgr Standby to Source Sink Port Rd to Rp ► S P i o n w k e à r S S u o p u p r l c y e Sink ≤ IOLD t1 Swap Standby t3 Source vSafe5V Interaction Source Port Voltage VOLD vSafe5V Source Initial Source New Source VBUS Voltage not driven Sink Port Current IOLD pSnkSusp Sink Initial Sink I1 I2 I1 New Sink VBUS Current not driven I1 ≤ iSnkSwapStdby I 2 I2 ≤ iSnkSwapStdby + cSnkBulkPd(DVBUS/Dt) Page 254 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 7-9 Sequence Description for a Sink Requested Power Role Swap Step Initial Source Port à New Sink Port Initial Sink Port à New Source Port", "page_start": 254, "page_end": 254, "content_type": "text", "tables": [{"table_id": "Table 7-9 Sequence Description for a Sink Requested Power Role Swap", "caption": "Table 7-9 Sequence Description for a Sink Requested Power Role Swap", "page": 255, "data": []}], "figures": [], "subsections": [], "word_count": 229, "tags": []}
{"section_id": "1", "title": "Policy Engine sends the Accept Message to the Policy Engine receives the Accept and starts the", "content": "Initial Sink. PSSourceOffTimer. 2 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Initial from the Sink. The Policy Engine tells the Device Source. Policy Engine then evaluates the Accept Message. Policy Manager to instruct the power supply to modify its output power.", "page_start": 255, "page_end": 254, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "policy"]}
{"section_id": "3", "title": "Policy Engine tells the Device Policy Manager to instruct", "content": "the power supply to transition to Swap Standby within tSnkStdby (t1); t1 Shall complete before tSrcTransition. When in Sink Standby the Initial Sink Shall Not draw more than iSnkSwapStdby (I1). The Sink Shall Not violate transient load behavior defined in Section 7.2.6 while transitioning to and operating at the new power level.", "page_start": 255, "page_end": 254, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 52, "tags": ["devices", "policy"]}
{"section_id": "4", "title": "tSrcTransition after the GoodCRC Message was", "content": "received the power supply starts to change its output power capability to Swap Standby (see Section 7.1.10). The power supply Shall complete the transition to Swap Standby within tSrcSwapStdby (t2). The power supply informs the Device Policy Manager that it is ready to operate as the new Sink. The CC termination is changed from Rp to Rd (see [USB Type-C 1.2]). The power supply status is passed to the Policy Engine.", "page_start": 255, "page_end": 254, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 71, "tags": ["messages"]}
{"section_id": "5", "title": "The power supply is ready and the Policy Engine", "content": "sends the PS_RDY Message to the device that will become the new Source.", "page_start": 255, "page_end": 254, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": ["policy", "power"]}
{"section_id": "6", "title": "Protocol Layer receives the GoodCRC Message Policy Engine stops the PSSourceOffTimer.", "content": "from the device that will become the new Source. The Protocol Layer sends the GoodCRC Message to the Policy Engine starts the PSSourceOnTimer. Upon new Sink. sending the PS_RDY Message and receiving the Policy Engine tells the Device Policy to instruct the power GoodCRC Message the Initial Source is ready to be supply to operate as the new Source. the new Sink.", "page_start": 255, "page_end": 254, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 62, "tags": ["messages", "policy", "source", "protocol"]}
{"section_id": "7", "title": "The CC termination is changed from Rd to Rp (see [USB", "content": "Type-C 1.2]). The power supply as the new Source transitions from Swap Standby to sourcing default vSafe5V within tNewSrc (t3). The power supply informs the Device Policy Manager that it is operating as the new Source. 8 Policy Engine receives the PS_RDY Message from Device Policy Manager informs the Policy Engine the the Source. power supply is ready and the Policy Engine sends the PS_RDY Message to the new Sink.", "page_start": 255, "page_end": 254, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 70, "tags": []}
{"section_id": "9", "title": "Policy Engine stops the PSSourceOnTimer. Protocol Layer receives the GoodCRC Message from the", "content": "Protocol Layer sends the GoodCRC Message to the new Sink. new Source. Policy Engine evaluates the PS_RDY Message from the new Source and tells the Device Policy Manager to instruct the power supply to draw current as the new Sink. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 255 Step Initial Source Port à New Sink Port Initial Sink Port à New Source Port", "page_start": 255, "page_end": 255, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 65, "tags": ["messages", "policy", "source", "protocol"]}
{"section_id": "10", "title": "The power supply as the new Sink transitions", "content": "from Swap Standby to drawing pSnkSusp within tNewSnk (t4). The power supply informs the Device Policy Manager that it is operating as the new Sink. At this point subsequent negotiations between the new Source and the new Sink May proceed as normal. The Sink Shall Not violate the transient load behavior defined in Section 7.2.6 while transitioning to and operating at the new power level. The time duration (t4) depends on the magnitude of the load change. Page 256 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 256, "page_end": 256, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 87, "tags": ["power", "sink"]}
{"section_id": "7.3.10", "title": "Source Requested Power Role Swap", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed during a Source requested Power Role Swap is shown in Figure 7-24. The sequence that Shall be followed is described in Table 7-10. The timing parameters that Shall be followed are listed in Table 7-19. Note in this figure, the Sink has previously sent a PR_Swap Message to the Source. Figure 7-24 Transition Diagram for a Source Requested Power Role Swap", "page_start": 257, "page_end": 256, "content_type": "text", "tables": [{"table_id": "requested Power Role Swap is shown in Figure 7-24. The sequence that Shall be followed is described in Table 7-10.", "caption": "requested Power Role Swap is shown in Figure 7-24. The sequence that Shall be followed is described in Table 7-10.", "page": 257, "data": []}, {"table_id": "The timing parameters that Shall be followed are listed in Table 7-19. Note in this figure, the Sink has previously sent", "caption": "The timing parameters that Shall be followed are listed in Table 7-19. Note in this figure, the Sink has previously sent", "page": 257, "data": []}], "figures": [{"figure_id": "requested Power Role Swap is shown in Figure 7-24. The sequence that Shall be followed is described in Table 7-10.", "caption": "requested Power Role Swap is shown in Figure 7-24. The sequence that Shall be followed is described in Table 7-10.", "page": 257}, {"figure_id": "Figure 7-24 Transition Diagram for a Source Requested Power Role Swap", "caption": "Figure 7-24 Transition Diagram for a Source Requested Power Role Swap", "page": 257}], "subsections": [], "word_count": 76, "tags": ["power", "source"]}
{"section_id": "2", "title": "4 8", "content": "Initial Source Port Evaluate Send PSSourceOnTimer (running) Evaluate Policy Engine Accept PS_RDY PS_RDY tSrcTransition Port to Port Initial Sink Port Sen 1 d PSSourceOffTimer (running) Eva 5 luate Sen 7 d Messaging Policy Engine Accept PS_RDY PS_RDY Initial Source 3 9 New Sink Initial Source Port Source to Swap Standby Device Policy Mgr Swap Standby to Sink Source Port ◄ Rp to Rd Interaction S P o o u w r e c r e S à up S p i l n y k Source VOLD t2 Swap Standby t4 Sink default current Initial Sink 2a 6 New Source Initial Sink Port Sink to Swap Swap Standby Device Policy Mgr Standby to Source Sink Port Rd to Rp ► Interaction S P i o n w k e à r S S u o p u p r l c y e Sink ≤ IOLD t1 Swap Standby t3 Source vSafe5V S V o o u lta rc g e e Port VOLD vSafe5V Source Initial Source New Source VBUS Voltage not driven S C i u n r k re P n o t rt IOLD pSnkSusp Sink Initial Sink I1 I2 I1 New Sink VBUS Current not driven I1 ≤ iSnkSwapStdby I 2 I2 ≤ iSnkSwapStdby + cSnkBulkPd(DVBUS/Dt) USB Power Delivery Specification Revision 3.0, Version 1.1 Page 257 Table 7-10 Sequence Description for a Source Requested Power Role Swap Step Initial Source Portà New Sink Port Initial Sink Port à New Source Port", "page_start": 257, "page_end": 257, "content_type": "text", "tables": [{"table_id": "Table 7-10 Sequence Description for a Source Requested Power Role Swap", "caption": "Table 7-10 Sequence Description for a Source Requested Power Role Swap", "page": 258, "data": []}], "figures": [], "subsections": [], "word_count": 246, "tags": []}
{"section_id": "1", "title": "Policy Engine receives the Accept Message. Policy Engine sends the Accept Message to the Initial", "content": "Source.", "page_start": 258, "page_end": 257, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": ["messages", "policy"]}
{"section_id": "2", "title": "Protocol Layer receives the GoodCRC Message Protocol Layer receives the GoodCRC Message from the", "content": "from the Sink. The Policy Engine tells the Device Initial Source. Policy Engine starts the PSSourceOffTimer. Policy Manager to instruct the power supply to modify its output power. 2a The Policy Engine tells the Device Policy Manager to instruct the power supply to transition to Swap Standby. The power supply Shall complete the transition to Swap Standby within tSnkStdby (t1); t1 Shall complete before tSrcTransition. The Sink Shall Not violate the transient load behavior defined in Section 7.2.6 while transitioning to and operating at the new power level. Policy Engine starts PSSourceOffTimer. When in Sink Standby the Initial Sink Shall Not draw more than iSnkSwapStdby (I1).", "page_start": 258, "page_end": 257, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 106, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "tSrcTransition after the GoodCRC Message was", "content": "received the power supply starts to change its output power capability to Swap Standby (see Section 7.1.10). The power supply Shall complete the transition to Swap Standby within tSrcSwapStdby (t2). The power supply informs the Device Policy Manager that it is ready to operate as the new Sink. The CC termination is changed from Rp to Rd (see [USB Type-C 1.2]). The power supply status is passed to the Policy Engine. 4 The Policy Engine sends the PS_RDY Message to Policy Engine receives the PS_RDY Message and stops the the soon to be new Source. PSSourceOffTimer.", "page_start": 258, "page_end": 257, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 96, "tags": ["messages"]}
{"section_id": "5", "title": "Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the new", "content": "from the soon to be new Source. Policy Engine Sink. Upon evaluating the PS_RDY Message the Initial Sink starts the PSSourceOnTimer. At this point the is ready to operate as the new Source. Policy Engine tells Initial Source is ready to be the new Sink. the Device Policy to instruct the power supply to operate as the new Source.", "page_start": 258, "page_end": 257, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 59, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "The CC termination is changed from Rd to Rp (see [USB", "content": "Type-C 1.2]). The power supply as the new Source transitions from Swap Standby to sourcing default vSafe5V within tNewSrc (t3). The power supply informs the Device Policy Manager that it is operating as the new Source.", "page_start": 258, "page_end": 257, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": []}
{"section_id": "7", "title": "Policy Engine receives the PS_RDY Message and Device Policy Manager informs the Policy Engine the", "content": "stops the PSSourceOnTimer. power supply is ready and the Policy Engine sends the PS_RDY Message to the new Sink. 8 Protocol Layer sends the GoodCRC Message to the Protocol Layer receives the GoodCRC Message from the new Source. new Sink. Policy Engine evaluates the PS_RDY Message from the new Source and tells the Device Policy Manager to instruct the power supply to draw current as the new Sink. Page 258 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Initial Source Portà New Sink Port Initial Sink Port à New Source Port", "page_start": 258, "page_end": 258, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 92, "tags": ["devices", "messages", "policy"]}
{"section_id": "9", "title": "The power supply as the new Sink transitions", "content": "from Swap Standby to drawing pSnkSusp within tNewSnk (t4). The power supply informs the Device Policy Manager that it is operating as the new Sink. At this point subsequent negotiations between the new Source and the new Sink May proceed as normal. The new Sink Shall Not violate the transient load behavior defined in Section 7.2.6 while transitioning to and operating at the new power level. The time duration (t4) depends on the magnitude of the load change. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 259", "page_start": 259, "page_end": 259, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 88, "tags": ["power", "sink"]}
{"section_id": "7.3.11", "title": "GotoMin Current Decrease", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed during a GotoMin current decrease is shown in Figure 7-25. The sequence that Shall be followed is described in Table 7-11. The timing parameters that Shall be followed are listed in Table 7-19 and Table 7-11. Figure 7-25 Transition Diagram for a GotoMin Current Decrease", "page_start": 260, "page_end": 259, "content_type": "text", "tables": [{"table_id": "decrease is shown in Figure 7-25. The sequence that Shall be followed is described in Table 7-11. The timing", "caption": "decrease is shown in Figure 7-25. The sequence that Shall be followed is described in Table 7-11. The timing", "page": 260, "data": []}, {"table_id": "parameters that Shall be followed are listed in Table 7-19 and Table 7-11.", "caption": "parameters that Shall be followed are listed in Table 7-19 and Table 7-11.", "page": 260, "data": []}], "figures": [{"figure_id": "decrease is shown in Figure 7-25. The sequence that Shall be followed is described in Table 7-11. The timing", "caption": "decrease is shown in Figure 7-25. The sequence that Shall be followed is described in Table 7-11. The timing", "page": 260}, {"figure_id": "Figure 7-25 Transition Diagram for a GotoMin Current Decrease", "caption": "Figure 7-25 Transition Diagram for a GotoMin Current Decrease", "page": 260}], "subsections": [], "word_count": 60, "tags": []}
{"section_id": "1", "title": "5", "content": "tSrcTransition Source Port Send Send Policy Engine Go To Min PS_RDY Port to Port", "page_start": 260, "page_end": 259, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": []}
{"section_id": "2", "title": "PSTransitionTimer (running) 6 Messaging", "content": "Sink Port Evaluate Evaluate Policy Engine Go To Min PS_RDY 4 Source Port Source Device Policy Mgr ò I Source Port Interaction Source Port Power Supply Source VOLD t2 Source VOLD 3 Sink Port Sink Device Policy Mgr ò I Sink Port Interaction Sink Port Power Supply Sink ≤ IOLD t1 Sink previously negotiated go to min current Source Port Voltage VBUS doesn’t change Source V Voltage BUS Sink Port Current ≤ IOLD Sink V Current go to min current BUS Page 260 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 7-11 Sequence Description for a GotoMin Current Decrease Step Source Port Sink Port 1 Policy Engine sends the GotoMin Message to the Policy Engine receives the GotoMin Message and starts the Sink. PSTransitionTimer. 2 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. The Policy Engine tells the Device Policy Engine then evaluates the GotoMin Message. Policy Manager to instruct the power supply to modify its output power.", "page_start": 260, "page_end": 260, "content_type": "text", "tables": [{"table_id": "Table 7-11 Sequence Description for a GotoMin Current Decrease", "caption": "Table 7-11 Sequence Description for a GotoMin Current Decrease", "page": 261, "data": []}], "figures": [], "subsections": [], "word_count": 169, "tags": []}
{"section_id": "3", "title": "Policy Engine tells the Device Policy Manager to instruct", "content": "the power supply to reduce power consumption, within tSnkNewPower (t1), to the pre-negotiated go to reduced power level); t1 Shall complete before tSrcTransition. The Sink Shall Not violate the transient load behavior defined in Section 7.2.6 while transitioning to and operating at the new power level.", "page_start": 261, "page_end": 260, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 46, "tags": ["devices", "policy"]}
{"section_id": "4", "title": "tSrcTransition after the GoodCRC Message was", "content": "received the power supply starts to change its output power capability. The power supply Shall be ready to operate at the new power level within tSrcReady (t2). The power supply informs the Device Policy Manager that it is ready to operate at the new power level. The power supply status is passed to the Policy Engine.", "page_start": 261, "page_end": 260, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 56, "tags": ["messages"]}
{"section_id": "5", "title": "The Policy Engine sends the PS_RDY Message to The Policy Engine receives the PS_RDY Message.", "content": "the Sink. 6 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. Policy Engine evaluates the PS_RDY Message from the Source and no further action is required. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 261", "page_start": 261, "page_end": 261, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 46, "tags": ["messages", "policy"]}
{"section_id": "7.3.12", "title": "Source Initiated Hard Reset", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed during a Source Initiated Hard Reset is shown in Figure 7-26. The sequence that Shall be followed is described in Table 7-12. The timing parameters that Shall be applied are listed in Table 7-19 and Table 7-20. Figure 7-26 Transition Diagram for a Source Initiated Hard Reset 1 Source Port Send tPSHardReset Policy Engine Hard Reset Port to Port", "page_start": 262, "page_end": 261, "content_type": "text", "tables": [{"table_id": "Hard Reset is shown in Figure 7-26. The sequence that Shall be followed is described in Table 7-12. The timing", "caption": "Hard Reset is shown in Figure 7-26. The sequence that Shall be followed is described in Table 7-12. The timing", "page": 262, "data": []}, {"table_id": "parameters that Shall be applied are listed in Table 7-19 and Table 7-20.", "caption": "parameters that Shall be applied are listed in Table 7-19 and Table 7-20.", "page": 262, "data": []}], "figures": [{"figure_id": "Hard Reset is shown in Figure 7-26. The sequence that Shall be followed is described in Table 7-12. The timing", "caption": "Hard Reset is shown in Figure 7-26. The sequence that Shall be followed is described in Table 7-12. The timing", "page": 262}, {"figure_id": "Figure 7-26 Transition Diagram for a Source Initiated Hard Reset", "caption": "Figure 7-26 Transition Diagram for a Source Initiated Hard Reset", "page": 262}], "subsections": [], "word_count": 74, "tags": ["source"]}
{"section_id": "2", "title": "Messaging", "content": "Sink Port Process Policy Engine Hard Reset", "page_start": 262, "page_end": 261, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": []}
{"section_id": "4", "title": "5", "content": "Source Port Source Source Device Policy Mgr Hard Reset Recover Source Port Interaction Source Port Power Supply Source VOLD t2 Source vSafe0V t4 Source vSafe5V 3 Sink Port Sink Device Policy Mgr Prepare Sink Port Interaction Sink Port Power Supply Sink ≤ IOLD t1 Ready to recover and power up Source Port tSrcRecover Voltage VOLD vSafe5V Source ≈ V Voltage BUS vSafe0V Sink Port Current ≤ IOLD Default current draw Sink ≈ V Current BUS iSafe0mA Page 262 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 7-12 Sequence Description for a Source Initiated Hard Reset Step Source Port Sink Port", "page_start": 262, "page_end": 262, "content_type": "text", "tables": [{"table_id": "Table 7-12 Sequence Description for a Source Initiated Hard Reset", "caption": "Table 7-12 Sequence Description for a Source Initiated Hard Reset", "page": 263, "data": []}], "figures": [], "subsections": [], "word_count": 101, "tags": []}
{"section_id": "1", "title": "Policy Engine sends Hard Reset Signaling to the Sink receives Hard Reset Signaling.", "content": "Sink.", "page_start": 263, "page_end": 262, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": ["policy", "sink"]}
{"section_id": "2", "title": "Policy Engine is informed of the Hard Reset. Policy Engine", "content": "tells the Device Policy Manager to instruct the power supply to prepare for a Hard Reset.", "page_start": 263, "page_end": 262, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 16, "tags": ["policy"]}
{"section_id": "3", "title": "The Sink prepares for the Hard Reset within", "content": "tSnkHardResetPrepare (t1) ) and passes an indication to the Device Policy Manger The Sink Shall Not draw more than iSafe0mA when VBUS is driven to vSafe0V.", "page_start": 263, "page_end": 262, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": ["sink"]}
{"section_id": "4", "title": "Policy Engine waits tPSHardReset after sending", "content": "Hard Reset Signaling and then tells the Device Policy Manager to instruct the power supply to perform a Hard Reset. The transition to vSafe0V Shall occur within tSafe0V (t2). 5 After tSrcRecover the Source applies power to The Sink Shall Not violate the transient load behavior VBUS in an attempt to re-establish communication defined in Section 7.2.6 while transitioning to and with the Sink and resume USB Default Operation. operating at the new power level. The transition to vSafe5V Shall occur within tSrcTurnOn (t4). USB Power Delivery Specification Revision 3.0, Version 1.1 Page 263", "page_start": 263, "page_end": 263, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 94, "tags": ["policy"]}
{"section_id": "7.3.13", "title": "Sink Initiated Hard Reset", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed during a Sink Initiated Hard Reset is shown in Figure 7-27. The sequence that Shall be followed is described in Table 7-13. The timing parameters that Shall be followed are listed in Table 7-19 and Table 7-20. Figure 7-27 Transition Diagram for a Sink Initiated Hard Reset 4 Source Port Evaluate Policy Engine Hard Reset Port to Port Sink Port Se 1 nd tPSHardReset Messaging Policy Engine Hard Reset", "page_start": 264, "page_end": 263, "content_type": "text", "tables": [{"table_id": "Hard Reset is shown in Figure 7-27. The sequence that Shall be followed is described in Table 7-13. The timing", "caption": "Hard Reset is shown in Figure 7-27. The sequence that Shall be followed is described in Table 7-13. The timing", "page": 264, "data": []}, {"table_id": "parameters that Shall be followed are listed in Table 7-19 and Table 7-20.", "caption": "parameters that Shall be followed are listed in Table 7-19 and Table 7-20.", "page": 264, "data": []}], "figures": [{"figure_id": "Hard Reset is shown in Figure 7-27. The sequence that Shall be followed is described in Table 7-13. The timing", "caption": "Hard Reset is shown in Figure 7-27. The sequence that Shall be followed is described in Table 7-13. The timing", "page": 264}, {"figure_id": "Figure 7-27 Transition Diagram for a Sink Initiated Hard Reset", "caption": "Figure 7-27 Transition Diagram for a Sink Initiated Hard Reset", "page": 264}], "subsections": [], "word_count": 84, "tags": ["sink"]}
{"section_id": "2", "title": "5 6", "content": "S D o e u vi r c c e e P P o o l r ic t y Mgr Ha P r r d o c R e e s s s et Ha S rd o u R rc e e set R S e o c u o r v c e e r Source Port Interaction Source Port Power Supply Source VOLD t2 Source vSafe0V t4 Source vSafe5V 3 Sink Port Sink Device Policy Mgr Prepare Sink Port Interaction Sink Port Power Supply Sink ≤ IOLD t1 Ready to recover and power up Source Port tSrcRecover Voltage VOLD vSafe5V Source ≈ V Voltage BUS vSafe0V Sink Port Defalt current Current ≤ IOLD draw Sink ≈ V Current BUS iSafe0mA Page 264 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 7-13 Sequence Description for a Sink Initiated Hard Reset Step Source Port Sink Port", "page_start": 264, "page_end": 264, "content_type": "text", "tables": [{"table_id": "Table 7-13 Sequence Description for a Sink Initiated Hard Reset", "caption": "Table 7-13 Sequence Description for a Sink Initiated Hard Reset", "page": 265, "data": []}], "figures": [], "subsections": [], "word_count": 149, "tags": []}
{"section_id": "1", "title": "Policy Engine sends Hard Reset Signaling to the Source.", "content": "", "page_start": 265, "page_end": 264, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy", "source"]}
{"section_id": "2", "title": "Policy Engine tells the Device Policy Manager to instruct", "content": "the power supply to prepare for a Hard Reset.", "page_start": 265, "page_end": 264, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["devices", "policy"]}
{"section_id": "3", "title": "The Sink prepares for the Hard Reset within", "content": "tSnkHardResetPrepare (t1) and passes an indication to the Device Policy Manger. The Sink Shall Not draw more than iSafe0mA when VBUS is driven to vSafe0V.", "page_start": 265, "page_end": 264, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": ["sink"]}
{"section_id": "4", "title": "Policy Engine is informed of the Hard Reset.", "content": "", "page_start": 265, "page_end": 264, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "5", "title": "Policy Engine waits tPSHardReset after receiving", "content": "Hard Reset Signaling and then tells the Device Policy Manager to instruct the power supply to perform a Hard Reset. The transition to vSafe0V Shall occur within tSafe0V (t2). 6 After tSrcRecover the Source applies power to The Sink Shall Not violate the transient load behavior VBUS in an attempt to re-establish communication defined in Section 7.2.6 while transitioning to and with the Sink and resume USB Default Operation. operating at the new power level. The transition to vSafe5V Shall occur within tSrcTurnOn (t4). USB Power Delivery Specification Revision 3.0, Version 1.1 Page 265", "page_start": 265, "page_end": 265, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 94, "tags": ["policy"]}
{"section_id": "7.3.14", "title": "No change in Current or Voltage", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed when the Sink requests the same Voltage and Current as it is currently operating at is shown in Figure 7-28. The sequence that Shall be followed is described in Table 7-14. The timing parameters that Shall be followed are listed in Table 7-19 and Table 7-20. Figure 7-28 Transition Diagram for no change in Current or Voltage", "page_start": 266, "page_end": 265, "content_type": "text", "tables": [{"table_id": "followed is described in Table 7-14. The timing parameters that Shall be followed are listed in Table 7-19 and Table", "caption": "followed is described in Table 7-14. The timing parameters that Shall be followed are listed in Table 7-19 and Table", "page": 266, "data": []}], "figures": [{"figure_id": "the same Voltage and Current as it is currently operating at is shown in Figure 7-28. The sequence that Shall be", "caption": "the same Voltage and Current as it is currently operating at is shown in Figure 7-28. The sequence that Shall be", "page": 266}, {"figure_id": "Figure 7-28 Transition Diagram for no change in Current or Voltage", "caption": "Figure 7-28 Transition Diagram for no change in Current or Voltage", "page": 266}], "subsections": [], "word_count": 72, "tags": ["voltage"]}
{"section_id": "1", "title": "3", "content": "tSrcTransition Source Port Send Send Policy Engine Accept PS_RDY Port to Port", "page_start": 266, "page_end": 265, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "2", "title": "PSTransitionTimer (running) 4 Messaging", "content": "Sink Port Evaluate Evaluate Policy Engine Accept PS_RDY Source Port Device Policy Mgr Source Port Interaction Source Port Power Supply Source VOLD Sink Port Device Policy Mgr Sink Port Interaction Sink Port Power Supply Sink ≤ IOLD Source Port Voltage VBUS doesn’t change Source V Voltage BUS Sink Port Current Sink Current doesn’t change V Current BUS Page 266 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 7-14 Sequence Description for no change in Current or Voltage Step Source Port Sink Port", "page_start": 266, "page_end": 266, "content_type": "text", "tables": [{"table_id": "Table 7-14 Sequence Description for no change in Current or Voltage", "caption": "Table 7-14 Sequence Description for no change in Current or Voltage", "page": 267, "data": []}], "figures": [], "subsections": [], "word_count": 83, "tags": []}
{"section_id": "1", "title": "Policy Engine sends the Accept Message to the", "content": "Policy Engine receives the Accept Message and starts Sink. the PSTransitionTimer. 2 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. Policy Engine then evaluates the Accept Message.", "page_start": 267, "page_end": 266, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["messages", "policy"]}
{"section_id": "3", "title": "The Policy Engine waits tSrcTransition then Policy Engine receives the PS_RDY Message.", "content": "sends the PS_RDY Message to the Sink. 4 Policy Engine receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the Source. from the Sink. Policy Engine evaluates the PS_RDY Message. Note: the decision that no power transition is required could be made either by the Device Policy Manager or the power supply depending on implementation. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 267", "page_start": 267, "page_end": 267, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 67, "tags": ["messages", "policy"]}
{"section_id": "7.3.15", "title": "Fast Role Swap", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed during a Fast Role Swap is shown in Figure 7-29. The sequence that Shall be followed is described in Table 7-15. The timing parameters that Shall be followed are listed in Table 7-19 and Table 7-20. Negotiations between the new Source and the new Sink May occur after the new Source sends the final PS_RDY Message. Note: in Figure 7-29 and Table 7-15 numbers are used to indicate Message related steps and letters are used to indicate other events. Figure 7-29 Transition Diagram for Fast Role Swap B 2 3 5 8 Signal Evaluate Send Send Evaluate Source Port Fast Swap FR_Swap Accept PS_RDY PS_RDY Policy Engine PPoorrtt ttoo PPoorrtt C 1 4 6 7 SSiiggnnaalliinngg && Sink Port Detect tFRSwapInit Send Evaluate Evaluate Send MMeessssaaggiinngg Policy Engine Fast Swap FR_Swap Accept PS_RDY PS_RDY A D1 F Source Port Source VBUS < Rp Changed Device Policy Mgr Stops vSafe5V to Rd SSoouurrccee PPoorrtt IInntteerraaccttiioonn Source Port Power Path Source Sink D2 E G Sink Port VBUS < < tSrcFRSwap Source Rd Changed Device Policy Mgr vSafe5V VBUS to Rp SSiinnkk PPoorrtt IInntteerraaccttiioonn Sink Port Sink Ready & Able to Source vSafe5V Source vSafe5V Power Path Source Port Voltage Old Source discharging to vSafe0V New Source = vSafe5V SSoouurrccee VV VVoollttaaggee BBUUSS Sink Port Current Old Sink Represents the increase in current as VBUS voltage discharges New Sink VV BBUUSS SS CC iinn uu kk rr rreenntt Table 7-15 Sequence Description for Fast Role Swap Step Initial Source Portà New Sink Port Initial Sink Port à New Source Port A The Source connected to the Hub UFP (see Figure 7-12) stops sourcing VBUS. B Policy Engine signals the Fast Role Swap to the initial Sink on the CC wire. C Policy Engine detects the Fast Role swap signal on the CC wire from the initial Source and Shall send the FR_Swap Message back to the initial Source (that is no longer powering VBUS) within time tFRSwapInit. D1 The Policy engine monitors for VBUS ≤ vSafe5V so that a PS_RDY Message can be sent to the new Source at Step 5 of the messaging sequence. D2 The Policy engine monitors for VBUS ≤ vSafe5V so the initial Sink can assume the role of new Source and begin to source VBUS. Page 268 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Initial Source Portà New Sink Port Initial Sink Port à New Source Port E When VBUS = vSafe5V the new Source May provide power to VBUS. When VBUS < vSafe5V the new Source Shall provide power to VBUS within tSrcFRSwap and the PS_RDY Message can be sent to the new Sink at Step 7 of the messaging sequence. F The CC termination is changed from Rp to Rd (see [USB Type-C 1.2]) before the new Sink sends the PS_RDY Message of Step 5 to the new Source. G The CC termination is changed from Rd to Rp (see [USB Type-C 1.2]) before the new Source sends the PS_RDY Message of Step 7 to the new Sink.", "page_start": 268, "page_end": 268, "content_type": "text", "tables": [{"table_id": "is shown in Figure 7-29. The sequence that Shall be followed is described in Table 7-15. The timing parameters that", "caption": "is shown in Figure 7-29. The sequence that Shall be followed is described in Table 7-15. The timing parameters that", "page": 268, "data": []}, {"table_id": "Shall be followed are listed in Table 7-19 and Table 7-20. Negotiations between the new Source and the new Sink", "caption": "Shall be followed are listed in Table 7-19 and Table 7-20. Negotiations between the new Source and the new Sink", "page": 268, "data": []}, {"table_id": "May occur after the new Source sends the final PS_RDY Message. Note: in Figure 7-29 and Table 7-15 numbers are", "caption": "May occur after the new Source sends the final PS_RDY Message. Note: in Figure 7-29 and Table 7-15 numbers are", "page": 268, "data": []}, {"table_id": "Table 7-15 Sequence Description for Fast Role Swap", "caption": "Table 7-15 Sequence Description for Fast Role Swap", "page": 268, "data": []}], "figures": [{"figure_id": "is shown in Figure 7-29. The sequence that Shall be followed is described in Table 7-15. The timing parameters that", "caption": "is shown in Figure 7-29. The sequence that Shall be followed is described in Table 7-15. The timing parameters that", "page": 268}, {"figure_id": "May occur after the new Source sends the final PS_RDY Message. Note: in Figure 7-29 and Table 7-15 numbers are", "caption": "May occur after the new Source sends the final PS_RDY Message. Note: in Figure 7-29 and Table 7-15 numbers are", "page": 268}, {"figure_id": "Figure 7-29 Transition Diagram for Fast Role Swap", "caption": "Figure 7-29 Transition Diagram for Fast Role Swap", "page": 268}], "subsections": [], "word_count": 520, "tags": []}
{"section_id": "1", "title": "Policy Engine receives the FR_Swap Message Policy Engine sends the FR_Swap Message to the initial", "content": "from the initial Sink that is transitioning to be the Source(that is no longer powering VBUS) after detecting the new Source. Fast Role Swap signal of Step C. 2 Protocol Layer sends the GoodCRC Message to the Protocol Layer receives the GoodCRC Message from the initial Sink. Policy Engine then evaluates the initial Source. FR_Swap Message. 3 Policy Engine sends an Accept Message to the Policy Engine receives the Accept Message from the initial initial Sink that is transitioning to be the new Source that is transitioning to be the new Sink. Source. 4 Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message to the initial from the initial Sink that is transitioning to be the Source that is transitioning to be the new Sink. new Source. 5 Policy Engine sends a PS_RDY Message to the Policy Engine receives the PS_RDY Message from the new initial Sink that is transitioning to be the new Sink. Source. The Policy Engine Shall wait for Step D1 before sending the PS_RDY Message.", "page_start": 269, "page_end": 268, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 172, "tags": ["messages", "policy"]}
{"section_id": "6", "title": "Protocol Layer receives the GoodCRC Message Protocol Layer sends the GoodCRC Message from the", "content": "from the new Source. initial Sink that has completed the transition to new Source. Policy Engine then evaluates the PS_RDY Message. 7 Policy Engine receives the PS_RDY Message from Policy Engine sends a PS_RDY Message to the new Sink. the new Source. The Policy Engine Shall wait for Step E before sending the PS_RDY Message. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 269", "page_start": 269, "page_end": 269, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 65, "tags": ["messages", "protocol"]}
{"section_id": "7.3.16", "title": "Increasing the Programmable Power Supply Voltage", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed when increasing the voltage is shown in Figure 7-30. The sequence that Shall be followed is described in Table 7-16. The timing parameters that Shall be followed are listed in Table 7-19 and Table 7-20. Note in this figure, the Sink has previously sent a Request Message to the Source. Figure 7-30 Transition Diagram for Increasing the Programmable Power Supply Voltage", "page_start": 270, "page_end": 269, "content_type": "text", "tables": [{"table_id": "voltage is shown in Figure 7-30. The sequence that Shall be followed is described in Table 7-16. The timing", "caption": "voltage is shown in Figure 7-30. The sequence that Shall be followed is described in Table 7-16. The timing", "page": 270, "data": []}, {"table_id": "parameters that Shall be followed are listed in Table 7-19 and Table 7-20. Note in this figure, the Sink has previously", "caption": "parameters that Shall be followed are listed in Table 7-19 and Table 7-20. Note in this figure, the Sink has previously", "page": 270, "data": []}], "figures": [{"figure_id": "voltage is shown in Figure 7-30. The sequence that Shall be followed is described in Table 7-16. The timing", "caption": "voltage is shown in Figure 7-30. The sequence that Shall be followed is described in Table 7-16. The timing", "page": 270}, {"figure_id": "Figure 7-30 Transition Diagram for Increasing the Programmable Power Supply Voltage", "caption": "Figure 7-30 Transition Diagram for Increasing the Programmable Power Supply Voltage", "page": 270}], "subsections": [], "word_count": 76, "tags": ["power", "voltage"]}
{"section_id": "11", "title": "44", "content": "ttPPppssSSrrccTTrraannssiittiioonn SSoouurrccee PPoorrtt SSeenndd SSeenndd PPoolliiccyy EEnnggiinnee AAcccceepptt PPSS__RRDDYY PPPooorrrttt tttooo PPPooorrrttt", "page_start": 270, "page_end": 269, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "22", "title": "PPppssTTrraannssiittiioonnTTiimmeerr ((rruunnnniinngg)) 55 MMMeeessssssaaagggiiinnnggg", "content": "SSiinnkk PPoorrtt EEvvaalluuaattee EEvvaalluuaattee PPoolliiccyy EEnnggiinnee AAcccceepptt PPSS__RRDDYY 33 SSoouurrccee PPoorrtt SSoouurrccee DDeevviiccee PPoolliiccyy MMggrr ññ VV SSSooouuurrrccceee PPPooorrrttt IIInnnttteeerrraaaccctttiiiooonnn SSoouurrccee PPoorrtt PPoowweerr SSuuppppllyy SSoouurrccee VVOOLLDD PPppss TTrraannssiittiioonn IInntteerrvvaall SSoouurrccee VVNNEEWW SSiinnkk PPoorrtt DDeevviiccee PPoolliiccyy MMggrr SSSiiinnnkkk PPPooorrrttt IIInnnttteeerrraaaccctttiiiooonnn SSiinnkk PPoorrtt SSiinnkk ddrraawwss ccuurrrreenntt ccoonnttiinnuuoouussllyy ((nnoott ttoo eexxcceeeedd nneeggoottiiaatteedd ccuurrrreenntt)) PPoowweerr SSuuppppllyy SSoouurrccee PPoorrtt VVoollttaaggee VVNNEEWW SSSooouuurrrccceee VVV VVVooollltttaaagggeee VVOOLLDD BBBUUUSSS SSiinnkk PPoorrtt IINNEEWW CCuurrrreenntt IIOOLLDD SSSiiinnnkkk VVV CCCuuurrrrrreeennnttt BBBUUUSSS Table 7-16 Sequence Description for Increasing the Programmable Power Supply Voltage Step Source Port Sink Port 1 Policy Engine sends the Accept Message to the Sink. Policy Engine receives the Accept Message and starts the PSTransitionTimer.", "page_start": 270, "page_end": 269, "content_type": "text", "tables": [{"table_id": "Table 7-16 Sequence Description for Increasing the Programmable Power Supply Voltage", "caption": "Table 7-16 Sequence Description for Increasing the Programmable Power Supply Voltage", "page": 270, "data": []}], "figures": [], "subsections": [], "word_count": 106, "tags": []}
{"section_id": "2", "title": "Protocol Layer receives the GoodCRC Message from Protocol Layer sends the GoodCRC Message to the", "content": "the Sink. The Policy Engine tells the Device Policy Source. Policy Engine. Policy Engine then evaluates the Manager to instruct the power supply to increase Accept Message. its output voltage.", "page_start": 270, "page_end": 269, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 30, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "After sending the Accept Message, the", "content": "Programmable Power Supply starts to increase its output voltage. The Programmable Power Supply new voltage Shall be reached by tPpsSrcTransition. The power supply informs the Device Policy Manager that it is has reached the new level. The power supply status is passed to the Policy Engine. 4 The Policy Engine sends the PS_RDY Message to the The Policy Engine receives the PS_RDY Message from the Sink. Source. Page 270 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Port Sink Port", "page_start": 270, "page_end": 270, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 82, "tags": ["messages"]}
{"section_id": "5", "title": "Protocol Layer receives the GoodCRC Message from Protocol Layer sends the GoodCRC Message to the", "content": "the Sink. Source. Policy Engine then evaluates the PS_RDY Message from the Source and tells the Device Policy Manager that the Programmable Power Supply is operating at the new voltage. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 271", "page_start": 271, "page_end": 271, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 40, "tags": ["messages", "protocol"]}
{"section_id": "7.3.17", "title": "Decreasing the Programmable Power Supply Voltage", "content": "The interaction of the System Policy, Device Policy, and power supply that Shall be followed when decreasing the voltage is shown in Figure 7-31. The sequence that Shall be followed is described in Table 7-17. The timing parameters that Shall be followed are listed in Table 7-19 and Table 7-20. Note in this figure, the Sink has previously sent a Request Message to the Source. Figure 7-31 Transition Diagram for Decreasing the Programmable Power Supply Voltage", "page_start": 272, "page_end": 271, "content_type": "text", "tables": [{"table_id": "voltage is shown in Figure 7-31. The sequence that Shall be followed is described in Table 7-17. The timing", "caption": "voltage is shown in Figure 7-31. The sequence that Shall be followed is described in Table 7-17. The timing", "page": 272, "data": []}, {"table_id": "parameters that Shall be followed are listed in Table 7-19 and Table 7-20. Note in this figure, the Sink has previously", "caption": "parameters that Shall be followed are listed in Table 7-19 and Table 7-20. Note in this figure, the Sink has previously", "page": 272, "data": []}], "figures": [{"figure_id": "voltage is shown in Figure 7-31. The sequence that Shall be followed is described in Table 7-17. The timing", "caption": "voltage is shown in Figure 7-31. The sequence that Shall be followed is described in Table 7-17. The timing", "page": 272}, {"figure_id": "Figure 7-31 Transition Diagram for Decreasing the Programmable Power Supply Voltage", "caption": "Figure 7-31 Transition Diagram for Decreasing the Programmable Power Supply Voltage", "page": 272}], "subsections": [], "word_count": 76, "tags": ["power", "voltage"]}
{"section_id": "1", "title": "4", "content": "tPpsSrcTransition Source Port Send Send Policy Engine Accept PS_RDY PPoorrtt ttoo PPoorrtt", "page_start": 272, "page_end": 271, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "2", "title": "PpsTransitionTimer (running) 5 MMeessssaaggiinngg", "content": "Sink Port Evaluate Evaluate Policy Engine Accept PS_RDY 3 Source Port Source Device Policy Mgr òV SSoouurrccee PPoorrtt IInntteerraaccttiioonn Source Port Power Supply Source VOLD Pps Transition Interval Source VNEW Sink Port Device Policy Mgr SSiinnkk PPoorrtt IInntteerraaccttiioonn Sink Port Sink draws current continuously (not to exceed negotiated current) Power Supply Source Port Voltage VOLD SSoouurrccee VV VVoollttaaggee VNEW BBUUSS Sink Port IOLD Current INEW SSiinnkk VV CCuurrrreenntt BBUUSS Table 7-17 Sequence Description for Decreasing the Programmable Power Supply Voltage Step Source Port Sink Port 1 Policy Engine sends the Accept Message to the Sink. Policy Engine receives the Accept Message and starts the PSTransitionTimer.", "page_start": 272, "page_end": 271, "content_type": "text", "tables": [{"table_id": "Table 7-17 Sequence Description for Decreasing the Programmable Power Supply Voltage", "caption": "Table 7-17 Sequence Description for Decreasing the Programmable Power Supply Voltage", "page": 272, "data": []}], "figures": [], "subsections": [], "word_count": 105, "tags": []}
{"section_id": "2", "title": "Protocol Layer receives the GoodCRC Message from Protocol Layer sends the GoodCRC Message to the", "content": "the Sink. The Policy Engine tells the Device Policy Source. Policy Engine. Policy Engine then evaluates the Manager to instruct the power supply to decrease its Accept Message. output voltage.", "page_start": 272, "page_end": 271, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 30, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "After sending the Accept Message, the Programmable", "content": "Power Supply starts to decrease its output voltage. The Programmable Power Supply new voltage Shall be reached by tPpsSrcTransition. The power supply informs the Device Policy Manager that it is has reached the new level. The power supply status is passed to the Policy Engine. 4 The Policy Engine sends the PS_RDY Message to the The Policy Engine receives the PS_RDY Message from the Sink. Source. Page 272 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Port Sink Port", "page_start": 272, "page_end": 272, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 81, "tags": ["messages"]}
{"section_id": "5", "title": "Protocol Layer receives the GoodCRC Message from Protocol Layer sends the GoodCRC Message to the", "content": "the Sink. Source. Policy Engine then evaluates the PS_RDY Message from the Source and tells the Device Policy Manager that the Programmable Power Supply is operating at the new voltage. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 273", "page_start": 273, "page_end": 273, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 40, "tags": ["messages", "protocol"]}
{"section_id": "7.3.18", "title": "Changing the Source PDO or APDO", "content": "The interaction of the Device Policy Manager, the port Policy Engine and the Power Supply when changing between Source PDOs and APDOs, as listed below, is shown in Figure 7-32.  PDO to PDO  PDO to APDO  APDO to APDO  APDO to PDO The Source voltage as the transition starts Shall be any voltage within the Valid V range of the previous Source BUS PDO or APDO. The Source voltage after the transition is complete Shall be any voltage within the Valid V range of BUS the new Source PDO or APDO. The sequence that Shall be followed is described in Table 7-18. The timing parameters that Shall be followed are listed in Table 7-19 and Table 7-20. Note in this figure, the Sink has previously sent a Request Message to the Source. Figure 7-32 Transition Diagram for Changing the Source PDO or APDO", "page_start": 274, "page_end": 273, "content_type": "text", "tables": [{"table_id": "the new Source PDO or APDO. The sequence that Shall be followed is described in Table 7-18. The timing parameters", "caption": "the new Source PDO or APDO. The sequence that Shall be followed is described in Table 7-18. The timing parameters", "page": 274, "data": []}, {"table_id": "that Shall be followed are listed in Table 7-19 and Table 7-20. Note in this figure, the Sink has previously sent a", "caption": "that Shall be followed are listed in Table 7-19 and Table 7-20. Note in this figure, the Sink has previously sent a", "page": 274, "data": []}], "figures": [{"figure_id": "Source PDOs and APDOs, as listed below, is shown in Figure 7-32.", "caption": "Source PDOs and APDOs, as listed below, is shown in Figure 7-32.", "page": 274}, {"figure_id": "Figure 7-32 Transition Diagram for Changing the Source PDO or APDO", "caption": "Figure 7-32 Transition Diagram for Changing the Source PDO or APDO", "page": 274}], "subsections": [], "word_count": 147, "tags": ["source"]}
{"section_id": "1", "title": "5", "content": "Source Port Send Send Policy Engine Accept PS_RDY", "page_start": 274, "page_end": 273, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "2", "title": "6", "content": "Sink Port Evaluate Evaluate Policy Engine Accept PS_RDY 4 Source Port Source Device Policy Mgr Change Source Port Previous Source PDO or APDO t2 New Source PDO or APDO Power Supply", "page_start": 274, "page_end": 273, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 31, "tags": []}
{"section_id": "3", "title": "7 8", "content": "Sink Port Sink to Sink ... Sink Standby Device Policy Mgr Standby to Sink Sink Port Power Supply Sink ≤ IOLD t1 Sink pSnkStdby t3 Sink ≤ INEW Source Port Voltage Previous PDO or APDO VBUS New PDO or APDO VBUS Sink Port I2 Current ≤ IOLD I1 I1 I1 ≤ pSnkStdby/VBUS) I2 ≤ pSnkStdby/VBUS) + cSnkBulkPd(DVBUS/Dt) Page 274 USB Power Delivery Specification Revision 3.0, Version 1.1 ≈≈ tSrcTransition PPoorrtt ttoo PPoorrtt PSTransitionTimer (running) MMeessssaaggiinngg SSoouurrccee PPoorrtt IInntteerraaccttiioonn SSiinnkk PPoorrtt IInntteerraaccttiioonn SSoouurrccee VV VVoollttaaggee BBUUSS ≤≤ IINNEEWW SSiinnkk VV CCuurrrreenntt BBUUSS Table 7-18 Sequence Description for Changing the Source PDO or APDO Step Source Port Sink Port", "page_start": 274, "page_end": 273, "content_type": "text", "tables": [{"table_id": "Table 7-18 Sequence Description for Changing the Source PDO or APDO", "caption": "Table 7-18 Sequence Description for Changing the Source PDO or APDO", "page": 274, "data": []}], "figures": [], "subsections": [], "word_count": 107, "tags": []}
{"section_id": "1", "title": "Policy Engine sends the Accept Policy Engine receives the Accept Message", "content": "Message to the Sink. and starts the PSTransitionTimer.", "page_start": 274, "page_end": 273, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages", "policy"]}
{"section_id": "2", "title": "Protocol Layer receives the GoodCRC Protocol Layer sends the GoodCRC Message", "content": "Message from the Sink. The Policy to the Source. Policy Engine. Policy Engine Engine tells the Device Policy Manager then evaluates the Accept Message. to instruct the power supply to change to the new Source PDO or APDO. Step Source Port Sink Port", "page_start": 274, "page_end": 274, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 43, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "After sending the Accept Message, the", "content": "Source starts to change to the new PDO or APDO. The Source transition to the new PDO or APDO VBUS voltage Shall be completed by tSrcTransition. The power supply informs the Device Policy Manager that the transition to the new PDO or APDO is complete. The power supply status is passed to the Policy Engine.", "page_start": 275, "page_end": 274, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 55, "tags": ["messages"]}
{"section_id": "4", "title": "The Policy Engine sends the PS_RDY The Policy Engine receives the PS_RDY", "content": "Message to the Sink. Message from the Source.", "page_start": 275, "page_end": 274, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["policy"]}
{"section_id": "5", "title": "Protocol Layer receives the GoodCRC Protocol Layer sends the GoodCRC Message", "content": "Message from the Sink. to the Source. Policy Engine then evaluates the PS_RDY Message from the Source and tells the Device Policy Manager that the Source is operating at the new PDO or APDO. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 275", "page_start": 275, "page_end": 275, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 44, "tags": ["messages", "protocol"]}
{"section_id": "7.4", "title": "Electrical Parameters", "content": "", "page_start": 276, "page_end": 275, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "7.4.1", "title": "Source Electrical Parameters", "content": "The Source Electrical Parameters that Shall be followed are specified in Table 7-19. Table 7-19 Source Electrical Parameters Parameter Description MIN TYP MAX UNITS Reference cSrcBulk1 Source bulk capacitance 10 µF Section 7.1.2 when a Port is powered from a dedicated supply. cSrcBulkShared1 Source bulk capacitance 120 µF Section 7.1.2 when a Port is powered from a shared supply. iPpsCfMin Minimum current 1 A Section 7.1.4.4 foldback setting. iPpsCfNew Current foldback Section 7.1.4.4 accuracy 1A ≤ Operating Current -150 150 mA ≤ 3A Operating current > 3A -5 5 % iPpsCfStep PPS current foldback 50 mA Section 7.1.4.4 programming step size. iPpsCfTransient CF load transient -250 250 mA Section 7.1.4.4 current bounds. iPpsCvCfTransient CV to CF transient -100 500 mA Section 7.1.4.4 current bounds assuming the Operating Voltage reduction of Section 7.2.3.1. tNewSnk Time allowed for an 15 ms Figure 7-23, initial Source in Swap Figure 7-24 Standby to transition new Sink operation. tPpsCfCvTransient CF to CV transient 25 ms Section 7.1.4.4 voltage settling time. tPpsCfProgramSettle PPS current foldback 125 250 ms Section 7.1.4.4 programming settling time tPpsCfSettle CF load transient 125 250 ms Section 7.1.4.4 current settling time. tPpsCvCfTransient CV to CF transient 125 250 ms Section 7.1.8.1 settling time. tPpsSrcTransition The time the 0 25 ms Section 7.3 Programmable Power Supply Shall transition between requested voltages. tPpsTransient The maximum time for 5 ms Section 7.1.8.1 the Programmable power Supply to be between vPpsNew and vPpsValid in response to a load transient Page 276 USB Power Delivery Specification Revision 3.0, Version 1.1 Parameter Description MIN TYP MAX UNITS Reference tSrcFRSwap Time from the initial Sink 150 µs Section 7.1.13 detecting that VBUS has dropped below vSafe5V until the initial Sink/new Source is able to supply USB Type-C Current (see [USB Type-C 1.2]) tSrcReady Time from 285 ms Figure 7-2, positive/negative Figure 7-3 transition start (t0) to when the Source is ready to provide the newly negotiated power level. tSrcRecover Time allotted for the 0.66 1 s Section 7.1.5 Source to recover. tSrcSettle Time from 275 ms Figure 7-2 positive/negative transition start (t0) to when the transitioning voltage is within the range vSrcNew. tSrcSwapStdby The maximum time for 650 ms Table 7-9 the Source to transition Table 7-10 to Swap Standby. tSrcTransient The maximum time for 5 ms Section 7.1.8 the Source output voltage to be between vSrcNew and vSrcValid in response to a load transient. tSrcTransition The time the Source Shall 25 35 ms Section 7.3 wait before transitioning the power supply to ensure that the Sink has sufficient time to prepare. tSrcTurnOn Transition time from 275 ms Table 7-12 vSafe0V to vSafe5V. Table 7-13 vPpsCfCvTransient CF to CV load transient Operatin Operatin V Section 7.1.4.4 voltage bounds. g Voltage g Voltage * 0.95 – * 1.05 + 0.1V 0.1V vPpsCvCfTransient CV to CF transient Operatin Operatin V Section 7.1.8.1 voltage bounds g Voltage g Voltage assuming the Operating – 1.0V + 0.5V Voltage reduction of Section 7.2.3.1. vPpsMaxVoltage Maximum Voltage Field APDO APDO V Section 7.1.4.3 in the Programmable Voltage Voltage * Power Supply APDO. *0.95 1.05 vPpsMinVoltage Minimum Voltage Field in APDO APDO V Section 7.1.4.3 the Programmable Power Voltage Voltage * Supply APDO. *0.95 1.05 vPpsNew Programmable RDO RDO RDO RDO V Section 7.1.8.1 Output Voltage Output Output Output USB Power Delivery Specification Revision 3.0, Version 1.1 Page 277 Parameter Description MIN TYP MAX UNITS Reference measured at the Source Voltage Voltage Voltage receptacle. *0.95 *1.05 vPpsSlewNeg Programmable Power -30 mV/µs Section 7.1.8.1 Supply maximum slew rate for negative voltage changes vPpsSlewPos Programmable Power 30 mV/µs Section 7.1.8.1 Supply maximum slew rate for positive voltage changes vPpsStep PPS voltage 20 mV Section 7.1.8.1 programming step size. vPpsValid The range in addition to -0.1 0.1 V Section 7.1.8.1 vPpsNew which the Programmable Power Supply output is considered Valid in response to a load step. vSrcNeg Most negative voltage -0.3 V Figure 7-8 allowed during transition. vSrcNew Fixed Supply output PDO PDO PDO V Figure 7-2 measured at the Source Voltage Voltage Voltage Figure 7-3 receptacle. *0.95 *1.05 Variable Supply output PDO PDO V measured at the Source Minimum Maximum receptacle. Voltage Voltage Battery Supply output PDO PDO V measured at the Source Minimum Maximum receptacle. Voltage Voltage vSrcPeak The range that a Fixed PDO PDO V Table 6-10 Supply in Peak Current Voltage Voltage Figure 7-10 operation is allowed *0.90 *1.05 when overload conditions occur. vSrcSlewNeg Maximum slew rate -30 mV/µs Section 7.1.4.2 allowed for negative Figure 7-3 voltage transitions. Limits current based on a", "page_start": 276, "page_end": 277, "content_type": "text", "tables": [{"table_id": "The Source Electrical Parameters that Shall be followed are specified in Table 7-19.", "caption": "The Source Electrical Parameters that Shall be followed are specified in Table 7-19.", "page": 276, "data": []}, {"table_id": "Table 7-19 Source Electrical Parameters", "caption": "Table 7-19 Source Electrical Parameters", "page": 276, "data": []}, {"table_id": "tSrcSwapStdby The maximum time for 650 ms Table 7-9", "caption": "tSrcSwapStdby The maximum time for 650 ms Table 7-9", "page": 277, "data": []}, {"table_id": "the Source to transition Table 7-10", "caption": "the Source to transition Table 7-10", "page": 277, "data": []}, {"table_id": "tSrcTurnOn Transition time from 275 ms Table 7-12", "caption": "tSrcTurnOn Transition time from 275 ms Table 7-12", "page": 277, "data": []}, {"table_id": "vSafe0V to vSafe5V. Table 7-13", "caption": "vSafe0V to vSafe5V. Table 7-13", "page": 277, "data": []}, {"table_id": "vSrcPeak The range that a Fixed PDO PDO V Table 6-10", "caption": "vSrcPeak The range that a Fixed PDO PDO V Table 6-10", "page": 278, "data": []}], "figures": [{"figure_id": "tNewSnk Time allowed for an 15 ms Figure 7-23,", "caption": "tNewSnk Time allowed for an 15 ms Figure 7-23,", "page": 276}, {"figure_id": "initial Source in Swap Figure 7-24", "caption": "initial Source in Swap Figure 7-24", "page": 276}, {"figure_id": "tSrcReady Time from 285 ms Figure 7-2,", "caption": "tSrcReady Time from 285 ms Figure 7-2,", "page": 277}, {"figure_id": "positive/negative Figure 7-3", "caption": "positive/negative Figure 7-3", "page": 277}, {"figure_id": "tSrcSettle Time from 275 ms Figure 7-2", "caption": "tSrcSettle Time from 275 ms Figure 7-2", "page": 277}, {"figure_id": "vSrcNeg Most negative voltage -0.3 V Figure 7-8", "caption": "vSrcNeg Most negative voltage -0.3 V Figure 7-8", "page": 278}, {"figure_id": "vSrcNew Fixed Supply output PDO PDO PDO V Figure 7-2", "caption": "vSrcNew Fixed Supply output PDO PDO PDO V Figure 7-2", "page": 278}, {"figure_id": "measured at the Source Voltage Voltage Voltage Figure 7-3", "caption": "measured at the Source Voltage Voltage Voltage Figure 7-3", "page": 278}, {"figure_id": "Supply in Peak Current Voltage Voltage Figure 7-10", "caption": "Supply in Peak Current Voltage Voltage Figure 7-10", "page": 278}, {"figure_id": "allowed for negative Figure 7-3", "caption": "allowed for negative Figure 7-3", "page": 278}], "subsections": [], "word_count": 748, "tags": ["source"]}
{"section_id": "3", "title": "A connector rating and", "content": "maximum Sink bulk capacitance of 100 µF. vSrcSlewPos Maximum slew rate 30 mV/µs Section 7.1.4 allowed for positive Figure 7-2 voltage transitions. Limits current based on a", "page_start": 278, "page_end": 277, "content_type": "text", "tables": [], "figures": [{"figure_id": "allowed for positive Figure 7-2", "caption": "allowed for positive Figure 7-2", "page": 278}], "subsections": [], "word_count": 27, "tags": []}
{"section_id": "3", "title": "A connector rating and", "content": "maximum Sink bulk capacitance of 100 µF. Page 278 USB Power Delivery Specification Revision 3.0, Version 1.1 Parameter Description MIN TYP MAX UNITS Reference vSrcValid The range in addition to -0.5 0.5 V Figure 7-2 vSrcNew which a newly Figure 7-3 negotiated voltage is considered Valid during and after a transition. This range also applies to vSafe5V. Note 1: The Source Shall charge and discharge the total bulk capacitance to meet the transition time requirements. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 279", "page_start": 278, "page_end": 279, "content_type": "text", "tables": [], "figures": [{"figure_id": "vSrcValid The range in addition to -0.5 0.5 V Figure 7-2", "caption": "vSrcValid The range in addition to -0.5 0.5 V Figure 7-2", "page": 279}, {"figure_id": "vSrcNew which a newly Figure 7-3", "caption": "vSrcNew which a newly Figure 7-3", "page": 279}], "subsections": [], "word_count": 85, "tags": []}
{"section_id": "7.4.2", "title": "Sink Electrical Parameters", "content": "The Sink Electrical Parameters that Shall be followed are specified in Table 7-20. Table 7-20 Sink Electrical Parameters Parameter Description MIN TYP MAX UNITS Reference cSnkBulk1 Sink bulk capacitance on VBUS 1 10 µF Section 7.2.2 at Attach. cSnkBulkPd Bulk capacitance on VBUS a 1 100 µF Section 7.2.2 Sink is allowed after a successful negotiation. iLoadReleaseRate Load release di/dt . Refer to -150 mA/µs Section 7.2.6 [USB Type-C 1.2] Section", "page_start": 280, "page_end": 279, "content_type": "text", "tables": [{"table_id": "The Sink Electrical Parameters that Shall be followed are specified in Table 7-20.", "caption": "The Sink Electrical Parameters that Shall be followed are specified in Table 7-20.", "page": 280, "data": []}, {"table_id": "Table 7-20 Sink Electrical Parameters", "caption": "Table 7-20 Sink Electrical Parameters", "page": 280, "data": []}], "figures": [], "subsections": [], "word_count": 71, "tags": ["sink"]}
{"section_id": "3.7.3.3.2", "title": "for cable details.", "content": "iLoadStepRate Load step di/dt . Refer to 150 mA/µs Section 7.2.6 [USB Type-C 1.2] Section", "page_start": 280, "page_end": 279, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["cable"]}
{"section_id": "3.7.3.3.2", "title": "for cable details.", "content": "iOvershoot Positive or negative -230 230 mA Section 7.2.6 overshoot when a load change occurs less than or equal to iLoadStepRate; relative to the settled value after the load change. Refer to USB [USB Type-C 1.2] Section 3.7.3.3.2 for cable details. iPpsCfLoadRelease Maximum load release -500 mA Section 7.2.3.1 decrease during Current Foldback. iPpsCfLoadReleaseRate Maximum load decrease -150 mA/µs Section 7.2.3.1 slew rate during Current Foldback. iPpsCfLoadStep Maximum load step 500 mA Section 7.2.3.1 increase during Current Foldback. iPpsCfLoadStepRate Maximum load increase 150 mA/µs Section 7.2.3.1 slew rate during Current Foldback. iSafe0mA Maximum current a Sink is 1.0 mA Figure 7-26 allowed to draw when VBUS is driven to vSafe0V. Figure 7-27 iSnkSwapStdby Maximum current a Sink can 2.5 mA Section 7.2.7 draw during Swap Standby. Ideally this current is very near to 0 mA largely influenced by Port leakage current. pHubSusp Suspend power consumption 125 mW Section 7.2.3 for a hub. 25mW + 25mW per downstream Port for up to 4 ports. pSnkStdby Maximum power 2.5 W Section 7.2.3 consumption while in Sink Standby. Page 280 USB Power Delivery Specification Revision 3.0, Version 1.1 Parameter Description MIN TYP MAX UNITS Reference pSnkSusp Suspend power consumption 25 mW Section 7.2.3 for a peripheral device. tNewSrc Maximum time allowed for 275 ms Section 7.2.7 an initial Sink in Swap Standby to transition to new Table 7-9 Source operation. Table 7-10 tSnkHardResetPrepare Time allotted for the Sink 15 ms Table 7-13 power electronics to prepare for a Hard Reset. tSnkNewPower Maximum transition time 15 ms Section 7.2.3 between power levels. tSnkRecover Time for the Sink to resume 150 ms Table 7-12 USB Default Operation. tSnkStdby Time to transition to Sink 15 ms Section 7.2.3 Standby from Sink. tSnkSwapStdby Maximum time for the Sink 15 ms Section 7.2.7 to transition to Swap Standby. Note 1: If more bypass capacitance than cSnkBulk max or cSnkBulkPd max is required in the device, then the device Shall incorporate some form of V BUS surge current limiting as described in [USB 3.1] Section 11.4.4.1.", "page_start": 280, "page_end": 280, "content_type": "text", "tables": [{"table_id": "Standby to transition to new Table 7-9", "caption": "Standby to transition to new Table 7-9", "page": 281, "data": []}, {"table_id": "Table 7-10", "caption": "Table 7-10", "page": 281, "data": []}, {"table_id": "Table 7-13", "caption": "Table 7-13", "page": 281, "data": []}, {"table_id": "Table 7-12", "caption": "Table 7-12", "page": 281, "data": []}], "figures": [{"figure_id": "Figure 7-26", "caption": "Figure 7-26", "page": 280}, {"figure_id": "driven to vSafe0V. Figure 7-27", "caption": "driven to vSafe0V. Figure 7-27", "page": 280}], "subsections": [], "word_count": 337, "tags": ["cable"]}
{"section_id": "7.4.3", "title": "Common Electrical Parameters", "content": "Electrical Parameters that are common to both the Source and the Sink that Shall be followed are specified in Table 7-21. Table 7-21 Common Source/Sink Electrical Parameters Parameter Description MIN TYP MAX UNITS Reference tSafe0V Time to reach vSafe0V max. 650 ms Section 7.1.5 Figure 7-8 Table 7-12 Table 7-13 tSafe5V Time to reach vSafe5V max. 275 ms Section 7.1.4.2 Figure 7-8 vSafe0V Safe operating voltage at “zero volts”. 0 0.8 V Section 7.1.5 vSafe5V Safe operating voltage at 5V. See [USB 2.0] and 4.75 5.5 V Section 7.1.5 [USB 3.1] for allowable VBUS voltage range. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 281 8. Device Policy", "page_start": 281, "page_end": 281, "content_type": "text", "tables": [{"table_id": "Table 7-21 Common Source/Sink Electrical Parameters", "caption": "Table 7-21 Common Source/Sink Electrical Parameters", "page": 281, "data": []}, {"table_id": "Table 7-12", "caption": "Table 7-12", "page": 281, "data": []}, {"table_id": "Table 7-13", "caption": "Table 7-13", "page": 281, "data": []}], "figures": [{"figure_id": "Figure 7-8", "caption": "Figure 7-8", "page": 281}, {"figure_id": "Figure 7-8", "caption": "Figure 7-8", "page": 281}], "subsections": [], "word_count": 109, "tags": []}
{"section_id": "8.1", "title": "Overview", "content": "This section describes the Device Policy and Policy Engine that implements it. For an overview of the architecture and how the Device Policy Manager fits into this architecture, please see Section 2.7.", "page_start": 282, "page_end": 281, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 32, "tags": []}
{"section_id": "8.2", "title": "Device Policy Manager", "content": "The Device Policy Manager is responsible for managing the power used by one or more USB Power Delivery ports. In order to have sufficient knowledge to complete this task it needs relevant information about the device it resides in. Firstly it has a priori knowledge of the device including the capabilities of the power supply and the receptacles on each Port since these will for example have specific current ratings. It also has to know information from the USB-C Port Control module regarding cable insertion, type and rating of cable etc. It also has to have information from the power supply about changes in its capabilities as well as being able to request power supply changes. With all of this information the Device Policy Manager is able to provide up to date information regarding the capabilities available to a specific Port and to manage the power resources within the device. When working out the capabilities for a given Source Port the Device Policy Manager will take into account firstly the current rating of the Port’s receptacle and whether the inserted cable is PD or non-PD rated and if so what is the capability of the plug. This will set an upper bound for the capabilities which might be offered. After this the Device Policy Manager will consider the available power supply resources since this will bound which voltages and currents might be offered. Finally, the Device Policy Manager will consider what power is currently allocated to other ports, which power is in the Power Reserve and any other amendments to Policy from the System Policy Manager. The Device Policy Manager will offer a set of capabilities within the bounds detailed above. When selecting a capability for a given Sink Port the Device Policy Manager will look at the capabilities offered by the Source. This will set an upper bound for the capabilities which might be requested. The Device Policy Manager will also consider which capabilities are required by the Sink in order to operate. If an appropriate match for Voltage and Current can be found within the limits of the receptacle and cable then this will be requested from the Source. If an appropriate match cannot be found then a request for an offered voltage and current will be made, along with an indication of a capability mismatch. For Dual-Role Power Ports the Device Policy Manager manages the functionality of both a Source and a Sink. In addition it is able to manage the Power Role Swap process between the two. In terms of power management this could mean that a Port which is initially consuming power as a Sink is able to become a power resource as a Source. Conversely, Attached Sources might request that power be provided to them. The functionality within the Device Policy Manager (and to a certain extent the Policy Engine) is scalable depending on the complexity of the device, including the number of different power supply capabilities and the number of different features supported for example System Policy Manager interface or Capability Mismatch, and the number of ports being managed. Within these parameters it is possible to implement devices from very simple power supplies to more complex power supplies or devices such as USB hubs or Hard Drives. Within multiport devices it is also permitted to have a combination of USB Power Delivery and non-USB Power Delivery ports which Should all be managed by the Device Policy Manager. As noted in Section 2.7 the logical architecture used in the PD specification will vary depending on the implementation. This means that different implementations of the Device Policy Manager might be relative small or large depending on the complexity of the device, as indicated above. It is also possible to allocate different responsibilities between the Policy Engine and the Device Policy Manager, which will lead to different types of architectures and interfaces. The Device Policy Manager is responsible for the following:  Maintaining the Local Policy for the device.  For a Source, monitoring the present capabilities and triggering notifications of the change. Page 282 USB Power Delivery Specification Revision 3.0, Version 1.1  For a Sink, evaluating and responding to capabilities related requests from the Policy Engine for a given Port.  Control of the Source/Sink in the device.  Control of the USB-C Port Control module for each Port.  Interface to the Policy Engine for a given Port. The Device Policy Manager is responsible for the following Optional features when implemented:  Communications with the System Policy over USB.  For Sources with multiple ports monitoring and balancing power requirements across these ports.  Monitoring of batteries and AC power supplies.  Managing Modes in its Port Partner and Cable Plug(s).", "page_start": 282, "page_end": 282, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 788, "tags": ["devices", "policy"]}
{"section_id": "8.2.1", "title": "Capabilities", "content": "The Device Policy Manager in a Provider Shall know the power supplies available in the device and their capabilities. In addition it Shall be aware of any other PD Sources of power such as batteries and AC inputs. The available power sources and existing demands on the device Shall be taken into account when presenting capabilities to a Sink. The Device Policy Manager in a Consumer Shall know the requirements of the Sink and use this to evaluate the capabilities offered by a Source. It Shall be aware of its own power sources e.g. Batteries or AC supplies where these have a bearing on its operation as a Sink. The Device Policy Manager in a Dual-Role Power Device Shall combine the above capabilities and Shall also be able to present the dual-role nature of the device to an Attached PD Capable device.", "page_start": 283, "page_end": 282, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 142, "tags": []}
{"section_id": "8.2.2", "title": "System Policy", "content": "A given PD Capable device might have no USB capability, or PD might have been added to a USB device in such a way that PD is not integrated with USB. In these two cases there Shall be no requirement for the Device Policy Manager to interact with the USB interface of the device. The following requirements Shall only apply to PD devices that expose PD functionality over USB. The Device Policy Manager Shall communicate over USB with the System Policy Manager according to the requirements detailed in [USBTypeCBridge 1.0]. Whenever requested the Device Policy Manager Shall implement a Local Policy according to that requested by the System Policy Manager. For example the System Policy Manager might request that a battery powered Device temporarily stops charging so that there is sufficient power for a HDD to spin up. Note: that due to timing constraints, a PD Capable device Shall be able to respond autonomously to all time-critical PD related requests.", "page_start": 283, "page_end": 282, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 160, "tags": ["policy"]}
{"section_id": "8.2.3", "title": "Control of Source/Sink", "content": "The Device Policy Manager for a Provider Shall manage the power supply for each PD Source Port and Shall know at any given time what the negotiated power is. It Shall request transitions of the supply and inform the Policy Engine whenever a transition completes. The Device Policy Manager for a Consumer Shall manage the Sink for each PD Sink Port and Shall know at any given time what the negotiated power is. The Device Policy Manager for a Dual-Role Power Device Shall manage the transition between Source/Sink roles for each PD Dual-Role Power Port and Shall know at any given time what operational role the Port is in.", "page_start": 283, "page_end": 282, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 109, "tags": ["source", "sink", "control"]}
{"section_id": "8.2.4", "title": "Cable Detection", "content": "", "page_start": 283, "page_end": 282, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["cable"]}
{"section_id": "8.2.4.1", "title": "Device Policy Manager in a Provider", "content": "The Device Policy Manager in the Provider Shall control the USB-C Port Control module and Shall be able to use the USB-C Port Control module to determine the Attachment status. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 283 Note: that it might be necessary for the Device Policy Manager to also initiate additional discovery using the Discover Identity Command in order to determine the full capabilities of the cabling (see Section 6.4.4.2).", "page_start": 283, "page_end": 283, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 74, "tags": ["devices", "policy"]}
{"section_id": "8.2.4.2", "title": "Device Policy Manager in a Consumer", "content": "The Device Policy Manager in a Consumer controls the USB-C Port Control module and Shall be able to use the USB-C Port Control module to determine the Attachment status.", "page_start": 284, "page_end": 283, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": ["devices", "policy"]}
{"section_id": "8.2.4.3", "title": "Device Policy Manager in a Consumer/Provider", "content": "The Device Policy Manager in a Consumer/Provider inherits characteristics of Consumers and Providers and Shall control the USB-C Port Control module in order to support the Dead Battery back-powering case to determine the following for a given Port:  Attachment of a USB Power Delivery Provider/Consumer which supports Dead Battery back-powering.  Presence of V . BUS", "page_start": 284, "page_end": 283, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 57, "tags": ["devices", "policy"]}
{"section_id": "8.2.4.4", "title": "Device Policy Manager in a Provider/Consumer", "content": "The Device Policy Manager in a Provider/Consumer inherits characteristics of Consumers and Providers and May control the USB-C Port Control module in order to support the Dead Battery back-powering case to determine the following for a given Port:  Presence of V . BUS", "page_start": 284, "page_end": 283, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 44, "tags": ["devices", "policy"]}
{"section_id": "8.2.5", "title": "Managing Power Requirements", "content": "The Device Policy Manager in a Provider Shall be aware of the power requirements of all devices connected to its Source Ports. This includes being aware of any reserve power that might be required by devices in the future and ensuring that power is shared optimally amongst Attached PD Capable devices. This is a key function of the Device Policy Manager, whose implementation is critical to ensuring that all PD Capable devices get the power they require in a timely fashion in order to facilitate smooth operation. This is balanced by the fact that the Device Policy Manager is responsible for managing the sources of power that are, by definition, finite. The Consumer’s Device Policy Manager Shall ensure that it takes no more power than is required to perform its functions and gives back unneeded power whenever possible (in such cases the Provider Shall maintain a Power Reserve to ensure future operation is possible).", "page_start": 284, "page_end": 283, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 154, "tags": ["power"]}
{"section_id": "8.2.5.1", "title": "Managing the Power Reserve", "content": "There might be some products where a Device has certain functionality at one power level and a greater functionality at another, for example a Printer/Scanner that operates only as a printer with one power level and as a scanner if it can get more power. Visibility of the linkage between power and functionality will only be apparent at the USB Host; however the Device Policy Manager provides the mechanisms to manage the power requirements of such Devices. Devices with the GiveBack flag cleared report Operating Current and Maximum Operating Current (see Section 6.4.1.3.4). For many Devices the Operating Current and the Maximum Operating Current will be the same. Devices with highly variable loads, such as Hard Disk Drives, might use Maximum Operating Current. Devices with the GiveBack flag set report Operating Current and Minimum Operating Current (see Section 6.4.1.3.4). For many Devices the Operating Current and the Minimum Operating Current will be the same. Devices that charge their own batteries might use the Minimum Operating Current and GiveBack flag. For example in the first case, a mobile device might require 500mA to operate, but would like an additional 1000mA to charge its Battery. The mobile device would set the GiveBack flag (see Section 6.4.2.2) and request 500mA in the Minimum Operating Current field and 1500mA in the Operating Current field (provided that 1500mA was offered by the Source) indicating to the Provider that it could temporarily recover the 1000mA to meet a transitory request. In the second case, a Hard Disk Drive (HDD) might require 2A to spin-up, but only 1A to operate. At startup the HDD would request Maximum Operating Current of 2A and an Operating Current of 2A. After the drive is spun-up and Page 284 USB Power Delivery Specification Revision 3.0, Version 1.1 ready to operate it would make another request of 1A for its Operating Current and 2A for its Maximum Operating Current. Over time, its inactivity timers might expire and the HDD will go to a lower power state. When the HDD is next accessed, it has to spin-up again. So it will request an Operating Current of 2A and a Maximum Operating Current of 2A. The Provider might have the extra power available immediately and can immediately honor the request. If the power is not available, the Provider might have to harvest power, for example use the GotoMin Message to get back some power before honoring the HDD’s request. In such a case, the HDD would be told to wait using a Wait Message. The HDD continues to Request additional power until the request is finally granted. It Shall be the Device Policy Manager’s responsibility to allocate power and maintain a Power Reserve so as not to over-subscribe its available power resource. A Device with multiple ports such as a Hub Shall always be able to meet the incremental demands of the Port requiring the highest incremental power from its Power Reserve. The GotoMin Message is designed to allow the Provider to reclaim power from one Port to support a Consumer on another Port that temporarily requires additional power to perform some short term operation. In the example above, the mobile device that is being charged reduces its charge rate to allow a Device Policy Manager to meet a request from an HDD for start-up current required to spin-up its platters. Any power which is available to be reclaimed using a GotoMin Message May be counted as part of the Power Reserve. A Consumer requesting power Shall take into account its operational requirements when advertising its ability to temporarily return power. For example, a mobile device with a Dead Battery that is being used to make a call Should make a request that retains sufficient power to continue the call. When the Consumer’s requirements change, it Shall re-negotiate its power to reflect the changed requirements.", "page_start": 284, "page_end": 284, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 641, "tags": ["power"]}
{"section_id": "8.2.5.2", "title": "Power Capability Mismatch", "content": "A capability mismatch occurs when a Consumer cannot obtain required power from a Provider (or the Source is not PD Capable) and the Consumer requires such capabilities to operate. Different actions are taken by the Device Policy Manager and the System Policy Manager in this case.", "page_start": 285, "page_end": 284, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 46, "tags": ["power"]}
{"section_id": "8.2.5.2.1", "title": "Local device handling of mismatch", "content": "The Consumer’s Device Policy Manager Shall cause a Message to be displayed to the end user that a power capability mismatch has occurred. Examples of such feedback can include:  For a simple Device an LED May be used to indicate the failure. For example, during connection the LED could be solid amber. If the connection is successful the LED could change to green. If the connection fails it could be red or alternately blink amber.  A more sophisticated Device with a user interface, e.g., a mobile device or monitor, Should provide notification through the user interface on the Device. The Provider’s Device Policy Manager May cause a Message to be displayed to the user of the power capability mismatch.", "page_start": 285, "page_end": 284, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 121, "tags": ["devices"]}
{"section_id": "8.2.5.2.2", "title": "Device Policy Manager Communication with System Policy", "content": "In a USB Power Delivery aware system with an active System Policy manager (see Section 8.2.2), the Device Policy Manager Shall notify the System Policy Manager of the mismatch. This information Shall be passed back to the System Policy Manager using the mechanisms described in Chapter 0. The System Policy Manager Should ensure that the user is informed of the condition. When another Port in the system could satisfy the Consumer’s power requirements the user Should be directed to move the Device to the alternate Port. In order to identify a more suitable Source Port for the Consumer the System Policy Manager Shall communicate with the Device Policy Manager in order to determine the Consumer’s requirements. The Device Policy Manager Shall use a Get_Sink_Cap Message (see Section 6.3.8) to discover which power levels can be utilized by the Consumer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 285", "page_start": 285, "page_end": 285, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 149, "tags": ["devices", "communication", "policy"]}
{"section_id": "8.2.6", "title": "Use of “Unconstrained Power” bit with Batteries and AC supplies", "content": "The Device Policy Manager in a Provider or Consumer May monitor the status of any variable sources of power that could have an impact on its capabilities as a Source such as Batteries and AC supplies and reflect this in the “Unconstrained Power” bit (see Section 6.4.1.2.2.3 and Section 6.4.1.3.1.3) provided as part of the Source or Sink Capabilities Message (see Section 6.4.1). When monitored, and a USB interface is supported, the External Power status (see [USBTypeCBridge 1.0]) and the Battery state (see Section 9.4.1) Shall also be reported to the System Policy Manager using the USB interface.", "page_start": 286, "page_end": 285, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 98, "tags": ["power"]}
{"section_id": "8.2.6.1", "title": "AC Supplies", "content": "The Unconstrained Power bit provided by Sources and Sinks (see Section 6.4.1.2.2.3 and Section 6.4.1.3.1.3) notifies a connected device that it is acceptable to use the advertised power for charging as well as for what is needed for normal operation. A device that sets the Unconstrained Power bit has either an external source of power that is sufficient to adequately power the system while charging external devices, or expects to charge external devices as a primary state of function (such as a battery pack). In the case of the external power source, the power can either be from an AC supply directly connected to the device or from an AC supply connected to an Attached device, which is also getting unconstrained power from its power supply. The Unconstrained Power bit is in this way communicated through a PD system indicating that the origin of the power is from a single or multiple AC supplies, from a battery bank, or similar:  If the “Unconstrained Power” bit is set then that power is originally sourced from an AC supply.  Devices capable of consuming on multiple ports can only claim that they have “Unconstrained Power” for the power advertised as a provider Port if there is unconstrained power beyond that needed for normal operation coming from external supplies, (e.g. multiple AC supplies).  This concept applies as the power is routed through multiple provider and Consumer tiers, so, as an example. Power provided out of a monitor that is connected to a monitor that gets power from an AC supply, will claim it has \"Unconstrained Power” even though it is not directly connected to the AC supply. An example use case is a Tablet computer that is used with two USB A/V displays that are daisy chained (see Figure 8-1). The tablet and 1st display are not externally powered, (meaning, they have no source of power outside of USB PD). The 2nd display has an external supply Attached which could either be a USB PD based supply or some other form of external supply. When the displays are connected as shown, the power adapter Attached to the 2nd display is able to power both the 1st display and the tablet. In this case the 2nd display will indicate the presence of a sufficiently-sized wall wart to the 1st display, by setting its “Unconstrained Power” bit. The 1st display will then in turn assess and indicate the presence of the extra power to the tablet by setting its “Unconstrained Power” bit. Power is transmitted through the system to all devices, provided that there is sufficient power available from the external supply. Page 286 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-1 Example of daisy chained displays Tablet Display 1 Display 2 AC Another example use case is a Laptop computer that is attached to both an external supply and a Tablet computer. In this situation, if the external supply is large enough to power the laptop in its normal state as well as charge an external device, the laptop would set its “Unconstrained Power” bit and the tablet will allow itself to charge at its peak rate. If the external supply is small, however, and would not prevent the laptop from discharging if maximal power is drawn by the external device, the laptop would not set its “Unconstrained Power” bit, and the tablet can choose to draw less than what is offered. This amount could be just enough to prevent the tablet from discharging, or none at all. Alternatively, if the tablet determines that the laptop has significantly larger battery with more charge than the tablet has, the tablet can still choose to charge itself, although possibly not at the maximal rate. In this way, Sinks that do not receive the \"Unconstrained Power\" bit from the connected Source can still choose to charge their batteries, or charge at a reduced rate, if their policy determines that the impact to the Source is minimal -- such as in the case of a phone with a small battery charging from a laptop with a large battery. These policies can be decided via further USB PD communication.", "page_start": 286, "page_end": 286, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-1 Example of daisy chained displays", "caption": "Figure 8-1 Example of daisy chained displays", "page": 287}], "subsections": [], "word_count": 694, "tags": []}
{"section_id": "8.2.6.2", "title": "Battery Supplies", "content": "When monitored, and a USB interface is supported, the Battery state Shall be reported to the System Policy Manager using the USB interface. If the device is battery-powered but is in a state that is primarily for charging external devices, the device is considered to be an unconstrained source of power and thus Should set the “Unconstrained Power” bit. A simplified algorithm is detailed below to ensure that Battery powered devices will get charge from non-Battery powered devices when possible, and also to ensure that devices do not constantly Power Role Swap back and forth. When two devices are connected that do not have Unconstrained Power, they Should define their own policies so as to prevent constant Power Role Swapping. This algorithm uses the “Unconstrained Power” bit (see Section 6.4.1.2.2.3 and Section 6.4.1.3.1.3), thus the decisions are based on the availability and sufficiency of an external supply, not the full capabilities of a system or device or product. Recommendations: USB Power Delivery Specification Revision 3.0, Version 1.1 Page 287 1. Provider/Consumers using large external sources (“Unconstrained Power” bit set) Should always deny Power Role Swap requests from Consumer/Providers not using external sources (“Unconstrained Power” bit cleared). 2. Provider/Consumers not using large external sources (“Unconstrained Powered” bit cleared) Should always accept a Power Role Swap request from a Consumer/Provider using large external power sources (“Unconstrained Power” bit set) unless the requester is not able to provide the requirements of the present Provider/Consumer.", "page_start": 287, "page_end": 287, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 241, "tags": []}
{"section_id": "8.2.7", "title": "Interface to the Policy Engine", "content": "The Device Policy Manager Shall maintain an interface to the Policy Engine for each Port in the device.", "page_start": 288, "page_end": 287, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["policy"]}
{"section_id": "8.2.7.1", "title": "Device Policy Manager in a Provider", "content": "The Device Policy Manager in a Provider Shall also provide the following functions to the Policy Engine:  Inform the Policy Engine of changes in cable/ device Attachment status for a given cable.  Inform the Policy Engine whenever the Source capabilities available for a Port change.  Evaluate requests from an Attached Consumer and provide responses to the Policy Engine.  Respond to requests for power supply transitions from the Policy Engine.  Indication to Policy Engine when power supply transitions are complete.  Maintain a Power Reserve for devices operating on a Port at less than maximum power.", "page_start": 288, "page_end": 287, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 100, "tags": ["devices", "policy"]}
{"section_id": "8.2.7.2", "title": "Device Policy Manager in a Consumer", "content": "The Device Policy Manager in a Consumer Shall also provide the following functions to the Policy Engine:  Inform the Policy Engine of changes in cable/device Attachment status.  Inform the Policy Engine whenever the power requirements for a Port change.  Evaluate Source capabilities and provide suitable responses: o Request from offered capabilities o Indicate whether additional power is required  Respond to requests for Sink transitions from the Policy Engine.", "page_start": 288, "page_end": 287, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 72, "tags": ["devices", "policy"]}
{"section_id": "8.2.7.3", "title": "Device Policy Manager in a Dual-Role Power Device", "content": "The Device Policy Manager in a Dual-Role Power Device Shall provide the following functions to the Policy Engine:  Provider Device Policy Manager  Consumer Device Policy Manager  Interface for the Policy Engine to request power supply transitions from Source to Sink and vice versa.  Indications to Policy Engine during Power Role Swap transitions.", "page_start": 288, "page_end": 287, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 56, "tags": ["devices", "policy", "power"]}
{"section_id": "8.2.7.4", "title": "Device Policy Manager in a Dual-Role Power Device Dead Battery handling", "content": "The Device Policy Manager in a Dual-Role Power Device with a Dead Battery Should:  Switch Ports to Sink-only or Sinking DFP operation to obtain power from the next Attached Source  Use V from the Attached Source to power the USB Power Delivery communications as well as charging to BUS enable the negotiation of higher input power. Page 288 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 288, "page_end": 288, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 68, "tags": ["devices", "policy", "power"]}
{"section_id": "8.3", "title": "Policy Engine", "content": "", "page_start": 289, "page_end": 288, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "8.3.1", "title": "Introduction", "content": "There is one Policy Engine instance per Port that interacts with the Device Policy Manager in order to implement the present Local Policy for that particular Port. This section includes:  Message sequences for various operations.  State diagrams covering operation of Sources, Sinks and Cable Plugs.", "page_start": 289, "page_end": 288, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 47, "tags": []}
{"section_id": "8.3.2", "title": "Atomic Message Sequence Diagrams", "content": "", "page_start": 289, "page_end": 288, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["messages"]}
{"section_id": "8.3.2.1", "title": "Introduction", "content": "The Device Policy Engine drives the Message sequences and responses based on both the expected Message sequences and the present Local Policy. An AMS Shall be defined as a Message sequence that starts and/or ends in either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready states (see Section 8.3.3.2, Section 8.3.3.3 and Section 8.3.3.22). In addition the Cable Plug discovery sequence specified in Section 8.3.3.22.3 Shall be defined as an AMS. The Source and Sink indicate to the Protocol Layer when an AMS starts and ends on entry to/exit from PE_SRC_Ready or PE_SNK_Ready (see Section 8.3.3.2 and Section 8.3.3.3). Section 8.3.2.1.3 gives details of which of these AMS’s are interruptible or non-interruptible. This section contains sequence diagrams that highlight some of the more interesting transactions. It is by no means a complete summary of all possible combinations, but is illustrative in nature.", "page_start": 289, "page_end": 288, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 139, "tags": []}
{"section_id": "8.3.2.1.1", "title": "Basic Message Exchange", "content": "Figure 8-2 Basic Message Exchange (Successful) below illustrates how a Message is sent. Note that the sender might be either a Source or Sink while the receiver might be either a Sink or Source. The basic Message sequence is the same. It starts when the Message Sender’s Protocol Layer at the behest of its Policy Engine forms a Message that it passes to the Physical Layer. Figure 8-2 Basic Message Exchange (Successful) Message Sender Message Receiver : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send message 2: Message 3: Message + CRC 4: Message Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Message received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Consume message Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Message sent USB Power Delivery Specification Revision 3.0, Version 1.1 Page 289 Table 8-1 Basic Message Flow Step Message Sender Message Receiver", "page_start": 289, "page_end": 289, "content_type": "text", "tables": [{"table_id": "Table 8-1 Basic Message Flow", "caption": "Table 8-1 Basic Message Flow", "page": 290, "data": []}], "figures": [{"figure_id": "Figure 8-2 Basic Message Exchange (Successful) below illustrates how a Message is sent. Note that the sender might", "caption": "Figure 8-2 Basic Message Exchange (Successful) below illustrates how a Message is sent. Note that the sender might", "page": 289}, {"figure_id": "Figure 8-2 Basic Message Exchange (Successful)", "caption": "Figure 8-2 Basic Message Exchange (Successful)", "page": 289}], "subsections": [], "word_count": 154, "tags": ["messages"]}
{"section_id": "1", "title": "Policy Engine directs Protocol Layer to send a", "content": "Message.", "page_start": 290, "page_end": 289, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": ["policy", "protocol"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer. 3 Physical Layer appends a CRC and sends the Message. Physical Layer receives the Message and checks the CRC to verify the Message.", "page_start": 290, "page_end": 289, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": ["messages", "protocol"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the Message to", "content": "the Protocol Layer.", "page_start": 290, "page_end": 289, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 3, "tags": ["messages"]}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. Protocol Layer forwards the received Message information to the Policy Engine that consumes it.", "page_start": 290, "page_end": 289, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 31, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and passes it to", "content": "the Physical Layer. 7 Physical Layer receives the Message and checks the Physical Layer appends CRC and sends the GoodCRC CRC to verify the Message. Message.", "page_start": 290, "page_end": 289, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": ["messages", "protocol"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer. Protocol Layer checks and increments the MessageIDCounter and stops CRCReceiveTimer.", "page_start": 290, "page_end": 289, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 16, "tags": []}
{"section_id": "9", "title": "Protocol Layer informs the Policy Engine that the", "content": "Message was successfully sent.", "page_start": 290, "page_end": 289, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["policy", "protocol"]}
{"section_id": "8.3.2.1.2", "title": "Errors in Basic Message flow", "content": "There are various points during the Message flow where failures in communication or other issues can occur. Figure 8-3 is an annotated version of Figure 8-2 indicating at which point issues can occur. Figure 8-3 Basic Message flow indicating possible errors  Message currently being received  Message does not arrive  Message is a retry  Channel unavailable  Message has bad CRC Message Sender Message Receiver : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send message 2: Message A 3: Message + CRC B C 4: Message Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID D 5: Message received E 6: GoodCRC F 7: GoodCRC + CRC G 8: GoodCRC Consume message Check and increment MessageIDCounter Stop CRCReceiveTimer  Message currently being received  Channel unavailable 9: Message sent  GoodCRC does not arrive  Message is unexpected  GoodCRC has a bad CRC  Message is unknown  GoodCRC has the wrong MessageID  Response is not GoodCRC Page 290 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 8-2 Potential issues in Basic Message Flow Point Possible issues A 1. There is an incoming Message on the channel meaning that the PHY Layer is unable to send. In this case the outgoing Message is removed from the queue and the incoming Message processed. 2. Due to some sort of noise on the line it is not possible to transmit. In this case the outgoing Message is Discarded by the PHY Layer. Retransmission is via the Protocol Layer’s normal mechanism. B 1. Message does not arrive at the Physical Layer due to noise on the channel. 2. Message arrives but has been corrupted and has a bad CRC. There is no Message to pass up to the Protocol Layer on the receiver which means a GoodCRC Message is not sent. This leads to a CRCReceiveTimer timeout in the Message Sender. C 1. MessageID of received Message matches stored MessageID so this is a retry. Message is not passed up to the Policy Engine. D 1. Policy Engine receives a known Message that it was not expecting. 2. Policy Engine receives an unknown (unrecognized) Message. These cases are errors in the protocol which leads to the generation of a Soft_Reset Message. E Same as point A but at the Message Receiver side. F 1. GoodCRC Message response does not arrive at the Message Sender side due to the noise on the channel. 2. GoodCRC Message response arrives but has a bad CRC. A GoodCRC Message is not received by the Message Sender’s Protocol Layer. This leads to a CRCReceiveTimer timeout in the Message Sender. G 1. GoodCRC Message is received but does contain the same MessageID as the transmitted Message. 2. A Message is received but it is not a GoodCRC Message (similar case to that of an unexpected or unknown Message but this time detected in the Protocol Layer). Both of these issues indicate errors in receiving an expected GoodCRC Message which will lead to a CRCReceiveTimer timeout in the Protocol Layer and a subsequent retry (except for communications with Cable Plugs). Figure 8-4 illustrates one of these cases; the basic Message flow with a retry due to a bad CRC at the Message Receiver. It starts when the Message Sender’s Protocol Layer at the behest of its Policy Engine forms a Message that it passes to the Physical Layer. The Protocol Layer is responsible for retries on a “’n’ strikes and you are out” basis (nRetryCount). USB Power Delivery Specification Revision 3.0, Version 1.1 Page 291 Figure 8-4 Basic Message Flow with Bad CRC followed by a Retry Message Sender Message Receiver : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send message 2: Message 3: Message + CRC Start CRCReceiveTimer Message is not received or CRC is bad so message is not passed to the protocol layer CRCReceiveTimer expires Retry and increment RetryCounter 4: Message 5: Message + CRC 6: Message Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 7: Message received 8: GoodCRC 9: GoodCRC + CRC Consume message 10: GoodCRC Check and increment MessageIDCounter Reset RetryCounter Stop CRCReceiveTimer 11: Message sent Table 8-3 Basic Message Flow with CRC failure Step Message Sender Message Receiver", "page_start": 290, "page_end": 291, "content_type": "text", "tables": [{"table_id": "Table 8-2 Potential issues in Basic Message Flow", "caption": "Table 8-2 Potential issues in Basic Message Flow", "page": 291, "data": []}, {"table_id": "Table 8-3 Basic Message Flow with CRC failure", "caption": "Table 8-3 Basic Message Flow with CRC failure", "page": 292, "data": []}], "figures": [{"figure_id": "8-3 is an annotated version of Figure 8-2 indicating at which point issues can occur.", "caption": "8-3 is an annotated version of Figure 8-2 indicating at which point issues can occur.", "page": 290}, {"figure_id": "Figure 8-3 Basic Message flow indicating possible errors", "caption": "Figure 8-3 Basic Message flow indicating possible errors", "page": 290}, {"figure_id": "Figure 8-4 illustrates one of these cases; the basic Message flow with a retry due to a bad CRC at the Message Receiver.", "caption": "Figure 8-4 illustrates one of these cases; the basic Message flow with a retry due to a bad CRC at the Message Receiver.", "page": 291}, {"figure_id": "Figure 8-4 Basic Message Flow with Bad CRC followed by a Retry", "caption": "Figure 8-4 Basic Message Flow with Bad CRC followed by a Retry", "page": 292}], "subsections": [], "word_count": 720, "tags": ["messages"]}
{"section_id": "1", "title": "Policy Engine directs Protocol Layer to send a", "content": "Message.", "page_start": 292, "page_end": 291, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": ["policy", "protocol"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer. 3 Physical Layer appends a CRC and sends the Message. Physical Layer receives no Message or a Message with an incorrect CRC. Nothing is passed to Protocol Layer.", "page_start": 292, "page_end": 291, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 32, "tags": ["messages", "protocol"]}
{"section_id": "4", "title": "Since no response is received, the CRCReceiveTimer", "content": "will expire and trigger the first retry by the Protocol Layer. The RetryCounter is incremented. Protocol Layer passes the Message to the Physical Layer. Starts CRCReceiveTimer. 5 Physical Layer appends a CRC and sends the Message. Physical Layer receives the Message and checks the CRC to verify the Message.", "page_start": 292, "page_end": 291, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 49, "tags": []}
{"section_id": "6", "title": "Physical Layer removes the CRC and forwards the Message to", "content": "the Protocol Layer.", "page_start": 292, "page_end": 291, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 3, "tags": ["messages"]}
{"section_id": "7", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. Protocol Layer forwards the received Message information to the Policy Engine that consumes it.", "page_start": 292, "page_end": 291, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 31, "tags": ["messages", "protocol"]}
{"section_id": "8", "title": "Protocol Layer generates a GoodCRC Message and passes it to", "content": "the Physical Layer. Page 292 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Message Sender Message Receiver 9 Physical Layer receives the Message and checks the Physical Layer appends CRC and sends the GoodCRC CRC to verify the Message. Message.", "page_start": 292, "page_end": 292, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["messages", "protocol"]}
{"section_id": "10", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 293, "page_end": 292, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "11", "title": "Protocol Layer verifies the MessageID, stops", "content": "CRCReceiveTimer and resets the RetryCounter. Protocol Layer informs the Policy Engine that the Message was successfully sent. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 293", "page_start": 293, "page_end": 293, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": ["messages", "protocol"]}
{"section_id": "8.3.2.1.3", "title": "Interruptible and Non-interruptible Atomic Message Sequences", "content": "Table 8-4 details which AMS (as defined in Section 8.3.2) Shall be treated as Interruptible or Non-interruptible during the sequence. Every AMS which starts with the same Message Shall obey the Interruptible/Non-interruptible requirement. Note that every AMS is Interruptible until the first Message in the sequence has been successfully sent (GoodCRC Message received). Any Sequence of VDMs Shall be Interruptible. After the AMS that caused the interruption has completed, if the original AMS is still needed the interrupted AMS Shall be Re-run. Table 8-4 Interruptible and Non-interruptible AMS AMS Interruptible Reference Power Negotiation No Section 8.3.3.2, 8.3.3.3 GotoMin No Section 8.3.3.2, Section 8.3.3.3 Soft Reset No Section 8.3.3.4 Hard Reset No Section 8.3.3.2, Section 8.3.3.3 Cable Reset No Section 8.3.3.22.2.3 Get Source Capabilities No Section 8.3.3.2, Section 8.3.3.3 Get Sink Capabilities No Section 8.3.3.2, Section 8.3.3.3 Power Role Swap No Section 8.3.3.16.3, Section 8.3.3.16.4 Fast Role Swap No Section 8.3.3.16.5, Section 8.3.3.16.6 Data Role Swap No Section 8.3.3.16.1, Section 8.3.3.16.2 VCONN Swap No Section 8.3.3.17 Source Alert N/A Section 8.3.3.7 Getting Source Extended Capabilities No Section 8.3.3.8 Getting Source/Sink Status No Section 8.3.3.9 Getting Battery Capabilities No Section 8.3.3.10 Getting Battery Status No Section 8.3.3.11 Getting Manufacturer Information No Section 8.3.3.12 Security Yes Section 8.3.3.13 Firmware Update Yes Section 8.3.3.15 Discover Identity Yes Section 8.3.3.18.1, Section 8.3.3.19.1 Source startup Cable Plug Discover Identity Yes Section 8.3.3.18.1, Section8.3.3.22.3 Discover SVIDs Yes Section 8.3.3.18.2, Section 8.3.3.19.2 Discover Modes Yes Section 8.3.3.18.3, Section 8.3.3.19.3 DFP to UFP Enter Mode Yes Section 8.3.3.20.1, Section 8.3.3.21.1 Yes Section 8.3.3.20.2, Section 8.3.3.21.2 DFP to UFP Exit Mode DFP to Cable Plug Enter Mode Yes Section 8.3.3.20.1, Section 8.3.3.22.4.1 DFP to Cable Plug Exit Mode Yes Section 8.3.3.20.1, Section 8.3.3.22.4.2 Attention N/A Section 8.3.3.18.4 Built in Self-Test (BIST) No Section 8.3.2.14 Sequence of Unstructured VDMs Yes Section 6.4.4.1 Sequence of Structured VDMs using Vendor Commands Yes Section 6.4.4.2 Page 294 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 294, "page_end": 294, "content_type": "text", "tables": [{"table_id": "Table 8-4 details which AMS (as defined in Section 8.3.2) Shall be treated as Interruptible or Non-interruptible during", "caption": "Table 8-4 details which AMS (as defined in Section 8.3.2) Shall be treated as Interruptible or Non-interruptible during", "page": 294, "data": []}, {"table_id": "Table 8-4 Interruptible and Non-interruptible AMS", "caption": "Table 8-4 Interruptible and Non-interruptible AMS", "page": 294, "data": []}], "figures": [], "subsections": [], "word_count": 321, "tags": ["messages"]}
{"section_id": "8.3.2.2", "title": "Power Negotiation", "content": "Figure 8-5 illustrates an example of a successful Message flow during Power Negotiation. The negotiation goes through 5 distinct phases:  The Source sends out its power capabilities in a Source_Capabilities Message.  The Sink evaluates these capabilities and in the request phase selects one power level by sending a Request Message.  The Source evaluates the request and accepts the request with an Accept Message.  The Source transitions to the new power level and then informs the Sink by sending a PS_RDY Message.  The Sink starts using the new power level. Figure 8-5 Successful Power Negotiation Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine Cable Capabilities detected Plug type detected 1: Send Capabilities 2: Capabilities 3: Capabilities + CRC Start CRCReceiveTimer 4: Capabilities Check MessageID against local copy Store copy of MessageID 6: GoodCRC 5: Capabilities received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Capabilities sent Evaluate Capabilities Start SenderResponseTimer Detect plug type 10: Send Request 11: Request 12: Request + CRC 13: Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Request received 15: GoodCRC Stop SenderResponseTimer 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Request sent Evaluate Request Start SenderResponseTimer 19: Send Accept 20: Accept 21: Accept + CRC Start CRCReceiveTimer 22: Accept Check MessageID against local copy Store copy of MessageID 24: GoodCRC 23: Accept received 25: GoodCRC + CRC Stop SenderResponseTimer 26: GoodCRC Start PSTransitionTimer Reduce current Check and increment MessageIDCounter Stop CRCReceiveTimer 27: Accept sent Power supply adjusted to negotiated output Send Ping if required to maintain activity Prepare for new power 28: Send PS_RDY 29: PS_RDY 30: PS_RDY + CRC Start CRCReceiveTimer 31: PS_RDY Check MessageID against local copy Store copy of MessageID 33: GoodCRC 32: PS_RDY received 34: GoodCRC + CRC 35: GoodCRC Stop PSTransitionTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 36: PS_RDY sent New Power level Table 8-5 below provides a detailed explanation of what happens at each labeled step in Figure 8-5 above. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 295 Table 8-5 Steps for a successful Power Negotiation Step Source Sink", "page_start": 295, "page_end": 295, "content_type": "text", "tables": [{"table_id": "Table 8-5 below provides a detailed explanation of what happens at each labeled step in Figure 8-5 above.", "caption": "Table 8-5 below provides a detailed explanation of what happens at each labeled step in Figure 8-5 above.", "page": 295, "data": []}, {"table_id": "Table 8-5 Steps for a successful Power Negotiation", "caption": "Table 8-5 Steps for a successful Power Negotiation", "page": 296, "data": []}], "figures": [{"figure_id": "Figure 8-5 illustrates an example of a successful Message flow during Power Negotiation. The negotiation goes", "caption": "Figure 8-5 illustrates an example of a successful Message flow during Power Negotiation. The negotiation goes", "page": 295}, {"figure_id": "Figure 8-5 Successful Power Negotiation", "caption": "Figure 8-5 Successful Power Negotiation", "page": 295}, {"figure_id": "Table 8-5 below provides a detailed explanation of what happens at each labeled step in Figure 8-5 above.", "caption": "Table 8-5 below provides a detailed explanation of what happens at each labeled step in Figure 8-5 above.", "page": 295}], "subsections": [], "word_count": 371, "tags": ["negotiation", "power"]}
{"section_id": "1", "title": "The Cable Capabilities or Plug Type are detected if", "content": "these are not already known (see Section 4.4). Policy Engine directs the Protocol Layer to send a Source_Capabilities Message that represents the power supply’s present capabilities.", "page_start": 296, "page_end": 295, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": ["cable"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 296, "page_end": 295, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Source_Capabilities", "content": "Source_Capabilities Message. Message and checks the CRC to verify the Message.", "page_start": 296, "page_end": 295, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": ["source"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Source_Capabilities Message to the Protocol Layer.", "page_start": 296, "page_end": 295, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Source_Capabilities Message information to the Policy Engine that consumes it.", "page_start": 296, "page_end": 295, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 296, "page_end": 295, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 296, "page_end": 295, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 296, "page_end": 295, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Source_Capabilities Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 296, "page_end": 295, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine evaluates the Source_Capabilities", "content": "Message sent by the Source, detects the plug type if this is necessary (see Section 4.4) and selects which power it would like. It tells the Protocol Layer to form the data (e.g. Power Data Object) that represents its Request into a Message.", "page_start": 296, "page_end": 295, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 43, "tags": ["policy", "source"]}
{"section_id": "11", "title": "Protocol Layer creates the Request Message and", "content": "passes to Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer receives the Request Message and Physical Layer appends a CRC and sends the Request compares the CRC it calculated with the one sent to Message. verify the Message.", "page_start": 296, "page_end": 295, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["messages", "protocol"]}
{"section_id": "13", "title": "Physical Layer removes the CRC and forwards the", "content": "Request Message to the Protocol Layer.", "page_start": 296, "page_end": 295, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "14", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer passes the Request information to the Policy Engine. Policy Engine stops SenderResponseTimer.", "page_start": 296, "page_end": 295, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "15", "title": "The Protocol Layer generates a GoodCRC Message", "content": "and passes it to its Physical Layer. 16 Physical Layer appends CRC and sends the Message. Physical Layer receives the Message and compares the CRC it calculated with the one sent to verify the Message. Page 296 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Sink", "page_start": 296, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "protocol"]}
{"section_id": "17", "title": "Physical Layer forwards the GoodCRC Message to the", "content": "Protocol Layer.", "page_start": 297, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": ["messages"]}
{"section_id": "18", "title": "The protocol Layer verifies and increments the", "content": "MessageIDCounter. It informs the Policy Engine that the Request Message was successfully sent. The Protocol Layer stops the CRCReceiveTimer. The Policy Engine starts SenderResponseTimer.", "page_start": 297, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": ["protocol"]}
{"section_id": "19", "title": "Policy Engine evaluates the Request Message sent by", "content": "the Sink and decides if it can meet the request. It tells the Protocol Layer to form an Accept Message.", "page_start": 297, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": ["messages", "policy"]}
{"section_id": "20", "title": "The Protocol Layer forms the Accept Message that is", "content": "passed to the Physical Layer and starts the CRCReceiveTimer.", "page_start": 297, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["messages", "protocol"]}
{"section_id": "21", "title": "Physical Layer appends CRC and sends the Accept Physical Layer receives the Message and compares", "content": "Message. the CRC it calculated with the one sent to verify the Message.", "page_start": 297, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": ["messages"]}
{"section_id": "22", "title": "Physical Layer forwards the Accept Message to the", "content": "Protocol Layer.", "page_start": 297, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": ["messages"]}
{"section_id": "23", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. Protocol Layer informs the Policy Engine that an Accept Message has been received. The Policy Engine stops SenderResponseTimer, starts the PSTransitionTimer and reduces its current draw. The Device Policy Manager prepares the Power supply for transition to the new power level.", "page_start": 297, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 58, "tags": ["messages", "protocol"]}
{"section_id": "24", "title": "The Protocol Layer generates a GoodCRC Message", "content": "and passes it to its Physical Layer. 25 Physical Layer receives the Message and compares Physical Layer appends CRC and sends the Message. the CRC it calculated with the one sent to verify the Message.", "page_start": 297, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "26", "title": "Physical Layer forwards the GoodCRC Message to the", "content": "Protocol Layer. The Protocol Layer verifies and increments the MessageIDCounter and stops the CRCReceiveTimer.", "page_start": 297, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "27", "title": "The Protocol Layer informs the Policy Engine that an", "content": "Accept Message was successfully sent. power supply Adjusts its Output to the Negotiated Value", "page_start": 297, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["policy", "protocol"]}
{"section_id": "28", "title": "The Device Policy Manager informs the Policy Engine", "content": "that the power supply has settled at the new operating condition and tells the Protocol Layer to send a PS_RDY Message.", "page_start": 297, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["devices", "policy"]}
{"section_id": "29", "title": "The Protocol Layer forms the PS_RDY Message and", "content": "starts the CRCReceiveTimer.", "page_start": 297, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 3, "tags": ["messages", "protocol"]}
{"section_id": "30", "title": "Physical Layer appends CRC and sends the PS_RDY Physical Layer receives the PS_RDY Message and", "content": "Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 297, "page_end": 296, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "31", "title": "Physical Layer forwards the PS_RDY Message to the", "content": "Protocol Layer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 297 Step Source Sink", "page_start": 297, "page_end": 297, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "32", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. Protocol Layer informs the Policy Engine that a RS_RDY has been received. The Policy Engine stops the PSTransitionTimer.", "page_start": 298, "page_end": 297, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "33", "title": "The Protocol Layer generates a GoodCRC Message", "content": "and passes it to its Physical Layer. 34 Physical Layer receives the Message and compares Physical Layer appends CRC and sends the Message. the CRC it calculated with the one sent to verify the Message.", "page_start": 298, "page_end": 297, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "35", "title": "Physical Layer forwards the GoodCRC Message to the", "content": "Protocol Layer. The Protocol Layer verifies and increments the MessageIDCounter. Stops the CRCReceiveTimer.", "page_start": 298, "page_end": 297, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": ["messages"]}
{"section_id": "36", "title": "The Protocol Layer informs the Policy Engine that", "content": "the PS_RDY Message was successfully sent. Page 298 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 298, "page_end": 298, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 16, "tags": ["policy", "protocol"]}
{"section_id": "8.3.2.3", "title": "Reclaiming Power with GotoMin Message", "content": "This is an example of a GotoMin operation. Figure 8-6 shows the Messages as they flow across the bus and within the devices to accomplish the GotoMin. Figure 8-6 Successful GotoMin operation Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine 1: Send GotoMin 2: GotoMin 3: GotoMin + CRC Start CRCReceiveTimer 4: GotoMin Check MessageID against local copy Store copy of MessageID 5: GotoMin received 6: GoodCRC 7: GoodCRC + CRC Start PSTransitionTimer 8: GoodCRC Reduce current Check and increment MessageIDCounter Stop CRCReceiveTimer 9: GotoMin sent Power supply adjusted to pre-negotiated output current 10: Send PS_RDY 11: PS_RDY 12: PS_RDY + CRC Start CRCReceiveTimer 13: PS_RDY Check MessageID against local copy Store copy of MessageID 14: PS_RDY received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop PSTransitionTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: PS_RDY sent New Power level The table below provides a detailed explanation of what happens at each labeled step in Figure 8-6 above. Table 8-6 Steps for a GotoMin Negotiation Step Source Sink", "page_start": 299, "page_end": 298, "content_type": "text", "tables": [{"table_id": "Table 8-6 Steps for a GotoMin Negotiation", "caption": "Table 8-6 Steps for a GotoMin Negotiation", "page": 299, "data": []}], "figures": [{"figure_id": "This is an example of a GotoMin operation. Figure 8-6 shows the Messages as they flow across the bus and within the", "caption": "This is an example of a GotoMin operation. Figure 8-6 shows the Messages as they flow across the bus and within the", "page": 299}, {"figure_id": "Figure 8-6 Successful GotoMin operation", "caption": "Figure 8-6 Successful GotoMin operation", "page": 299}, {"figure_id": "The table below provides a detailed explanation of what happens at each labeled step in Figure 8-6 above.", "caption": "The table below provides a detailed explanation of what happens at each labeled step in Figure 8-6 above.", "page": 299}], "subsections": [], "word_count": 178, "tags": ["messages", "power"]}
{"section_id": "1", "title": "Policy Engine tells the Protocol Layer to form a", "content": "GotoMin Message.", "page_start": 299, "page_end": 298, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": ["policy", "protocol"]}
{"section_id": "2", "title": "The Protocol Layer forms the GotoMin Message that", "content": "is passed to the Physical Layer and starts the CRCReceiveTimer.", "page_start": 299, "page_end": 298, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the GotoMin Physical Layer receives the Message and compares", "content": "Message. the CRC it calculated with the one sent to verify the Message.", "page_start": 299, "page_end": 298, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer forwards the GotoMin Message to the", "content": "Protocol Layer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 299 Step Source Sink", "page_start": 299, "page_end": 299, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. Protocol Layer informs the Policy Engine that a GotoMin Message has been received. The Policy starts the PSTransitionTimer and reduces its current draw. The Policy Engine prepares the Power supply for transition to the new power level.", "page_start": 300, "page_end": 299, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 54, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "The Protocol Layer generates a GoodCRC Message", "content": "and passes it to its Physical Layer. 7 Physical Layer receives the Message and compares Physical Layer appends CRC and sends the Message. the CRC it calculated with the one sent to verify the Message.", "page_start": 300, "page_end": 299, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "8", "title": "Physical Layer forwards the GoodCRC Message to the", "content": "Protocol Layer. The Protocol Layer verifies and increments the MessageIDCounter and stops the CRCReceiveTimer.", "page_start": 300, "page_end": 299, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "9", "title": "The Protocol Layer informs the Policy Engine that a", "content": "GotoMin Message was successfully sent. power supply Adjusts its Output to the Negotiated Value", "page_start": 300, "page_end": 299, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["policy", "protocol"]}
{"section_id": "10", "title": "Policy Engine sees the power supply has settled at", "content": "the new operating condition and tells the Protocol Layer to send a PS_RDY Message.", "page_start": 300, "page_end": 299, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["policy", "power"]}
{"section_id": "11", "title": "The Protocol Layer forms the PS_RDY Message and", "content": "starts the CRCReceiveTimer.", "page_start": 300, "page_end": 299, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 3, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer appends CRC and sends the PS_RDY Physical Layer receives the Message and compares", "content": "Message. the CRC it calculated with the one sent to verify the Message.", "page_start": 300, "page_end": 299, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": ["messages"]}
{"section_id": "13", "title": "Physical Layer forwards the PS_RDY Message to the", "content": "Protocol Layer.", "page_start": 300, "page_end": 299, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": ["messages"]}
{"section_id": "14", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. Protocol Layer informs the Policy Engine that a PS_RDY Message has been received. The Policy Engine stops the PSTransitionTimer.", "page_start": 300, "page_end": 299, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": ["messages", "protocol"]}
{"section_id": "15", "title": "The Protocol Layer generates a GoodCRC Message", "content": "and passes it to its Physical Layer. 16 Physical Layer receives the Message and compares Physical Layer appends CRC and sends the Message. the CRC it calculated with the one sent to verify the Message.", "page_start": 300, "page_end": 299, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "17", "title": "Physical Layer forwards the GoodCRC Message to the", "content": "Protocol Layer. The Protocol Layer verifies and increments the MessageIDCounter and stops the CRCReceiveTimer.", "page_start": 300, "page_end": 299, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "18", "title": "The Protocol Layer informs the Policy Engine that", "content": "the PS_RDY Message was successfully sent. Page 300 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 300, "page_end": 300, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 16, "tags": ["policy", "protocol"]}
{"section_id": "8.3.2.4", "title": "Soft Reset", "content": "This is an example of a Soft Reset operation. Figure 8-7 shows the Messages as they flow across the bus and within the devices to accomplish the Soft Reset. Figure 8-7 Soft Reset Reset Initiator Reset Responder : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Soft Reset Reset MessageIDCounter, stored MessageID and RetryCounter 2: Soft Reset 3: Soft Reset + CRC Start CRCReceiveTimer 4: Soft Reset Reset MessageIDCounter, stored MessageID and RetryCounter 5: Soft Reset received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Soft Reset sent Start SenderResponseTimer 10: Send Accept 11: Accept 12: Accept + CRC Start CRCReceiveTimer 13: Accept Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent Reset Complete, Explicit Contract negotiation Table 8-7 below provides a detailed explanation of what happens at each labeled step in Figure 8-7 above. Table 8-7 Steps for a Soft Reset Step Reset Initiator Reset Responder", "page_start": 301, "page_end": 300, "content_type": "text", "tables": [{"table_id": "Table 8-7 below provides a detailed explanation of what happens at each labeled step in Figure 8-7 above.", "caption": "Table 8-7 below provides a detailed explanation of what happens at each labeled step in Figure 8-7 above.", "page": 301, "data": []}, {"table_id": "Table 8-7 Steps for a Soft Reset", "caption": "Table 8-7 Steps for a Soft Reset", "page": 301, "data": []}], "figures": [{"figure_id": "This is an example of a Soft Reset operation. Figure 8-7 shows the Messages as they flow across the bus and within", "caption": "This is an example of a Soft Reset operation. Figure 8-7 shows the Messages as they flow across the bus and within", "page": 301}, {"figure_id": "Figure 8-7 Soft Reset", "caption": "Figure 8-7 Soft Reset", "page": 301}, {"figure_id": "Table 8-7 below provides a detailed explanation of what happens at each labeled step in Figure 8-7 above.", "caption": "Table 8-7 below provides a detailed explanation of what happens at each labeled step in Figure 8-7 above.", "page": 301}], "subsections": [], "word_count": 178, "tags": []}
{"section_id": "1", "title": "The Policy Engine directs the Protocol Layer to", "content": "generate a Soft_Reset Message to request a Soft Reset.", "page_start": 301, "page_end": 300, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["policy", "protocol"]}
{"section_id": "2", "title": "Protocol Layer resets MessageIDCounter, stored", "content": "MessageID and RetryCounter. Protocol Layer creates the Message and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 301, "page_end": 300, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Soft_Reset Message and", "content": "Soft_Reset Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 301, "page_end": 300, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Soft_Reset Message to the Protocol Layer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 301 Step Reset Initiator Reset Responder", "page_start": 301, "page_end": 301, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "5", "title": "Protocol Layer does not check the MessageID in the", "content": "incoming Message and resets MessageIDCounter, stored MessageID and RetryCounter. The Protocol Layer forwards the received Soft_Reset Message information to the Policy Engine that consumes it.", "page_start": 302, "page_end": 301, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer. 7 Physical Layer receives the GoodCRC and checks the Physical Layer appends CRC and sends the GoodCRC CRC to verify the Message. Message.", "page_start": 302, "page_end": 301, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": ["messages", "protocol"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 302, "page_end": 301, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Soft_Reset Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 302, "page_end": 301, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine tells the Protocol Layer to form an", "content": "Accept Message.", "page_start": 302, "page_end": 301, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": ["policy", "protocol"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the Message. the CRC it calculated with the one sent to verify the Message.", "page_start": 302, "page_end": 301, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "13", "title": "Protocol Layer stores the MessageID of the incoming", "content": "Message.", "page_start": 302, "page_end": 301, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Protocol Layer forwards the received Accept", "content": "Message information to the Policy Engine that consumes it.", "page_start": 302, "page_end": 301, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["protocol"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 302, "page_end": 301, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 302, "page_end": 301, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 302, "page_end": 301, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Accept Message was successfully sent. The reset is complete and protocol communication can restart. Port Partners perform an Explicit Contract negotiation to re-synchronize their state machines. Page 302 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 302, "page_end": 302, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["protocol"]}
{"section_id": "8.3.2.5", "title": "Hard Reset", "content": "The following sections describe the steps required for a USB Power Delivery Hard Reset. The Hard Reset returns the operation of the USB Power Delivery to default role and operating voltage/current. During the Hard Reset USB Power Delivery PHY Layer communications Shall be disabled preventing communication between the Port partners. Note: Hard Reset, in this case, is applied to the USB Power Delivery capability of an individual Port on which the Hard Reset is requested. A side effect of the Hard Reset is that it might reset other functions on the Port such as USB.", "page_start": 303, "page_end": 302, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 95, "tags": []}
{"section_id": "8.3.2.5.1", "title": "Source Initiated Hard Reset", "content": "This is an example of a Hard Reset operation when initiated by a Source. Figure 8-8 shows the Messages as they flow across the bus and within the devices to accomplish the Hard Reset. Figure 8-8 Source initiated Hard Reset Source Sink : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Hard Reset Start NoResponseTimer Wait tPSHardReset Reset MessageIDCounter and Reset Power Supply RetryCounter Reset Port Data Role to DFP Turn off VCONN 2: Send Hard Reset 3: Hard Reset 4: Hard Reset received Channel disabled Channel disabled Reset MessageIDCounter and RetryCounter 5: Hard Reset received Reset Power Sink Reset Port Data Role to UFP Turn off VCONN Power Sink Reset 6: Power Sink Reset 7: Hard Reset Complete Channel enabled Power Supply Reset Turn on VCONN 8: Power Supply Reset 9: Hard Reset Complete Channel enabled Hard Reset Complete 10: Send Capabilities 11: Capabilities 12: Capabilities + CRC Start CRCReceiveTimer 13: Capabilities Store copy of MessageID 14: Capabilities received 15: GoodCRC 16: GoodCRC + CRC Evaluate Capabilities 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Capabilities sent Stop NoResponseTimer Start SenderResponseTimer USB Power Delivery Specification Revision 3.0, Version 1.1 Page 303 Table 8-8 Steps for Source initiated Hard Reset Step Source Sink", "page_start": 303, "page_end": 303, "content_type": "text", "tables": [{"table_id": "Table 8-8 Steps for Source initiated Hard Reset", "caption": "Table 8-8 Steps for Source initiated Hard Reset", "page": 304, "data": []}], "figures": [{"figure_id": "This is an example of a Hard Reset operation when initiated by a Source. Figure 8-8 shows the Messages as they flow", "caption": "This is an example of a Hard Reset operation when initiated by a Source. Figure 8-8 shows the Messages as they flow", "page": 303}, {"figure_id": "Figure 8-8 Source initiated Hard Reset", "caption": "Figure 8-8 Source initiated Hard Reset", "page": 303}], "subsections": [], "word_count": 211, "tags": ["source"]}
{"section_id": "1", "title": "The Policy Engine directs the Protocol Layer to", "content": "generate Hard Reset Signaling. The Policy Engine starts the NoResponseTimer and requests the Device Policy Manager to reset the power supply to USB Default Operation. The Policy Engine requests the Device Policy Manager to reset the Port Data Role to DFP and to turn off VCONN if this is on.", "page_start": 304, "page_end": 303, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 50, "tags": ["policy", "protocol"]}
{"section_id": "2", "title": "Protocol Layer resets MessageIDCounter and", "content": "RetryCounter. Protocol Layer requests the Physical Layer send Hard Reset Signaling. 3 Physical Layer sends Hard Reset Signaling and then Physical Layer receives the Hard Reset Signaling and disables the PHY Layer communications channel for disables the PHY Layer communications channel for transmission and reception. transmission and reception.", "page_start": 304, "page_end": 303, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "protocol"]}
{"section_id": "4", "title": "Physical Layer informs the Protocol Layer of the Hard", "content": "Reset. Protocol Layer resets MessageIDCounter and RetryCounter.", "page_start": 304, "page_end": 303, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": ["protocol"]}
{"section_id": "5", "title": "The Protocol Layer informs the Policy Engine of the", "content": "Hard Reset. The Policy Engine requests the Device Policy Manager to reset the Power Sink to default operation. The Policy Engine requests the Device Policy Manager to reset the Port Data Role to UFP and to turn off VCONN if this is on.", "page_start": 304, "page_end": 303, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 43, "tags": ["policy", "protocol"]}
{"section_id": "6", "title": "The Power Sink returns to default operation.", "content": "The Policy Engine informs the Protocol Layer that the Power Sink has been reset.", "page_start": 304, "page_end": 303, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["power", "sink"]}
{"section_id": "7", "title": "The Protocol Layer informs the PHY Layer that the", "content": "Hard Reset is complete. The PHY Layer enables the PHY Layer communications channel for transmission and reception.", "page_start": 304, "page_end": 303, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["protocol"]}
{"section_id": "8", "title": "The power supply is reset to default operation and", "content": "VCONN is turned on. The Policy Engine informs the Protocol Layer that the power supply has been reset.", "page_start": 304, "page_end": 303, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["power"]}
{"section_id": "9", "title": "The Protocol Layer informs the PHY Layer that the", "content": "Hard Reset is complete. The PHY Layer enables the PHY Layer communications channel for transmission and reception. The reset is complete and protocol communication can restart.", "page_start": 304, "page_end": 303, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine directs the Protocol Layer to send a", "content": "Source_Capabilities Message that represents the power supply’s present capabilities.", "page_start": 304, "page_end": 303, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["policy", "protocol"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 304, "page_end": 303, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Source_Capabilities", "content": "Source_Capabilities Message. Message and checks the CRC to verify the Message.", "page_start": 304, "page_end": 303, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": ["source"]}
{"section_id": "13", "title": "Physical Layer removes the CRC and forwards the", "content": "Source_Capabilities Message to the Protocol Layer. Page 304 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Sink", "page_start": 304, "page_end": 304, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": []}
{"section_id": "14", "title": "Protocol Layer stores the MessageID of the incoming", "content": "Message. The Protocol Layer forwards the received Source_Capabilities Message information to the Policy Engine that consumes it.", "page_start": 305, "page_end": 304, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["messages", "protocol"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 305, "page_end": 304, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 305, "page_end": 304, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 305, "page_end": 304, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Source_Capabilities Message was successfully sent. Policy Engine stops the NoResponseTimer and starts the SenderResponseTimer. USB Power Delivery communication is re-established. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 305", "page_start": 305, "page_end": 305, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 42, "tags": ["protocol"]}
{"section_id": "8.3.2.5.2", "title": "Sink Initiated Hard Reset", "content": "This is an example of a Hard Reset operation when initiated by a Sink. Figure 8-9 shows the Messages as they flow across the bus and within the devices to accomplish the Hard Reset. Figure 8-9 Sink Initiated Hard Reset Source Sink : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Hard Reset Reset MessageIDCounter, Reset Power Sink stored copy of MessageID and Reset Port Data Role to UFP RetryCounter Turn off VCONN 2: Send Hard Reset 3: Hard Reset 4: Hard Reset received Channel disabled Reset MessageIDCounter, stored Channel disabled copy of MessageID and RetryCounter Power Sink Reset 5: Hard Reset received 6: Power Sink Reset 7: Hard Reset Complete Start NoResponseTimer Reset Power Supply Channel enabled Reset Port Data Role to DFP Turn off VCONN Power Supply Reset Turn on VCONN 8: Power Supply Reset 9: Hard Reset Complete Channel enabled Hard Reset Complete 10: Send Capabilities 11: Capabilities 12: Capabilities + CRC Start CRCReceiveTimer 13: Capabilities Store copy of MessageID 14: Capabilities received 15: GoodCRC 16: GoodCRC + CRC Evaluate Capabilities 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Capabilities sent Stop NoResponseTimer Start SenderResponseTimer Page 306 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 8-9 Steps for Sink initiated Hard Reset Step Source Sink", "page_start": 306, "page_end": 306, "content_type": "text", "tables": [{"table_id": "Table 8-9 Steps for Sink initiated Hard Reset", "caption": "Table 8-9 Steps for Sink initiated Hard Reset", "page": 307, "data": []}], "figures": [{"figure_id": "This is an example of a Hard Reset operation when initiated by a Sink. Figure 8-9 shows the Messages as they flow", "caption": "This is an example of a Hard Reset operation when initiated by a Sink. Figure 8-9 shows the Messages as they flow", "page": 306}, {"figure_id": "Figure 8-9 Sink Initiated Hard Reset", "caption": "Figure 8-9 Sink Initiated Hard Reset", "page": 306}], "subsections": [], "word_count": 217, "tags": ["sink"]}
{"section_id": "1", "title": "The Policy Engine directs the Protocol Layer to", "content": "generate Hard Reset Signaling. The Policy Engine requests the Device Policy Manager to reset the power supply to USB Default Operation. The Policy Engine requests the Device Policy Manager to reset the Port Data Role to UFP and to turn off VCONN if this is on.", "page_start": 307, "page_end": 306, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 46, "tags": ["policy", "protocol"]}
{"section_id": "2", "title": "Protocol Layer resets MessageIDCounter, stored", "content": "copy of MessageID and RetryCounter. Protocol Layer requests the Physical Layer send Hard Reset Signaling. 3 Physical Layer receives the Hard Reset Signaling and Physical Layer sends the Hard Reset Signaling and disables the PHY Layer communications channel for then disables the PHY Layer communications channel transmission and reception. for transmission and reception.", "page_start": 307, "page_end": 306, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 53, "tags": ["messages", "protocol"]}
{"section_id": "4", "title": "Physical Layer informs the Protocol Layer of the", "content": "Hard Reset. Protocol Layer resets MessageIDCounter, stored copy of MessageID and RetryCounter.", "page_start": 307, "page_end": 306, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": ["protocol"]}
{"section_id": "5", "title": "The Protocol Layer Informs the Policy Engine of the", "content": "Hard Reset. The Policy Engine starts the NoResponseTimer and requests the Device Policy Manager to reset the Power Sink to default operation. The Policy Engine requests the Device Policy Manager to reset the Port Data Role to DFP and to turn off VCONN if this is on.", "page_start": 307, "page_end": 306, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 47, "tags": ["policy", "protocol"]}
{"section_id": "6", "title": "The Power Sink returns to USB Default Operation.", "content": "The Policy Engine informs the Protocol Layer that the Power Sink has been reset.", "page_start": 307, "page_end": 306, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["power", "sink"]}
{"section_id": "7", "title": "The Protocol Layer informs the PHY Layer that the", "content": "Hard Reset is complete. The PHY Layer enables the PHY Layer communications channel for transmission and reception.", "page_start": 307, "page_end": 306, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["protocol"]}
{"section_id": "8", "title": "The power supply is reset to USB Default Operation", "content": "and VCONN is turned on. The Policy Engine informs the Protocol Layer that the power supply has been reset.", "page_start": 307, "page_end": 306, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["power"]}
{"section_id": "9", "title": "The Protocol Layer informs the PHY Layer that the", "content": "Hard Reset is complete. The PHY Layer enables the PHY Layer communications channel for transmission and reception. The reset is complete and protocol communication can restart.", "page_start": 307, "page_end": 306, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine directs the Protocol Layer to send a", "content": "Source_Capabilities Message that represents the power supply’s present capabilities.", "page_start": 307, "page_end": 306, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["policy", "protocol"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 307, "page_end": 306, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Source_Capabilities", "content": "Source_Capabilities Message. Message and checks the CRC to verify the Message.", "page_start": 307, "page_end": 306, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": ["source"]}
{"section_id": "13", "title": "Physical Layer removes the CRC and forwards the", "content": "Source_Capabilities Message to the Protocol Layer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 307 Step Source Sink", "page_start": 307, "page_end": 307, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": []}
{"section_id": "14", "title": "Protocol Layer stores the MessageID of the incoming", "content": "Message. The Protocol Layer forwards the received Source_Capabilities Message information to the Policy Engine that consumes it.", "page_start": 308, "page_end": 307, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["messages", "protocol"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 308, "page_end": 307, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 308, "page_end": 307, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 308, "page_end": 307, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Source_Capabilities Message was successfully sent. Policy Engine stops the NoResponseTimer and starts the SenderResponseTimer. USB Power Delivery communication is re-established. Page 308 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 308, "page_end": 308, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 42, "tags": ["protocol"]}
{"section_id": "8.3.2.5.3", "title": "Source Initiated Hard Reset – Sink Long Reset", "content": "This is an example of a Hard Reset operation when initiated by a Source. In this example the Sink is slow responding to the reset causing the Source to send multiple Source_Capabilities Messages before it receives a GoodCRC Message response. Figure 8-10 shows the Messages as they flow across the bus and within the devices to accomplish the Hard Reset. Figure 8-10 Source initiated reset - Sink long reset Source Sink : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Hard Reset 2: Send Hard Reset Start NoResponseTimer 3: Hard Reset Wait tPSHardReset 4: Hard Reset received Reset Power Supply 5: Hard Reset received Reset Port Data Role to DFP Channel disabled Turn off VCONN Channel disabled Reset Power Sink Reset Port Data Role to UFP Turn off VCONN Power Supply Reset Turn on VCONN 6: Power Supply Reset Reset MessageIDCounter, stored copy of MessageID and RetryCounter 7: Hard Reset Complete Channel enabled 8: Send Capabilities 9: Capabilities 10: Capabilities + CRC Run SourceCapabilityTimer Power Sink Reset Send Capabilities messages until GoodCRC response is 11: Power Sink Reset received. Reset MessageIDCounter, stored copy of MessageID and RetryCounter 12: Hard Reset Complete Channel enabled Hard Reset Complete 13: Send Capabilities 14: Capabilities 15: Capabilities + CRC Start CRCReceiveTimer 16: Capabilities Store copy of MessageID 17: Capabilities received 18: GoodCRC 19: GoodCRC + CRC 20: GoodCRC Evaluate Capabilities Check and increment MessageIDCounter Stop CRCReceiveTimer 21: Capabilities sent Stop SourceCapabilitiesTimer Stop NoResponseTimer Start SenderResponseTimer USB Power Delivery Specification Revision 3.0, Version 1.1 Page 309 Table 8-10 Steps for Source initiated Hard Reset – Sink long reset Step Source Sink", "page_start": 309, "page_end": 309, "content_type": "text", "tables": [{"table_id": "Table 8-10 Steps for Source initiated Hard Reset – Sink long reset", "caption": "Table 8-10 Steps for Source initiated Hard Reset – Sink long reset", "page": 310, "data": []}], "figures": [{"figure_id": "response. Figure 8-10 shows the Messages as they flow across the bus and within the devices to accomplish the Hard", "caption": "response. Figure 8-10 shows the Messages as they flow across the bus and within the devices to accomplish the Hard", "page": 309}, {"figure_id": "Figure 8-10 Source initiated reset - Sink long reset", "caption": "Figure 8-10 Source initiated reset - Sink long reset", "page": 309}], "subsections": [], "word_count": 273, "tags": ["source", "sink"]}
{"section_id": "1", "title": "The Policy Engine directs the Protocol Layer to", "content": "generate Hard Reset Signaling. The Policy Engine starts the NoResponseTimer and requests the Device Policy Manager to reset the power supply to USB Default Operation. The Policy Engine requests the Device Policy Manager to reset the Port Data Role to DFP and to turn off VCONN if this is on.", "page_start": 310, "page_end": 309, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 50, "tags": ["policy", "protocol"]}
{"section_id": "2", "title": "Protocol Layer resets MessageIDCounter, stored", "content": "copy of MessageID and RetryCounter. Protocol Layer requests the Physical Layer send Hard Reset Signaling. 3 Physical Layer sends the Hard Reset Signaling and Physical Layer receives the Hard Reset Signaling and then disables the PHY Layer communications disables the PHY Layer communications channel for channel for transmission and reception. transmission and reception.", "page_start": 310, "page_end": 309, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 53, "tags": ["messages", "protocol"]}
{"section_id": "4", "title": "Physical Layer informs the Protocol Layer of the Hard", "content": "Reset. Protocol Layer resets MessageIDCounter, stored copy of MessageID and RetryCounter.", "page_start": 310, "page_end": 309, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": ["protocol"]}
{"section_id": "5", "title": "The Protocol Layer Informs the Policy Engine of the", "content": "Hard Reset. The Policy Engine requests the Device Policy Manager to reset the Power Sink to default operation. The Policy Engine requests the Device Policy Manager to reset the Port Data Role to UFP and to turn off VCONN if this is on.", "page_start": 310, "page_end": 309, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 43, "tags": ["policy", "protocol"]}
{"section_id": "6", "title": "The power supply is reset to USB Default Operation", "content": "and VCONN is turned on. The Policy Engine informs the Protocol Layer that the power supply has been reset.", "page_start": 310, "page_end": 309, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["power"]}
{"section_id": "7", "title": "The Protocol Layer informs the PHY Layer that the", "content": "Hard Reset is complete. The PHY Layer enables the PHY Layer communications channel for transmission and reception. The reset is complete and protocol communication can restart.", "page_start": 310, "page_end": 309, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": ["protocol"]}
{"section_id": "8", "title": "Policy Engine directs the Protocol Layer to send a", "content": "Source_Capabilities Message that represents the power supply’s present capabilities. Policy Engine starts the SourceCapabilityTimer. The SourceCapabilityTimer times out one or more times until a GoodCRC Message response is received.", "page_start": 310, "page_end": 309, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": ["policy", "protocol"]}
{"section_id": "9", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 310, "page_end": 309, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "10", "title": "Physical Layer appends CRC and sends the Note: Source_Capabilities Message not received since", "content": "Source_Capabilities Message. channel is disabled.", "page_start": 310, "page_end": 309, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": ["messages", "source"]}
{"section_id": "11", "title": "The Power Sink returns to USB Default Operation.", "content": "The Policy Engine informs the Protocol Layer that the Power Sink has been reset.", "page_start": 310, "page_end": 309, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["power", "sink"]}
{"section_id": "12", "title": "The Protocol Layer informs the PHY Layer that the", "content": "Hard Reset is complete. The PHY Layer enables the PHY Layer communications channel for transmission and reception. Page 310 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Sink The reset is complete and protocol communication can restart.", "page_start": 310, "page_end": 310, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 39, "tags": ["protocol"]}
{"section_id": "13", "title": "Policy Engine directs the Protocol Layer to send a", "content": "Source_Capabilities Message that represents the power supply’s present capabilities. Starts the SourceCapabilityTimer.", "page_start": 311, "page_end": 310, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": ["policy", "protocol"]}
{"section_id": "14", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 311, "page_end": 310, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "15", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Source_Capabilities", "content": "Source_Capabilities Message. Message and checks the CRC to verify the Message.", "page_start": 311, "page_end": 310, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": ["source"]}
{"section_id": "16", "title": "Physical Layer removes the CRC and forwards the", "content": "Source_Capabilities Message to the Protocol Layer.", "page_start": 311, "page_end": 310, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "17", "title": "Protocol Layer stores the MessageID of the incoming", "content": "Message. The Protocol Layer forwards the received Source_Capabilities Message information to the Policy Engine that consumes it.", "page_start": 311, "page_end": 310, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["messages", "protocol"]}
{"section_id": "18", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 311, "page_end": 310, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "19", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 311, "page_end": 310, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "20", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 311, "page_end": 310, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "21", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Source_Capabilities Message was successfully sent. Policy Engine stops the SourceCapabilityTimer, stops the NoResponseTimer and starts the SenderResponseTimer. USB Power Delivery communication is re-established. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 311", "page_start": 311, "page_end": 311, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 45, "tags": ["protocol"]}
{"section_id": "8.3.2.6", "title": "Power Role Swap", "content": "", "page_start": 312, "page_end": 311, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power"]}
{"section_id": "8.3.2.6.1", "title": "Source Initiated Power Role Swap without subsequent Power Negotiation", "content": "This is an example of a successful Power Role Swap operation initiated by a Port which initially, at the start of this Message sequence, is acting as a Source and therefore has Rp pulled up on its CC wire. It does not include any subsequent Power Negotiation which is required in order to establish an Explicit Contract (see Section 8.3.2.2). There are four distinct phases to the Power Role Swap negotiation: 1. A PR_Swap Message is sent. 2. An Accept Message in response to the PR_Swap Message. 3. The new Sink sets its power output to vSafe0V, then asserts Rd and sends a PS_RDY Message when this process is complete. 4. The new Source asserts Rp, then sets its power output to vSafe5V and sends a PS_RDY Message when it is ready to supply power. Figure 8-11 shows the Messages as they flow across the bus and within the devices to accomplish the Power Role Swap sequence. Page 312 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-11 Successful Power Role Swap Sequence Initiated by the Source Initial Source Port Initial Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send PR_Swap 2:PR_Swap 3: PR_Swap + CRC Start CRCReceiveTimer 4: PR_Swap Check MessageID against local copy Store copy of MessageID 5: PR_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:PR_Swap sent Evaluate PR_Swap Start SenderResponseTimer request 10: Send Accept 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Tell Power Supply to stop sourcing power Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent Start PSSourceOffTimer Power Supply stops sourcing power Tell Power Sink to stop CC -> Rd sinking current 19: Send PS_RDY Port Power Role -> Sink 20: PS_RDY 21: PS_RDY + CRC Start CRCReceiveTimer 22: PS_RDY Check MessageID against local copy Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Port Power Role -> Source Check and increment MessageIDCounter Stop CRCReceiveTimer Stop PSSourceOffTimer CC -> Rp 27: PS_RDY sent Set Power Supply to 5V output Start PSSourceOnTimer Power Supply reaches 5V output 28: Send PS_RDY 29: PS_RDY 30: PS_RDY + CRC 31: PS_RDY Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 32: PS_RDY received 33: GoodCRC 34: GoodCRC + CRC Stop PSSourceOnTimer 35: GoodCRC Tell Power Sink to start sinking power Check and increment MessageIDCounter Reset Protocol Layer Stop CRCReceiveTimer 36: PS_RDY sent Reset CapsCounter Reset Protocol Layer Start SwapSourceStartTimer New Power Roles USB Power Delivery Specification Revision 3.0, Version 1.1 Page 313 Table 8-11below provides a detailed explanation of what happens at each labeled step in Figure 8-11 above. Table 8-11 Steps for a Successful Source Initiated Power Role Swap Sequence Step Initial Source Port Initially Sink Port 1 The Port has Port Power Role set to Source and the The Port has Port Power Role set to Sink with the Rd Rp pull up on its CC wire. pull down on its CC wire. Policy Engine directs the Protocol Layer to send a PR_Swap Message.", "page_start": 312, "page_end": 313, "content_type": "text", "tables": [{"table_id": "Table 8-11below provides a detailed explanation of what happens at each labeled step in Figure 8-11 above.", "caption": "Table 8-11below provides a detailed explanation of what happens at each labeled step in Figure 8-11 above.", "page": 314, "data": []}, {"table_id": "Table 8-11 Steps for a Successful Source Initiated Power Role Swap Sequence", "caption": "Table 8-11 Steps for a Successful Source Initiated Power Role Swap Sequence", "page": 314, "data": []}], "figures": [{"figure_id": "Figure 8-11 shows the Messages as they flow across the bus and within the devices to accomplish the Power Role", "caption": "Figure 8-11 shows the Messages as they flow across the bus and within the devices to accomplish the Power Role", "page": 312}, {"figure_id": "Figure 8-11 Successful Power Role Swap Sequence Initiated by the Source", "caption": "Figure 8-11 Successful Power Role Swap Sequence Initiated by the Source", "page": 313}, {"figure_id": "Table 8-11below provides a detailed explanation of what happens at each labeled step in Figure 8-11 above.", "caption": "Table 8-11below provides a detailed explanation of what happens at each labeled step in Figure 8-11 above.", "page": 314}], "subsections": [], "word_count": 555, "tags": ["negotiation", "power", "source"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 314, "page_end": 313, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the PR_Swap Physical Layer receives the PR_Swap Message and", "content": "Message. checks the CRC to verify the Message.", "page_start": 314, "page_end": 313, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "PR_Swap Message to the Protocol Layer.", "page_start": 314, "page_end": 313, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PR_Swap Message information to the Policy Engine that consumes it.", "page_start": 314, "page_end": 313, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 314, "page_end": 313, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 314, "page_end": 313, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 314, "page_end": 313, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the PR_Swap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 314, "page_end": 313, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine evaluates the PR_Swap Message sent by", "content": "the Source and decides that it is able and willing to do the Power Role Swap. It tells the Protocol Layer to form an Accept Message.", "page_start": 314, "page_end": 313, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": ["messages", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the Accept the CRC it calculated with the one sent to verify the Message. Accept Message.", "page_start": 314, "page_end": 313, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PR_Swap Message information to the Policy Engine that consumes it.", "page_start": 314, "page_end": 313, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine requests its power supply to stop", "content": "supplying power and stops the SenderResponseTimer.", "page_start": 314, "page_end": 313, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": ["policy", "power"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 314, "page_end": 313, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message. Page 314 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Initial Source Port Initially Sink Port", "page_start": 314, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 32, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 315, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Accept Message was successfully sent. The Policy Engine starts the PSSourceOffTimer and tells the power supply to stop sinking current.", "page_start": 315, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 32, "tags": ["protocol"]}
{"section_id": "19", "title": "The Policy Engine determines its power supply is no", "content": "longer supplying VBUS. The Policy Engine requests the Device Policy Manager to assert the Rd pull down on the CC wire. The Policy Engine then directs the Protocol Layer to generate a PS_RDY Message, with the Port Power Role bit in the Message Header set to “Sink”, to tell its Port Partner that it can begin to Source VBUS.", "page_start": 315, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 59, "tags": ["policy", "power"]}
{"section_id": "20", "title": "Protocol Layer sets the Port Power Role bit in the", "content": "Message Header set to “Sink”, creates the Message and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 315, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["power", "protocol"]}
{"section_id": "21", "title": "Physical Layer appends CRC and sends the PS_RDY Physical Layer receives the PS_RDY Message and", "content": "Message. checks the CRC to verify the Message.", "page_start": 315, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "22", "title": "Physical Layer removes the CRC and forwards the", "content": "PS_RDY Message to the Protocol Layer.", "page_start": 315, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "23", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PS_RDY Message information to the Policy Engine that consumes it. The Policy Engine stops the PSSourceOffTimer, directs the Device Policy Manager to apply the Rp pull up and then starts switching the power supply to vSafe5V Source operation.", "page_start": 315, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 61, "tags": ["messages", "protocol"]}
{"section_id": "24", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 315, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "25", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 315, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "26", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 315, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "27", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the PS_RDY Message was successfully sent. Policy Engine starts PSSourceOnTimer.", "page_start": 315, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "28", "title": "Policy Engine, when its power supply is ready to", "content": "supply power, tells the Protocol Layer to form a PS_RDY Message. The Port Power Role bit used in this and subsequent Message Headers is now set to “Source”.", "page_start": 315, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": ["policy", "power"]}
{"section_id": "29", "title": "Protocol Layer creates the PS_RDY Message and", "content": "passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 315, "page_end": 314, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": ["messages", "protocol"]}
{"section_id": "30", "title": "Physical Layer receives the PS_RDY Message and Physical Layer appends a CRC and sends the PS_RDY", "content": "compares the CRC it calculated with the one sent to Message. verify the Message. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 315 Step Initial Source Port Initially Sink Port", "page_start": 315, "page_end": 315, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 31, "tags": ["messages"]}
{"section_id": "31", "title": "Physical Layer removes the CRC and forwards the", "content": "PS_RDY Message to the Protocol Layer.", "page_start": 316, "page_end": 315, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "32", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PS_RDY Message information to the Policy Engine that consumes it.", "page_start": 316, "page_end": 315, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "33", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 316, "page_end": 315, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "34", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. The Policy Engine stops the compares the CRC it calculated with the one sent to PSSourceOnTimer, informs the power supply it can verify the Message. now Sink power and resets the Protocol Layer.", "page_start": 316, "page_end": 315, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages"]}
{"section_id": "35", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 316, "page_end": 315, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "36", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the PS_RDY Message was successfully sent. The Policy Engine resets the CapsCounter, resets the Protocol Layer and starts the SwapSourceStartTimer which must timeout before sending any Source_Capabilities Messages. The Power Role Swap is complete, the roles have been reversed and the Port Partners are free to negotiate for more power. Page 316 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 316, "page_end": 316, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 71, "tags": ["protocol"]}
{"section_id": "8.3.2.6.2", "title": "Sink Initiated Power Role Swap without subsequent Power Negotiation", "content": "This is an example of a successful Power Role Swap operation initiated by a Port which initially, at the start of this Message sequence, is acting as a Sink and therefore has Rd pulled down on its CC wire. It does not include any subsequent Power Negotiation which is required in order to establish an Explicit Contract (see Section 8.3.2.2). There are four distinct phases to the Power Role Swap negotiation: 1. A PR_Swap Message is sent. 2. An Accept Message in response to the PR_Swap Message. 3. The new Sink sets its power output to vSafe0V, then asserts Rd and sends a PS_RDY Message when this process is complete. 4. The new Source asserts Rp, then sets its power output to vSafe5V and sends a PS_RDY Message when it is ready to supply power. Figure 8-12 shows the Messages as they flow across the bus and within the devices to accomplish the Power Role Swap. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 317 Figure 8-12 Successful Power Role Swap Sequence Initiated by the Sink Initial Sink Port Initial Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send PR_Swap 2:PR_Swap 3: PR_Swap + CRC Start CRCReceiveTimer 4: PR_Swap Check MessageID against local copy Store copy of MessageID 6: GoodCRC 5: PR_Swap received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:PR_Swap sent Evaluate PR_Swap Start SenderResponseTimer request 10: Send Accept 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC S T t e a l r l t s P P i o n S w k S i e n o r g u S r c c i u n e r k O r e t f o f n T t s im to e p r Check an S d t o in p c C re R m C e R n e t c M ei e v s e s T a i g m e e ID r Counter 18: Accept sent Tell Power Supply to stop sourcing power Power Supply stops sourcing power CC -> Rd 19: Send PS_RDY Port Power Role -> Sink 20: PS_RDY 21: PS_RDY + CRC 22: PS_RDY Check MessageID against local copy Start CRCReceiveTimer Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC Port Power Role -> Source 26: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Stop PSSourceOffTimer CC -> Rp 27: PS_RDY sent Set Power Supply to 5V output Start PSSourceOnTimer Power Supply reaches 5V output 28: Send PS_RDY 29: PS_RDY 30: PS_RDY + CRC Start CRCReceiveTimer 31: PS_RDY Check MessageID against local copy Store copy of MessageID 33: GoodCRC 32: PS_RDY received 34: GoodCRC + CRC 35: GoodCRC Stop PSSourceOnTimer Check and increment MessageIDCounter Tell Power Supply to start Stop CRCReceiveTimer sinking power Reset Protocol Layer 36: PS_RDY sent Reset CapsCounter Reset Protocol Layer Start SwapSourceStartTimer New Power Roles Page 318 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 8-12 Steps for a Successful Sink Initiated Power Role Swap Sequence Step Initial Sink Port Initial Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a PR_Swap Message.", "page_start": 317, "page_end": 318, "content_type": "text", "tables": [{"table_id": "Table 8-12 Steps for a Successful Sink Initiated Power Role Swap Sequence", "caption": "Table 8-12 Steps for a Successful Sink Initiated Power Role Swap Sequence", "page": 319, "data": []}], "figures": [{"figure_id": "Figure 8-12 shows the Messages as they flow across the bus and within the devices to accomplish the Power Role", "caption": "Figure 8-12 shows the Messages as they flow across the bus and within the devices to accomplish the Power Role", "page": 317}, {"figure_id": "Figure 8-12 Successful Power Role Swap Sequence Initiated by the Sink", "caption": "Figure 8-12 Successful Power Role Swap Sequence Initiated by the Sink", "page": 318}], "subsections": [], "word_count": 611, "tags": ["negotiation", "power", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the PR_Swap Physical Layer receives the PR_Swap Message and", "content": "Message. checks the CRC to verify the Message.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "PR_Swap Message to the Protocol Layer.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PR_Swap Message information to the Policy Engine that consumes it.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the PR_Swap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine evaluates the PR_Swap Message sent by", "content": "the Sink and decides that it is able and willing to do the Power Role Swap. It tells the Protocol Layer to form an Accept Message.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": ["messages", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the Accept the CRC it calculated with the one sent to verify the Message. Accept Message.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PR_Swap Message information to the Policy Engine that consumes it.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer,", "content": "starts the PSSourceOffTimer and tells the power supply to stop sinking current.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 319, "page_end": 318, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 319 Step Initial Sink Port Initial Source Port", "page_start": 319, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Accept Message was successfully sent. The Policy Engine tells the power supply to stop supplying power.", "page_start": 320, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": ["protocol"]}
{"section_id": "19", "title": "The Policy Engine determines its power supply is no", "content": "longer supplying VBUS. The Policy Engine requests the Device Policy Manager to assert the Rd pull down on the CC wire. The Policy Engine then directs the Protocol Layer to generate a PS_RDY Message, with the Port Power Role bit in the Message Header set to “Sink”, to tell its Port Partner that it can begin to Source VBUS.", "page_start": 320, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 59, "tags": ["policy", "power"]}
{"section_id": "20", "title": "Protocol Layer sets the Port Power Role bit in the", "content": "Message Header set to “Sink”, creates the Message and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 320, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["power", "protocol"]}
{"section_id": "21", "title": "Physical Layer receives the PS_RDY Message and Physical Layer appends CRC and sends the PS_RDY", "content": "checks the CRC to verify the Message. Message.", "page_start": 320, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "22", "title": "Physical Layer removes the CRC and forwards the", "content": "PS_RDY Message to the Protocol Layer.", "page_start": 320, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "23", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PS_RDY Message information to the Policy Engine that consumes it. The Policy Engine stops the PSSourceOffTimer, directs the Device Policy Manager to apply the Rp pull up and then starts switching the power supply to vSafe5V Source operation.", "page_start": 320, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 62, "tags": ["messages", "protocol"]}
{"section_id": "24", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 320, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "25", "title": "Physical Layer appends CRC and sends the GoodCRC Physical Layer receives the GoodCRC Message and", "content": "Message. checks the CRC to verify the Message.", "page_start": 320, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "26", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 320, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "27", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the PS_RDY Message was successfully sent. Policy Engine starts PSSourceOnTimer.", "page_start": 320, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "28", "title": "Policy Engine, when its power supply is ready to", "content": "supply power, tells the Protocol Layer to form a PS_RDY Message. The Port Power Role bit used in this and subsequent Message Headers is now set to “Source”.", "page_start": 320, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": ["policy", "power"]}
{"section_id": "29", "title": "Protocol Layer creates the PS_RDY Message and", "content": "passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 320, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": ["messages", "protocol"]}
{"section_id": "30", "title": "Physical Layer appends a CRC and sends the PS_RDY Physical Layer receives the PS_RDY Message and", "content": "Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 320, "page_end": 319, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "31", "title": "Physical Layer removes the CRC and forwards the", "content": "PS_RDY Message to the Protocol Layer. Page 320 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Initial Sink Port Initial Source Port", "page_start": 320, "page_end": 320, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": []}
{"section_id": "32", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PS_RDY Message information to the Policy Engine that consumes it. The Policy Engine stops the PSSourceOnTimer, informs the power supply that it can start consuming power.", "page_start": 321, "page_end": 320, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 49, "tags": ["messages", "protocol"]}
{"section_id": "33", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 321, "page_end": 320, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "34", "title": "Physical Layer receives GoodCRC Message and Physical Layer appends a CRC and sends the GoodCRC", "content": "compares the CRC it calculated with the one sent to Message. The Policy Engine stops the verify the Message. PSSourceOnTimer, informs the power supply it can now Sink power and resets the Protocol Layer.", "page_start": 321, "page_end": 320, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages"]}
{"section_id": "35", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC to the Protocol Layer.", "page_start": 321, "page_end": 320, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": []}
{"section_id": "36", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the PS_RDY Message was successfully sent. The Policy Engine resets the CapsCounter, resets the Protocol Layer and starts the SwapSourceStartTimer which must timeout before sending any Source_Capabilities Messages. The Power Role Swap is complete, the roles have been reversed and the Port Partners are free to negotiate for more power. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 321", "page_start": 321, "page_end": 321, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 71, "tags": ["protocol"]}
{"section_id": "8.3.2.7", "title": "Fast Role Swap", "content": "This is an example of a successful Fast Role Swap operation initiated by a Port that is initially a Source and therefore has Rp pulled up on its CC Wire and which has lost power and needs to get vSafe5V quickly. It does not include any subsequent Power Negotiation which is required in order to establish an Explicit Contract (see Section 8.3.2.2). There are several distinct phases to the Fast Role Swap negotiation: 1. The initial Source stops driving its power output which starts transitioning to vSafe0V and signals Fast Role Swap on the CC Wire. 2. The initial Sink stops Sinking power. At this point the new Source still has Rd asserted and the new Sink still has Rp asserted. 3. An FR_Swap Message is sent by the new Source within tFRSwapInit of detecting the Fast Swap signal. 4. An Accept Message is sent by the new Sink in response to the FR_Swap Message. 5. The new Sink asserts Rd and sends a PS_RDY Message indicating that the voltage on V is at or below vSafe5V. BUS 6. The new Source asserts Rp and sends a PS_RDY Message indicating that it is acting as a Source and is supplying vSafe5V. Note: that the new Source can start applying at any point V is at or below vSafe5V but will start driving BUS V to vSafe5V no later than tSrcFRSwap after detecting that V has dropped below vSafe5V. This can happen at BUS BUS any point after the Fast Role Swap signal is detected. Figure 8-13 shows the Messages as they flow across the bus and within the devices to accomplish the Fast Role Swap. Page 322 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-13 Successful Fast Role Swap Sequence Initial Sink Port Initial Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp Fast Swap signal (CC r d F r r R i F v S R e w n S a w to p a C G p a T n b x d l e o t T h r x ro ) ugh Tell Po S w i e g r n s S a w l u F p it a p c s l h y t t S t o o w S S a i t n p o k p o o n s p o t e h u r e r a c C t i i n o C g n W p i o r w e er and Fast Role Swap signal detected on CC Wire Tell Power Supply to stop sinking current. 1: Send FR_Swap 2:FR_Swap 3: FR_Swap + CRC Start CRCReceiveTimer 4: FR_Swap Check MessageID against local copy Store copy of MessageID 6: GoodCRC 5: FR_Swap received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:FR_Swap sent Evaluate FR_Swap request Start SenderResponseTimer 10: Send Accept 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC St S op ta S rt e P n S d S er o R u e rc s e p O on ff s T e im Ti e m r er Check an S d t o in p c C re R m C e R n e t c M ei e v s e s T a i g m e e ID r Counter 18: Accept sent Power Supply acting as a Sink and VBUS at or below vSafe5V CC -> Rd 19: Send PS_RDY Port Power Role -> Sink 20: PS_RDY 21: PS_RDY + CRC 22: PS_RDY Check MessageID against local copy Start CRCReceiveTimer Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC Port Power Role -> Source 26: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 27: PS_RDY sent Start PSSourceOnTimer vSafe5V is being sourced by the new Source Stop PSSourceOffTimer CC -> Rp 28: Send PS_RDY 29: PS_RDY 30: PS_RDY + CRC Start CRCReceiveTimer 31: PS_RDY Check MessageID against local copy Store copy of MessageID 33: GoodCRC 32: PS_RDY received 34: GoodCRC + CRC 35: GoodCRC Check an S d t o in p c C re R m C e R n e t c M ei e v s e s T a i g m e e ID r Counter S R to e p s P et S P S r o o u to rc c e o O l L n a T y im er er 36: PS_RDY sent Reset CapsCounter Reset Protocol Layer Start SwapSourceStartTimer New Power Roles USB Power Delivery Specification Revision 3.0, Version 1.1 Page 323 Table 8-13 Steps for a Successful Fast Role Swap Sequence Step Initial Sink Port Initial Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. The Device Policy Manager detects Fast Swap on the The Device Policy Manager tells the Power Supply to CC Wire and tells the power supply to stop sinking stop sourcing power and switch to Sink operation. current. The Device Policy Manager signals Fast Swap on the CC Wire by driving CC to ground with a resistance of less than rFRSwapTx for at least tFRSwapTx.", "page_start": 322, "page_end": 323, "content_type": "text", "tables": [{"table_id": "Table 8-13 Steps for a Successful Fast Role Swap Sequence", "caption": "Table 8-13 Steps for a Successful Fast Role Swap Sequence", "page": 324, "data": []}], "figures": [{"figure_id": "Figure 8-13 shows the Messages as they flow across the bus and within the devices to accomplish the Fast Role Swap.", "caption": "Figure 8-13 shows the Messages as they flow across the bus and within the devices to accomplish the Fast Role Swap.", "page": 322}, {"figure_id": "Figure 8-13 Successful Fast Role Swap Sequence", "caption": "Figure 8-13 Successful Fast Role Swap Sequence", "page": 323}], "subsections": [], "word_count": 936, "tags": []}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 324, "page_end": 323, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the FR_Swap Physical Layer receives the FR_Swap Message and", "content": "Message. checks the CRC to verify the Message.", "page_start": 324, "page_end": 323, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "PR_Swap Message to the Protocol Layer.", "page_start": 324, "page_end": 323, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received FR_Swap Message information to the Policy Engine that consumes it.", "page_start": 324, "page_end": 323, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 324, "page_end": 323, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 324, "page_end": 323, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 324, "page_end": 323, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the FR_Swap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 324, "page_end": 323, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine evaluates the PR_Swap Message sent by", "content": "the Sink and decides that it is able and willing to do the Power Role Swap. It tells the Protocol Layer to form an Accept Message.", "page_start": 324, "page_end": 323, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": ["messages", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the Accept the CRC it calculated with the one sent to verify the Message. Accept Message.", "page_start": 324, "page_end": 323, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PR_Swap Message information to the Policy Engine that consumes it.", "page_start": 324, "page_end": 323, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer,", "content": "starts the PSSourceOffTimer.", "page_start": 324, "page_end": 323, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 3, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 324, "page_end": 323, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message. Page 324 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Initial Sink Port Initial Source Port", "page_start": 324, "page_end": 324, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 32, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 325, "page_end": 324, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Accept Message was successfully sent.", "page_start": 325, "page_end": 324, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["protocol"]}
{"section_id": "19", "title": "The Policy Engine determines its power supply is no", "content": "longer supplying VBUS and is acting as a Sink. The Policy Engine requests the Device Policy Manager to assert the Rd pull down on the CC wire. The Policy Engine then directs the Protocol Layer to generate a PS_RDY Message, with the Port Power Role bit in the Message Header set to “Sink”, to tell its Port Partner that it can begin to Source VBUS.", "page_start": 325, "page_end": 324, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 65, "tags": ["policy", "power"]}
{"section_id": "20", "title": "Protocol Layer sets the Port Power Role bit in the", "content": "Message Header set to “Sink”, creates the Message and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 325, "page_end": 324, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["power", "protocol"]}
{"section_id": "21", "title": "Physical Layer receives the PS_RDY Message and Physical Layer appends CRC and sends the PS_RDY", "content": "checks the CRC to verify the Message. Message.", "page_start": 325, "page_end": 324, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "22", "title": "Physical Layer removes the CRC and forwards the", "content": "PS_RDY Message to the Protocol Layer.", "page_start": 325, "page_end": 324, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "23", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PS_RDY Message information to the Policy Engine that consumes it. The Policy Engine stops the PSSourceOffTimer.", "page_start": 325, "page_end": 324, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 40, "tags": ["messages", "protocol"]}
{"section_id": "24", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 325, "page_end": 324, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "25", "title": "Physical Layer appends CRC and sends the GoodCRC Physical Layer receives the GoodCRC Message and", "content": "Message. checks the CRC to verify the Message.", "page_start": 325, "page_end": 324, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "26", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 325, "page_end": 324, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "27", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the PS_RDY Message was successfully sent. Policy Engine starts PSSourceOnTimer.", "page_start": 325, "page_end": 324, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "28", "title": "The Policy Engine directs the Device Policy Manager", "content": "to apply the Rp pull up. Note: at some point (either before or after receiving the PS_RDY Message) the new Source has applied vSafe5V no later tSrcFRSwap after detecting that VBUS has dropped below vSafe5V. When the Source output reaches vSafe5V the Policy Engine directs the Protocol Layer to send an FR_Swap Message within tFRSwapInit of detecting the Fast Swap signal. Policy Engine, when its power supply is ready to supply power, tells the Protocol Layer to form a PS_RDY Message. The Port Power Role bit used in this and subsequent Message Headers is now set to “Source”. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 325 Step Initial Sink Port Initial Source Port", "page_start": 325, "page_end": 325, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 115, "tags": ["devices", "policy"]}
{"section_id": "29", "title": "Protocol Layer creates the PS_RDY Message and", "content": "passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 326, "page_end": 325, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": ["messages", "protocol"]}
{"section_id": "30", "title": "Physical Layer appends a CRC and sends the PS_RDY Physical Layer receives the PS_RDY Message and", "content": "Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 326, "page_end": 325, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "31", "title": "Physical Layer removes the CRC and forwards the", "content": "PS_RDY Message to the Protocol Layer.", "page_start": 326, "page_end": 325, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "32", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PS_RDY Message information to the Policy Engine that consumes it. The Policy Engine stops the PSSourceOnTimer.", "page_start": 326, "page_end": 325, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 39, "tags": ["messages", "protocol"]}
{"section_id": "33", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 326, "page_end": 325, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "34", "title": "Physical Layer receives GoodCRC Message and Physical Layer appends a CRC and sends the GoodCRC", "content": "compares the CRC it calculated with the one sent to Message. The Policy Engine resets the Protocol Layer. verify the Message.", "page_start": 326, "page_end": 325, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["messages"]}
{"section_id": "35", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC to the Protocol Layer.", "page_start": 326, "page_end": 325, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": []}
{"section_id": "36", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the PS_RDY Message was successfully sent. The Policy Engine resets the CapsCounter, resets the Protocol Layer and starts the SwapSourceStartTimer which must timeout before sending any Source_Capabilities Messages. The Fast Role Swap is complete, the roles have been reversed and the Port Partners are free to negotiate for more power. Page 326 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 326, "page_end": 326, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 71, "tags": ["protocol"]}
{"section_id": "8.3.2.8", "title": "Data Role Swap", "content": "", "page_start": 327, "page_end": 326, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["data"]}
{"section_id": "8.3.2.8.1", "title": "Data Role Swap, Initiated by UFP Operating as Sink", "content": "Figure 8-14 shows an example sequence between a Port, which is initially a UFP (Device) and a Sink (Rd asserted), and a Port which is initially a DFP (Host) and a Source (Rp asserted). A Data Role Swap is initiated by the UFP. During the process the Port Partners maintain their operation as either a Source or a Sink (power and Rp/Rd remain constant) but exchange data roles between DFP (Host) and UFP (Device). Figure 8-14 Data Role Swap, UFP operating as Sink initiates Initial UFP Sink Port Initial DFP Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine CC = Rd (Sink) CC = Rp (Source) Port Data Role = UFP (Device) Port Data Role = DFP (Host) 1: Send Dr_Swap 2:Dr_Swap 3: Dr_Swap + CRC Start CRCReceiveTimer 4: Dr_Swap Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Evaluate Dr_Swap request CC = Rp (Source) Check and increment MessageIDCounter Port Data Role = DFP (Host) Stop CRCReceiveTimer 9:Dr_Swap sent Start SenderResponseTimer CC = Rd (Sink) 10: Send Accept Port Data Role = UFP (Device) 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent CC = Rd (Sink) CC = Rp (Source) Port Data Role -> DFP (Host) Port Data Role -> UFP (Device) New Host/Device Roles Table 8-14 below provides a detailed explanation of what happens at each labeled step in Figure 8-14 above. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 327 Table 8-14 Steps for Data Role Swap, UFP operating as Sink initiates Step Initial UFP Sink Port Initial DFP Source Port 1 Port starts as a UFP (Device) operating as a Sink with Port starts as a DFP (Host) operating as Source with Rp Rd asserted and Port Data Role set to UFP. The asserted and Port Data Role set to DFP. Policy Engine directs the Protocol Layer to send a DR_Swap Message.", "page_start": 327, "page_end": 327, "content_type": "text", "tables": [{"table_id": "Table 8-14 below provides a detailed explanation of what happens at each labeled step in Figure 8-14 above.", "caption": "Table 8-14 below provides a detailed explanation of what happens at each labeled step in Figure 8-14 above.", "page": 327, "data": []}, {"table_id": "Table 8-14 Steps for Data Role Swap, UFP operating as Sink initiates", "caption": "Table 8-14 Steps for Data Role Swap, UFP operating as Sink initiates", "page": 328, "data": []}], "figures": [{"figure_id": "Figure 8-14 shows an example sequence between a Port, which is initially a UFP (Device) and a Sink (Rd asserted),", "caption": "Figure 8-14 shows an example sequence between a Port, which is initially a UFP (Device) and a Sink (Rd asserted),", "page": 327}, {"figure_id": "Figure 8-14 Data Role Swap, UFP operating as Sink initiates", "caption": "Figure 8-14 Data Role Swap, UFP operating as Sink initiates", "page": 327}, {"figure_id": "Table 8-14 below provides a detailed explanation of what happens at each labeled step in Figure 8-14 above.", "caption": "Table 8-14 below provides a detailed explanation of what happens at each labeled step in Figure 8-14 above.", "page": 327}], "subsections": [], "word_count": 359, "tags": ["sink", "data"]}
{"section_id": "2", "title": "Protocol Layer creates the DR_Swap Message and", "content": "passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the DR_Swap Physical Layer receives the DR_Swap Message and", "content": "Message. checks the CRC to verify the Message.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "DR_Swap Message to the Protocol Layer.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received DR_Swap Message information to the Policy Engine that consumes it.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the DR_Swap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine evaluates the DR_Swap Message and", "content": "decides that it is able and willing to do the Data Role Swap. It tells the Protocol Layer to form an Accept Message.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["messages", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Accept Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Accept Message and Physical Layer appends a CRC and sends the Accept", "content": "checks the CRC to verify the Message. Message.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Accept Message information to the Policy Engine that consumes it.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 328, "page_end": 327, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer. Page 328 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Initial UFP Sink Port Initial DFP Source Port", "page_start": 328, "page_end": 328, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": []}
{"section_id": "18", "title": "The Policy Engine requests that Data Role is changed Protocol Layer verifies and increments the", "content": "from UFP (Device) to DFP (Host). MessageIDCounter and stops CRCReceiveTimer. The Power Delivery role is now a DFP (Host), with Protocol Layer informs the Policy Engine that the Accept Port Data Role set to DFP, still operating as a Sink Message was successfully sent. (Rd asserted). The Policy Engine requests that the Data Role is changed to UFP (Device), with Port Data Role set to UFP and continues supplying power as a Source (Rp asserted). The Data Role Swap is complete; the data roles have been reversed while maintaining the direction of power flow. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 329", "page_start": 329, "page_end": 329, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 104, "tags": ["policy", "protocol", "data"]}
{"section_id": "8.3.2.8.2", "title": "Data Role Swap, Initiated by UFP Operating as Source", "content": "Figure 8-15 shows an example sequence between a Port, which is initially a UFP (Device) and a Source (Rp asserted), and a Port which is initially a DFP (Host) and a Sink (Rd asserted). A Data Role Swap is initiated by the UFP. During the process the Port Partners maintain their operation as either a Source or a Sink (power and Rp/Rd remain constant) but exchange data roles between DFP (Host) and UFP (Device). Figure 8-15 Data Role Swap, UFP operating as Source initiates Initial UFP Source Port Initially DFP Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine CC = Rp (Source) CC = Rd (Sink) Port Data Role = UFP (Device) Port Data Role = DFP (Host) 1: Send Dr_Swap 2:Dr_Swap 3: Dr_Swap + CRC Start CRCReceiveTimer 4: Dr_Swap Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Evaluate Dr_Swap request Stop CRCReceiveTimer CC = Rd (Sink) 9:Dr_Swap sent Port Data Role = DFP (Host) Start SenderResponseTimer CC = Rp (Source) 10: Send Accept Port Data Role = UFP (Device) 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent CC = Rp (Source) CC = Rd (Sink) Port Data Role -> DFP (Host) Port Data Role -> UFP (Device) New Host/Device Roles Table 8-15 below provides a detailed explanation of what happens at each labeled step in Figure 8-15 above. Table 8-15 Steps for Data Role Swap, UFP operating as Source initiates Step Initial UFP Source Port Initial DFP Sink Port 1 Port starts as a UFP (Device) operating as Source with Port starts as a DFP (Host) operating as a Sink with Rd Rp asserted and Port Data Role set to UFP. The Policy asserted and Port Data Role set to DFP. Engine directs the Protocol Layer to send a DR_Swap Message.", "page_start": 330, "page_end": 329, "content_type": "text", "tables": [{"table_id": "Table 8-15 below provides a detailed explanation of what happens at each labeled step in Figure 8-15 above.", "caption": "Table 8-15 below provides a detailed explanation of what happens at each labeled step in Figure 8-15 above.", "page": 330, "data": []}, {"table_id": "Table 8-15 Steps for Data Role Swap, UFP operating as Source initiates", "caption": "Table 8-15 Steps for Data Role Swap, UFP operating as Source initiates", "page": 330, "data": []}], "figures": [{"figure_id": "Figure 8-15 shows an example sequence between a Port, which is initially a UFP (Device) and a Source (Rp asserted),", "caption": "Figure 8-15 shows an example sequence between a Port, which is initially a UFP (Device) and a Source (Rp asserted),", "page": 330}, {"figure_id": "Figure 8-15 Data Role Swap, UFP operating as Source initiates", "caption": "Figure 8-15 Data Role Swap, UFP operating as Source initiates", "page": 330}, {"figure_id": "Table 8-15 below provides a detailed explanation of what happens at each labeled step in Figure 8-15 above.", "caption": "Table 8-15 below provides a detailed explanation of what happens at each labeled step in Figure 8-15 above.", "page": 330}], "subsections": [], "word_count": 349, "tags": ["source", "data"]}
{"section_id": "2", "title": "Protocol Layer creates the DR_Swap Message and", "content": "passes to Physical Layer. Starts CRCReceiveTimer. Page 330 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Initial UFP Source Port Initial DFP Sink Port", "page_start": 330, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the DR_Swap Physical Layer receives the DR_Swap Message and", "content": "Message. checks the CRC to verify the Message.", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "DR_Swap Message to the Protocol Layer.", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received DR_Swap Message information to the Policy Engine that consumes it.", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the DR_Swap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine evaluates the DR_Swap Message and", "content": "decides that it is able and willing to do the Data Role Swap. It tells the Protocol Layer to form an Accept Message.", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["messages", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Accept Message and passes", "content": "to Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer receives the Accept Message and checks Physical Layer appends a CRC and sends the Accept the CRC to verify the Message. Message.", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 30, "tags": ["messages", "protocol"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Accept Message information to the Policy Engine that consumes it.", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the GoodCRC Physical Layer receives GoodCRC Message and", "content": "Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 331, "page_end": 330, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "The Policy Engine requests that Data Role is changed Protocol Layer verifies and increments the", "content": "from UFP (Device) to DFP (Host). MessageIDCounter and stops CRCReceiveTimer. The Power Delivery role is now a DFP (Host), and Port Protocol Layer informs the Policy Engine that the Data Role set to DFP, and continues supplying power as Accept Message was successfully sent. The Policy a Source (Rp asserted). Engine requests that the Data Role is changed to UFP (Device), with Port Data Role set to UFP and still operating as a Sink (Rp asserted). The Data Role Swap is complete; the data roles have been reversed while maintaining the direction of power flow. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 331", "page_start": 331, "page_end": 331, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 105, "tags": ["policy", "protocol", "data"]}
{"section_id": "8.3.2.8.3", "title": "Data Role Swap, Initiated by DFP Operating as Source", "content": "Figure 8-16 shows an example sequence between a Port, which is initially a UFP (Device) and a Sink (Rd asserted), and a Port which is initially a DFP and a Source (Rp asserted). A Data Role Swap is initiated by the DFP. During the process the Port Partners maintain their operation as either a Source or a Sink (power and Rp/Rd remain constant) but exchange data roles between DFP (Host) and UFP (Device). Figure 8-16 Data Role Swap, DFP operating as Source initiates Initial UFP Sink Port Initial DFP Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine CC = Rd (Sink) CC = Rp (Source) Port Data Role = UFP (Device) Port Data Role = DFP (Host) 1: Send Dr_Swap 2: Dr_Swap 3: Dr_Swap + CRC 4: Dr_Swap Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Evaluate Dr_Swap request CC = Rd (Sink) Check and increment MessageIDCounter Port Data Role =UFP (Device) Stop CRCReceiveTimer 9: Dr_Swap sent Start SenderResponseTimer 10: Send Accept CC = Rp (Source) 11:Accept Port Data Role = DFP (Host) 12: Accept + CRC Start CRCReceiveTimer 13: Accept Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18:Accept sent CC = Rd (Sink) CC = Rp (Source) Port Data Role -> DFP (Host) Port Data Role -> UFP (Device) New Host/Device Roles Table 8-16 below provides a detailed explanation of what happens at each labeled step in Figure 8-16 above. Table 8-16 Steps for Data Role Swap, DFP operating as Source initiates Step Initial UFP Sink Port Initial DFP Source Port 1 Port starts as a UFP (Device) operating as a Sink with Port starts as a DFP (Host) operating as Source with Rd asserted and Port Data Role set to UFP. Rp asserted and Port Data Role set to DFP. The Policy Engine directs the Protocol Layer to send a DR_Swap Message.", "page_start": 332, "page_end": 331, "content_type": "text", "tables": [{"table_id": "Table 8-16 below provides a detailed explanation of what happens at each labeled step in Figure 8-16 above.", "caption": "Table 8-16 below provides a detailed explanation of what happens at each labeled step in Figure 8-16 above.", "page": 332, "data": []}, {"table_id": "Table 8-16 Steps for Data Role Swap, DFP operating as Source initiates", "caption": "Table 8-16 Steps for Data Role Swap, DFP operating as Source initiates", "page": 332, "data": []}], "figures": [{"figure_id": "Figure 8-16 shows an example sequence between a Port, which is initially a UFP (Device) and a Sink (Rd asserted),", "caption": "Figure 8-16 shows an example sequence between a Port, which is initially a UFP (Device) and a Sink (Rd asserted),", "page": 332}, {"figure_id": "Figure 8-16 Data Role Swap, DFP operating as Source initiates", "caption": "Figure 8-16 Data Role Swap, DFP operating as Source initiates", "page": 332}, {"figure_id": "Table 8-16 below provides a detailed explanation of what happens at each labeled step in Figure 8-16 above.", "caption": "Table 8-16 below provides a detailed explanation of what happens at each labeled step in Figure 8-16 above.", "page": 332}], "subsections": [], "word_count": 347, "tags": ["source", "data"]}
{"section_id": "2", "title": "Protocol Layer creates the DR_Swap Message and", "content": "passes to Physical Layer. Starts CRCReceiveTimer. Page 332 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Initial UFP Sink Port Initial DFP Source Port", "page_start": 332, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer receives the DR_Swap Message and Physical Layer appends CRC and sends the DR_Swap", "content": "checks the CRC to verify the Message. Message.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "DR_Swap Message to the Protocol Layer.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received DR_Swap Message information to the Policy Engine that consumes it.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer appends CRC and sends the GoodCRC Physical Layer receives the GoodCRC Message and", "content": "Message. checks the CRC to verify the Message.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the DR_Swap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine evaluates the DR_Swap Message and", "content": "decides that it is able and willing to do the Data Role Swap. It tells the Protocol Layer to form an Accept Message.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["messages", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Accept Message and", "content": "passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer appends a CRC and sends the Accept Physical Layer receives the Accept Message and", "content": "Message. checks the CRC to verify the Message.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Accept Message information to the Policy Engine that consumes it.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer receives GoodCRC Message and Physical Layer appends a CRC and sends the GoodCRC", "content": "compares the CRC it calculated with the one sent to Message. verify the Message.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 333, "page_end": 332, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the The Policy Engine requests that Data Role is changed", "content": "MessageIDCounter and stops CRCReceiveTimer. from DFP (Host) to UFP (Device). Protocol Layer informs the Policy Engine that the The Power Delivery role is now a UFP (Device), with Accept Message was successfully sent. . The Policy Port Data Role set to UFP, and continues supplying Engine requests that the Data Role is changed to DFP power as a Source (Rp asserted). (Host), with Port Data Role set to DFP, still operating as a Sink (Rd asserted). The Data Role Swap is complete; the data roles have been reversed while maintaining the direction of power flow. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 333", "page_start": 333, "page_end": 333, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 105, "tags": ["policy", "protocol", "data"]}
{"section_id": "8.3.2.8.4", "title": "Data Role Swap, Initiated by DFP Operating as Sink", "content": "Figure 8-17 shows an example sequence between a Port, which is initially a UFP (Device) and a Source (Rp asserted), and a Port which is initially a DFP (Host) and a Sink (Rd asserted). A Data Role Swap is initiated by the DFP. During the process the Port Partners maintain their operation as either a Source or a Sink (power and Rp/Rd remain constant) but exchange data roles between DFP (Host) and UFP (Device). Figure 8-17 Data Role Swap, DFP operating as Sink initiates Initial UFP Source Port Initial DFP Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine CC = Rp (Source) CC = Rd (Sink) Port Data Role = UFP (Device) Port Data Role = DFP (Host) 1: Send Dr_Swap 2: Dr_Swap 3: Dr_Swap + CRC 4: Dr_Swap Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Evaluate Dr_Swap request CC = Rp (Source) Check and increment MessageIDCounter Port Data Role = UFP (Device) Stop CRCReceiveTimer 9: Dr_Swap sent Start SenderResponseTimer 10: Send Accept CC = Rd (Sink) 11:Accept Port Data Role = DFP (Host) 12: Accept + CRC Start CRCReceiveTimer 13: Accept Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18:Accept sent CC = Rp (Source) CC = Rd (Sink) Port Data Role -> DFP (Host) Port Data Role -> UFP (Device) New Host/Device Roles Table 8-17 below provides a detailed explanation of what happens at each labeled step in Figure 8-17 above. Table 8-17 Steps for Data Role Swap, DFP operating as Sink initiates Step Initial UFP Source Port Initial DFP Sink Port 1 Port starts as a UFP (Device) operating as Source with Port starts as a DFP (Host) operating as a Sink with Rd Rp asserted and Port Data Role set to UFP. asserted and Port Data Role set to DFP. The Policy Engine directs the Protocol Layer to send a DR_Swap Message.", "page_start": 334, "page_end": 333, "content_type": "text", "tables": [{"table_id": "Table 8-17 below provides a detailed explanation of what happens at each labeled step in Figure 8-17 above.", "caption": "Table 8-17 below provides a detailed explanation of what happens at each labeled step in Figure 8-17 above.", "page": 334, "data": []}, {"table_id": "Table 8-17 Steps for Data Role Swap, DFP operating as Sink initiates", "caption": "Table 8-17 Steps for Data Role Swap, DFP operating as Sink initiates", "page": 334, "data": []}], "figures": [{"figure_id": "Figure 8-17 shows an example sequence between a Port, which is initially a UFP (Device) and a Source (Rp asserted),", "caption": "Figure 8-17 shows an example sequence between a Port, which is initially a UFP (Device) and a Source (Rp asserted),", "page": 334}, {"figure_id": "Figure 8-17 Data Role Swap, DFP operating as Sink initiates", "caption": "Figure 8-17 Data Role Swap, DFP operating as Sink initiates", "page": 334}, {"figure_id": "Table 8-17 below provides a detailed explanation of what happens at each labeled step in Figure 8-17 above.", "caption": "Table 8-17 below provides a detailed explanation of what happens at each labeled step in Figure 8-17 above.", "page": 334}], "subsections": [], "word_count": 349, "tags": ["sink", "data"]}
{"section_id": "2", "title": "Protocol Layer creates the DR_Swap Message and", "content": "passes to Physical Layer. Starts CRCReceiveTimer. Page 334 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Initial UFP Source Port Initial DFP Sink Port", "page_start": 334, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer receives the DR_Swap Message and Physical Layer appends CRC and sends the DR_Swap", "content": "checks the CRC to verify the Message. Message.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "DR_Swap Message to the Protocol Layer.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received DR_Swap Message information to the Policy Engine that consumes it.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer appends CRC and sends the GoodCRC Physical Layer receives the GoodCRC Message and", "content": "Message. checks the CRC to verify the Message.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the DR_Swap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine evaluates the DR_Swap Message and", "content": "decides that it is able and willing to do the Data Role Swap. It tells the Protocol Layer to form an Accept Message.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["messages", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Accept Message and passes", "content": "to Physical Layer. Starts CRCReceiveTimer.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer appends a CRC and sends the Accept Physical Layer receives the Accept Message and", "content": "Message. checks the CRC to verify the Message.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Accept Message information to the Policy Engine that consumes it.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer receives GoodCRC Message and Physical Layer appends a CRC and sends the GoodCRC", "content": "compares the CRC it calculated with the one sent to Message. verify the Message.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 335, "page_end": 334, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the The Policy Engine requests that Data Role is changed", "content": "MessageIDCounter and stops CRCReceiveTimer. from DFP (Host) to UFP (Device). Protocol Layer informs the Policy Engine that the The Power Delivery role is now a UFP (Device), with Accept Message was successfully sent. The Policy Port Data Role set to UFP, still operating as a Sink (Rd Engine requests that the Data Role is changed to DFP asserted). (Host), with Port Data Role set to DFP, and continues supplying power as a Source (Rp asserted). The Data Role Swap is complete; the data roles have been reversed while maintaining the direction of power flow. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 335", "page_start": 335, "page_end": 335, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 104, "tags": ["policy", "protocol", "data"]}
{"section_id": "8.3.2.9", "title": "VCONN Swap", "content": "", "page_start": 336, "page_end": 335, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.2.9.1", "title": "Source to Sink VCONN Source Swap", "content": "Figure 8-18 shows an example sequence between a Source and Sink, where the Source is initially supplying VCONN and then tells the Sink to supply VCONN. During the process the Port Partners, keep their role as Source or Sink, maintain their operation as either a Source or a Sink (power remains constant) but exchange the VCONN Source from the Source to the Sink. Figure 8-18 Source to Sink VCONN Source Swap Source (Initially VCONN Source Port) Sink (initially VCONN off) : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine VCONN Source VCONN off 1: Send VCONN_Swap 2:VCONN_Swap 3: VCONN_Swap + CRC Start CRCReceiveTimer 4: VCONN_Swap Check MessageID against local copy Store copy of MessageID 5: VCONN_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:VCONN_Swap sent Evaluate VCONN_Swap Start SenderResponseTimer request 10: Send Accept 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Start VCONNOnTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent Tell power supply to start supplying VCONN Vconn is on 19: Send PS_RDY 20: PS_RDY 21: PS_RDY + CRC 22: PS_RDY Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC Stop VCONNOnTimer 26: GoodCRC Tell power supply to turn off VCONN Check and increment MessageIDCounter Stop CRCReceiveTimer 27: PS_RDY sent VCONN is off Sink is supplying VCONN Table 8-18 below provides a detailed explanation of what happens at each labeled step in Figure 8-18 above. Page 336 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 8-18 Steps for Source to Sink VCONN Source Swap Step Source (initially VCONN Source) Sink (Initially VCONN off)", "page_start": 336, "page_end": 336, "content_type": "text", "tables": [{"table_id": "Table 8-18 below provides a detailed explanation of what happens at each labeled step in Figure 8-18 above.", "caption": "Table 8-18 below provides a detailed explanation of what happens at each labeled step in Figure 8-18 above.", "page": 336, "data": []}, {"table_id": "Table 8-18 Steps for Source to Sink VCONN Source Swap", "caption": "Table 8-18 Steps for Source to Sink VCONN Source Swap", "page": 337, "data": []}], "figures": [{"figure_id": "Figure 8-18 shows an example sequence between a Source and Sink, where the Source is initially supplying VCONN and", "caption": "Figure 8-18 shows an example sequence between a Source and Sink, where the Source is initially supplying VCONN and", "page": 336}, {"figure_id": "Figure 8-18 Source to Sink VCONN Source Swap", "caption": "Figure 8-18 Source to Sink VCONN Source Swap", "page": 336}, {"figure_id": "Table 8-18 below provides a detailed explanation of what happens at each labeled step in Figure 8-18 above.", "caption": "Table 8-18 below provides a detailed explanation of what happens at each labeled step in Figure 8-18 above.", "page": 336}], "subsections": [], "word_count": 304, "tags": ["source", "sink"]}
{"section_id": "1", "title": "The Source starts as the VCONN Source. The Policy The Sink starts with VCONN off.", "content": "Engine directs the Protocol Layer to send a VCONN_Swap Message.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["policy", "source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the VCONN_Swap Message", "content": "and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the VCONN_Swap Message", "content": "VCONN_Swap Message. and checks the CRC to verify the Message.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "VCONN_Swap Message to the Protocol Layer.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received VCONN_Swap Message information to the Policy Engine that consumes it.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the VCONN_Swap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine evaluates the VCONN_Swap Message", "content": "sent by the Source and decides that it is able and willing to do the VCONN Swap. It tells the Protocol Layer to form an Accept Message.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": ["messages", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Accept Message and Physical Layer appends a CRC and sends the Accept", "content": "compares the CRC it calculated with the one sent to Message. verify the Message.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Accept Message information to the Policy Engine that consumes it.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer", "content": "and starts the VCONNOnTimer.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 337, "page_end": 336, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 337 Step Source (initially VCONN Source) Sink (Initially VCONN off)", "page_start": 337, "page_end": 337, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Accept Message was successfully sent. The Policy Engine asks the Device Policy Manager to turn on VCONN.", "page_start": 338, "page_end": 337, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": ["protocol"]}
{"section_id": "19", "title": "The Device Policy Manager informs the Policy Engine", "content": "that its power supply is supplying VCONN. The Policy Engine directs the Protocol Layer to generate a PS_RDY Message to tell the Source it can turn off VCONN.", "page_start": 338, "page_end": 337, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": ["devices", "policy"]}
{"section_id": "20", "title": "Protocol Layer creates the PS_RDY Message and", "content": "passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 338, "page_end": 337, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": ["messages", "protocol"]}
{"section_id": "21", "title": "Physical Layer receives the PS_RDY Message and Physical Layer appends a CRC and sends the PS_RDY", "content": "compares the CRC it calculated with the one sent to Message. verify the Message.", "page_start": 338, "page_end": 337, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "22", "title": "Physical Layer removes the CRC and forwards the", "content": "PS_RDY Message to the Protocol Layer.", "page_start": 338, "page_end": 337, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "23", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PS_RDY Message information to the Policy Engine that consumes it.", "page_start": 338, "page_end": 337, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "24", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 338, "page_end": 337, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "25", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. The Policy Engine stops the compares the CRC it calculated with the one sent to VCONNOnTimer, and tells the power supply to stop verify the Message. sourcing VCONN.", "page_start": 338, "page_end": 337, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 30, "tags": ["messages"]}
{"section_id": "26", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 338, "page_end": 337, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "27", "title": "VCONN is off. Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the PS_RDY Message was successfully sent. The Sink is now the VCONN Source and the Source has VCONN turned off. Page 338 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 338, "page_end": 338, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["protocol"]}
{"section_id": "8.3.2.9.2", "title": "Sink to Source VCONN Source Swap", "content": "Figure 8-19 shows an example sequence between a Source and Sink, where the Sink is initially supplying VCONN and then the Source tells the Sink that it will become the VCONN Source. During the process the Port Partners, keep their role as Source or Sink, maintain their operation as either a Source or a Sink (power remains constant) but exchange the VCONN Source from the Sink to the Source. Figure 8-19 Sink to Source VCONN Source Swap Source (Initially VCONN off) Sink (initially VCONN Source Port) : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine VCONN Off VCONN Source 1: Send VCONN_Swap 2:VCONN_Swap 3: VCONN_Swap + CRC Start CRCReceiveTimer 4: VCONN_Swap Check MessageID against local copy Store copy of MessageID 5: VCONN_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:VCONN_Swap sent Evaluate VCONN_Swap Start SenderResponseTimer request 10: Send Accept 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Tell power supply to start Check and increment MessageIDCounter supplying VCONN Stop CRCReceiveTimer 18: Accept sent Start VCONNOnTimer Vconn is on 19: Send PS_RDY 20: PS_RDY 21: PS_RDY + CRC Start CRCReceiveTimer 22: PS_RDY Check MessageID against local copy Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Stop VCONNOnTimer Tell power supply to turn off VCONN Check and increment MessageIDCounter Stop CRCReceiveTimer 27: PS_RDY sent VCONN is off Source is supplying VCONN Table 8-19 below provides a detailed explanation of what happens at each labeled step in Figure 8-19 above. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 339 Table 8-19 Steps for Sink to Source VCONN Source Swap Step Source Sink", "page_start": 339, "page_end": 339, "content_type": "text", "tables": [{"table_id": "Table 8-19 below provides a detailed explanation of what happens at each labeled step in Figure 8-19 above.", "caption": "Table 8-19 below provides a detailed explanation of what happens at each labeled step in Figure 8-19 above.", "page": 339, "data": []}, {"table_id": "Table 8-19 Steps for Sink to Source VCONN Source Swap", "caption": "Table 8-19 Steps for Sink to Source VCONN Source Swap", "page": 340, "data": []}], "figures": [{"figure_id": "Figure 8-19 shows an example sequence between a Source and Sink, where the Sink is initially supplying VCONN and", "caption": "Figure 8-19 shows an example sequence between a Source and Sink, where the Sink is initially supplying VCONN and", "page": 339}, {"figure_id": "Figure 8-19 Sink to Source VCONN Source Swap", "caption": "Figure 8-19 Sink to Source VCONN Source Swap", "page": 339}, {"figure_id": "Table 8-19 below provides a detailed explanation of what happens at each labeled step in Figure 8-19 above.", "caption": "Table 8-19 below provides a detailed explanation of what happens at each labeled step in Figure 8-19 above.", "page": 339}], "subsections": [], "word_count": 304, "tags": ["source", "sink"]}
{"section_id": "1", "title": "The Source starts with VCONN off. The Policy Engine The Sink starts as the VCONN Source.", "content": "directs the Protocol Layer to send a VCONN_Swap Message.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["policy", "source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the VCONN_Swap Message", "content": "and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the VCONN_Swap Message", "content": "VCONN_Swap Message. and checks the CRC to verify the Message.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "VCONN_Swap Message to the Protocol Layer.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received VCONN_Swap Message information to the Policy Engine that consumes it.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the VCONN_Swap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine evaluates the VCONN_Swap Message", "content": "sent by the Source and decides that it is able and willing to do the VCONN Swap. It tells the Protocol Layer to form an Accept Message.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": ["messages", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Accept Message and Physical Layer appends a CRC and sends the Accept", "content": "compares the CRC it calculated with the one sent to Message. verify the Message.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Accept Message information to the Policy Engine that consumes it.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "The Policy Engine tells the Device Policy Manger to turn on VCONN.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 340, "page_end": 339, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer. Page 340 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Sink", "page_start": 340, "page_end": 340, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Accept Message was successfully sent. The Policy Engine starts the VCONNOnTimer.", "page_start": 341, "page_end": 340, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["protocol"]}
{"section_id": "19", "title": "The Device Policy Manager tells the Policy Engine", "content": "that its power supply is supplying VCONN. The Policy Engine directs the Protocol Layer to generate a PS_RDY Message to tell the Sink it can turn off VCONN.", "page_start": 341, "page_end": 340, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": ["devices", "policy"]}
{"section_id": "20", "title": "Protocol Layer creates the PS_RDY Message and", "content": "passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 341, "page_end": 340, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": ["messages", "protocol"]}
{"section_id": "21", "title": "Physical Layer appends a CRC and sends the PS_RDY Physical Layer receives the PS_RDY Message and", "content": "Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 341, "page_end": 340, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "22", "title": "Physical Layer removes the CRC and forwards the", "content": "PS_RDY Message to the Protocol Layer.", "page_start": 341, "page_end": 340, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "23", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PS_RDY Message information to the Policy Engine that consumes it.", "page_start": 341, "page_end": 340, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "24", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 341, "page_end": 340, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "25", "title": "Physical Layer receives GoodCRC Message and Physical Layer appends a CRC and sends the GoodCRC", "content": "compares the CRC it calculated with the one sent to Message. The Policy Engine stops the verify the Message. VCONNOnTimer, and tells the power supply to stop sourcing VCONN.", "page_start": 341, "page_end": 340, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": ["messages"]}
{"section_id": "26", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 341, "page_end": 340, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "27", "title": "Protocol Layer verifies and increments the VCONN is off.", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the PS_RDY Message was successfully sent. The Source is now the VCONN Source and the Sink has VCONN turned off. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 341", "page_start": 341, "page_end": 341, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["protocol"]}
{"section_id": "8.3.2.10", "title": "Additional Capabilities, Status and Information", "content": "", "page_start": 342, "page_end": 341, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.2.10.1", "title": "Alert", "content": "", "page_start": 342, "page_end": 341, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.2.10.1.1", "title": "Source sends Alert to a Sink", "content": "Figure 8-20 shows an example sequence between a Source and a Sink where the Source alerts the Sink that there has been a status change. This AMS will be followed by getting the Source status to determine further details of the alert (see Section 8.3.2.10.2). Figure 8-20 Source Alert to Sink Sink Port Source Port : Sink Policy Engine : Protocol : PHY : PHY : Protocol : Source Policy Engine 1: Send Alert 2: Alert 3: Alert + CRC 4: Alert Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Alert received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Alert sent Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-20 above. Table 8-20 Steps for Source Alert to Sink Step Sink Source", "page_start": 342, "page_end": 341, "content_type": "text", "tables": [{"table_id": "Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-20 above.", "caption": "Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-20 above.", "page": 342, "data": []}, {"table_id": "Table 8-20 Steps for Source Alert to Sink", "caption": "Table 8-20 Steps for Source Alert to Sink", "page": 342, "data": []}], "figures": [{"figure_id": "Figure 8-20 shows an example sequence between a Source and a Sink where the Source alerts the Sink that there has", "caption": "Figure 8-20 shows an example sequence between a Source and a Sink where the Source alerts the Sink that there has", "page": 342}, {"figure_id": "Figure 8-20 Source Alert to Sink", "caption": "Figure 8-20 Source Alert to Sink", "page": 342}, {"figure_id": "Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-20 above.", "caption": "Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-20 above.", "page": 342}], "subsections": [], "word_count": 142, "tags": ["source", "sink"]}
{"section_id": "1", "title": "The Device Policy Manager indicates a Source alert", "content": "condition. The Policy Engine tells the Protocol Layer to form an Alert Message.", "page_start": 342, "page_end": 341, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": ["devices", "policy", "source"]}
{"section_id": "2", "title": "Protocol Layer creates the Alert Message and passes", "content": "to Physical Layer. Starts CRCReceiveTimer.", "page_start": 342, "page_end": 341, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer receives the Alert Message and Physical Layer appends a CRC and sends the Alert", "content": "compares the CRC it calculated with the one sent to Message. verify the Message.", "page_start": 342, "page_end": 341, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "4", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Alert Message to the Policy Engine that consumes it.", "page_start": 342, "page_end": 341, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "5", "title": "The Policy Engine informs the Device Policy", "content": "Manager.", "page_start": 342, "page_end": 341, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": ["devices", "policy"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer. Page 342 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Sink Source", "page_start": 342, "page_end": 342, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 343, "page_end": 342, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 343, "page_end": 342, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Alert Message was successfully sent. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 343", "page_start": 343, "page_end": 343, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": ["protocol"]}
{"section_id": "8.3.2.10.1.1", "title": "Sink sends Alert to a Source", "content": "Figure 8-20 shows an example sequence between a Source and a Sink where the Sink alerts the Source that there has been a status change. This AMS will be followed by getting the Sink status to determine further details of the alert (see Section 8.3.2.10.2). Figure 8-21 Sink Alert to Source Source Port Sink Port : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine 1: Send Alert 2: Alert 3: Alert + CRC 4: Alert Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Alert received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Alert sent Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-20 above. Table 8-21 Steps for Sink Alert to Source Step Source Sink", "page_start": 344, "page_end": 343, "content_type": "text", "tables": [{"table_id": "Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-20 above.", "caption": "Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-20 above.", "page": 344, "data": []}, {"table_id": "Table 8-21 Steps for Sink Alert to Source", "caption": "Table 8-21 Steps for Sink Alert to Source", "page": 344, "data": []}], "figures": [{"figure_id": "Figure 8-20 shows an example sequence between a Source and a Sink where the Sink alerts the Source that there has", "caption": "Figure 8-20 shows an example sequence between a Source and a Sink where the Sink alerts the Source that there has", "page": 344}, {"figure_id": "Figure 8-21 Sink Alert to Source", "caption": "Figure 8-21 Sink Alert to Source", "page": 344}, {"figure_id": "Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-20 above.", "caption": "Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-20 above.", "page": 344}], "subsections": [], "word_count": 142, "tags": ["source", "sink"]}
{"section_id": "1", "title": "The Device Policy Manager indicates a Sink alert", "content": "condition. The Policy Engine tells the Protocol Layer to form an Alert Message.", "page_start": 344, "page_end": 343, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": ["devices", "policy", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Alert Message and passes", "content": "to Physical Layer. Starts CRCReceiveTimer.", "page_start": 344, "page_end": 343, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer receives the Alert Message and Physical Layer appends a CRC and sends the Alert", "content": "compares the CRC it calculated with the one sent to Message. verify the Message.", "page_start": 344, "page_end": 343, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["messages"]}
{"section_id": "4", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Alert Message to the Policy Engine that consumes it.", "page_start": 344, "page_end": 343, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "5", "title": "The Policy Engine informs the Device Policy", "content": "Manager.", "page_start": 344, "page_end": 343, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": ["devices", "policy"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 344, "page_end": 343, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 344, "page_end": 343, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer. Page 344 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Sink", "page_start": 344, "page_end": 344, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Alert Message was successfully sent. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 345", "page_start": 345, "page_end": 345, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": ["protocol"]}
{"section_id": "8.3.2.10.2", "title": "Status", "content": "", "page_start": 346, "page_end": 345, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.2.10.2.1", "title": "Sink Gets Source Status", "content": "Figure 8-22 shows an example sequence between a Source and a Sink where, after the Sink has received an alert (see Section 8.3.2.10.1) that there has been a status change, the Sink gets more details on the change. Figure 8-22 Sink Gets Source Status Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Status 2:Get_Status 3: Get_Status + CRC Start CRCReceiveTimer 4: Get_Status Check MessageID against local copy Store copy of MessageID 5: Get_Status received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Source Status 9:Get_Status sent Information from DPM Start SenderResponseTimer 10: Send Status 11: Status 12: Status + CRC 13: Status Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Status received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Status sent Table 8-22below provides a detailed explanation of what happens at each labeled step in Figure 8-22 above. Table 8-22 Steps for a Sink getting Source status Sequence Step Sink Port Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Status Message.", "page_start": 346, "page_end": 345, "content_type": "text", "tables": [{"table_id": "Table 8-22below provides a detailed explanation of what happens at each labeled step in Figure 8-22 above.", "caption": "Table 8-22below provides a detailed explanation of what happens at each labeled step in Figure 8-22 above.", "page": 346, "data": []}, {"table_id": "Table 8-22 Steps for a Sink getting Source status Sequence", "caption": "Table 8-22 Steps for a Sink getting Source status Sequence", "page": 346, "data": []}], "figures": [{"figure_id": "Figure 8-22 shows an example sequence between a Source and a Sink where, after the Sink has received an alert (see", "caption": "Figure 8-22 shows an example sequence between a Source and a Sink where, after the Sink has received an alert (see", "page": 346}, {"figure_id": "Figure 8-22 Sink Gets Source Status", "caption": "Figure 8-22 Sink Gets Source Status", "page": 346}, {"figure_id": "Table 8-22below provides a detailed explanation of what happens at each labeled step in Figure 8-22 above.", "caption": "Table 8-22below provides a detailed explanation of what happens at each labeled step in Figure 8-22 above.", "page": 346}], "subsections": [], "word_count": 250, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 346, "page_end": 345, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Status Message and", "content": "Get_Status Message. checks the CRC to verify the Message.", "page_start": 346, "page_end": 345, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Status Message to the Protocol Layer. Page 346 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Sink Port Source Port", "page_start": 346, "page_end": 346, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Status Message information to the Policy Engine that consumes it.", "page_start": 347, "page_end": 346, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 347, "page_end": 346, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 347, "page_end": 346, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 347, "page_end": 346, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Status Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 347, "page_end": 346, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the present", "content": "Source status which is provided. The Policy Engine tells the Protocol Layer to form a Status Message.", "page_start": 347, "page_end": 346, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the Status the CRC it calculated with the one sent to verify the Message. Status Message.", "page_start": 347, "page_end": 346, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Status Message information to the Policy Engine that consumes it.", "page_start": 347, "page_end": 346, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 347, "page_end": 346, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 347, "page_end": 346, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 347, "page_end": 346, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 347, "page_end": 346, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Status Message was successfully sent. The Source has informed the Sink of its present status. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 347", "page_start": 347, "page_end": 347, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["protocol"]}
{"section_id": "8.3.2.10.2.2", "title": "Source Gets Sink Status", "content": "Figure 8-22 shows an example sequence between a Source and a Sink where, after the Source has received an alert (see Section 8.3.2.10.1) that there has been a status change, the Source gets more details on the change. Figure 8-23 Source Gets Sink Status Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Status 2:Get_Status 3: Get_Status + CRC Start CRCReceiveTimer 4: Get_Status Check MessageID against local copy Store copy of MessageID 5: Get_Status received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Source Status 9:Get_Status sent Information from DPM Start SenderResponseTimer 10: Send Status 11: Status 12: Status + CRC 13: Status Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Status received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Status sent Table 8-22below provides a detailed explanation of what happens at each labeled step in Figure 8-22 above. Table 8-23 Steps for a Source getting Sink status Sequence Step Source Port Sink Port 1 The Port has Port Power Role set to Source and the The Port has Port Power Role set to Sink with the Rd Rp pull up on its CC wire. pull down on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Status Message.", "page_start": 348, "page_end": 347, "content_type": "text", "tables": [{"table_id": "Table 8-22below provides a detailed explanation of what happens at each labeled step in Figure 8-22 above.", "caption": "Table 8-22below provides a detailed explanation of what happens at each labeled step in Figure 8-22 above.", "page": 348, "data": []}, {"table_id": "Table 8-23 Steps for a Source getting Sink status Sequence", "caption": "Table 8-23 Steps for a Source getting Sink status Sequence", "page": 348, "data": []}], "figures": [{"figure_id": "Figure 8-22 shows an example sequence between a Source and a Sink where, after the Source has received an alert", "caption": "Figure 8-22 shows an example sequence between a Source and a Sink where, after the Source has received an alert", "page": 348}, {"figure_id": "Figure 8-23 Source Gets Sink Status", "caption": "Figure 8-23 Source Gets Sink Status", "page": 348}, {"figure_id": "Table 8-22below provides a detailed explanation of what happens at each labeled step in Figure 8-22 above.", "caption": "Table 8-22below provides a detailed explanation of what happens at each labeled step in Figure 8-22 above.", "page": 348}], "subsections": [], "word_count": 250, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 348, "page_end": 347, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Status Message and", "content": "Get_Status Message. checks the CRC to verify the Message.", "page_start": 348, "page_end": 347, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Status Message to the Protocol Layer.", "page_start": 348, "page_end": 347, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Status Message information to the Policy Engine that consumes it. Page 348 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Port Sink Port", "page_start": 348, "page_end": 348, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 349, "page_end": 348, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 349, "page_end": 348, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 349, "page_end": 348, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Status Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 349, "page_end": 348, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the present", "content": "Source status which is provided. The Policy Engine tells the Protocol Layer to form a Status Message.", "page_start": 349, "page_end": 348, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the Status the CRC it calculated with the one sent to verify the Message. Status Message.", "page_start": 349, "page_end": 348, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Status Message information to the Policy Engine that consumes it.", "page_start": 349, "page_end": 348, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 349, "page_end": 348, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 349, "page_end": 348, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 349, "page_end": 348, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 349, "page_end": 348, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Status Message was successfully sent. The Sink has informed the Source of its present status.", "page_start": 349, "page_end": 348, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": ["protocol"]}
{"section_id": "8.3.2.10.2.3", "title": "Sink Gets Source PPS Status", "content": "Figure 8-24 shows an example sequence between a Source and a Sink where, after the Sink has received an alert (see Section 8.3.2.10.1) that there has been a PPS status change, the Sink gets more details on the change. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 349 Figure 8-24 Sink Gets Source PPS Status Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_PPS_Status 2:Get_PPS_Status 3: Get_PPS_Status + CRC Start CRCReceiveTimer 4: Get_PPS_Status Check MessageID against local copy Store copy of MessageID 5: Get_PPS_Status received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Source PPS Status 9:Get_PPS_Status sent Information from DPM Start SenderResponseTimer 10: Send PPS_Status 11: PPS_Status 12: PPS_Status + CRC 13: PPS_Status Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: PPS_Status received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: PPS_Status sent Table 8-24below provides a detailed explanation of what happens at each labeled step in Figure 8-24 above. Table 8-24 Steps for a Sink getting Source PPS status Sequence Step Sink Port Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a Get_PPS_Status Message.", "page_start": 349, "page_end": 349, "content_type": "text", "tables": [{"table_id": "Table 8-24below provides a detailed explanation of what happens at each labeled step in Figure 8-24 above.", "caption": "Table 8-24below provides a detailed explanation of what happens at each labeled step in Figure 8-24 above.", "page": 350, "data": []}, {"table_id": "Table 8-24 Steps for a Sink getting Source PPS status Sequence", "caption": "Table 8-24 Steps for a Sink getting Source PPS status Sequence", "page": 350, "data": []}], "figures": [{"figure_id": "Figure 8-24 shows an example sequence between a Source and a Sink where, after the Sink has received an alert (see", "caption": "Figure 8-24 shows an example sequence between a Source and a Sink where, after the Sink has received an alert (see", "page": 349}, {"figure_id": "Figure 8-24 Sink Gets Source PPS Status", "caption": "Figure 8-24 Sink Gets Source PPS Status", "page": 350}, {"figure_id": "Table 8-24below provides a detailed explanation of what happens at each labeled step in Figure 8-24 above.", "caption": "Table 8-24below provides a detailed explanation of what happens at each labeled step in Figure 8-24 above.", "page": 350}], "subsections": [], "word_count": 264, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 350, "page_end": 349, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_PPS_Status Message", "content": "Get_PPS_Status Message. and checks the CRC to verify the Message.", "page_start": 350, "page_end": 349, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Status Message to the Protocol Layer.", "page_start": 350, "page_end": 349, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_PPS_Status Message information to the Policy Engine that consumes it.", "page_start": 350, "page_end": 349, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 350, "page_end": 349, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 350, "page_end": 349, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer. Page 350 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Sink Port Source Port", "page_start": 350, "page_end": 350, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_PPS_Status Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 351, "page_end": 350, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the present", "content": "Source status which is provided. The Policy Engine tells the Protocol Layer to form a PPS_Status Message.", "page_start": 351, "page_end": 350, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 351, "page_end": 350, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the PPS_Status Message. PPS_Status Message.", "page_start": 351, "page_end": 350, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received PPS_Status Message information to the Policy Engine that consumes it.", "page_start": 351, "page_end": 350, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 351, "page_end": 350, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 351, "page_end": 350, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 351, "page_end": 350, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 351, "page_end": 350, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the PPS_Status Message was successfully sent. The Source has informed the Sink of its present PPS status. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 351", "page_start": 351, "page_end": 351, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": ["protocol"]}
{"section_id": "8.3.2.10.3", "title": "Source/Sink Capabilities", "content": "", "page_start": 352, "page_end": 351, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source", "sink"]}
{"section_id": "8.3.2.10.3.1", "title": "Sink Gets Source Capabilities", "content": "Figure 8-25 shows an example sequence between a Source and a Sink when the Sink gets the Source’s capabilities. Figure 8-25 Sink Gets Source’s Capabilities Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Source_Cap 2:Get_Source_Cap 3: Get_Source_Cap + CRC Start CRCReceiveTimer 4: Get_Source_Cap Check MessageID against local copy Store copy of MessageID 5: Get_Source_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Source capability 9:Get_Source_Cap sent Information from DPM Start SenderResponseTimer 10: Send Source_Capabilities 11: Source_Capabilities 12: Source_Capabilities + CRC 13: Source_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Source_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Source_Capabilities sent Table 8-25 below provides a detailed explanation of what happens at each labeled step in Figure 8-25 above. Table 8-25 Steps for a Sink getting Source capabilities Sequence Step Sink Port Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Source_Cap Message.", "page_start": 352, "page_end": 351, "content_type": "text", "tables": [{"table_id": "Table 8-25 below provides a detailed explanation of what happens at each labeled step in Figure 8-25 above.", "caption": "Table 8-25 below provides a detailed explanation of what happens at each labeled step in Figure 8-25 above.", "page": 352, "data": []}, {"table_id": "Table 8-25 Steps for a Sink getting Source capabilities Sequence", "caption": "Table 8-25 Steps for a Sink getting Source capabilities Sequence", "page": 352, "data": []}], "figures": [{"figure_id": "Figure 8-25 shows an example sequence between a Source and a Sink when the Sink gets the Source’s capabilities.", "caption": "Figure 8-25 shows an example sequence between a Source and a Sink when the Sink gets the Source’s capabilities.", "page": 352}, {"figure_id": "Figure 8-25 Sink Gets Source’s Capabilities", "caption": "Figure 8-25 Sink Gets Source’s Capabilities", "page": 352}, {"figure_id": "Table 8-25 below provides a detailed explanation of what happens at each labeled step in Figure 8-25 above.", "caption": "Table 8-25 below provides a detailed explanation of what happens at each labeled step in Figure 8-25 above.", "page": 352}], "subsections": [], "word_count": 232, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 352, "page_end": 351, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Source_Cap Message", "content": "Get_Source_Cap Message. and checks the CRC to verify the Message.", "page_start": 352, "page_end": 351, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["messages", "source"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Source_Cap Message to the Protocol Layer.", "page_start": 352, "page_end": 351, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Source_Cap Message information to the Policy Engine that consumes it. Page 352 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Sink Port Source Port", "page_start": 352, "page_end": 352, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 353, "page_end": 352, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 353, "page_end": 352, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 353, "page_end": 352, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Source_Cap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 353, "page_end": 352, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the present", "content": "Source capabilities which are provided. The Policy Engine tells the Protocol Layer to form a Source_Capabilities Message.", "page_start": 353, "page_end": 352, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 353, "page_end": 352, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Source_Capabilities Message. Source_Capabilities Message.", "page_start": 353, "page_end": 352, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Source_Capabilities Message information to the Policy Engine that consumes it.", "page_start": 353, "page_end": 352, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 353, "page_end": 352, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 353, "page_end": 352, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 353, "page_end": 352, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 353, "page_end": 352, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Source_Capabilities Message was successfully sent. The Source has informed the Sink of its capabilities. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 353", "page_start": 353, "page_end": 353, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": ["protocol"]}
{"section_id": "8.3.2.10.3.2", "title": "Dual-Role Source Gets Source Capabilities from a Dual-Role Sink", "content": "Figure 8-26 shows an example sequence between a Dual-Role Source and a Dual-Role Sink when the Source gets the Sink’s capabilities as a Source. Figure 8-26 Dual-Role Source Gets Dual-Role Sink’s Capabilities as a Source Dual-Role Source Port Dual-Role Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Source_Cap 2:Get_Source_Cap 3: Get_Source_Cap + CRC Start CRCReceiveTimer 4: Get_Source_Cap Check MessageID against local copy Store copy of MessageID 5: Get_Source_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Source capability 9:Get_Source_Cap sent Information from DPM Start SenderResponseTimer 10: Send Source_Capabilities 11: Source_Capabilities 12: Source_Capabilities + CRC 13: Source_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Source_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Source_Capabilities sent Table 8-26 below provides a detailed explanation of what happens at each labeled step in Figure 8-26 above. Table 8-26 Steps for a Dual-Role Source getting Dual-Role Sink’s capabilities as a Source Sequence Step Dual-Role Source Port Dual-Role Sink Port 1 The Port has Port Power Role set to Source and the The Port has Port Power Role set to Sink with the Rd Rp pull up on its CC wire. pull down on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Source_Cap Message.", "page_start": 354, "page_end": 353, "content_type": "text", "tables": [{"table_id": "Table 8-26 below provides a detailed explanation of what happens at each labeled step in Figure 8-26 above.", "caption": "Table 8-26 below provides a detailed explanation of what happens at each labeled step in Figure 8-26 above.", "page": 354, "data": []}, {"table_id": "Table 8-26 Steps for a Dual-Role Source getting Dual-Role Sink’s capabilities as a Source Sequence", "caption": "Table 8-26 Steps for a Dual-Role Source getting Dual-Role Sink’s capabilities as a Source Sequence", "page": 354, "data": []}], "figures": [{"figure_id": "Figure 8-26 shows an example sequence between a Dual-Role Source and a Dual-Role Sink when the Source gets the", "caption": "Figure 8-26 shows an example sequence between a Dual-Role Source and a Dual-Role Sink when the Source gets the", "page": 354}, {"figure_id": "Figure 8-26 Dual-Role Source Gets Dual-Role Sink’s Capabilities as a Source", "caption": "Figure 8-26 Dual-Role Source Gets Dual-Role Sink’s Capabilities as a Source", "page": 354}, {"figure_id": "Table 8-26 below provides a detailed explanation of what happens at each labeled step in Figure 8-26 above.", "caption": "Table 8-26 below provides a detailed explanation of what happens at each labeled step in Figure 8-26 above.", "page": 354}], "subsections": [], "word_count": 251, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 354, "page_end": 353, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Source_Cap Message", "content": "Get_Source_Cap Message. and checks the CRC to verify the Message.", "page_start": 354, "page_end": 353, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["messages", "source"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Source_Cap Message to the Protocol Layer.", "page_start": 354, "page_end": 353, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Source_Cap Message information to the Policy Engine that consumes it. Page 354 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Dual-Role Source Port Dual-Role Sink Port", "page_start": 354, "page_end": 354, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 50, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 355, "page_end": 354, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 355, "page_end": 354, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 355, "page_end": 354, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Source_Cap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 355, "page_end": 354, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the present", "content": "Source capabilities which are provided. The Policy Engine tells the Protocol Layer to form a Source_Capabilities Message.", "page_start": 355, "page_end": 354, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 355, "page_end": 354, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Source_Capabilities Message. Source_Capabilities Message.", "page_start": 355, "page_end": 354, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Source_Capabilities Message information to the Policy Engine that consumes it.", "page_start": 355, "page_end": 354, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 355, "page_end": 354, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 355, "page_end": 354, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 355, "page_end": 354, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 355, "page_end": 354, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Source_Capabilities Message was successfully sent. The Dual-Role Sink has informed the Dual-Role Source of its capabilities. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 355", "page_start": 355, "page_end": 355, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": ["protocol"]}
{"section_id": "8.3.2.10.3.3", "title": "Source Gets Sink Capabilities", "content": "Figure 8-27 shows an example sequence between a Source and a Sink when the Source gets the Sink’s capabilities. Figure 8-27 Source Gets Sink’s Capabilities Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Sink_Cap 2:Get_Sink_Cap 3: Get_Sink_Cap + CRC Start CRCReceiveTimer 4: Get_Sink_Cap Check MessageID against local copy Store copy of MessageID 5: Get_Sink_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Sink capability 9:Get_Sink_Cap sent Information from DPM Start SenderResponseTimer 10: Send Sink_Capabilities 11: Sink_Capabilities 12: Sink_Capabilities + CRC 13: Sink_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Sink_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Sink_Capabilities sent Table 8-27 below provides a detailed explanation of what happens at each labeled step in Figure 8-27 above. Table 8-27 Steps for a Source getting Sink capabilities Sequence Step Source Port Sink Port 1 The Port has Port Power Role set to Source and the The Port has Port Power Role set to Sink with the Rd Rp pull up on its CC wire. pull down on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Sink_Cap Message.", "page_start": 356, "page_end": 355, "content_type": "text", "tables": [{"table_id": "Table 8-27 below provides a detailed explanation of what happens at each labeled step in Figure 8-27 above.", "caption": "Table 8-27 below provides a detailed explanation of what happens at each labeled step in Figure 8-27 above.", "page": 356, "data": []}, {"table_id": "Table 8-27 Steps for a Source getting Sink capabilities Sequence", "caption": "Table 8-27 Steps for a Source getting Sink capabilities Sequence", "page": 356, "data": []}], "figures": [{"figure_id": "Figure 8-27 shows an example sequence between a Source and a Sink when the Source gets the Sink’s capabilities.", "caption": "Figure 8-27 shows an example sequence between a Source and a Sink when the Source gets the Sink’s capabilities.", "page": 356}, {"figure_id": "Figure 8-27 Source Gets Sink’s Capabilities", "caption": "Figure 8-27 Source Gets Sink’s Capabilities", "page": 356}, {"figure_id": "Table 8-27 below provides a detailed explanation of what happens at each labeled step in Figure 8-27 above.", "caption": "Table 8-27 below provides a detailed explanation of what happens at each labeled step in Figure 8-27 above.", "page": 356}], "subsections": [], "word_count": 232, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 356, "page_end": 355, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Sink_Cap Message", "content": "Get_Sink_Cap Message. and checks the CRC to verify the Message.", "page_start": 356, "page_end": 355, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["messages", "sink"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Sink_Cap Message to the Protocol Layer.", "page_start": 356, "page_end": 355, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Sink_Cap Message information to the Policy Engine that consumes it.", "page_start": 356, "page_end": 355, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer. Page 356 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Port Sink Port", "page_start": 356, "page_end": 356, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 357, "page_end": 356, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 357, "page_end": 356, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Sink_Cap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 357, "page_end": 356, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the present Sink", "content": "capabilities which are provided. The Policy Engine tells the Protocol Layer to form a Sink_Capabilities Message.", "page_start": 357, "page_end": 356, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 16, "tags": ["policy", "sink"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 357, "page_end": 356, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Sink_Capabilities Message. Sink_Capabilities Message.", "page_start": 357, "page_end": 356, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Sink_Capabilities Message information to the Policy Engine that consumes it.", "page_start": 357, "page_end": 356, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 357, "page_end": 356, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 357, "page_end": 356, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 357, "page_end": 356, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 357, "page_end": 356, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Sink_Capabilities Message was successfully sent. The Sink has informed the Source of its capabilities. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 357", "page_start": 357, "page_end": 357, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": ["protocol"]}
{"section_id": "8.3.2.10.3.4", "title": "Dual-Role Sink Get Sink Capabilities from a Dual-Role Source", "content": "Figure 8-28 shows an example sequence between a Dual-Role Source and a Dual-Role Sink when the Dual-Role Sink gets the Dual-Role Source’s capabilities as a Sink. Figure 8-28 Dual-Role Sink Gets Dual-Role Source’s Capabilities as a Sink Dual-Role Sink Port Dual-Role Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Sink_Cap 2:Get_Sink_Cap 3: Get_Sink_Cap + CRC Start CRCReceiveTimer 4: Get_Sink_Cap Check MessageID against local copy Store copy of MessageID 5: Get_Sink_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Sink capability 9:Get_Sink_Cap sent Information from DPM Start SenderResponseTimer 10: Send Sink_Capabilities 11: Sink_Capabilities 12: Sink_Capabilities + CRC 13: Sink_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Sink_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Sink_Capabilities sent Table 8-28 below provides a detailed explanation of what happens at each labeled step in Figure 8-28 above. Table 8-28 Steps for a Dual-Role Sink getting Dual-Role Source capabilities as a Sink Sequence Step Dual-Role Sink Port Dual-Role Source Port 1 The Port has Port Power Role set to Dual-Role Sink The Port has Port Power Role set to Dual-Role Source with the Rd pull down on its CC wire. and the Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Sink_Cap Message.", "page_start": 358, "page_end": 357, "content_type": "text", "tables": [{"table_id": "Table 8-28 below provides a detailed explanation of what happens at each labeled step in Figure 8-28 above.", "caption": "Table 8-28 below provides a detailed explanation of what happens at each labeled step in Figure 8-28 above.", "page": 358, "data": []}, {"table_id": "Table 8-28 Steps for a Dual-Role Sink getting Dual-Role Source capabilities as a Sink Sequence", "caption": "Table 8-28 Steps for a Dual-Role Sink getting Dual-Role Source capabilities as a Sink Sequence", "page": 358, "data": []}], "figures": [{"figure_id": "Figure 8-28 shows an example sequence between a Dual-Role Source and a Dual-Role Sink when the Dual-Role Sink", "caption": "Figure 8-28 shows an example sequence between a Dual-Role Source and a Dual-Role Sink when the Dual-Role Sink", "page": 358}, {"figure_id": "Figure 8-28 Dual-Role Sink Gets Dual-Role Source’s Capabilities as a Sink", "caption": "Figure 8-28 Dual-Role Sink Gets Dual-Role Source’s Capabilities as a Sink", "page": 358}, {"figure_id": "Table 8-28 below provides a detailed explanation of what happens at each labeled step in Figure 8-28 above.", "caption": "Table 8-28 below provides a detailed explanation of what happens at each labeled step in Figure 8-28 above.", "page": 358}], "subsections": [], "word_count": 255, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 358, "page_end": 357, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Sink_Cap Message", "content": "Get_Sink_Cap Message. and checks the CRC to verify the Message.", "page_start": 358, "page_end": 357, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["messages", "sink"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Sink_Cap Message to the Protocol Layer.", "page_start": 358, "page_end": 357, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Sink_Cap Message information to the Policy Engine that consumes it. Page 358 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Dual-Role Sink Port Dual-Role Source Port", "page_start": 358, "page_end": 358, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 50, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 359, "page_end": 358, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 359, "page_end": 358, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 359, "page_end": 358, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Sink_Cap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 359, "page_end": 358, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the present Dual-", "content": "Role Source capabilities which are provided. The Policy Engine tells the Protocol Layer to form a Sink_Capabilities Message.", "page_start": 359, "page_end": 358, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 359, "page_end": 358, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Sink_Capabilities Message. Sink_Capabilities Message.", "page_start": 359, "page_end": 358, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Sink_Capabilities Message information to the Policy Engine that consumes it.", "page_start": 359, "page_end": 358, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 359, "page_end": 358, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 359, "page_end": 358, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 359, "page_end": 358, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 359, "page_end": 358, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Sink_Capabilities Message was successfully sent. The Dual-Role Source has informed the Dual-Role Sink of its capabilities as a Sink. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 359", "page_start": 359, "page_end": 359, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["protocol"]}
{"section_id": "8.3.2.10.4", "title": "Extended Capabilities", "content": "", "page_start": 360, "page_end": 359, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.2.10.4.1", "title": "Sink Gets Source Extended Capabilities", "content": "Figure 8-29 shows an example sequence between a Source and a Sink when the Sink gets the Source’s extended capabilities. Figure 8-29 Sink Gets Source’s Extended Capabilities Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Source_Cap_Extended 2:Get_Source_Cap_Extended 3: Get_Source_Cap_Extended + CRC Start CRCReceiveTimer 4: Get_Source_Cap_Extended Check MessageID against local copy Store copy of MessageID 5: Get_Source_Cap_Extended 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get extended Source 9:Get_Source_Cap_Extended sent capability Information from DPM Start SenderResponseTimer 10: Send Source_Capabilities_Extended 12: Source_Capabilities_Extended 11: Source_Capabilities_Extended + CRC 13: Source_Capabilities_Extended Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Source_Capabilities_Extended received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Source_Capabilities_Extended sent Table 8-29 below provides a detailed explanation of what happens at each labeled step in Figure 8-29 above. Table 8-29 Steps for a Sink getting Source extended capabilities Sequence Step Sink Port Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Source_Cap_Extended Message.", "page_start": 360, "page_end": 359, "content_type": "text", "tables": [{"table_id": "Table 8-29 below provides a detailed explanation of what happens at each labeled step in Figure 8-29 above.", "caption": "Table 8-29 below provides a detailed explanation of what happens at each labeled step in Figure 8-29 above.", "page": 360, "data": []}, {"table_id": "Table 8-29 Steps for a Sink getting Source extended capabilities Sequence", "caption": "Table 8-29 Steps for a Sink getting Source extended capabilities Sequence", "page": 360, "data": []}], "figures": [{"figure_id": "Figure 8-29 shows an example sequence between a Source and a Sink when the Sink gets the Source’s extended", "caption": "Figure 8-29 shows an example sequence between a Source and a Sink when the Sink gets the Source’s extended", "page": 360}, {"figure_id": "Figure 8-29 Sink Gets Source’s Extended Capabilities", "caption": "Figure 8-29 Sink Gets Source’s Extended Capabilities", "page": 360}, {"figure_id": "Table 8-29 below provides a detailed explanation of what happens at each labeled step in Figure 8-29 above.", "caption": "Table 8-29 below provides a detailed explanation of what happens at each labeled step in Figure 8-29 above.", "page": 360}], "subsections": [], "word_count": 236, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 360, "page_end": 359, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the", "content": "Get_Source_Cap_Extended Message. Get_Source_Cap_Extended Message and checks the CRC to verify the Message.", "page_start": 360, "page_end": 359, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Source_Cap_Extended Message to the Protocol Layer. Page 360 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Sink Port Source Port", "page_start": 360, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Source_Cap_Extended Message information to the Policy Engine that consumes it.", "page_start": 361, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 361, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 361, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 361, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Source_Cap_Extended Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 361, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the present", "content": "extended Source capabilities which are provided. The Policy Engine tells the Protocol Layer to form a Source_Capabilities_Extended Message.", "page_start": 361, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 361, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Source_Capabilities_Extended Message. Source_Capabilities_Extended Message.", "page_start": 361, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Source_Capabilities_Extended Message information to the Policy Engine that consumes it.", "page_start": 361, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 361, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 361, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 361, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 361, "page_end": 360, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Source_Capabilities_Extended Message was successfully sent. The Source has informed the Sink of its extended capabilities. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 361", "page_start": 361, "page_end": 361, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["protocol"]}
{"section_id": "8.3.2.10.4.2", "title": "Dual-Role Source Gets Source Capabilities Extended from a Dual-Role Sink", "content": "Figure 8-29 shows an example sequence between a Source and a Sink when the Dual-Role Source gets the Dual-Role Sink’s extended capabilities as a Source. Figure 8-30 Dual-Role Source Gets Dual-Role Sink’s Extended Capabilities Dual-Role Source Port Dual-Role Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Source_Cap_Extended 2:Get_Source_Cap_Extended 3: Get_Source_Cap_Extended + CRC Start CRCReceiveTimer 4: Get_Source_Cap_Extended Check MessageID against local copy Store copy of MessageID 5: Get_Source_Cap_Extended 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get extended Source 9:Get_Source_Cap_Extended sent capability Information from DPM Start SenderResponseTimer 10: Send Source_Capabilities_Extended 12: Source_Capabilities_Extended 11: Source_Capabilities_Extended + CRC 13: Source_Capabilities_Extended Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Source_Capabilities_Extended received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Source_Capabilities_Extended sent Table 8-29 below provides a detailed explanation of what happens at each labeled step in Figure 8-29 above. Table 8-30 Steps for a Dual-Role Source getting Dual-Role Sink extended capabilities Sequence Step Dual-Role Source Port Dual-Role Sink Port 1 The Port has Port Power Role set to Source and the The Port has Port Power Role set to Sink with the Rd Rp pull up on its CC wire. pull down on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Source_Cap_Extended Message.", "page_start": 362, "page_end": 361, "content_type": "text", "tables": [{"table_id": "Table 8-29 below provides a detailed explanation of what happens at each labeled step in Figure 8-29 above.", "caption": "Table 8-29 below provides a detailed explanation of what happens at each labeled step in Figure 8-29 above.", "page": 362, "data": []}, {"table_id": "Table 8-30 Steps for a Dual-Role Source getting Dual-Role Sink extended capabilities Sequence", "caption": "Table 8-30 Steps for a Dual-Role Source getting Dual-Role Sink extended capabilities Sequence", "page": 362, "data": []}], "figures": [{"figure_id": "Figure 8-29 shows an example sequence between a Source and a Sink when the Dual-Role Source gets the Dual-Role", "caption": "Figure 8-29 shows an example sequence between a Source and a Sink when the Dual-Role Source gets the Dual-Role", "page": 362}, {"figure_id": "Figure 8-30 Dual-Role Source Gets Dual-Role Sink’s Extended Capabilities", "caption": "Figure 8-30 Dual-Role Source Gets Dual-Role Sink’s Extended Capabilities", "page": 362}, {"figure_id": "Table 8-29 below provides a detailed explanation of what happens at each labeled step in Figure 8-29 above.", "caption": "Table 8-29 below provides a detailed explanation of what happens at each labeled step in Figure 8-29 above.", "page": 362}], "subsections": [], "word_count": 249, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 362, "page_end": 361, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the", "content": "Get_Source_Cap_Extended Message. Get_Source_Cap_Extended Message and checks the CRC to verify the Message.", "page_start": 362, "page_end": 361, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Source_Cap_Extended Message to the Protocol Layer.", "page_start": 362, "page_end": 361, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Source_Cap_Extended Message information to the Policy Engine that consumes it. Page 362 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Dual-Role Source Port Dual-Role Sink Port", "page_start": 362, "page_end": 362, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 50, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 363, "page_end": 362, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 363, "page_end": 362, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 363, "page_end": 362, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Source_Cap_Extended Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 363, "page_end": 362, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the present", "content": "extended Source capabilities which are provided. The Policy Engine tells the Protocol Layer to form a Source_Capabilities_Extended Message.", "page_start": 363, "page_end": 362, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 363, "page_end": 362, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Source_Capabilities_Extended Message. Source_Capabilities_Extended Message.", "page_start": 363, "page_end": 362, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Source_Capabilities_Extended Message information to the Policy Engine that consumes it.", "page_start": 363, "page_end": 362, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 363, "page_end": 362, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 363, "page_end": 362, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 363, "page_end": 362, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 363, "page_end": 362, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Source_Capabilities_Extended Message was successfully sent. The Dual-Role Sink has informed the Dual-Role Source of its extended capabilities as a Source. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 363", "page_start": 363, "page_end": 363, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 42, "tags": ["protocol"]}
{"section_id": "8.3.2.10.5", "title": "Battery Capabilities and Status", "content": "", "page_start": 364, "page_end": 363, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.2.10.5.1", "title": "Sink Gets Battery Capabilities", "content": "Figure 8-31 shows an example sequence between a Source and a Sink when the Sink gets the Source’s Battery capabilities for a given Battery. Figure 8-31 Sink Gets Source’s Battery Capabilities Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Battery CC = Rd CC = Rp 1: Send Get_Battery_Cap 2:Get_Battery_Cap 3: Get_Battery_Cap + CRC Start CRCReceiveTimer 4: Get_Battery_Cap Check MessageID against local copy Store copy of MessageID 5: Get_Battery_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Battery capability 9:Get_Battery_Cap sent Information from DPM Start SenderResponseTimer 10: Send Battery_Capabilities 11: Battery_Capabilities 12: Battery_Capabilities + CRC 13: Battery_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Battery_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Battery_Capabilities sent Table 8-31 below provides a detailed explanation of what happens at each labeled step in Figure 8-31 above. Table 8-31 Steps for a Sink getting Source Battery capabilities Sequence Step Sink Port Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Battery_Cap Message containing the number of the Battery for which capabilities are being requested.", "page_start": 364, "page_end": 363, "content_type": "text", "tables": [{"table_id": "Table 8-31 below provides a detailed explanation of what happens at each labeled step in Figure 8-31 above.", "caption": "Table 8-31 below provides a detailed explanation of what happens at each labeled step in Figure 8-31 above.", "page": 364, "data": []}, {"table_id": "Table 8-31 Steps for a Sink getting Source Battery capabilities Sequence", "caption": "Table 8-31 Steps for a Sink getting Source Battery capabilities Sequence", "page": 364, "data": []}], "figures": [{"figure_id": "Figure 8-31 shows an example sequence between a Source and a Sink when the Sink gets the Source’s Battery", "caption": "Figure 8-31 shows an example sequence between a Source and a Sink when the Sink gets the Source’s Battery", "page": 364}, {"figure_id": "Figure 8-31 Sink Gets Source’s Battery Capabilities", "caption": "Figure 8-31 Sink Gets Source’s Battery Capabilities", "page": 364}, {"figure_id": "Table 8-31 below provides a detailed explanation of what happens at each labeled step in Figure 8-31 above.", "caption": "Table 8-31 below provides a detailed explanation of what happens at each labeled step in Figure 8-31 above.", "page": 364}], "subsections": [], "word_count": 251, "tags": ["sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 364, "page_end": 363, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Battery_Cap Message", "content": "Get_Battery_Cap Message. and checks the CRC to verify the Message.", "page_start": 364, "page_end": 363, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Battery_Cap Message to the Protocol Layer. Page 364 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Sink Port Source Port", "page_start": 364, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Battery_Cap Message information to the Policy Engine that consumes it.", "page_start": 365, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 365, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 365, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 365, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Battery_Cap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 365, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the present", "content": "Source Battery capabilities, for the requested Battery number, which are provided. The Policy Engine tells the Protocol Layer to form a Battery_Capabilities Message.", "page_start": 365, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 365, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Battery_Capabilities Message. Battery_Capabilities Message.", "page_start": 365, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Battery_Capabilities Message information to the Policy Engine that consumes it.", "page_start": 365, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 365, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 365, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 365, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 365, "page_end": 364, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Battery_Capabilities Message was successfully sent. The Source has informed the Sink of the Battery capabilities for the requested Battery. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 365", "page_start": 365, "page_end": 365, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["protocol"]}
{"section_id": "8.3.2.10.5.2", "title": "Source Gets Battery Capabilities", "content": "Figure 8-32 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Battery capabilities for a given Battery. Figure 8-32 Source Gets Sink’s Battery Capabilities Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Battery Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Battery_Cap 2:Get_Battery_Cap 3: Get_Battery_Cap + CRC Start CRCReceiveTimer 4: Get_Battery_Cap Check MessageID against local copy Store copy of MessageID 5: Get_Battery_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Battery capability 9:Get_Battery_Cap sent Information from DPM Start SenderResponseTimer 10: Send Battery_Capabilities 11: Battery_Capabilities 12: Battery_Capabilities + CRC 13: Battery_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Battery_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Battery_Capabilities sent Table 8-32 below provides a detailed explanation of what happens at each labeled step in Figure 8-32 above. Table 8-32 Steps for a Source getting Sink Battery capabilities Sequence Step Source Port Sink Port 1 The Port has Port Power Role set to Source and the The Port has Port Power Role set to Sink with the Rd Rp pull up on its CC wire. pull down on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Battery_Cap Message containing the number of the Battery for which capabilities are being requested.", "page_start": 366, "page_end": 365, "content_type": "text", "tables": [{"table_id": "Table 8-32 below provides a detailed explanation of what happens at each labeled step in Figure 8-32 above.", "caption": "Table 8-32 below provides a detailed explanation of what happens at each labeled step in Figure 8-32 above.", "page": 366, "data": []}, {"table_id": "Table 8-32 Steps for a Source getting Sink Battery capabilities Sequence", "caption": "Table 8-32 Steps for a Source getting Sink Battery capabilities Sequence", "page": 366, "data": []}], "figures": [{"figure_id": "Figure 8-32 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Battery", "caption": "Figure 8-32 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Battery", "page": 366}, {"figure_id": "Figure 8-32 Source Gets Sink’s Battery Capabilities", "caption": "Figure 8-32 Source Gets Sink’s Battery Capabilities", "page": 366}, {"figure_id": "Table 8-32 below provides a detailed explanation of what happens at each labeled step in Figure 8-32 above.", "caption": "Table 8-32 below provides a detailed explanation of what happens at each labeled step in Figure 8-32 above.", "page": 366}], "subsections": [], "word_count": 251, "tags": ["source"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 366, "page_end": 365, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Battery_Cap Message", "content": "Get_Battery_Cap Message. and checks the CRC to verify the Message.", "page_start": 366, "page_end": 365, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Battery_Cap Message to the Protocol Layer. Page 366 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Port Sink Port", "page_start": 366, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Battery_Cap Message information to the Policy Engine that consumes it.", "page_start": 367, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 367, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 367, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 367, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Battery_Cap Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 367, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the present", "content": "Source Battery capabilities, for the requested Battery number, which are provided. The Policy Engine tells the Protocol Layer to form a Battery_Capabilities Message.", "page_start": 367, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 367, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Battery_Capabilities Message. Battery_Capabilities Message.", "page_start": 367, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Battery_Capabilities Message information to the Policy Engine that consumes it.", "page_start": 367, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 367, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 367, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 367, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 367, "page_end": 366, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Battery_Capabilities Message was successfully sent. The Sink has informed the Source of the Battery capabilities for the requested Battery. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 367", "page_start": 367, "page_end": 367, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["protocol"]}
{"section_id": "8.3.2.10.5.3", "title": "Sink Gets Battery Status", "content": "Figure 8-33 shows an example sequence between a Source and a Sink when the Sink gets the Source’s Battery status for a given Battery. Figure 8-33 Sink Gets Source’s Battery Status Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Battery CC = Rd CC = Rp 1: Send Get_Battery_Status 2:Get_Battery_Status 3: Get_Battery_Status + CRC Start CRCReceiveTimer 4: Get_Battery_Status Check MessageID against local copy Store copy of MessageID 5: Get_Battery_Status received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Battery status 9:Get_Battery_Status sent Information from DPM Start SenderResponseTimer 10: Send Battery_Status 11: Battery_Status 12: Battery_Status + CRC 13: Battery_Status Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Battery_Status received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Battery_Status sent Table 8-33 below provides a detailed explanation of what happens at each labeled step in Figure 8-33 above. Table 8-33 Steps for a Sink getting Source Battery status Sequence Step Sink Port Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Battery_Status Message containing the number of the Battery for which status is being requested.", "page_start": 368, "page_end": 367, "content_type": "text", "tables": [{"table_id": "Table 8-33 below provides a detailed explanation of what happens at each labeled step in Figure 8-33 above.", "caption": "Table 8-33 below provides a detailed explanation of what happens at each labeled step in Figure 8-33 above.", "page": 368, "data": []}, {"table_id": "Table 8-33 Steps for a Sink getting Source Battery status Sequence", "caption": "Table 8-33 Steps for a Sink getting Source Battery status Sequence", "page": 368, "data": []}], "figures": [{"figure_id": "Figure 8-33 shows an example sequence between a Source and a Sink when the Sink gets the Source’s Battery status", "caption": "Figure 8-33 shows an example sequence between a Source and a Sink when the Sink gets the Source’s Battery status", "page": 368}, {"figure_id": "Figure 8-33 Sink Gets Source’s Battery Status", "caption": "Figure 8-33 Sink Gets Source’s Battery Status", "page": 368}, {"figure_id": "Table 8-33 below provides a detailed explanation of what happens at each labeled step in Figure 8-33 above.", "caption": "Table 8-33 below provides a detailed explanation of what happens at each labeled step in Figure 8-33 above.", "page": 368}], "subsections": [], "word_count": 251, "tags": ["sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 368, "page_end": 367, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Battery_Status", "content": "Get_Battery_Status Message. Message and checks the CRC to verify the Message.", "page_start": 368, "page_end": 367, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Battery_Status Message to the Protocol Layer.", "page_start": 368, "page_end": 367, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Battery_Status Message information to the Policy Engine that consumes it. Page 368 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Sink Port Source Port", "page_start": 368, "page_end": 368, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 369, "page_end": 368, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 369, "page_end": 368, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 369, "page_end": 368, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Battery_Status Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 369, "page_end": 368, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the present", "content": "Source Battery status, for the requested Battery number, which are provided. The Policy Engine tells the Protocol Layer to form a Battery_Status Message.", "page_start": 369, "page_end": 368, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 369, "page_end": 368, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Battery_Status Message. Battery_Status Message.", "page_start": 369, "page_end": 368, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Battery_Status Message information to the Policy Engine that consumes it.", "page_start": 369, "page_end": 368, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 369, "page_end": 368, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 369, "page_end": 368, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 369, "page_end": 368, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 369, "page_end": 368, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Battery_Status Message was successfully sent. The Source has informed the Sink of the Battery status for the requested Battery. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 369", "page_start": 369, "page_end": 369, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["protocol"]}
{"section_id": "8.3.2.10.5.4", "title": "Source Gets Battery Status", "content": "Figure 8-34 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Battery status for a given Battery. Figure 8-34 Source Gets Sink’s Battery Status Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Battery Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Battery_Status 2:Get_Battery_Status 3: Get_Battery_Status + CRC Start CRCReceiveTimer 4: Get_Battery_Status Check MessageID against local copy Store copy of MessageID 5: Get_Battery_Status received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Battery status 9:Get_Battery_Status sent Information from DPM Start SenderResponseTimer 10: Send Battery_Status 11: Battery_Status 12: Battery_Status + CRC 13: Battery_Status Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Battery_Status received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Battery_Status sent Table 8-34 below provides a detailed explanation of what happens at each labeled step in Figure 8-34 above. Table 8-34 Steps for a Source getting Sink Battery status Sequence Step Source Port Sink Port 1 The Port has Port Power Role set to Source and the The Port has Port Power Role set to Sink with the Rd Rp pull up on its CC wire. pull down on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Battery_Status Message containing the number of the Battery for which status is being requested.", "page_start": 370, "page_end": 369, "content_type": "text", "tables": [{"table_id": "Table 8-34 below provides a detailed explanation of what happens at each labeled step in Figure 8-34 above.", "caption": "Table 8-34 below provides a detailed explanation of what happens at each labeled step in Figure 8-34 above.", "page": 370, "data": []}, {"table_id": "Table 8-34 Steps for a Source getting Sink Battery status Sequence", "caption": "Table 8-34 Steps for a Source getting Sink Battery status Sequence", "page": 370, "data": []}], "figures": [{"figure_id": "Figure 8-34 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Battery status", "caption": "Figure 8-34 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Battery status", "page": 370}, {"figure_id": "Figure 8-34 Source Gets Sink’s Battery Status", "caption": "Figure 8-34 Source Gets Sink’s Battery Status", "page": 370}, {"figure_id": "Table 8-34 below provides a detailed explanation of what happens at each labeled step in Figure 8-34 above.", "caption": "Table 8-34 below provides a detailed explanation of what happens at each labeled step in Figure 8-34 above.", "page": 370}], "subsections": [], "word_count": 251, "tags": ["source"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 370, "page_end": 369, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Battery_Status", "content": "Get_Battery_Status Message. Message and checks the CRC to verify the Message.", "page_start": 370, "page_end": 369, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Battery_Status Message to the Protocol Layer.", "page_start": 370, "page_end": 369, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Battery_Status Message information to the Policy Engine that consumes it. Page 370 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Port Sink Port", "page_start": 370, "page_end": 370, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 371, "page_end": 370, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 371, "page_end": 370, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 371, "page_end": 370, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Battery_Status Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 371, "page_end": 370, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the present", "content": "Source Battery status, for the requested Battery number, which are provided. The Policy Engine tells the Protocol Layer to form a Battery_Status Message.", "page_start": 371, "page_end": 370, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 371, "page_end": 370, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Battery_Status Message. Battery_Status Message.", "page_start": 371, "page_end": 370, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Battery_Status Message information to the Policy Engine that consumes it.", "page_start": 371, "page_end": 370, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 371, "page_end": 370, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 371, "page_end": 370, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 371, "page_end": 370, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 371, "page_end": 370, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Battery_Status Message was successfully sent. The Sink has informed the Source of the Battery status for the requested Battery. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 371", "page_start": 371, "page_end": 371, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["protocol"]}
{"section_id": "8.3.2.10.6", "title": "Manufacturer Information", "content": "", "page_start": 372, "page_end": 371, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.2.10.6.1", "title": "Source Gets Port Manufacturer Information from a Sink", "content": "Figure 8-35 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Manufacturer information for the Port. Figure 8-35 Source Gets Sink’s Port Manufacturer Information Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Manufacturer_Info 2:Get_Manufacturer_Info 3: Get_Manufacturer_Info + CRC Start CRCReceiveTimer 4: Get_Manufacturer_Info Check MessageID against local copy Store copy of MessageID 5: Get_Manufacturer_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Manufacturer 9:Get_Manufacturer_Info sent Information from DPM Start SenderResponseTimer 10: Send Manufacturer_Info 12: Manufacturer_Info 11: Manufacturer_Info + CRC 13: Manufacturer_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Manufacturer_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Manufacturer_Info sent Table 8-32 below provides a detailed explanation of what happens at each labeled step in Figure 8-35 above. Table 8-35 Steps for a Source getting Sink’s Port Manufacturer information Sequence Step Source Port Sink Port 1 The Port has Port Power Role set to Source and the The Port has Port Power Role set to Sink with the Rd Rp pull up on its CC wire. pull down on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Manufacturer_Info Message with a request for Port information.", "page_start": 372, "page_end": 371, "content_type": "text", "tables": [{"table_id": "Table 8-32 below provides a detailed explanation of what happens at each labeled step in Figure 8-35 above.", "caption": "Table 8-32 below provides a detailed explanation of what happens at each labeled step in Figure 8-35 above.", "page": 372, "data": []}, {"table_id": "Table 8-35 Steps for a Source getting Sink’s Port Manufacturer information Sequence", "caption": "Table 8-35 Steps for a Source getting Sink’s Port Manufacturer information Sequence", "page": 372, "data": []}], "figures": [{"figure_id": "Figure 8-35 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Manufacturer", "caption": "Figure 8-35 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Manufacturer", "page": 372}, {"figure_id": "Figure 8-35 Source Gets Sink’s Port Manufacturer Information", "caption": "Figure 8-35 Source Gets Sink’s Port Manufacturer Information", "page": 372}, {"figure_id": "Table 8-32 below provides a detailed explanation of what happens at each labeled step in Figure 8-35 above.", "caption": "Table 8-32 below provides a detailed explanation of what happens at each labeled step in Figure 8-35 above.", "page": 372}], "subsections": [], "word_count": 245, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 372, "page_end": 371, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Manufacturer_Info", "content": "Get_Manufacturer_Info Message. Message and checks the CRC to verify the Message.", "page_start": 372, "page_end": 371, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Manufacturer_Info Message to the Protocol Layer. Page 372 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Port Sink Port", "page_start": 372, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Manufacturer_Info Message information to the Policy Engine that consumes it.", "page_start": 373, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 373, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 373, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 373, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Manufacturer_Info Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 373, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the Port’s", "content": "manufacturer information which is provided. The Policy Engine tells the Protocol Layer to form a Manufacturer_Info Message.", "page_start": 373, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 373, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Manufacturer_Info Message. Manufacturer_Info Message.", "page_start": 373, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Manufacturer_Info Message information to the Policy Engine that consumes it.", "page_start": 373, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 373, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 373, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 373, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 373, "page_end": 372, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Manufacturer_Info Message was successfully sent. The Sink has informed the Source of the manufacturer information for the Port. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 373", "page_start": 373, "page_end": 373, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 40, "tags": ["protocol"]}
{"section_id": "8.3.2.10.6.2", "title": "Sink Gets Port Manufacturer Information from a Source", "content": "Figure 8-36 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Manufacturer information for the Port. Figure 8-36 Sink Gets Source’s Port Manufacturer Information Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Manufacturer_Info 2:Get_Manufacturer_Info 3: Get_Manufacturer_Info + CRC Start CRCReceiveTimer 4: Get_Manufacturer_Info Check MessageID against local copy Store copy of MessageID 5: Get_Manufacturer_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Manufacturer 9:Get_Manufacturer_Info sent Information from DPM Start SenderResponseTimer 10: Send Manufacturer_Info 12: Manufacturer_Info 11: Manufacturer_Info + CRC 13: Manufacturer_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Manufacturer_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Manufacturer_Info sent Table 8-36 below provides a detailed explanation of what happens at each labeled step in Figure 8-36 above. Table 8-36 Steps for a Source getting Sink’s Port Manufacturer information Sequence Step Sink Port Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Manufacturer_Info Message with a request for Port information.", "page_start": 374, "page_end": 373, "content_type": "text", "tables": [{"table_id": "Table 8-36 below provides a detailed explanation of what happens at each labeled step in Figure 8-36 above.", "caption": "Table 8-36 below provides a detailed explanation of what happens at each labeled step in Figure 8-36 above.", "page": 374, "data": []}, {"table_id": "Table 8-36 Steps for a Source getting Sink’s Port Manufacturer information Sequence", "caption": "Table 8-36 Steps for a Source getting Sink’s Port Manufacturer information Sequence", "page": 374, "data": []}], "figures": [{"figure_id": "Figure 8-36 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Manufacturer", "caption": "Figure 8-36 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Manufacturer", "page": 374}, {"figure_id": "Figure 8-36 Sink Gets Source’s Port Manufacturer Information", "caption": "Figure 8-36 Sink Gets Source’s Port Manufacturer Information", "page": 374}, {"figure_id": "Table 8-36 below provides a detailed explanation of what happens at each labeled step in Figure 8-36 above.", "caption": "Table 8-36 below provides a detailed explanation of what happens at each labeled step in Figure 8-36 above.", "page": 374}], "subsections": [], "word_count": 245, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 374, "page_end": 373, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Manufacturer_Info", "content": "Get_Manufacturer_Info Message. Message and checks the CRC to verify the Message.", "page_start": 374, "page_end": 373, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Manufacturer_Info Message to the Protocol Layer.", "page_start": 374, "page_end": 373, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Manufacturer_Info Message information to the Policy Engine that consumes it. Page 374 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Sink Port Source Port", "page_start": 374, "page_end": 374, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 375, "page_end": 374, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 375, "page_end": 374, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 375, "page_end": 374, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Manufacturer_Info Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 375, "page_end": 374, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the Port’s", "content": "manufacturer information which is provided. The Policy Engine tells the Protocol Layer to form a Manufacturer_Info Message.", "page_start": 375, "page_end": 374, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 375, "page_end": 374, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Manufacturer_Info Message. Manufacturer_Info Message.", "page_start": 375, "page_end": 374, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Manufacturer_Info Message information to the Policy Engine that consumes it.", "page_start": 375, "page_end": 374, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 375, "page_end": 374, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 375, "page_end": 374, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 375, "page_end": 374, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 375, "page_end": 374, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Manufacturer_Info Message was successfully sent. The Sink has informed the Source of the manufacturer information for the Port. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 375", "page_start": 375, "page_end": 375, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 40, "tags": ["protocol"]}
{"section_id": "8.3.2.10.6.3", "title": "Source Gets Battery Manufacturer Information from a Sink", "content": "Figure 8-37 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Manufacturer information for one of its Batteries. Figure 8-37 Source Gets Sink’s Battery Manufacturer Information Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Manufacturer_Info 2:Get_Manufacturer_Info 3: Get_Manufacturer_Info + CRC Start CRCReceiveTimer 4: Get_Manufacturer_Info Check MessageID against local copy Store copy of MessageID 5: Get_Manufacturer_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Manufacturer 9:Get_Manufacturer_Info sent Information from DPM Start SenderResponseTimer 10: Send Manufacturer_Info 12: Manufacturer_Info 11: Manufacturer_Info + CRC 13: Manufacturer_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Manufacturer_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Manufacturer_Info sent Table 8-37 below provides a detailed explanation of what happens at each labeled step in Figure 8-37 above. Table 8-37 Steps for a Source getting Sink’s Battery Manufacturer information Sequence Step Source Port Sink Port 1 The Port has Port Power Role set to Source and the The Port has Port Power Role set to Sink with the Rd Rp pull up on its CC wire. pull down on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Manufacturer_Info Message with a request for Battery information for a given Battery.", "page_start": 376, "page_end": 375, "content_type": "text", "tables": [{"table_id": "Table 8-37 below provides a detailed explanation of what happens at each labeled step in Figure 8-37 above.", "caption": "Table 8-37 below provides a detailed explanation of what happens at each labeled step in Figure 8-37 above.", "page": 376, "data": []}, {"table_id": "Table 8-37 Steps for a Source getting Sink’s Battery Manufacturer information Sequence", "caption": "Table 8-37 Steps for a Source getting Sink’s Battery Manufacturer information Sequence", "page": 376, "data": []}], "figures": [{"figure_id": "Figure 8-37 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Manufacturer", "caption": "Figure 8-37 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Manufacturer", "page": 376}, {"figure_id": "Figure 8-37 Source Gets Sink’s Battery Manufacturer Information", "caption": "Figure 8-37 Source Gets Sink’s Battery Manufacturer Information", "page": 376}, {"figure_id": "Table 8-37 below provides a detailed explanation of what happens at each labeled step in Figure 8-37 above.", "caption": "Table 8-37 below provides a detailed explanation of what happens at each labeled step in Figure 8-37 above.", "page": 376}], "subsections": [], "word_count": 251, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 376, "page_end": 375, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Manufacturer_Info", "content": "Get_Manufacturer_Info Message. Message and checks the CRC to verify the Message.", "page_start": 376, "page_end": 375, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Manufacturer_Info Message to the Protocol Layer.", "page_start": 376, "page_end": 375, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Manufacturer_Info Message information to the Policy Engine that consumes it. Page 376 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Port Sink Port", "page_start": 376, "page_end": 376, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 377, "page_end": 376, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 377, "page_end": 376, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 377, "page_end": 376, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Manufacturer_Info Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 377, "page_end": 376, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the Battery’s", "content": "manufacturer information for a given Battery which is provided. The Policy Engine tells the Protocol Layer to form a Manufacturer_Info Message.", "page_start": 377, "page_end": 376, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 377, "page_end": 376, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Manufacturer_Info Message. Manufacturer_Info Message.", "page_start": 377, "page_end": 376, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Manufacturer_Info Message information to the Policy Engine that consumes it.", "page_start": 377, "page_end": 376, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 377, "page_end": 376, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 377, "page_end": 376, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 377, "page_end": 376, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 377, "page_end": 376, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Manufacturer_Info Message was successfully sent. The Sink has informed the Source of the manufacturer information for the requested Battery. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 377", "page_start": 377, "page_end": 377, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["protocol"]}
{"section_id": "8.3.2.10.6.4", "title": "Sink Gets Battery Manufacturer Information from a Source", "content": "Figure 8-38 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Manufacturer information for the Port. Figure 8-38 Sink Gets Source’s Battery Manufacturer Information Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Manufacturer_Info 2:Get_Manufacturer_Info 3: Get_Manufacturer_Info + CRC Start CRCReceiveTimer 4: Get_Manufacturer_Info Check MessageID against local copy Store copy of MessageID 5: Get_Manufacturer_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Manufacturer 9:Get_Manufacturer_Info sent Information from DPM Start SenderResponseTimer 10: Send Manufacturer_Info 12: Manufacturer_Info 11: Manufacturer_Info + CRC 13: Manufacturer_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Manufacturer_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Manufacturer_Info sent Table 8-38 below provides a detailed explanation of what happens at each labeled step in Figure 8-38 above. Table 8-38 Steps for a Source getting Sink’s Battery Manufacturer information Sequence Step Sink Port Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Manufacturer_Info Message with a request for Battery information for a given Battery.", "page_start": 378, "page_end": 377, "content_type": "text", "tables": [{"table_id": "Table 8-38 below provides a detailed explanation of what happens at each labeled step in Figure 8-38 above.", "caption": "Table 8-38 below provides a detailed explanation of what happens at each labeled step in Figure 8-38 above.", "page": 378, "data": []}, {"table_id": "Table 8-38 Steps for a Source getting Sink’s Battery Manufacturer information Sequence", "caption": "Table 8-38 Steps for a Source getting Sink’s Battery Manufacturer information Sequence", "page": 378, "data": []}], "figures": [{"figure_id": "Figure 8-38 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Manufacturer", "caption": "Figure 8-38 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Manufacturer", "page": 378}, {"figure_id": "Figure 8-38 Sink Gets Source’s Battery Manufacturer Information", "caption": "Figure 8-38 Sink Gets Source’s Battery Manufacturer Information", "page": 378}, {"figure_id": "Table 8-38 below provides a detailed explanation of what happens at each labeled step in Figure 8-38 above.", "caption": "Table 8-38 below provides a detailed explanation of what happens at each labeled step in Figure 8-38 above.", "page": 378}], "subsections": [], "word_count": 249, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 378, "page_end": 377, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Manufacturer_Info", "content": "Get_Manufacturer_Info Message. Message and checks the CRC to verify the Message.", "page_start": 378, "page_end": 377, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Manufacturer_Info Message to the Protocol Layer.", "page_start": 378, "page_end": 377, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Manufacturer_Info Message information to the Policy Engine that consumes it. Page 378 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Sink Port Source Port", "page_start": 378, "page_end": 378, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 379, "page_end": 378, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 379, "page_end": 378, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 379, "page_end": 378, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Manufacturer_Info Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 379, "page_end": 378, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the Battery’s", "content": "manufacturer information for a given Battery which is provided. The Policy Engine tells the Protocol Layer to form a Manufacturer_Info Message.", "page_start": 379, "page_end": 378, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 379, "page_end": 378, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Manufacturer_Info Message. Manufacturer_Info Message.", "page_start": 379, "page_end": 378, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Manufacturer_Info Message information to the Policy Engine that consumes it.", "page_start": 379, "page_end": 378, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 379, "page_end": 378, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 379, "page_end": 378, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 379, "page_end": 378, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 379, "page_end": 378, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Manufacturer_Info Message was successfully sent. The Sink has informed the Source of the manufacturer information for the requested Battery. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 379", "page_start": 379, "page_end": 379, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["protocol"]}
{"section_id": "8.3.2.10.6.5", "title": "VCONN Source Gets Manufacturer Information from a Cable Plug", "content": "Figure 8-39 shows an example sequence between a VCONN Source (Source or Sink) and a Cable Plug when the VCONN Source gets the Cable Plug’s Manufacturer information. Figure 8-39 VCONN Source Gets Cable Plug’s Manufacturer Information VCONN Source Port Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Get_Manufacturer_Info 2:Get_Manufacturer_Info 3: Get_Manufacturer_Info + CRC Start CRCReceiveTimer 4: Get_Manufacturer_Info Check MessageID against local copy Store copy of MessageID 5: Get_Manufacturer_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Manufacturer 9:Get_Manufacturer_Info sent Information from DPM Start SenderResponseTimer 10: Send Manufacturer_Info 12: Manufacturer_Info 11: Manufacturer_Info + CRC 13: Manufacturer_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Manufacturer_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Manufacturer_Info sent Table 8-39 below provides a detailed explanation of what happens at each labeled step in Figure 8-39 above. Table 8-39 Steps for a VCONN Source getting Sink’s Port Manufacturer information Sequence Step VCONN Source Cable Plug", "page_start": 380, "page_end": 379, "content_type": "text", "tables": [{"table_id": "Table 8-39 below provides a detailed explanation of what happens at each labeled step in Figure 8-39 above.", "caption": "Table 8-39 below provides a detailed explanation of what happens at each labeled step in Figure 8-39 above.", "page": 380, "data": []}, {"table_id": "Table 8-39 Steps for a VCONN Source getting Sink’s Port Manufacturer information Sequence", "caption": "Table 8-39 Steps for a VCONN Source getting Sink’s Port Manufacturer information Sequence", "page": 380, "data": []}], "figures": [{"figure_id": "Figure 8-39 shows an example sequence between a VCONN Source (Source or Sink) and a Cable Plug when the VCONN", "caption": "Figure 8-39 shows an example sequence between a VCONN Source (Source or Sink) and a Cable Plug when the VCONN", "page": 380}, {"figure_id": "Figure 8-39 VCONN Source Gets Cable Plug’s Manufacturer Information", "caption": "Figure 8-39 VCONN Source Gets Cable Plug’s Manufacturer Information", "page": 380}, {"figure_id": "Table 8-39 below provides a detailed explanation of what happens at each labeled step in Figure 8-39 above.", "caption": "Table 8-39 below provides a detailed explanation of what happens at each labeled step in Figure 8-39 above.", "page": 380}], "subsections": [], "word_count": 182, "tags": ["cable", "source"]}
{"section_id": "1", "title": "The Port is currently acting as the VCONN Source.", "content": "Policy Engine directs the Protocol Layer to send a Get_Manufacturer_Info Message with a request for Port information.", "page_start": 380, "page_end": 379, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["source"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 380, "page_end": 379, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Manufacturer_Info", "content": "Get_Manufacturer_Info Message. Message and checks the CRC to verify the Message.", "page_start": 380, "page_end": 379, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Manufacturer_Info Message to the Protocol Layer.", "page_start": 380, "page_end": 379, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Manufacturer_Info Message information to the Policy Engine that consumes it. Page 380 USB Power Delivery Specification Revision 3.0, Version 1.1 Step VCONN Source Cable Plug", "page_start": 380, "page_end": 380, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 381, "page_end": 380, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 381, "page_end": 380, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 381, "page_end": 380, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Manufacturer_Info Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 381, "page_end": 380, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the Cable Plug’s", "content": "manufacturer information which is provided. The Policy Engine tells the Protocol Layer to form a Manufacturer_Info Message.", "page_start": 381, "page_end": 380, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["cable", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 381, "page_end": 380, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Manufacturer_Info Message. Manufacturer_Info Message.", "page_start": 381, "page_end": 380, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Manufacturer_Info Message information to the Policy Engine that consumes it.", "page_start": 381, "page_end": 380, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 381, "page_end": 380, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 381, "page_end": 380, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 381, "page_end": 380, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 381, "page_end": 380, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Manufacturer_Info Message was successfully sent. The Cable Plug has informed the Source of its manufacturer information. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 381", "page_start": 381, "page_end": 381, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": ["protocol"]}
{"section_id": "8.3.2.10.7", "title": "Country Codes", "content": "", "page_start": 382, "page_end": 381, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.2.10.7.1", "title": "Source Gets Country Codes from a Sink", "content": "Figure 8-40 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Country Codes. Figure 8-40 Source Gets Sink’s Country Codes Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Country_Codes 2:Get_Country_Codes 3: Get_Country_Codes + CRC Start CRCReceiveTimer 4: Get_Country_Codes Check MessageID against local copy Store copy of MessageID 5: Get_Country_Codes 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Country Codes 9:Get_Country_Codes sent Information from DPM Start SenderResponseTimer 10: Send Country_Codes 12: Country_Codes 11: Country_Codes + CRC 13: Country_Codes Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Codes received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Codes sent Table 8-40 below provides a detailed explanation of what happens at each labeled step in Figure 8-40 above. Table 8-40 Steps for a Source getting Country Codes Sequence Step Source Port Sink Port 1 The Port has Port Power Role set to Source and the The Port has Port Power Role set to Sink with the Rd Rp pull up on its CC wire. pull down on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Country_Codes Message with a request for Port information.", "page_start": 382, "page_end": 381, "content_type": "text", "tables": [{"table_id": "Table 8-40 below provides a detailed explanation of what happens at each labeled step in Figure 8-40 above.", "caption": "Table 8-40 below provides a detailed explanation of what happens at each labeled step in Figure 8-40 above.", "page": 382, "data": []}, {"table_id": "Table 8-40 Steps for a Source getting Country Codes Sequence", "caption": "Table 8-40 Steps for a Source getting Country Codes Sequence", "page": 382, "data": []}], "figures": [{"figure_id": "Figure 8-40 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Country Codes.", "caption": "Figure 8-40 shows an example sequence between a Source and a Sink when the Source gets the Sink’s Country Codes.", "page": 382}, {"figure_id": "Figure 8-40 Source Gets Sink’s Country Codes", "caption": "Figure 8-40 Source Gets Sink’s Country Codes", "page": 382}, {"figure_id": "Table 8-40 below provides a detailed explanation of what happens at each labeled step in Figure 8-40 above.", "caption": "Table 8-40 below provides a detailed explanation of what happens at each labeled step in Figure 8-40 above.", "page": 382}], "subsections": [], "word_count": 240, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 382, "page_end": 381, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Country_Codes", "content": "Get_Country_Codes Message. Message and checks the CRC to verify the Message.", "page_start": 382, "page_end": 381, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Country_Codes Message to the Protocol Layer.", "page_start": 382, "page_end": 381, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Country_Codes Message information to the Policy Engine that consumes it. Page 382 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Port Sink Port", "page_start": 382, "page_end": 382, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 383, "page_end": 382, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 383, "page_end": 382, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 383, "page_end": 382, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Country_Codes Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 383, "page_end": 382, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the Port’s", "content": "manufacturer information which is provided. The Policy Engine tells the Protocol Layer to form a Country_Codes Message.", "page_start": 383, "page_end": 382, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 383, "page_end": 382, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Country_Codes Message. Country_Codes Message.", "page_start": 383, "page_end": 382, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Country_Codes Message information to the Policy Engine that consumes it.", "page_start": 383, "page_end": 382, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 383, "page_end": 382, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 383, "page_end": 382, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 383, "page_end": 382, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 383, "page_end": 382, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Country_Codes Message was successfully sent. The Sink has informed the Source of the country codes. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 383", "page_start": 383, "page_end": 383, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["protocol"]}
{"section_id": "8.3.2.10.7.2", "title": "Sink Gets Country Codes from a Source", "content": "Figure 8-41 shows an example sequence between a Source and a Sink when the Source gets the Sink’s country codes. Figure 8-41 Sink Gets Source’s Country Codes Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Country_Codes 2:Get_Country_Codes 3: Get_Country_Codes + CRC Start CRCReceiveTimer 4: Get_Country_Codes Check MessageID against local copy Store copy of MessageID 5: Get_Country_Codes 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get country codes 9:Get_Country_Codes sent Information from DPM Start SenderResponseTimer 10: Send Country_Codes 12: Country_Codes 11: Country_Codes + CRC 13: Country_Codes Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Codes received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Codes sent Table 8-41 below provides a detailed explanation of what happens at each labeled step in Figure 8-41 above. Table 8-41 Steps for a Source getting Sink’s Country Codes Sequence Step Sink Port Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Country_Codes Message with a request for Port information.", "page_start": 384, "page_end": 383, "content_type": "text", "tables": [{"table_id": "Table 8-41 below provides a detailed explanation of what happens at each labeled step in Figure 8-41 above.", "caption": "Table 8-41 below provides a detailed explanation of what happens at each labeled step in Figure 8-41 above.", "page": 384, "data": []}, {"table_id": "Table 8-41 Steps for a Source getting Sink’s Country Codes Sequence", "caption": "Table 8-41 Steps for a Source getting Sink’s Country Codes Sequence", "page": 384, "data": []}], "figures": [{"figure_id": "Figure 8-41 shows an example sequence between a Source and a Sink when the Source gets the Sink’s country codes.", "caption": "Figure 8-41 shows an example sequence between a Source and a Sink when the Source gets the Sink’s country codes.", "page": 384}, {"figure_id": "Figure 8-41 Sink Gets Source’s Country Codes", "caption": "Figure 8-41 Sink Gets Source’s Country Codes", "page": 384}, {"figure_id": "Table 8-41 below provides a detailed explanation of what happens at each labeled step in Figure 8-41 above.", "caption": "Table 8-41 below provides a detailed explanation of what happens at each labeled step in Figure 8-41 above.", "page": 384}], "subsections": [], "word_count": 241, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 384, "page_end": 383, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Country_Codes", "content": "Get_Country_Codes Message. Message and checks the CRC to verify the Message.", "page_start": 384, "page_end": 383, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Country_Codes Message to the Protocol Layer.", "page_start": 384, "page_end": 383, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Country_Codes Message information to the Policy Engine that consumes it.", "page_start": 384, "page_end": 383, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer. Page 384 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Sink Port Source Port", "page_start": 384, "page_end": 384, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 385, "page_end": 384, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 385, "page_end": 384, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Country_Codes Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 385, "page_end": 384, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the Port’s", "content": "manufacturer information which is provided. The Policy Engine tells the Protocol Layer to form a Country_Codes Message.", "page_start": 385, "page_end": 384, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 385, "page_end": 384, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Country_Codes Message. Country_Codes Message.", "page_start": 385, "page_end": 384, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Country_Codes Message information to the Policy Engine that consumes it.", "page_start": 385, "page_end": 384, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 385, "page_end": 384, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 385, "page_end": 384, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 385, "page_end": 384, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 385, "page_end": 384, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Country_Codes Message was successfully sent. The Sink has informed the Source of the country codes. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 385", "page_start": 385, "page_end": 385, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["protocol"]}
{"section_id": "8.3.2.10.7.3", "title": "VCONN Source Gets Country Codes from a Cable Plug", "content": "Figure 8-42 shows an example sequence between a VCONN Source (Source or Sink) and a Cable Plug when the VCONN Source gets the Cable Plug’s Country Codes. Figure 8-42 VCONN Source Gets Cable Plug’s Country Codes VCONN Source Port Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Get_Country_Codes 2:Get_Country_Codes 3: Get_Country_Codes + CRC Start CRCReceiveTimer 4: Get_Country_Codes Check MessageID against local copy Store copy of MessageID 5: Get_Country_Codes 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get country codes from 9:Get_Country_Codes sent DPM Start SenderResponseTimer 10: Send Country_Codes 12: Country_Codes 11: Country_Codes + CRC 13: Country_Codes Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Codes received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Codes sent Table 8-42 below provides a detailed explanation of what happens at each labeled step in Figure 8-42 above. Table 8-42 Steps for a VCONN Source getting Sink’s Country Codes Sequence Step VCONN Source Cable Plug", "page_start": 386, "page_end": 385, "content_type": "text", "tables": [{"table_id": "Table 8-42 below provides a detailed explanation of what happens at each labeled step in Figure 8-42 above.", "caption": "Table 8-42 below provides a detailed explanation of what happens at each labeled step in Figure 8-42 above.", "page": 386, "data": []}, {"table_id": "Table 8-42 Steps for a VCONN Source getting Sink’s Country Codes Sequence", "caption": "Table 8-42 Steps for a VCONN Source getting Sink’s Country Codes Sequence", "page": 386, "data": []}], "figures": [{"figure_id": "Figure 8-42 shows an example sequence between a VCONN Source (Source or Sink) and a Cable Plug when the VCONN", "caption": "Figure 8-42 shows an example sequence between a VCONN Source (Source or Sink) and a Cable Plug when the VCONN", "page": 386}, {"figure_id": "Figure 8-42 VCONN Source Gets Cable Plug’s Country Codes", "caption": "Figure 8-42 VCONN Source Gets Cable Plug’s Country Codes", "page": 386}, {"figure_id": "Table 8-42 below provides a detailed explanation of what happens at each labeled step in Figure 8-42 above.", "caption": "Table 8-42 below provides a detailed explanation of what happens at each labeled step in Figure 8-42 above.", "page": 386}], "subsections": [], "word_count": 181, "tags": ["cable", "source"]}
{"section_id": "1", "title": "The Port is currently acting as the VCONN Source.", "content": "Policy Engine directs the Protocol Layer to send a Get_Country_Codes Message with a request for Port information.", "page_start": 386, "page_end": 385, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["source"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 386, "page_end": 385, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Country_Codes", "content": "Get_Country_Codes Message. Message and checks the CRC to verify the Message.", "page_start": 386, "page_end": 385, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Country_Codes Message to the Protocol Layer.", "page_start": 386, "page_end": 385, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Country_Codes Message information to the Policy Engine that consumes it.", "page_start": 386, "page_end": 385, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer. Page 386 USB Power Delivery Specification Revision 3.0, Version 1.1 Step VCONN Source Cable Plug", "page_start": 386, "page_end": 386, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 387, "page_end": 386, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 387, "page_end": 386, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Country_Codes Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 387, "page_end": 386, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the Cable Plug’s", "content": "manufacturer information which is provided. The Policy Engine tells the Protocol Layer to form a Country_Codes Message.", "page_start": 387, "page_end": 386, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["cable", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 387, "page_end": 386, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Country_Codes Message. Country_Codes Message.", "page_start": 387, "page_end": 386, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Country_Codes Message information to the Policy Engine that consumes it.", "page_start": 387, "page_end": 386, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 387, "page_end": 386, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 387, "page_end": 386, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 387, "page_end": 386, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 387, "page_end": 386, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Country_Codes Message was successfully sent. The Cable Plug has informed the Source of its country codes. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 387", "page_start": 387, "page_end": 387, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": ["protocol"]}
{"section_id": "8.3.2.10.8", "title": "Country Information", "content": "", "page_start": 388, "page_end": 387, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.2.10.8.1", "title": "Source Gets Country Information from a Sink", "content": "Figure 8-43 shows an example sequence between a Source and a Sink when the Source gets the Sink’s country information. Figure 8-43 Source Gets Sink’s Country Information Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Country_Info 2:Get_Country_Info 3: Get_Country_Info + CRC Start CRCReceiveTimer 4: Get_Country_Info Check MessageID against local copy Store copy of MessageID 5: Get_Country_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Country Information 9:Get_Country_Info sent from DPM Start SenderResponseTimer 10: Send Country_Info 12: Country_Info 11: Country_Info + CRC 13: Country_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Info sent Table 8-43 below provides a detailed explanation of what happens at each labeled step in Figure 8-43 above. Table 8-43 Steps for a Source getting Country Information Sequence Step Source Port Sink Port 1 The Port has Port Power Role set to Source and the The Port has Port Power Role set to Sink with the Rd Rp pull up on its CC wire. pull down on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Country_Info Message with a request for Port information for a specific Country Code.", "page_start": 388, "page_end": 387, "content_type": "text", "tables": [{"table_id": "Table 8-43 below provides a detailed explanation of what happens at each labeled step in Figure 8-43 above.", "caption": "Table 8-43 below provides a detailed explanation of what happens at each labeled step in Figure 8-43 above.", "page": 388, "data": []}, {"table_id": "Table 8-43 Steps for a Source getting Country Information Sequence", "caption": "Table 8-43 Steps for a Source getting Country Information Sequence", "page": 388, "data": []}], "figures": [{"figure_id": "Figure 8-43 shows an example sequence between a Source and a Sink when the Source gets the Sink’s country", "caption": "Figure 8-43 shows an example sequence between a Source and a Sink when the Source gets the Sink’s country", "page": 388}, {"figure_id": "Figure 8-43 Source Gets Sink’s Country Information", "caption": "Figure 8-43 Source Gets Sink’s Country Information", "page": 388}, {"figure_id": "Table 8-43 below provides a detailed explanation of what happens at each labeled step in Figure 8-43 above.", "caption": "Table 8-43 below provides a detailed explanation of what happens at each labeled step in Figure 8-43 above.", "page": 388}], "subsections": [], "word_count": 244, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 388, "page_end": 387, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Country_Info", "content": "Get_Country_Info Message. Message and checks the CRC to verify the Message.", "page_start": 388, "page_end": 387, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Country_Info Message to the Protocol Layer. Page 388 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Port Sink Port", "page_start": 388, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Country_Info Message information to the Policy Engine that consumes it.", "page_start": 389, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 389, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 389, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 389, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Country_Info Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 389, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the Port’s", "content": "manufacturer information which is provided. The Policy Engine tells the Protocol Layer to form a Country_Info Message.", "page_start": 389, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 389, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Country_Info Message. Country_Info Message.", "page_start": 389, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Country_Info Message information to the Policy Engine that consumes it.", "page_start": 389, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 389, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 389, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 389, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 389, "page_end": 388, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Country_Info Message was successfully sent. The Sink has informed the Source of the country information. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 389", "page_start": 389, "page_end": 389, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["protocol"]}
{"section_id": "8.3.2.10.8.2", "title": "Sink Gets Country Information from a Source", "content": "Figure 8-44 shows an example sequence between a Source and a Sink when the Source gets the Sink’s country codes. Figure 8-44 Sink Gets Source’s Country Information Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Country_Info 2:Get_Country_Info 3: Get_Country_Info + CRC Start CRCReceiveTimer 4: Get_Country_Info Check MessageID against local copy Store copy of MessageID 5: Get_Country_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get country information 9:Get_Country_Info sent from DPM Start SenderResponseTimer 10: Send Country_Info 12: Country_Info 11: Country_Info + CRC 13: Country_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Info sent Table 8-44 below provides a detailed explanation of what happens at each labeled step in Figure 8-44 above. Table 8-44 Steps for a Source getting Sink’s Country Information Sequence Step Sink Port Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a Get_Country_Info Message with a request for Port information for a specific country code.", "page_start": 390, "page_end": 389, "content_type": "text", "tables": [{"table_id": "Table 8-44 below provides a detailed explanation of what happens at each labeled step in Figure 8-44 above.", "caption": "Table 8-44 below provides a detailed explanation of what happens at each labeled step in Figure 8-44 above.", "page": 390, "data": []}, {"table_id": "Table 8-44 Steps for a Source getting Sink’s Country Information Sequence", "caption": "Table 8-44 Steps for a Source getting Sink’s Country Information Sequence", "page": 390, "data": []}], "figures": [{"figure_id": "Figure 8-44 shows an example sequence between a Source and a Sink when the Source gets the Sink’s country codes.", "caption": "Figure 8-44 shows an example sequence between a Source and a Sink when the Source gets the Sink’s country codes.", "page": 390}, {"figure_id": "Figure 8-44 Sink Gets Source’s Country Information", "caption": "Figure 8-44 Sink Gets Source’s Country Information", "page": 390}, {"figure_id": "Table 8-44 below provides a detailed explanation of what happens at each labeled step in Figure 8-44 above.", "caption": "Table 8-44 below provides a detailed explanation of what happens at each labeled step in Figure 8-44 above.", "page": 390}], "subsections": [], "word_count": 245, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 390, "page_end": 389, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Country_Info", "content": "Get_Country_Info Message. Message and checks the CRC to verify the Message.", "page_start": 390, "page_end": 389, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Country_Info Message to the Protocol Layer.", "page_start": 390, "page_end": 389, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Country_Info Message information to the Policy Engine that consumes it.", "page_start": 390, "page_end": 389, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer. Page 390 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Sink Port Source Port", "page_start": 390, "page_end": 390, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 391, "page_end": 390, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 391, "page_end": 390, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Country_Info Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 391, "page_end": 390, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the Port’s", "content": "manufacturer information which is provided. The Policy Engine tells the Protocol Layer to form a Country_Info Message.", "page_start": 391, "page_end": 390, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 391, "page_end": 390, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Country_Info Message. Country_Info Message.", "page_start": 391, "page_end": 390, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Country_Info Message information to the Policy Engine that consumes it.", "page_start": 391, "page_end": 390, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 391, "page_end": 390, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 391, "page_end": 390, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 391, "page_end": 390, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 391, "page_end": 390, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Country_Info Message was successfully sent. The Sink has informed the Source of the country information. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 391", "page_start": 391, "page_end": 391, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["protocol"]}
{"section_id": "8.3.2.10.8.1", "title": "VCONN Source Gets Country Information from a Cable Plug", "content": "Figure 8-45 shows an example sequence between a VCONN Source (Source or Sink) and a Cable Plug when the VCONN Source gets the Cable Plug’s country information. Figure 8-45 VCONN Source Gets Cable Plug’s Country Information VCONN Source Port Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Get_Country_Info 2:Get_Country_Info 3: Get_Country_Info + CRC Start CRCReceiveTimer 4: Get_Country_Info Check MessageID against local copy Store copy of MessageID 5: Get_Country_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Country Information 9:Get_Country_Info sent from DPM Start SenderResponseTimer 10: Send Country_Info 12: Country_Info 11: Country_Info + CRC 13: Country_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Info sent Table 8-45 below provides a detailed explanation of what happens at each labeled step in Figure 8-45 above. Table 8-45 Steps for a VCONN Source getting Sink’s Country Information Sequence Step VCONN Source Cable Plug", "page_start": 392, "page_end": 391, "content_type": "text", "tables": [{"table_id": "Table 8-45 below provides a detailed explanation of what happens at each labeled step in Figure 8-45 above.", "caption": "Table 8-45 below provides a detailed explanation of what happens at each labeled step in Figure 8-45 above.", "page": 392, "data": []}, {"table_id": "Table 8-45 Steps for a VCONN Source getting Sink’s Country Information Sequence", "caption": "Table 8-45 Steps for a VCONN Source getting Sink’s Country Information Sequence", "page": 392, "data": []}], "figures": [{"figure_id": "Figure 8-45 shows an example sequence between a VCONN Source (Source or Sink) and a Cable Plug when the VCONN", "caption": "Figure 8-45 shows an example sequence between a VCONN Source (Source or Sink) and a Cable Plug when the VCONN", "page": 392}, {"figure_id": "Figure 8-45 VCONN Source Gets Cable Plug’s Country Information", "caption": "Figure 8-45 VCONN Source Gets Cable Plug’s Country Information", "page": 392}, {"figure_id": "Table 8-45 below provides a detailed explanation of what happens at each labeled step in Figure 8-45 above.", "caption": "Table 8-45 below provides a detailed explanation of what happens at each labeled step in Figure 8-45 above.", "page": 392}], "subsections": [], "word_count": 181, "tags": ["cable", "source"]}
{"section_id": "1", "title": "The Port is currently acting as the VCONN Source.", "content": "Policy Engine directs the Protocol Layer to send a Get_Country_Info Message with a request for Port information for a specific country code.", "page_start": 392, "page_end": 391, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": ["source"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 392, "page_end": 391, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Get_Country_Info", "content": "Get_Country_Info Message. Message and checks the CRC to verify the Message.", "page_start": 392, "page_end": 391, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Get_Country_Info Message to the Protocol Layer.", "page_start": 392, "page_end": 391, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Get_Country_Info Message information to the Policy Engine that consumes it.", "page_start": 392, "page_end": 391, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer. Page 392 USB Power Delivery Specification Revision 3.0, Version 1.1 Step VCONN Source Cable Plug", "page_start": 392, "page_end": 392, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 393, "page_end": 392, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 393, "page_end": 392, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Get_Country_Info Message was successfully sent. Policy Engine starts SenderResponseTimer.", "page_start": 393, "page_end": 392, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the Cable Plug’s", "content": "manufacturer information which is provided. The Policy Engine tells the Protocol Layer to form a Country_Info Message.", "page_start": 393, "page_end": 392, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["cable", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 393, "page_end": 392, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Country_Info Message. Country_Info Message.", "page_start": 393, "page_end": 392, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Country_Info Message information to the Policy Engine that consumes it.", "page_start": 393, "page_end": 392, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the SenderResponseTimer.", "content": "", "page_start": 393, "page_end": 392, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 393, "page_end": 392, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 393, "page_end": 392, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 393, "page_end": 392, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Country_Info Message was successfully sent. The Cable Plug has informed the Source of its country information. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 393", "page_start": 393, "page_end": 393, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": ["protocol"]}
{"section_id": "8.3.2.11", "title": "Security", "content": "", "page_start": 394, "page_end": 393, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.2.11.1", "title": "Source requests security exchange with Sink", "content": "Figure 8-46 shows an example sequence for a security exchange between a Source and a Sink. Figure 8-46 Source requests security exchange with Sink Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Security_Request 2:Security_Request 3: Security_Request + CRC Start CRCReceiveTimer 4: Security_Request Check MessageID against local copy Store copy of MessageID 5: Security_Request received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get security response 9:Security_Request sent from DPM 10: Send Security_Response 11: Security_Response 12: Security_Response + CRC 13: Security_Response Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Security_Response received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Security_Response sent Table 8-46 below provides a detailed explanation of what happens at each labeled step in Figure 8-46 above. Table 8-46 Steps for a Source requesting a security exchange with a Sink Sequence Step Source Port Sink Port 1 The Port has Port Power Role set to Source and the The Port has Port Power Role set to Sink with the Rd Rp pull up on its CC wire. pull down on its CC wire. Policy Engine directs the Protocol Layer to send a Security_Request Message using a payload supplied by the DPM.", "page_start": 394, "page_end": 393, "content_type": "text", "tables": [{"table_id": "Table 8-46 below provides a detailed explanation of what happens at each labeled step in Figure 8-46 above.", "caption": "Table 8-46 below provides a detailed explanation of what happens at each labeled step in Figure 8-46 above.", "page": 394, "data": []}, {"table_id": "Table 8-46 Steps for a Source requesting a security exchange with a Sink Sequence", "caption": "Table 8-46 Steps for a Source requesting a security exchange with a Sink Sequence", "page": 394, "data": []}], "figures": [{"figure_id": "Figure 8-46 shows an example sequence for a security exchange between a Source and a Sink.", "caption": "Figure 8-46 shows an example sequence for a security exchange between a Source and a Sink.", "page": 394}, {"figure_id": "Figure 8-46 Source requests security exchange with Sink", "caption": "Figure 8-46 Source requests security exchange with Sink", "page": 394}, {"figure_id": "Table 8-46 below provides a detailed explanation of what happens at each labeled step in Figure 8-46 above.", "caption": "Table 8-46 below provides a detailed explanation of what happens at each labeled step in Figure 8-46 above.", "page": 394}], "subsections": [], "word_count": 237, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 394, "page_end": 393, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Security_Request", "content": "Security_Request Message. Message and checks the CRC to verify the Message.", "page_start": 394, "page_end": 393, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Security_Request Message to the Protocol Layer. Page 394 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Port Sink Port", "page_start": 394, "page_end": 394, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Security_Request Message information to the Policy Engine that consumes it.", "page_start": 395, "page_end": 394, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 395, "page_end": 394, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 395, "page_end": 394, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 395, "page_end": 394, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Security_Request Message was successfully sent.", "page_start": 395, "page_end": 394, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the response to", "content": "the security request which is provided. The Policy Engine tells the Protocol Layer to form a Security_Response Message.", "page_start": 395, "page_end": 394, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 395, "page_end": 394, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Security_Response Message. Security_Response Message.", "page_start": 395, "page_end": 394, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Security_Response Message information to the Policy Engine that consumes it.", "page_start": 395, "page_end": 394, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 395, "page_end": 394, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "15", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 395, "page_end": 394, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "16", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 395, "page_end": 394, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "17", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Security_Response Message was successfully sent. The security exchange is complete. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 395", "page_start": 395, "page_end": 395, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 32, "tags": ["protocol"]}
{"section_id": "8.3.2.11.2", "title": "Sink requests security exchange with Source", "content": "Figure 8-47 shows an example sequence for a security exchange between a Sink and a Source. Figure 8-47 Sink requests security exchange with Source Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Security_Request 2:Security_Request 3: Security_Request + CRC Start CRCReceiveTimer 4: Security_Request Check MessageID against local copy Store copy of MessageID 5: Security_Request received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get security response 9:Security_Request sent from DPM 10: Send Security_Response 11: Security_Response 12: Security_Response + CRC 13: Security_Response Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Security_Response received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Security_Response sent Table 8-47 below provides a detailed explanation of what happens at each labeled step in Figure 8-47 above. Table 8-47 Steps for a Sink requesting a security exchange with a Source Sequence Step Sink Port Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a Security_Request Message using a payload supplied by the DPM.", "page_start": 396, "page_end": 395, "content_type": "text", "tables": [{"table_id": "Table 8-47 below provides a detailed explanation of what happens at each labeled step in Figure 8-47 above.", "caption": "Table 8-47 below provides a detailed explanation of what happens at each labeled step in Figure 8-47 above.", "page": 396, "data": []}, {"table_id": "Table 8-47 Steps for a Sink requesting a security exchange with a Source Sequence", "caption": "Table 8-47 Steps for a Sink requesting a security exchange with a Source Sequence", "page": 396, "data": []}], "figures": [{"figure_id": "Figure 8-47 shows an example sequence for a security exchange between a Sink and a Source.", "caption": "Figure 8-47 shows an example sequence for a security exchange between a Sink and a Source.", "page": 396}, {"figure_id": "Figure 8-47 Sink requests security exchange with Source", "caption": "Figure 8-47 Sink requests security exchange with Source", "page": 396}, {"figure_id": "Table 8-47 below provides a detailed explanation of what happens at each labeled step in Figure 8-47 above.", "caption": "Table 8-47 below provides a detailed explanation of what happens at each labeled step in Figure 8-47 above.", "page": 396}], "subsections": [], "word_count": 237, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 396, "page_end": 395, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Security_Request", "content": "Security_Request Message. Message and checks the CRC to verify the Message.", "page_start": 396, "page_end": 395, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Security_Request Message to the Protocol Layer.", "page_start": 396, "page_end": 395, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Security_Request Message information to the Policy Engine that consumes it. Page 396 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Sink Port Source Port", "page_start": 396, "page_end": 396, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 397, "page_end": 396, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 397, "page_end": 396, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 397, "page_end": 396, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Security_Request Message was successfully sent.", "page_start": 397, "page_end": 396, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the response to", "content": "the security request which is provided. The Policy Engine tells the Protocol Layer to form a Security_Response Message.", "page_start": 397, "page_end": 396, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 397, "page_end": 396, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Security_Response Message. Security_Response Message.", "page_start": 397, "page_end": 396, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Security_Response Message information to the Policy Engine that consumes it.", "page_start": 397, "page_end": 396, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 397, "page_end": 396, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "15", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 397, "page_end": 396, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "16", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 397, "page_end": 396, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "17", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Security_Response Message was successfully sent. The security exchange is complete. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 397", "page_start": 397, "page_end": 397, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 32, "tags": ["protocol"]}
{"section_id": "8.3.2.11.3", "title": "Vconn Source requests security exchange with Cable Plug", "content": "Figure 8-48 shows an example sequence for a security exchange between a Vconn Source and a Cable Plug. Figure 8-48 Vconn Source requests security exchange with Cable Plug Vconn Source Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Security_Request 2:Security_Request 3: Security_Request + CRC Start CRCReceiveTimer 4: Security_Request Check MessageID against local copy Store copy of MessageID 5: Security_Request received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get security response 9:Security_Request sent from DPM 10: Send Security_Response 11: Security_Response 12: Security_Response + CRC 13: Security_Response Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Security_Response received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Security_Response sent Table 8-48 below provides a detailed explanation of what happens at each labeled step in Figure 8-48 above. Table 8-48 Steps for a Vconn Source requesting a security exchange with a Cable Plug Sequence Step Vconn Source Cable Plug", "page_start": 398, "page_end": 397, "content_type": "text", "tables": [{"table_id": "Table 8-48 below provides a detailed explanation of what happens at each labeled step in Figure 8-48 above.", "caption": "Table 8-48 below provides a detailed explanation of what happens at each labeled step in Figure 8-48 above.", "page": 398, "data": []}, {"table_id": "Table 8-48 Steps for a Vconn Source requesting a security exchange with a Cable Plug Sequence", "caption": "Table 8-48 Steps for a Vconn Source requesting a security exchange with a Cable Plug Sequence", "page": 398, "data": []}], "figures": [{"figure_id": "Figure 8-48 shows an example sequence for a security exchange between a Vconn Source and a Cable Plug.", "caption": "Figure 8-48 shows an example sequence for a security exchange between a Vconn Source and a Cable Plug.", "page": 398}, {"figure_id": "Figure 8-48 Vconn Source requests security exchange with Cable Plug", "caption": "Figure 8-48 Vconn Source requests security exchange with Cable Plug", "page": 398}, {"figure_id": "Table 8-48 below provides a detailed explanation of what happens at each labeled step in Figure 8-48 above.", "caption": "Table 8-48 below provides a detailed explanation of what happens at each labeled step in Figure 8-48 above.", "page": 398}], "subsections": [], "word_count": 172, "tags": ["cable", "source"]}
{"section_id": "1", "title": "Policy Engine directs the Protocol Layer to send a", "content": "Security_Request Message using a payload supplied by the DPM.", "page_start": 398, "page_end": 397, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["policy", "protocol"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 398, "page_end": 397, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the Security_Request", "content": "Security_Request Message. Message and checks the CRC to verify the Message.", "page_start": 398, "page_end": 397, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Security_Request Message to the Protocol Layer.", "page_start": 398, "page_end": 397, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Security_Request Message information to the Policy Engine that consumes it.", "page_start": 398, "page_end": 397, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer. Page 398 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Vconn Source Cable Plug", "page_start": 398, "page_end": 398, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 399, "page_end": 398, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 399, "page_end": 398, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Security_Request Message was successfully sent.", "page_start": 399, "page_end": 398, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the response to", "content": "the security request which is provided. The Policy Engine tells the Protocol Layer to form a Security_Response Message.", "page_start": 399, "page_end": 398, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 399, "page_end": 398, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Security_Response Message. Security_Response Message.", "page_start": 399, "page_end": 398, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Security_Response Message information to the Policy Engine that consumes it.", "page_start": 399, "page_end": 398, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 399, "page_end": 398, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "15", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 399, "page_end": 398, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "16", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 399, "page_end": 398, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "17", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Security_Response Message was successfully sent. The security exchange is complete. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 399", "page_start": 399, "page_end": 399, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 32, "tags": ["protocol"]}
{"section_id": "8.3.2.12", "title": "Firmware Update", "content": "", "page_start": 400, "page_end": 399, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.2.12.1", "title": "Source requests firmware update exchange with Sink", "content": "Figure 8-49 shows an example sequence for a firmware update exchange between a Source and a Sink. Figure 8-49 Source requests firmware update exchange with Sink Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Firmware_Update_Request 2:Firmware_Update_Request Start CRCReceiveTimer 3: Firmware_Update_Request + CRC 4: Firmware_Update_Request Check MessageID against local copy Store copy of MessageID 6: GoodCRC 5: Firmware_Update_Request received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get firmware update 9:Firmware_Update_Request sent response from DPM 10: Send Firmware_Update_Response 11: Firmware_Update_Response 12: Firmware_Update_Response + CRC Start CRCReceiveTimer 13: Firmware_Update_Response Check MessageID against local copy Store copy of MessageID 14: Firmware_Update_Response received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Firmware_Update_Response sent Table 8-49 below provides a detailed explanation of what happens at each labeled step in Figure 8-49 above. Table 8-49 Steps for a Source requesting a firmware update exchange with a Sink Sequence Step Source Port Sink Port 1 The Port has Port Power Role set to Source and the The Port has Port Power Role set to Sink with the Rd Rp pull up on its CC wire. pull down on its CC wire. Policy Engine directs the Protocol Layer to send a Firmware_Update_Request Message using a payload supplied by the DPM.", "page_start": 400, "page_end": 399, "content_type": "text", "tables": [{"table_id": "Table 8-49 below provides a detailed explanation of what happens at each labeled step in Figure 8-49 above.", "caption": "Table 8-49 below provides a detailed explanation of what happens at each labeled step in Figure 8-49 above.", "page": 400, "data": []}, {"table_id": "Table 8-49 Steps for a Source requesting a firmware update exchange with a Sink Sequence", "caption": "Table 8-49 Steps for a Source requesting a firmware update exchange with a Sink Sequence", "page": 400, "data": []}], "figures": [{"figure_id": "Figure 8-49 shows an example sequence for a firmware update exchange between a Source and a Sink.", "caption": "Figure 8-49 shows an example sequence for a firmware update exchange between a Source and a Sink.", "page": 400}, {"figure_id": "Figure 8-49 Source requests firmware update exchange with Sink", "caption": "Figure 8-49 Source requests firmware update exchange with Sink", "page": 400}, {"figure_id": "Table 8-49 below provides a detailed explanation of what happens at each labeled step in Figure 8-49 above.", "caption": "Table 8-49 below provides a detailed explanation of what happens at each labeled step in Figure 8-49 above.", "page": 400}], "subsections": [], "word_count": 241, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 400, "page_end": 399, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the", "content": "Firmware_Update_Request Message. Firmware_Update_Request Message and checks the CRC to verify the Message.", "page_start": 400, "page_end": 399, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Firmware_Update_Request Message to the Protocol Layer.", "page_start": 400, "page_end": 399, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Firmware_Update_Request Message information to the Policy Engine that consumes it. Page 400 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Port Sink Port", "page_start": 400, "page_end": 400, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 401, "page_end": 400, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 401, "page_end": 400, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 401, "page_end": 400, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Firmware_Update_Request Message was successfully sent.", "page_start": 401, "page_end": 400, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the response to", "content": "the firmware update request which is provided. The Policy Engine tells the Protocol Layer to form a Firmware_Update_Response Message.", "page_start": 401, "page_end": 400, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 401, "page_end": 400, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Firmware_Update_Response Message. Firmware_Update_Response Message.", "page_start": 401, "page_end": 400, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Firmware_Update_Response Message information to the Policy Engine that consumes it.", "page_start": 401, "page_end": 400, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 401, "page_end": 400, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "15", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 401, "page_end": 400, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "16", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 401, "page_end": 400, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "17", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Firmware_Update_Response Message was successfully sent. The firmware update exchange is complete. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 401", "page_start": 401, "page_end": 401, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["protocol"]}
{"section_id": "8.3.2.12.2", "title": "Sink requests firmware update exchange with Source", "content": "Figure 8-50 shows an example sequence for a firmware update exchange between a Sink and a Source. Figure 8-50 Sink requests firmware update exchange with Source Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Firmware_Update_Request 2:Firmware_Update_Request Start CRCReceiveTimer 3: Firmware_Update_Request + CRC 4: Firmware_Update_Request Check MessageID against local copy Store copy of MessageID 6: GoodCRC 5: Firmware_Update_Request received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get firmware update 9:Firmware_Update_Request sent response from DPM 10: Send Firmware_Update_Response 11: Firmware_Update_Response 12: Firmware_Update_Response + CRC Start CRCReceiveTimer 13: Firmware_Update_Response Check MessageID against local copy Store copy of MessageID 14: Firmware_Update_Response received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Firmware_Update_Response sent Table 8-50 below provides a detailed explanation of what happens at each labeled step in Figure 8-50 above. Table 8-50 Steps for a Sink requesting a firmware update exchange with a Source Sequence Step Sink Port Source Port 1 The Port has Port Power Role set to Sink with the Rd The Port has Port Power Role set to Source and the pull down on its CC wire. Rp pull up on its CC wire. Policy Engine directs the Protocol Layer to send a Firmware_Update_Request Message using a payload supplied by the DPM.", "page_start": 402, "page_end": 401, "content_type": "text", "tables": [{"table_id": "Table 8-50 below provides a detailed explanation of what happens at each labeled step in Figure 8-50 above.", "caption": "Table 8-50 below provides a detailed explanation of what happens at each labeled step in Figure 8-50 above.", "page": 402, "data": []}, {"table_id": "Table 8-50 Steps for a Sink requesting a firmware update exchange with a Source Sequence", "caption": "Table 8-50 Steps for a Sink requesting a firmware update exchange with a Source Sequence", "page": 402, "data": []}], "figures": [{"figure_id": "Figure 8-50 shows an example sequence for a firmware update exchange between a Sink and a Source.", "caption": "Figure 8-50 shows an example sequence for a firmware update exchange between a Sink and a Source.", "page": 402}, {"figure_id": "Figure 8-50 Sink requests firmware update exchange with Source", "caption": "Figure 8-50 Sink requests firmware update exchange with Source", "page": 402}, {"figure_id": "Table 8-50 below provides a detailed explanation of what happens at each labeled step in Figure 8-50 above.", "caption": "Table 8-50 below provides a detailed explanation of what happens at each labeled step in Figure 8-50 above.", "page": 402}], "subsections": [], "word_count": 241, "tags": ["source", "sink"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 402, "page_end": 401, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the", "content": "Firmware_Update_Request Message. Firmware_Update_Request Message and checks the CRC to verify the Message.", "page_start": 402, "page_end": 401, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Firmware_Update_Request Message to the Protocol Layer.", "page_start": 402, "page_end": 401, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Firmware_Update_Request Message information to the Policy Engine that consumes it.", "page_start": 402, "page_end": 401, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 402, "page_end": 401, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message. Page 402 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Sink Port Source Port", "page_start": 402, "page_end": 402, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 403, "page_end": 402, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Firmware_Update_Request Message was successfully sent.", "page_start": 403, "page_end": 402, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the response to", "content": "the firmware update request which is provided. The Policy Engine tells the Protocol Layer to form a Firmware_Update_Response Message.", "page_start": 403, "page_end": 402, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 403, "page_end": 402, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Firmware_Update_Response Message. Firmware_Update_Response Message.", "page_start": 403, "page_end": 402, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Firmware_Update_Response Message information to the Policy Engine that consumes it.", "page_start": 403, "page_end": 402, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 403, "page_end": 402, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "15", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 403, "page_end": 402, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "16", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 403, "page_end": 402, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "17", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Firmware_Update_Response Message was successfully sent. The firmware update exchange is complete. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 403", "page_start": 403, "page_end": 403, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["protocol"]}
{"section_id": "8.3.2.12.3", "title": "Vconn Source requests firmware update exchange with Cable Plug", "content": "Figure 8-51 shows an example sequence for a firmware update exchange between a Vconn Source and a Cable Plug. Figure 8-51 Vconn Source requests firmware update exchange with Cable Plug VCONN Source Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Firmware_Update_Request 2:Firmware_Update_Request Start CRCReceiveTimer 3: Firmware_Update_Request + CRC 4: Firmware_Update_Request Check MessageID against local copy Store copy of MessageID 6: GoodCRC 5: Firmware_Update_Request received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get firmware update 9:Firmware_Update_Request sent response from DPM 10: Send Firmware_Update_Response 11: Firmware_Update_Response 12: Firmware_Update_Response + CRC Start CRCReceiveTimer 13: Firmware_Update_Response Check MessageID against local copy Store copy of MessageID 14: Firmware_Update_Response received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Firmware_Update_Response sent Table 8-51 below provides a detailed explanation of what happens at each labeled step in Figure 8-51 above. Table 8-51 Steps for a Vconn Source requesting a firmware update exchange with a Cable Plug Sequence Step Vconn Source Cable Plug", "page_start": 404, "page_end": 403, "content_type": "text", "tables": [{"table_id": "Table 8-51 below provides a detailed explanation of what happens at each labeled step in Figure 8-51 above.", "caption": "Table 8-51 below provides a detailed explanation of what happens at each labeled step in Figure 8-51 above.", "page": 404, "data": []}, {"table_id": "Table 8-51 Steps for a Vconn Source requesting a firmware update exchange with a Cable Plug Sequence", "caption": "Table 8-51 Steps for a Vconn Source requesting a firmware update exchange with a Cable Plug Sequence", "page": 404, "data": []}], "figures": [{"figure_id": "Figure 8-51 shows an example sequence for a firmware update exchange between a Vconn Source and a Cable Plug.", "caption": "Figure 8-51 shows an example sequence for a firmware update exchange between a Vconn Source and a Cable Plug.", "page": 404}, {"figure_id": "Figure 8-51 Vconn Source requests firmware update exchange with Cable Plug", "caption": "Figure 8-51 Vconn Source requests firmware update exchange with Cable Plug", "page": 404}, {"figure_id": "Table 8-51 below provides a detailed explanation of what happens at each labeled step in Figure 8-51 above.", "caption": "Table 8-51 below provides a detailed explanation of what happens at each labeled step in Figure 8-51 above.", "page": 404}], "subsections": [], "word_count": 176, "tags": ["cable", "source"]}
{"section_id": "1", "title": "Policy Engine directs the Protocol Layer to send a", "content": "Firmware_Update_Request Message using a payload supplied by the DPM.", "page_start": 404, "page_end": 403, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["policy", "protocol"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 404, "page_end": 403, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Physical Layer receives the", "content": "Firmware_Update_Request Message. Firmware_Update_Request Message and checks the CRC to verify the Message.", "page_start": 404, "page_end": 403, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Firmware_Update_Request Message to the Protocol Layer.", "page_start": 404, "page_end": 403, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Firmware_Update_Request Message information to the Policy Engine that consumes it.", "page_start": 404, "page_end": 403, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 404, "page_end": 403, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message. Page 404 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Vconn Source Cable Plug", "page_start": 404, "page_end": 404, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 405, "page_end": 404, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Firmware_Update_Request Message was successfully sent.", "page_start": 405, "page_end": 404, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the DPM for the response to", "content": "the firmware update request which is provided. The Policy Engine tells the Protocol Layer to form a Firmware_Update_Response Message.", "page_start": 405, "page_end": 404, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 405, "page_end": 404, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Message and compares Physical Layer appends a CRC and sends the", "content": "the CRC it calculated with the one sent to verify the Firmware_Update_Response Message. Firmware_Update_Response Message.", "page_start": 405, "page_end": 404, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Firmware_Update_Response Message information to the Policy Engine that consumes it.", "page_start": 405, "page_end": 404, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 405, "page_end": 404, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "15", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 405, "page_end": 404, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "16", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 405, "page_end": 404, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "17", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Firmware_Update_Response Message was successfully sent. The firmware update exchange is complete. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 405", "page_start": 405, "page_end": 405, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["protocol"]}
{"section_id": "8.3.2.13", "title": "Structured VDM", "content": "", "page_start": 406, "page_end": 405, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.2.13.1", "title": "DFP to UFP Discover Identity", "content": "Figure 8-52 shows an example sequence between a DFP and UFP, where both Port Partners are in an Explicit Contract and the DFP attempts to discover identity information from the UFP. Figure 8-52 DFP to UFP Discover Identity DFP UFP : DFP Policy Engine : Protocol : PHY : PHY : Protocol : UFP Policy Engine Explicit PD Contract Explicit PD Contract 1: Send Discover Identity 2: Discover Identity 3: Discover Identity + CRC Start CRCReceiveTimer 4: Discover Identity Check MessageID against local copy Store copy of MessageID 5: Discover Identity received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Discover Identity sent Start VDMResponseTimer Request Identity information from Device Policy Manager 10: Send Discover Identity ACK 11: Discover Identity ACK 12: Discover Identity ACK + CRC 13: Discover Identity ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Discover Identity ACK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMResponseTimer Check and increment MessageIDCounter DPM evaluates UFP Identity Stop CRCReceiveTimer information 18: Discover Identity ACK sent Table 8-52 below provides a detailed explanation of what happens at each labeled step in Figure 8-52 above. Table 8-52 Steps for DFP to UFP Discover Identity Step DFP UFP", "page_start": 406, "page_end": 405, "content_type": "text", "tables": [{"table_id": "Table 8-52 below provides a detailed explanation of what happens at each labeled step in Figure 8-52 above.", "caption": "Table 8-52 below provides a detailed explanation of what happens at each labeled step in Figure 8-52 above.", "page": 406, "data": []}, {"table_id": "Table 8-52 Steps for DFP to UFP Discover Identity", "caption": "Table 8-52 Steps for DFP to UFP Discover Identity", "page": 406, "data": []}], "figures": [{"figure_id": "Figure 8-52 shows an example sequence between a DFP and UFP, where both Port Partners are in an Explicit Contract", "caption": "Figure 8-52 shows an example sequence between a DFP and UFP, where both Port Partners are in an Explicit Contract", "page": 406}, {"figure_id": "Figure 8-52 DFP to UFP Discover Identity", "caption": "Figure 8-52 DFP to UFP Discover Identity", "page": 406}, {"figure_id": "Table 8-52 below provides a detailed explanation of what happens at each labeled step in Figure 8-52 above.", "caption": "Table 8-52 below provides a detailed explanation of what happens at each labeled step in Figure 8-52 above.", "page": 406}], "subsections": [], "word_count": 210, "tags": []}
{"section_id": "1", "title": "The DFP has an Explicit Contract. The Policy Engine The UFP has an Explicit Contract.", "content": "directs the Protocol Layer to send a Discover Identity Command request.", "page_start": 406, "page_end": 405, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": ["contracts", "policy"]}
{"section_id": "2", "title": "Protocol Layer creates the Discover Identity", "content": "Command request and passes to Physical Layer. Starts CRCReceiveTimer. Page 406 USB Power Delivery Specification Revision 3.0, Version 1.1 Step DFP UFP", "page_start": 406, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": ["protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Discover Physical Layer receives the Discover Identity", "content": "Identity Command request. Command request and checks the CRC to verify the Message.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Discover Identity Command request to the Protocol Layer.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Discover Identity Command request information to the Policy Engine that consumes it.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Discover Identity Command request was successfully sent. Policy Engine starts the VDMResponseTimer.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the identity information from", "content": "the Device Policy Manager. The Policy Engine tells the Protocol Layer to form a Discover Identity Command ACK response.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Discover Identity", "content": "Command ACK response and passes to Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer receives the Discover Identity Physical Layer appends a CRC and sends the Discover Command ACK response and compares the CRC it Identity Command ACK response. calculated with the one sent to verify the Message.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 47, "tags": ["protocol"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Discover Identity Command ACK response information to the Policy Engine that consumes it.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the VDMResponseTimer and", "content": "passed the Identity information to the Device Policy Manager for evaluation.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 407, "page_end": 406, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Discover Identity Command ACK response was successfully sent. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 407", "page_start": 407, "page_end": 407, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 30, "tags": ["protocol"]}
{"section_id": "8.3.2.13.2", "title": "Source Port to Cable Plug Discover Identity", "content": "Figure 8-53 shows an example sequence between Source and a Cable Plug, where the Source attempts to discover identity information from the Cable Plug prior to establishing an Explicit Contract with its Port Partner. Figure 8-53 Source Port to Cable Plug Discover Identity Source Port Cable Plug : Source Policy Engine : Protocol : PHY : PHY : Protocol : Cable Plug Policy Engine No or Implicit Contract 1: Send Discover Identity 2: Discover Identity 3: Discover Identity + CRC Start CRCReceiveTimer 4: Discover Identity Check MessageID against local copy Store copy of MessageID 5: Discover Identity received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Discover Identity sent Evaluate Discover Identity request Start VDMResponseTimer Enter USB Operation Wait tCableMessage before transmission 10: Send Discover Identity ACK 11: Discover Identity ACK 12: Discover Identity ACK + CRC 13: Discover Identity ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Discover Identity ACK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMResponseTimer Check and increment MessageIDCounter Use Cable information to specify Stop CRCReceiveTimer Capabilities 18: Discover Identity ACK sent Table 8-53 below provides a detailed explanation of what happens at each labeled step in Figure 8-53 above. Table 8-53 Steps for Source Port to Cable Plug Discover Identity Step Source Port Cable Plug", "page_start": 408, "page_end": 407, "content_type": "text", "tables": [{"table_id": "Table 8-53 below provides a detailed explanation of what happens at each labeled step in Figure 8-53 above.", "caption": "Table 8-53 below provides a detailed explanation of what happens at each labeled step in Figure 8-53 above.", "page": 408, "data": []}, {"table_id": "Table 8-53 Steps for Source Port to Cable Plug Discover Identity", "caption": "Table 8-53 Steps for Source Port to Cable Plug Discover Identity", "page": 408, "data": []}], "figures": [{"figure_id": "Figure 8-53 shows an example sequence between Source and a Cable Plug, where the Source attempts to discover", "caption": "Figure 8-53 shows an example sequence between Source and a Cable Plug, where the Source attempts to discover", "page": 408}, {"figure_id": "Figure 8-53 Source Port to Cable Plug Discover Identity", "caption": "Figure 8-53 Source Port to Cable Plug Discover Identity", "page": 408}, {"figure_id": "Table 8-53 below provides a detailed explanation of what happens at each labeled step in Figure 8-53 above.", "caption": "Table 8-53 below provides a detailed explanation of what happens at each labeled step in Figure 8-53 above.", "page": 408}], "subsections": [], "word_count": 225, "tags": ["cable", "source"]}
{"section_id": "1", "title": "The Source has no Contract or an Implicit Contract", "content": "with its Port Partner. The Policy Engine directs the Protocol Layer to send a Discover Identity Command request.", "page_start": 408, "page_end": 407, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["contracts", "source"]}
{"section_id": "2", "title": "Protocol Layer creates the Discover Identity", "content": "Command request and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 408, "page_end": 407, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Discover Physical Layer receives the Discover Identity", "content": "Identity Command request. Command request and checks the CRC to verify the Message.", "page_start": 408, "page_end": 407, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Discover Identity Command request to the Protocol Layer. Page 408 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Source Port Cable Plug", "page_start": 408, "page_end": 408, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Discover Identity Command request information to the Policy Engine that consumes it.", "page_start": 409, "page_end": 408, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 409, "page_end": 408, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 409, "page_end": 408, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 409, "page_end": 408, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Discover Identity Command request was successfully sent. Policy Engine starts the VDMResponseTimer.", "page_start": 409, "page_end": 408, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the identity information from", "content": "the Device Policy Manager. . tCableMessage after the GoodCRC Message was sent the Policy Engine tells the Protocol Layer to form a Discover Identity Command ACK response.", "page_start": 409, "page_end": 408, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Discover Identity", "content": "Command ACK response and passes to Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer receives the Discover Identity Physical Layer appends a CRC and sends the Discover Command ACK response and compares the CRC it Identity Command ACK response. calculated with the one sent to verify the Message.", "page_start": 409, "page_end": 408, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 47, "tags": ["protocol"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Discover Identity Command ACK response information to the Policy Engine that consumes it.", "page_start": 409, "page_end": 408, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the VDMResponseTimer and", "content": "passes the identity information to the Device Policy Manager for evaluation.", "page_start": 409, "page_end": 408, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 409, "page_end": 408, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 409, "page_end": 408, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 409, "page_end": 408, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "The Source uses the Cable Plug information as input Protocol Layer verifies and increments the", "content": "to its offered capabilities. MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Accept Message was successfully sent. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 409", "page_start": 409, "page_end": 409, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 31, "tags": ["cable", "source", "protocol"]}
{"section_id": "8.3.2.13.3", "title": "DFP to Cable Plug Discover Identity", "content": "Figure 8-54 shows an example sequence between a DFP and a Cable Plug, where the DFP attempts to discover identity information from the Cable Plug. Figure 8-54 DFP to Cable Plug Discover Identity DFP Cable Plug : DFP Policy Engine : Protocol : PHY : PHY : Protocol : Cable Plug Policy Engine Explicit PD Contract 1: Send Discover Identity 2: Discover Identity 3: Discover Identity + CRC Start CRCReceiveTimer 4: Discover Identity Check MessageID against local copy Store copy of MessageID 5: Discover Identity received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Discover Identity sent Evaluate Discover Identity request Start VDMResponseTimer Enter USB Operation Wait tCableMessage before transmission 10: Send Discover Identity ACK 11: Discover Identity ACK 12: Discover Identity ACK + CRC 13: Discover Identity ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Discover Identity ACK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMResponseTimer Check and increment MessageIDCounter Use Cable information to specify Stop CRCReceiveTimer Capabilities 18: Discover Identity ACK sent Table 8-54 below provides a detailed explanation of what happens at each labeled step in Figure 8-54 above. Table 8-54 Steps for DFP to Cable Plug Discover Identity Step DFP Cable Plug", "page_start": 410, "page_end": 409, "content_type": "text", "tables": [{"table_id": "Table 8-54 below provides a detailed explanation of what happens at each labeled step in Figure 8-54 above.", "caption": "Table 8-54 below provides a detailed explanation of what happens at each labeled step in Figure 8-54 above.", "page": 410, "data": []}, {"table_id": "Table 8-54 Steps for DFP to Cable Plug Discover Identity", "caption": "Table 8-54 Steps for DFP to Cable Plug Discover Identity", "page": 410, "data": []}], "figures": [{"figure_id": "Figure 8-54 shows an example sequence between a DFP and a Cable Plug, where the DFP attempts to discover identity", "caption": "Figure 8-54 shows an example sequence between a DFP and a Cable Plug, where the DFP attempts to discover identity", "page": 410}, {"figure_id": "Figure 8-54 DFP to Cable Plug Discover Identity", "caption": "Figure 8-54 DFP to Cable Plug Discover Identity", "page": 410}, {"figure_id": "Table 8-54 below provides a detailed explanation of what happens at each labeled step in Figure 8-54 above.", "caption": "Table 8-54 below provides a detailed explanation of what happens at each labeled step in Figure 8-54 above.", "page": 410}], "subsections": [], "word_count": 211, "tags": ["cable"]}
{"section_id": "1", "title": "The DFP has an Explicit Contract with its Port", "content": "Partner. The Policy Engine directs the Protocol Layer to send a Discover Identity Command request.", "page_start": 410, "page_end": 409, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["contracts"]}
{"section_id": "2", "title": "Protocol Layer creates the Discover Identity", "content": "Command request and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 410, "page_end": 409, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Discover Physical Layer receives the Discover Identity", "content": "Identity Command request. Command request and checks the CRC to verify the Message. Page 410 USB Power Delivery Specification Revision 3.0, Version 1.1 Step DFP Cable Plug", "page_start": 410, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Discover Identity Command request to the Protocol Layer.", "page_start": 411, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Discover Identity Command request information to the Policy Engine that consumes it.", "page_start": 411, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 411, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 411, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 411, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Discover Identity Command request was successfully sent. Policy Engine starts the VDMResponseTimer.", "page_start": 411, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the identity information from", "content": "the Device Policy Manager. tCableMessage after the GoodCRC Message was sent the Policy Engine tells the Protocol Layer to form a Discover Identity Command ACK response.", "page_start": 411, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": ["policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Discover Identity", "content": "Command ACK response and passes to Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer receives the Discover Identity Physical Layer appends a CRC and sends the Discover Command ACK response and compares the CRC it Identity Command ACK response. calculated with the one sent to verify the Message.", "page_start": 411, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 47, "tags": ["protocol"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Discover Identity Command ACK response information to the Policy Engine that consumes it.", "page_start": 411, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the Discover Identity", "content": "Command ACK response and passes the identity information to the Device Policy Manager for evaluation.", "page_start": 411, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 411, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 411, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 411, "page_end": 410, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "The DFP when acting as a Source uses the Cable Plug Protocol Layer verifies and increments the", "content": "information as input to its offered capabilities. MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Accept Message was successfully sent. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 411", "page_start": 411, "page_end": 411, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 34, "tags": ["cable", "source", "protocol"]}
{"section_id": "8.3.2.13.4", "title": "DFP to UFP Enter Mode", "content": "Figure 8-55 shows an example sequence between a DFP and a UFP that occurs after the DFP has discovered supported SVIDs and Modes at which point it selects and enters a Mode. Figure 8-55 DFP to UFP Enter Mode DFP UFP : DFP Policy Engine : Protocol : PHY : PHY : Protocol : UFP Policy Engine USB Operation USB Operation Supported SVIDS/Modes discovered Enter USB Safe State 37: Send Enter Mode 38: Enter Mode 39: Enter Mode + CRC Start CRCReceiveTimer 40: Enter Mode Check MessageID against local copy Store copy of MessageID 42: GoodCRC 41: Enter Mode received 43: GoodCRC + CRC 44: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 45: Enter Mode sent Start VDMModeEntryTimer Evaluate Enter Mode request Enter New Mode 46: Send Enter Mode ACK 47: Enter Mode ACK 48: Enter Mode ACK + CRC 49: Enter Mode ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 50: Enter Mode ACK received 51: GoodCRC 52: GoodCRC + CRC 53: GoodCRC Stop VDMModeEntryTimer Enter New Mode Check and increment MessageIDCounter Stop CRCReceiveTimer 54: Enter Mode ACK sent New Mode Entered Table 8-55 below provides a detailed explanation of what happens at each labeled step in Figure 8-55 above. Table 8-55 Steps for DFP to UFP Enter Mode Step DFP UFP", "page_start": 412, "page_end": 411, "content_type": "text", "tables": [{"table_id": "Table 8-55 below provides a detailed explanation of what happens at each labeled step in Figure 8-55 above.", "caption": "Table 8-55 below provides a detailed explanation of what happens at each labeled step in Figure 8-55 above.", "page": 412, "data": []}, {"table_id": "Table 8-55 Steps for DFP to UFP Enter Mode", "caption": "Table 8-55 Steps for DFP to UFP Enter Mode", "page": 412, "data": []}], "figures": [{"figure_id": "Figure 8-55 shows an example sequence between a DFP and a UFP that occurs after the DFP has discovered supported", "caption": "Figure 8-55 shows an example sequence between a DFP and a UFP that occurs after the DFP has discovered supported", "page": 412}, {"figure_id": "Figure 8-55 DFP to UFP Enter Mode", "caption": "Figure 8-55 DFP to UFP Enter Mode", "page": 412}, {"figure_id": "Table 8-55 below provides a detailed explanation of what happens at each labeled step in Figure 8-55 above.", "caption": "Table 8-55 below provides a detailed explanation of what happens at each labeled step in Figure 8-55 above.", "page": 412}], "subsections": [], "word_count": 217, "tags": []}
{"section_id": "1", "title": "The DFP has an Explicit Contract The UFP has an Explicit Contract.", "content": "The DFP has discovered the supported SVIDS using the Discover SVIDs Command request and the supported Modes using the Discover Modes Command request The DFP goes to USB Safe State. The Device Policy Manager requests the Policy Engine to enter a Mode. The Policy Engine directs the Protocol Layer to send an Enter Mode Command request.", "page_start": 412, "page_end": 411, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 56, "tags": ["contracts"]}
{"section_id": "2", "title": "Protocol Layer creates the Enter Mode Command", "content": "request and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 412, "page_end": 411, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Enter Physical Layer receives the Enter Mode Command", "content": "Mode Command request. request and checks the CRC to verify the Message.", "page_start": 412, "page_end": 411, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Enter Mode Command request to the Protocol Layer. Page 412 USB Power Delivery Specification Revision 3.0, Version 1.1 Step DFP UFP", "page_start": 412, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Enter Mode Command request information to the Policy Engine that consumes it.", "page_start": 413, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 413, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 413, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 413, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Enter Mode Command request was successfully sent. Policy Engine starts the VDMModeEntryTimer.", "page_start": 413, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the Device Policy Manager to", "content": "enter the new Mode. The Policy Engine tells the Protocol Layer to form an Enter Mode Command ACK response.", "page_start": 413, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["devices", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Enter Mode Command", "content": "ACK response and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 413, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Enter Mode Command Physical Layer appends a CRC and sends the Enter", "content": "ACK response and compares the CRC it calculated Mode Command ACK response. with the one sent to verify the Message.", "page_start": 413, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": []}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Enter Mode Command ACK response information to the Policy Engine that consumes it.", "page_start": 413, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the VDMModeEntryTimer", "content": "and requests the Device Policy Manager to enter the new Mode.", "page_start": 413, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 413, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 413, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 413, "page_end": 412, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Enter Mode Command ACK response was successfully sent. DFP and UFP are operating in the new Mode USB Power Delivery Specification Revision 3.0, Version 1.1 Page 413", "page_start": 413, "page_end": 413, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 39, "tags": ["protocol"]}
{"section_id": "8.3.2.13.5", "title": "DFP to UFP Exit Mode", "content": "Figure 8-56 shows an example sequence between a DFP and a UFP, where the DFP commands the UFP to exit the only Active Mode. Figure 8-56 DFP to UFP Exit Mode DFP UFP : DFP Policy Engine : Protocol : PHY : PHY : Protocol : UFP Policy Engine In Mode In Mode Enter USB Safe State 1: Send Exit Mode 2: Exit Mode 3: Exit Mode + CRC Start CRCReceiveTimer 4: Exit Mode Check MessageID against local copy Store copy of MessageID 5: Exit Mode received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Exit Mode sent Start VDMModeExitTimer Evaluate Exit Mode request Enter USB Operation 10: Send Exit Mode ACK 11: Exit Mode ACK 12: Exit Mode ACK + CRC 13: Exit Mode ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Exit Mode ACK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMModeExitTimer Enter USB Operation Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Exit Mode ACK sent USB operation Table 8-56 below provides a detailed explanation of what happens at each labeled step in Figure 8-56 above. Table 8-56 Steps for DFP to UFP Exit Mode Step DFP UFP", "page_start": 414, "page_end": 413, "content_type": "text", "tables": [{"table_id": "Table 8-56 below provides a detailed explanation of what happens at each labeled step in Figure 8-56 above.", "caption": "Table 8-56 below provides a detailed explanation of what happens at each labeled step in Figure 8-56 above.", "page": 414, "data": []}, {"table_id": "Table 8-56 Steps for DFP to UFP Exit Mode", "caption": "Table 8-56 Steps for DFP to UFP Exit Mode", "page": 414, "data": []}], "figures": [{"figure_id": "Figure 8-56 shows an example sequence between a DFP and a UFP, where the DFP commands the UFP to exit the only", "caption": "Figure 8-56 shows an example sequence between a DFP and a UFP, where the DFP commands the UFP to exit the only", "page": 414}, {"figure_id": "Figure 8-56 DFP to UFP Exit Mode", "caption": "Figure 8-56 DFP to UFP Exit Mode", "page": 414}, {"figure_id": "Table 8-56 below provides a detailed explanation of what happens at each labeled step in Figure 8-56 above.", "caption": "Table 8-56 below provides a detailed explanation of what happens at each labeled step in Figure 8-56 above.", "page": 414}], "subsections": [], "word_count": 205, "tags": []}
{"section_id": "1", "title": "The DFP is in a Mode and then enters USB Safe State. The UFP is in a Mode.", "content": "The Policy Engine directs the Protocol Layer to send an Exit Mode Command request.", "page_start": 414, "page_end": 413, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": []}
{"section_id": "2", "title": "Protocol Layer creates the Exit Mode Command", "content": "request and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 414, "page_end": 413, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Exit Mode Physical Layer receives the Exit Mode Command", "content": "Command request. request and checks the CRC to verify the Message.", "page_start": 414, "page_end": 413, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Exit Mode Command request to the Protocol Layer. Page 414 USB Power Delivery Specification Revision 3.0, Version 1.1 Step DFP UFP", "page_start": 414, "page_end": 414, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Exit Mode Command request information to the Policy Engine that consumes it.", "page_start": 415, "page_end": 414, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 415, "page_end": 414, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 415, "page_end": 414, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 415, "page_end": 414, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Exit Mode Command request was successfully sent. Policy Engine starts the VDMModeExitTimer.", "page_start": 415, "page_end": 414, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the Device Policy Manager to", "content": "enter USB operation. The Policy Engine tells the Protocol Layer to form an Exit Mode Command ACK response.", "page_start": 415, "page_end": 414, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["devices", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Exit Mode Command ACK", "content": "response and passes to Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer receives the Exit Mode Command ACK Physical Layer appends a CRC and sends the Exit response and compares the CRC it calculated with Mode Command ACK response. the one sent to verify the Message.", "page_start": 415, "page_end": 414, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 45, "tags": ["protocol"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Exit Mode Command ACK response information to the Policy Engine that consumes it.", "page_start": 415, "page_end": 414, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the VDMModeExitTimer and", "content": "requests the Device Policy Manager to enter USB Operation.", "page_start": 415, "page_end": 414, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 415, "page_end": 414, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 415, "page_end": 414, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 415, "page_end": 414, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Exit Mode Command ACK response was successfully sent. Both DFP and UFP are in USB Operation USB Power Delivery Specification Revision 3.0, Version 1.1 Page 415", "page_start": 415, "page_end": 415, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": ["protocol"]}
{"section_id": "8.3.2.13.6", "title": "DFP to Cable Plug Enter Mode", "content": "Figure 8-57 shows an example sequence between a DFP and a Cable Plug that occurs after the DFP has discovered supported SVIDs and Modes at which point it selects and enters a Mode. Figure 8-57 DFP to Cable Plug Enter Mode DFP Cable Plug : DFP Policy Engine : Protocol : PHY : PHY : Protocol : Cable Plug Policy Engine USB Mode USB Mode Supported SVIDs/Modes Discovered Enter USB Safe Mode Wait tCableMessage before transmission 19: Send Enter Mode 20: Enter Mode 21: Enter Mode + CRC Start CRCReceiveTimer 22: Enter Mode Check MessageID against local copy Store copy of MessageID 23: Enter Mode received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 27: Enter Mode sent Evaluate Enter Mode request Start VDMModeEntryTimer Enter New Mode Wait tCableMessage before transmission 10: Send Enter Mode ACK 11: Enter Mode ACK 12: Enter Mode ACK + CRC 13: Enter Mode ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Enter Mode ACK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMModeEntryTimer Enter New Mode Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Enter Mode ACK sent New Mode Entered Table 8-57 below provides a detailed explanation of what happens at each labeled step in Figure 8-57 above. Page 416 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 8-57 Steps for DFP to Cable Plug Enter Mode Step DFP Cable Plug", "page_start": 416, "page_end": 416, "content_type": "text", "tables": [{"table_id": "Table 8-57 below provides a detailed explanation of what happens at each labeled step in Figure 8-57 above.", "caption": "Table 8-57 below provides a detailed explanation of what happens at each labeled step in Figure 8-57 above.", "page": 416, "data": []}, {"table_id": "Table 8-57 Steps for DFP to Cable Plug Enter Mode", "caption": "Table 8-57 Steps for DFP to Cable Plug Enter Mode", "page": 417, "data": []}], "figures": [{"figure_id": "Figure 8-57 shows an example sequence between a DFP and a Cable Plug that occurs after the DFP has discovered", "caption": "Figure 8-57 shows an example sequence between a DFP and a Cable Plug that occurs after the DFP has discovered", "page": 416}, {"figure_id": "Figure 8-57 DFP to Cable Plug Enter Mode", "caption": "Figure 8-57 DFP to Cable Plug Enter Mode", "page": 416}, {"figure_id": "Table 8-57 below provides a detailed explanation of what happens at each labeled step in Figure 8-57 above.", "caption": "Table 8-57 below provides a detailed explanation of what happens at each labeled step in Figure 8-57 above.", "page": 416}], "subsections": [], "word_count": 241, "tags": ["cable"]}
{"section_id": "1", "title": "The DFP has an Explicit Contract", "content": "The DFP has discovered the supported SVIDS using the Discover SVIDs Command request and the supported Modes using the Discover Modes Command request The DFP goes to USB Safe State. The Device Policy Manager requests the Policy Engine to enter a Mode. tCableMessage after the last GoodCRC Message was sent the Policy Engine directs the Protocol Layer to send an Enter Mode Command request.", "page_start": 417, "page_end": 416, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 64, "tags": ["contracts"]}
{"section_id": "2", "title": "Protocol Layer creates the Enter Mode Command", "content": "request and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 417, "page_end": 416, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Enter Physical Layer receives the Enter Mode Command", "content": "Mode Command request. request and checks the CRC to verify the Message.", "page_start": 417, "page_end": 416, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Enter Mode Command request to the Protocol Layer.", "page_start": 417, "page_end": 416, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Enter Mode Command request information to the Policy Engine that consumes it.", "page_start": 417, "page_end": 416, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 417, "page_end": 416, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 417, "page_end": 416, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 417, "page_end": 416, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Enter Mode Command request was successfully sent. Policy Engine starts the VDMModeEntryTimer.", "page_start": 417, "page_end": 416, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the Device Policy Manager to", "content": "enter the new Mode. tCableMessage after the GoodCRC Message was sent the Policy Engine tells the Protocol Layer to form an Enter Mode Command ACK response.", "page_start": 417, "page_end": 416, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": ["devices", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Enter Mode Command", "content": "ACK response and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 417, "page_end": 416, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["protocol"]}
{"section_id": "12", "title": "Physical Layer receives the Enter Mode Command Physical Layer appends a CRC and sends the Enter", "content": "ACK response and compares the CRC it calculated Mode Command ACK response. with the one sent to verify the Message.", "page_start": 417, "page_end": 416, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": []}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Enter Mode Command ACK response information to the Policy Engine that consumes it. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 417 Step DFP Cable Plug", "page_start": 417, "page_end": 417, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 51, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the VDMModeEntryTimer", "content": "and requests the Device Policy Manager to enter the new Mode.", "page_start": 418, "page_end": 417, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 418, "page_end": 417, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 418, "page_end": 417, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 418, "page_end": 417, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Enter Mode Command ACK response was successfully sent. DFP and Cable Plug are operating in the new Mode Page 418 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 418, "page_end": 418, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 40, "tags": ["protocol"]}
{"section_id": "8.3.2.13.7", "title": "DFP to Cable Plug Exit Mode", "content": "Figure 8-58 shows an example sequence between a USB Type-C DFP and a Cable Plug, where the DFP commands the Cable Plug to exit an Active Mode. Figure 8-58 DFP to Cable Plug Exit Mode DFP Cable Plug : DFP Policy Engine : Protocol : PHY : PHY : Protocol : Cable Plug Policy Engine In Mode In Mode Enter USB Safe State 1: Send Exit Mode 2: Exit Mode 3: Exit Mode + CRC Start CRCReceiveTimer 4: Exit Mode Check MessageID against local copy Store copy of MessageID 5: Exit Mode received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Exit Mode sent Evaluate Exit Mode request Start VDMModeExitTimer Enter USB Operation Wait tCableMessage before transmission 10: Send Exit Mode ACK 11: Exit Mode ACK 12: Exit Mode ACK + CRC 13: Exit Mode ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Exit Mode ACK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMModeExitTimer Enter USB Operation Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Exit Mode ACK sent USB operation Table 8-58 below provides a detailed explanation of what happens at each labeled step in Figure 8-58 above. Table 8-58 Steps for DFP to Cable Plug Exit Mode Step DFP Cable Plug", "page_start": 419, "page_end": 418, "content_type": "text", "tables": [{"table_id": "Table 8-58 below provides a detailed explanation of what happens at each labeled step in Figure 8-58 above.", "caption": "Table 8-58 below provides a detailed explanation of what happens at each labeled step in Figure 8-58 above.", "page": 419, "data": []}, {"table_id": "Table 8-58 Steps for DFP to Cable Plug Exit Mode", "caption": "Table 8-58 Steps for DFP to Cable Plug Exit Mode", "page": 419, "data": []}], "figures": [{"figure_id": "Figure 8-58 shows an example sequence between a USB Type-C DFP and a Cable Plug, where the DFP commands the", "caption": "Figure 8-58 shows an example sequence between a USB Type-C DFP and a Cable Plug, where the DFP commands the", "page": 419}, {"figure_id": "Figure 8-58 DFP to Cable Plug Exit Mode", "caption": "Figure 8-58 DFP to Cable Plug Exit Mode", "page": 419}, {"figure_id": "Table 8-58 below provides a detailed explanation of what happens at each labeled step in Figure 8-58 above.", "caption": "Table 8-58 below provides a detailed explanation of what happens at each labeled step in Figure 8-58 above.", "page": 419}], "subsections": [], "word_count": 217, "tags": ["cable"]}
{"section_id": "1", "title": "The DFP is in a Mode and then enters USB Safe State. The Cable Plug is in a Mode.", "content": "The Policy Engine directs the Protocol Layer to send an Exit Mode Command request.", "page_start": 419, "page_end": 418, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["cable"]}
{"section_id": "2", "title": "Protocol Layer creates the Exit Mode Command", "content": "request and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 419, "page_end": 418, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the Exit Mode Physical Layer receives the Exit Mode Command", "content": "Command request. request and checks the CRC to verify the Message.", "page_start": 419, "page_end": 418, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "Exit Mode Command request to the Protocol Layer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 419 Step DFP Cable Plug", "page_start": 419, "page_end": 419, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Exit Mode Command request information to the Policy Engine that consumes it.", "page_start": 420, "page_end": 419, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 420, "page_end": 419, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer receives the GoodCRC Message and Physical Layer appends CRC and sends the GoodCRC", "content": "checks the CRC to verify the Message. Message.", "page_start": 420, "page_end": 419, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 420, "page_end": 419, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Exit Mode Command request was successfully sent. Policy Engine starts the VDMModeExitTimer.", "page_start": 420, "page_end": 419, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine requests the Device Policy Manager to", "content": "enter USB operation. tCableMessage after the GoodCRC Message was sent the Policy Engine tells the Protocol Layer to form an Exit Mode Command ACK response.", "page_start": 420, "page_end": 419, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": ["devices", "policy"]}
{"section_id": "11", "title": "Protocol Layer creates the Exit Mode Command ACK", "content": "response and passes to Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer receives the Exit Mode Command ACK Physical Layer appends a CRC and sends the Exit response and compares the CRC it calculated with Mode Command ACK response. the one sent to verify the Message.", "page_start": 420, "page_end": 419, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 45, "tags": ["protocol"]}
{"section_id": "13", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Exit Mode Command ACK response information to the Policy Engine that consumes it.", "page_start": 420, "page_end": 419, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": ["messages", "protocol"]}
{"section_id": "14", "title": "The Policy Engine stops the VDMModeExitTimer and", "content": "requests the Device Policy Manager to enter USB Operation.", "page_start": 420, "page_end": 419, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["policy"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 420, "page_end": 419, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "16", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 420, "page_end": 419, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 420, "page_end": 419, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Exit Mode Command ACK response was successfully sent. Both DFP and Cable Plug are in USB Operation Page 420 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 420, "page_end": 420, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 39, "tags": ["protocol"]}
{"section_id": "8.3.2.13.8", "title": "UFP to DFP Attention", "content": "Figure 8-59 shows an example sequence between a USB Type-C DFP and a UFP, where the UFP requests attention from the DFP. Figure 8-59 UFP to DFP Attention DFP UFP : DFP Policy Engine : Protocol : PHY : PHY : Protocol : UFP Policy Engine 1: Send Attention 2: Attention 3: Attention + CRC 4: Attention Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Attention received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Attention sent Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-59 above. Table 8-59 Steps for UFP to DFP Attention Step DFP UFP", "page_start": 421, "page_end": 420, "content_type": "text", "tables": [{"table_id": "Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-59 above.", "caption": "Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-59 above.", "page": 421, "data": []}, {"table_id": "Table 8-59 Steps for UFP to DFP Attention", "caption": "Table 8-59 Steps for UFP to DFP Attention", "page": 421, "data": []}], "figures": [{"figure_id": "Figure 8-59 shows an example sequence between a USB Type-C DFP and a UFP, where the UFP requests attention", "caption": "Figure 8-59 shows an example sequence between a USB Type-C DFP and a UFP, where the UFP requests attention", "page": 421}, {"figure_id": "Figure 8-59 UFP to DFP Attention", "caption": "Figure 8-59 UFP to DFP Attention", "page": 421}, {"figure_id": "Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-59 above.", "caption": "Table 8-59 below provides a detailed explanation of what happens at each labeled step in Figure 8-59 above.", "page": 421}], "subsections": [], "word_count": 117, "tags": []}
{"section_id": "1", "title": "The Device Policy Manager requests attention. The", "content": "Policy Engine tells the Protocol Layer to form an Attention Command request.", "page_start": 421, "page_end": 420, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": ["devices", "policy"]}
{"section_id": "2", "title": "Protocol Layer creates the Attention Command", "content": "request and passes to Physical Layer. Starts CRCReceiveTimer.", "page_start": 421, "page_end": 420, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["protocol"]}
{"section_id": "3", "title": "Physical Layer receives the Attention Command Physical Layer appends a CRC and sends the", "content": "request and compares the CRC it calculated with the Attention Command request. one sent to verify the Message.", "page_start": 421, "page_end": 420, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": []}
{"section_id": "4", "title": "Protocol Layer checks the MessageID in the", "content": "incoming Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received Attention Command request information to the Policy Engine that consumes it.", "page_start": 421, "page_end": 420, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["messages", "protocol"]}
{"section_id": "5", "title": "The Policy Engine informs the Device Policy Manager", "content": "", "page_start": 421, "page_end": 420, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["devices", "policy"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer.", "page_start": 421, "page_end": 420, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "7", "title": "Physical Layer appends a CRC and sends the Physical Layer receives GoodCRC Message and", "content": "GoodCRC Message. compares the CRC it calculated with the one sent to verify the Message.", "page_start": 421, "page_end": 420, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": ["messages"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 421 Step DFP UFP", "page_start": 421, "page_end": 421, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the Attention Command request was successfully sent. Page 422 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 422, "page_end": 422, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": ["protocol"]}
{"section_id": "8.3.2.14", "title": "Built in Self-Test (BIST)", "content": "", "page_start": 423, "page_end": 422, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.2.14.1", "title": "BIST Carrier Mode", "content": "The following is an example of a BIST Carrier Mode test between a Tester and a UUT. When the UUT is connected to the Tester the sequence below is executed. Figure 8-60 shows the Messages as they flow across the bus and within the devices. This test enables the measurement of power supply noise and frequency drift. 1. Connection is established and stable. 2. Tester sends a BIST Message with a BIST Carrier Mode BIST Data Object. 3. UUT answers with a GoodCRC Message. 4. UUT starts sending the Test Pattern. 5. Operator does the measurements. 6. The test ends after tBISTContMode. See also Section 5.9.1 and Section 6.4.3.1. Figure 8-60 BIST Carrier Mode Test Tester UUT : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send BIST(Carrier Mode) 2: BIST(Carrier Mode) 3: BIST(Carrier Mode) + CRC Start CRCReceiveTimer 4: BIST(Carrier Mode) Check MessageID against local copy Store copy of MessageID 5: BIST(Carrier Mode) received Go to BIST Carrier Mode 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 10: Go to BIST Carrier Mode 11: Go to BIST Carrier Mode 9: BIST(Carrier Mode) sent Enter BIST Carrier Mode mode 12: Send Test Pattern 13: Send Test Pattern 14: Test Pattern End of Test (after tBISTContMode) USB Power Delivery Specification Revision 3.0, Version 1.1 Page 423 Table 8-60 Steps for BIST Carrier Mode Test Step Tester UUT", "page_start": 423, "page_end": 423, "content_type": "text", "tables": [{"table_id": "Table 8-60 Steps for BIST Carrier Mode Test", "caption": "Table 8-60 Steps for BIST Carrier Mode Test", "page": 424, "data": []}], "figures": [{"figure_id": "Figure 8-60 shows the Messages as they flow across the bus and within the devices. This test enables the", "caption": "Figure 8-60 shows the Messages as they flow across the bus and within the devices. This test enables the", "page": 423}, {"figure_id": "Figure 8-60 BIST Carrier Mode Test", "caption": "Figure 8-60 BIST Carrier Mode Test", "page": 423}], "subsections": [], "word_count": 238, "tags": []}
{"section_id": "1", "title": "The Policy Engine directs the Protocol Layer to", "content": "generate a BIST Message, with a BIST Data Object of BIST Carrier Mode, to put the UUT into BIST Carrier Mode test mode.", "page_start": 424, "page_end": 423, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["policy", "protocol"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 424, "page_end": 423, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the BIST Physical Layer receives the BIST Message and checks", "content": "Message. the CRC to verify the Message.", "page_start": 424, "page_end": 423, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "BIST Message to the Protocol Layer.", "page_start": 424, "page_end": 423, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received BIST Message information to the Policy Engine that consumes it.", "page_start": 424, "page_end": 423, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer. 7 Physical Layer receives the GoodCRC and checks the Physical Layer appends CRC and sends the GoodCRC CRC to verify the Message. Message.", "page_start": 424, "page_end": 423, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": ["messages", "protocol"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 424, "page_end": 423, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the BIST Message was successfully sent.", "page_start": 424, "page_end": 423, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": ["protocol"]}
{"section_id": "10", "title": "Policy Engine tells Protocol Layer to go into BIST", "content": "Carrier Mode. The Policy Engine goes to BIST Carrier Mode.", "page_start": 424, "page_end": 423, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["policy", "protocol"]}
{"section_id": "11", "title": "Protocol Layer tells Physical Layer to go into BIST", "content": "Carrier Mode. UUT enters BIST Carrier Mode", "page_start": 424, "page_end": 423, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": ["protocol"]}
{"section_id": "12", "title": "The Policy Engine directs the Protocol Layer to start", "content": "generation of the Test Pattern.", "page_start": 424, "page_end": 423, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": ["policy", "protocol"]}
{"section_id": "13", "title": "Protocol Layer directs the PHY Layer to generate the", "content": "Test Pattern. 14 Physical Layer receives the Test Pattern stream. Physical Layer generates a continuous Test Pattern stream. The UUT exits BIST Carrier Mode after tBISTContMode. Page 424 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 424, "page_end": 424, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": ["protocol"]}
{"section_id": "8.3.2.14.2", "title": "BIST Test Data", "content": "The following is an example of a BIST Test Data test between a Tester and a UUT. When the UUT is connected to the Tester the sequence below is executed. Figure 8-60 shows the Messages as they flow across the bus and within the devices. 1. Connection is established and stable. 2. Tester sends a BIST Message with a BIST Test Data BIST Data Object. 3. UUT answers with a GoodCRC Message. 4. Steps 2and 3 are repeated any number of times. 5. The test ends after Hard Reset Signaling is issued. See also Section 5.9.2 and Section 6.4.3.2. Figure 8-61 BIST Test Data Test Tester UUT : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send BIST(Test Data) 2: BIST(Test Data) 3: BIST(Test Data) + CRC Start CRCReceiveTimer 4: BIST(Test Data) Check MessageID against local copy Store copy of MessageID 5: BIST(Test Data) received Go to BIST Test Data mode 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: BIST(Test Data) sent Enter BIST Test Data mode 10: Send BIST(Test Data) 11: BIST(Test Data) 12: BIST(Test Data) + CRC Start CRCReceiveTimer 13: BIST(Test Data) Check MessageID against local copy Store copy of MessageID 14: BIST(Test Data) received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: BIST(Test Data) sent End of Test (Hard Reset) USB Power Delivery Specification Revision 3.0, Version 1.1 Page 425 Table 8-61 Steps for BIST Test Data Test Step Tester UUT", "page_start": 425, "page_end": 425, "content_type": "text", "tables": [{"table_id": "Table 8-61 Steps for BIST Test Data Test", "caption": "Table 8-61 Steps for BIST Test Data Test", "page": 426, "data": []}], "figures": [{"figure_id": "Figure 8-60 shows the Messages as they flow across the bus and within the devices.", "caption": "Figure 8-60 shows the Messages as they flow across the bus and within the devices.", "page": 425}, {"figure_id": "Figure 8-61 BIST Test Data Test", "caption": "Figure 8-61 BIST Test Data Test", "page": 425}], "subsections": [], "word_count": 254, "tags": ["data"]}
{"section_id": "1", "title": "The Policy Engine directs the Protocol Layer to", "content": "generate a BIST Message, with a BIST Data Object of BIST Test Data, to put the UUT into BIST Test Data test mode.", "page_start": 426, "page_end": 425, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["policy", "protocol"]}
{"section_id": "2", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer.", "page_start": 426, "page_end": 425, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["messages", "protocol"]}
{"section_id": "3", "title": "Physical Layer appends CRC and sends the BIST Physical Layer receives the BIST Message and checks", "content": "Message. the CRC to verify the Message.", "page_start": 426, "page_end": 425, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": ["messages"]}
{"section_id": "4", "title": "Physical Layer removes the CRC and forwards the", "content": "BIST Message to the Protocol Layer.", "page_start": 426, "page_end": 425, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "5", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received BIST Message information to the Policy Engine that consumes it. The Policy Engine goes into BIST Test Data Mode where it sends no further Messages except for GoodCRC Messages in response to received Messages (see Section 6.4.3.2).", "page_start": 426, "page_end": 425, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 60, "tags": ["messages", "protocol"]}
{"section_id": "6", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer. 7 Physical Layer receives the GoodCRC and checks the Physical Layer appends CRC and sends the GoodCRC CRC to verify the Message. Message.", "page_start": 426, "page_end": 425, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": ["messages", "protocol"]}
{"section_id": "8", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 426, "page_end": 425, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "9", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the BIST Message was successfully sent. UUT enters BIST Test Data test mode", "page_start": 426, "page_end": 425, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": ["protocol"]}
{"section_id": "10", "title": "The Policy Engine directs the Protocol Layer to", "content": "generate a BIST Message, with a BIST Data Object of BIST Test Data, to put the UUT into BIST Test Data test mode.", "page_start": 426, "page_end": 425, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["policy", "protocol"]}
{"section_id": "11", "title": "Protocol Layer creates the Message and passes to", "content": "Physical Layer. Starts CRCReceiveTimer. 12 Physical Layer appends CRC and sends the BIST Physical Layer receives the BIST Message and checks Message. the CRC to verify the Message.", "page_start": 426, "page_end": 425, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": ["messages", "protocol"]}
{"section_id": "13", "title": "Physical Layer removes the CRC and forwards the", "content": "BIST Message to the Protocol Layer.", "page_start": 426, "page_end": 425, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "14", "title": "Protocol Layer checks the MessageID in the incoming", "content": "Message is different from the previously stored value and then stores a copy of the new value. The Protocol Layer forwards the received BIST Message information to the Policy Engine that consumes it. The Policy Engine goes into BIST Test Data Mode where it sends no further Messages except for GoodCRC Messages in response to received Messages (see Section 6.4.3.2).", "page_start": 426, "page_end": 425, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 60, "tags": ["messages", "protocol"]}
{"section_id": "15", "title": "Protocol Layer generates a GoodCRC Message and", "content": "passes it Physical Layer. Page 426 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Tester UUT 16 Physical Layer receives the GoodCRC and checks the Physical Layer appends CRC and sends the GoodCRC CRC to verify the Message. Message.", "page_start": 426, "page_end": 426, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 40, "tags": ["messages", "protocol"]}
{"section_id": "17", "title": "Physical Layer removes the CRC and forwards the", "content": "GoodCRC Message to the Protocol Layer.", "page_start": 427, "page_end": 426, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "18", "title": "Protocol Layer verifies and increments the", "content": "MessageIDCounter and stops CRCReceiveTimer. Protocol Layer informs the Policy Engine that the BIST Message was successfully sent. Repeat steps 10-18 any number of times The UUT exits BIST Test Data test mode after a Hard Reset USB Power Delivery Specification Revision 3.0, Version 1.1 Page 427", "page_start": 427, "page_end": 427, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 46, "tags": ["protocol"]}
{"section_id": "8.3.3", "title": "State Diagrams", "content": "", "page_start": 428, "page_end": 427, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.3.1", "title": "Introduction to state diagrams used in Chapter 8", "content": "The state diagrams defined in Section 8.3.3 are Normative and Shall define the operation of the Power Delivery Policy Engine. Note that these state diagrams are not intended to replace a well written and robust design. Figure 8-62 Outline of States <Name of State> Actions on entry: “List of actions to carry out on entering the state” Actions on exit: “List of actions to carry out on exiting the state” Power (VI) = “Present power level” PD = “attachment status” Figure 8-62 shows an outline of the states defined in the following sections. At the top there is the name of the state. This is followed by “Actions on entry” a list of actions carried out on entering the state. If there are also “Actions on exit” a list of actions carried out on exiting the state then these are listed as well; otherwise this box is omitted from the state. At the bottom the status of PD is listed:  “Power” which indicates the present output power for a Source Port or input power for a Sink Port.  “PD” which indicates the present Attachment status either “Attached”, “Detached”, or “unknown”. Transitions from one state to another are indicated by arrows with the conditions listed on the arrow. Where there are multiple conditions these are connected using either a logical OR “|” or a logical AND “&”. In some cases there are transitions which can occur from any state to a particular state. These are indicated by an arrow which is unconnected to a state at one end, but with the other end (the point) connected to the final state. In some state diagrams it is necessary to enter or exit from states in other diagrams (e.g. Source Port or Sink Port state diagrams). Figure 8-63 indicates how such references are made. The reference is indicated with a hatched box. The box contains the name of the state and whether the state is a DFP or UFP. It has also been necessary to indicate conditional entry to either Source Port or Sink Port state diagrams. This is achieved by the use of a bulleted list indicating the pre-conditions (see example in Figure 8-64). It is also possible that the entry and return states are the same. Figure 8-65 indicates a state reference where each referenced state corresponds to either the entry state or the exit state. Figure 8-63 References to states <Name of reference state> (<DFP | UFP>) Figure 8-64 Example of state reference with conditions Hard Reset:  Consumer or Consumer/Provider -> PE_SNK_....  Provider/Consumer in Source role -> PE_SRC_... Page 428 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-65 Example of state reference with the same entry and exit <Name of reference state 1> or <Name of reference state 2> (<DFP | UFP>) Timers are included in many of the states. Timers are initialized (set to their starting condition) and run (timer is counting) in the particular state it is referenced. As soon as the state is exited then the timer is no longer active. Where the timers continue to run outside of the state (such as the NoResponseTimer), this is called out in the text. Timeouts of the timers are listed as conditions on state transitions. Conditions listed on state transitions will come from one of three sources and, when there is a conflict, Should be serviced in the following order: 1. Message and related indications passed up to the Policy Engine from the Protocol Layer (Message sent, Message received etc.) 2. Events triggered within the Policy Engine e.g. timer timeouts. 3. Information and requests coming from the Device Policy manager relating either to Local Policy, or to other modules which the Device Policy Manager controls such as power supply and USB-C Port Control. Note: The following state diagrams are not intended to cover all possible corner cases that could be encountered. For example where an outgoing Message is Discarded, due to an incoming Message by the Protocol Layer (see Section 6.11.2.3) it will be necessary for the higher layers of the system to handle a retry of the Message sequence that was being initiated, after first handling the incoming Message.", "page_start": 428, "page_end": 428, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-62 Outline of States", "caption": "Figure 8-62 Outline of States", "page": 428}, {"figure_id": "Figure 8-62 shows an outline of the states defined in the following sections. At the top there is the name of the state.", "caption": "Figure 8-62 shows an outline of the states defined in the following sections. At the top there is the name of the state.", "page": 428}, {"figure_id": "diagrams). Figure 8-63 indicates how such references are made. The reference is indicated with a hatched box. The", "caption": "diagrams). Figure 8-63 indicates how such references are made. The reference is indicated with a hatched box. The", "page": 428}, {"figure_id": "indicating the pre-conditions (see example in Figure 8-64). It is also possible that the entry and return states are the", "caption": "indicating the pre-conditions (see example in Figure 8-64). It is also possible that the entry and return states are the", "page": 428}, {"figure_id": "same. Figure 8-65 indicates a state reference where each referenced state corresponds to either the entry state or the", "caption": "same. Figure 8-65 indicates a state reference where each referenced state corresponds to either the entry state or the", "page": 428}, {"figure_id": "Figure 8-63 References to states", "caption": "Figure 8-63 References to states", "page": 428}, {"figure_id": "Figure 8-64 Example of state reference with conditions", "caption": "Figure 8-64 Example of state reference with conditions", "page": 428}, {"figure_id": "Figure 8-65 Example of state reference with the same entry and exit", "caption": "Figure 8-65 Example of state reference with the same entry and exit", "page": 429}], "subsections": [], "word_count": 697, "tags": []}
{"section_id": "8.3.3.2", "title": "Policy Engine Source Port State Diagram", "content": "Figure 8-66 below shows the state diagram for the Policy Engine in a Source Port. The following sections describe operation in each of the states. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 429 Figure 8-66 Source Port Policy Engine State Diagram Hard reset signalling received Start PE_SRC_Hard_Reset_Received PE_SRC_Transition_to_default A St c a P t r i D o t I n P = m P s S o C p H o w o l n a i n e c r e n r i d t n e = / R t c E r e D t x y e s e p : e d f l t / a i T n c u i i o I m t t t C ( e C o 5 r o n V n t ) r n o a e r c c t ted A R s R R R u c e e e o p t q s q l i e e p u u o t l t n e e y o l s s s o H t t D c o D D a a F n r l e e P d e H v v a n i i R W c c n t e e e r d y s P P t e : u o o ts l l r i i n c c to y y o v M M ff S a a V a n n f C e a a O 5 g g N V e e N r r v t t i o o a r s v e e S t q a P u fe e o 0 s r V t t p D o a w ta e r Power source at default A R R St c e e a t s s r i e e o t t t n S C P s w a r o a o p n p t s o S C e c o o n o u u t l r r n L y c t a e : e y S r e ta r P r E tT _ i S m R e C r _ ( S o t n a l r y t a u ft p er Swap) PSHar t d im Re e s o e u t t Timer A R In c e i t q t i i u o a n e li s s z t e o D n a e n e v d x ic i s t e t : a P r o t l N ic o y R M e a sp n o a n ge se r T to im tu e r r n on VCONN Powe P r D = = D C e o fa n u n I e t c ( t 5 e V d ) / o n r o I t m Co p n li n ci e t c C te o d ntract Inform P P o r w o e t r o c = o r l i L s a in y g e / r f H al a li r n d g R t e o s d e e t f c a o u m lt p ( l 5 e V te ) Swap P S r o o u t r o c c e o S l t L a a r y tT er im Re e s r e t t i 4 m | eout (SourceCapabilit n y o T t i m pr e e r v t i i o m u e sl o y u P t D & C C o a n p n sC ec o t u e n d t 6 e r & > nCapsCount1) | PD = not Connected PE_SRC_Discovery NoResponseTimer timeout & HardResetCounter > nHardResetCount1) Actions on entry: PSHardResetTimer Initialize and run SourceCapabilityTimer timeout Power = Default (5V) or Implicit Contract PD = not Connected PE_SRC_Hard_Reset PE_SRC_Disabled Actions on entry: (SourceCapabilityTimer timeout & Generate Hard Reset signalling CapsCounter nCapsCount1) Capabilities message sending failure Actions on entry: Start PSHardResetTimer (without GoodCRC) &not presently PD Connected6 Disable Power Delivery Increment HardResetCounter Power = DefauIt (5V) or Power = DefauIt (5V) PE_SRC_Wait_New_Capabilities Implicit/Explicit Contract PD =not Connected PD = Connected/not Connected PE_SRC_Send_Capabilities Actions on entry: Wait for new Source Capabilities9 Actions on entry: Request present source capabilities from Device Policy Manager not previously PD Connected6& Power = DefauIt (5V) Send PD Capabilities message NoResponseTimer timeout & PD =Connected SenderResponseTimer timeout Increment CapsCounter (optional)1 HardResetCounter > nHardResetCount1 If GoodCRC received:  stop NoResponseTimer Sourc c e h c a a n p g a e bility Re E j x e p c l t i m cit e C ss o a n g t e r a s c e t n & t &   r in e i s t e ia t l H iz a e r d an R d e s r e u t n C o S u e n n t d e e r r a R n e d sp C o a n p s s e C T o i u m n e t r er Po (f l r ic o y m M D a e n v a i g c e e r ) Contract Invalid4 Power = D P e D fa = u C It o ( n 5 n V e ) c o te r d I / m n p o l t i c C i o t/ n E n x e p c l t i e c d it Contract N p o r R ev e i s o p u o s n ly se P T D im Co e n r n ti e m ct e e o d u 6 t & & Request message received HardResetCount > nHardResetCount Request can’t be met | PE_SRC_Negotiate_Capability PE_SRC_Capability_Response Request met later Actions on entry: Actions on entry: from Power Reserve Get Device Policy Manager evaluation of sink request: no Explicit Contract & Send Reject message if request can’t  Can be met (Reject message sent | be met  Can’t be met ErrorRecovery Wait message sent) Send Wait message if request could  Could be met later from Power Reserve be met later from the Power If the sink request for Operating Current or Operating Power can be met, Reserve and present Contract is still but the sink still requires more power “Capability Mismatch” this valid information will be passed to Device Policy Manager4 Power = DefauIt (5V) or Implicit/Explicit Contract Power = DefauIt (5V) or Implicit/ PD = Connected E P x D p l = ic C it o C n o n n e t c r t a e c d t Requ r e e s c t e i m ve e d ssage Request can be met Explicit Contract PE_SRC_Transition_Supply (R C W e o j n e a t c i r t t a m m ct e e s s s t s s i a a ll g g v e e a s s l e e id n n ) t t | & A I E f l c s G t e i o o s t n o e s M n o d in n A s e c e n c n e tr d p y t G : m ot e o s M sa i g n e m (w es i s th a i g n e tReceiverResponse) Protocol Error Request Device Policy Manager to transition Power Supply Actions on exit: Send PS_RDY message Power = transition PD = Connected GotoMin request from Power supply ready Device Policy Manager PE_SRC_Ready Actions on entry: Notify Protocol Layer of end of AMS8 Initialize and run DiscoverIdentityTimer7 Source capability change Initialize and run G ( e f t r _ o S m ou D rc e e v _ i C c a e p P m ol e ic s y s a M g a e n r a e g c e e r iv ) e | d SourcePPSCommTimer10 g fr e o t m si n D k e v c i a c p e a P b o il l i i t c i y e s M r a e n q a u g e e s r t PE_SRC_Get_Sink_Cap Actions on exit: SourcePPSCommTimer timeout If the Source is initiating an Actions on entry: AMS then notify the Protocol Send Get_Sink_Cap message Layer than the first Message in Sink capabilities Initialize and run an AMS will follow8 message received | SenderResponseTimer SenderR ti e m sp e o o n u s t eTimer A Pa ct s i s o s n i s n o k n c a e p x a it b : ilities/outcome to Power = Explicit Contract Device Policy Manager PD = Connected Power = Explicit Contract PD = Connected 1 Implementation of the CapsCounter is Optional. In the case where this is not implemented the Source Shall continue to send Source_Capabilities Messages each time the SourceCapabilityTimer times out. 2 Since the Sink is required to make a Valid request from the offered capabilities the expected transition is via “Request can be met” unless the Source capabilities have changed since the last offer. Page 430 USB Power Delivery Specification Revision 3.0, Version 1.1 3 “Contract Invalid” means that the previously negotiated Voltage and Current values are no longer included in the Source’s new Capabilities. If the Sink fails to make a Valid Request in this case then Power Delivery operation is no longer possible and Power Delivery mode is exited with a Hard Reset. 4 After a Power Swap the new Source is required to wait an additional tSwapSourceStart before sending a Source_Capabilities Message. This delay is not required when first starting up a system. 5 PD Connected is defined as a situation when the Port Partners are actively communicating. The Port Partners remain PD Connected after a Swap until there is a transition to Disabled or the connector is able to identify a Detach. 6 Port Partners are no longer PD Connected after a Hard Reset but consideration needs to be given as to whether there has been a PD Connection while the Ports have been Attached to prevent unnecessary USB Type-C Error Recovery. 7 The DiscoverIdentityTimer is run when this is a VCONN Source and a PD Connection with a Cable Plug needs to be established i.e. no GoodCRC Message has yet been received in response to a Discover Identity Command. 8 If transition into the PE_SRC_Ready state will result in an immediate transition out of the PE_SRC_Ready state e.g. it is due to a Protocol Error that has not resulted in a Soft Reset then the notifications of the end of AMS and first Message in an AMS May Not be sent to avoid changing the Rp value unnecessarily. 9 In the PE_SRC_Wait_New_Capabilities State the Device Policy Manager Should either decide to send no further Source Capabilities or Should send a different set of Source Capabilities. Continuing to send the same set of Source Capabilities could result in a live lock situation. 10 The SourcePPSCommTimer is only initialized and run when the present Explicit Contract is for a PPS APDO. Source’s that do not support PPS do not need to implement the SourcePPSCommTimer.", "page_start": 429, "page_end": 430, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-66 below shows the state diagram for the Policy Engine in a Source Port. The following sections describe", "caption": "Figure 8-66 below shows the state diagram for the Policy Engine in a Source Port. The following sections describe", "page": 429}, {"figure_id": "Figure 8-66 Source Port Policy Engine State Diagram", "caption": "Figure 8-66 Source Port Policy Engine State Diagram", "page": 430}], "subsections": [], "word_count": 1998, "tags": ["policy", "source"]}
{"section_id": "8.3.3.2.1", "title": "PE_SRC_Startup State", "content": "PE_SRC_Startup Shall be the starting state for a Source Policy Engine either on power up or after a Hard Reset. On entry to this state the Policy Engine Shall reset the CapsCounter and reset the Protocol Layer. Note that resetting the Protocol Layer will also reset the MessageIDCounter and stored MessageID (see Section 6.11.2.3). The Policy Engine Shall transition to the PE_SRC_Send_Capabilities state:  When the Protocol Layer reset has completed if the PE_SRC_Startup state was entered due to the system first starting up.  When the SwapSourceStartTimer times out if the PE_SRC_Startup state was entered as the result of a Power Role Swap. Note: Sources Shall remain in the PE_SRC_Startup state, without sending any Source_Capabilities Messages until a plug is Attached.", "page_start": 431, "page_end": 430, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 122, "tags": []}
{"section_id": "8.3.3.2.2", "title": "PE_SRC_Discovery State", "content": "On entry to the PE_SRC_Discovery state the Policy Engine Shall initialize and run the SourceCapabilityTimer in order to trigger sending a Source_Capabilities Message. The Policy Engine Shall transition to the PE_SRC_Send_Capabilities state when:  The SourceCapabilityTimer times out and CapsCounter ≤ nCapsCount. The Policy Engine May Optionally go to the PE_SRC_Disabled state when:  The Port Partners are not presently PD Connected  And the SourceCapabilityTimer times out  And CapsCounter > nCapsCount. The Policy Engine Shall go to the PE_SRC_Disabled state when:  The Port Partners have not been PD Connected (the Source Port remains Attached to a Port it has not had a PD Connection with during this Attachment) USB Power Delivery Specification Revision 3.0, Version 1.1 Page 431  And the NoResponseTimer times out  And the HardResetCounter > nHardResetCount. Note in the PE_SRC_Disabled state the Attached device is assumed to be unresponsive. The Policy Engine operates as if the device is Detached until such time as a Detach/re-Attach is detected.", "page_start": 431, "page_end": 431, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 164, "tags": []}
{"section_id": "8.3.3.2.3", "title": "PE_SRC_Send_Capabilities State", "content": "Note: this state can be entered from the PE_SRC_Soft_Reset state. On entry to the PE_SRC_Send_Capabilities state the Policy Engine Shall request the present Port capabilities from the Device Policy Manager. The Policy Engine Shall then request the Protocol Layer to send a Source_Capabilities Message containing these capabilities and increment the CapsCounter (if implemented). If a GoodCRC Message is received then the Policy Engine Shall:  Stop the NoResponseTimer .  Reset the HardResetCounter and CapsCounter to zero. Note that the HardResetCounter Shall only be set to zero in this state and at power up; its value Shall be maintained during a Hard Reset.  Initialize and run the SenderResponseTimer. Once a Source_Capabilities Message has been received and acknowledged by a GoodCRC Message, the Sink is required to then send a Request Message within tSenderResponse. The Policy Engine Shall transition to the PE_SRC_Negotiate_Capability state when:  A Request Message is received from the Sink. The Policy Engine Shall transition to the PE_SRC_Discovery state when:  The Protocol Layer indicates that the Message has not been sent and we are presently not Connected. This is part of the Capabilities sending process whereby successful Message sending indicates connection to a PD Sink Port. The Policy Engine Shall transition to the PE_SRC_Hard_Reset state when:  The SenderResponseTimer times out. In this case a transition back to USB Default Operation is required. When:  The Port Partners have not been PD Connected (the Source Port remains Attached to a Port it has not had a PD Connection with during this Attachment)  And the NoResponseTimer times out  And the HardResetCounter > nHardResetCount. The Policy Engine Shall do one of the following:  Transition to the PE_SRC_Discovery state.  Transition to the PE_SRC_Disabled state. Note that in either case the Attached device is assumed to be unresponsive. The Policy Engine Should operate as if the device is Detached until such time as a Detach/re-Attach is detected. The Policy Engine Shall go to the ErrorRecovery state when:  The Port Partners have previously been PD Connected (the Source Port remains Attached to a Port it has had a PD Connection with during this Attachment)  And the NoResponseTimer times out.  And the HardResetCounter > nHardResetCount. Page 432 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 432, "page_end": 432, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 380, "tags": []}
{"section_id": "8.3.3.2.4", "title": "PE_SRC_Negotiate_Capability State", "content": "On entry to the PE_SRC_Negotiate_Capability state the Policy Engine Shall ask the Device Policy Manager to evaluate the Request from the Attached Sink. The response from the Device Policy Manager Shall be one of the following:  The Request can be met.  The Request cannot be met  The Request could be met later from the Power Reserve. The Policy Engine Shall transition to the PE_SRC_Transition_Supply state when:  The Request can be met. The Policy Engine Shall transition to the PE_SRC_Capability_Response state when:  The Request cannot be met.  Or the Request can be met later from the Power Reserve.", "page_start": 433, "page_end": 432, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 103, "tags": []}
{"section_id": "8.3.3.2.5", "title": "PE_SRC_Transition_Supply State", "content": "The Policy Engine Shall be in the PE_SRC_Transition_Supply state while the power supply is transitioning from one power to another. On entry to the PE_SRC_Transition_Supply state, the Policy Engine Shall request the Protocol Layer to either send a GotoMin Message (if this was requested by the Device Policy Manager) or otherwise an Accept Message and inform the Device Policy Manager that it Shall transition the power supply to the Requested power level. Note: that if the power supply is currently operating at the requested power no change will be necessary. On exit from the PE_SRC_Transition_Supply state the Policy Engine Shall request the Protocol Layer to send a PS_RDY Message. The Policy Engine Shall transition to the PE_SRC_Ready state when:  The Device Policy Manager informs the Policy Engine that the power supply is ready. The Policy Engine Shall transition to the PE_SRC_Hard_Reset state when:  A Protocol Error occurs.", "page_start": 433, "page_end": 432, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 149, "tags": []}
{"section_id": "8.3.3.2.6", "title": "PE_SRC_Ready State", "content": "In the PE_SRC_Ready state the PD Source Shall operating at a stable power with no ongoing negotiation. It Shall respond to requests from the Sink, events from the Device Policy Manager. On entry to the PE_SRC_Ready state the Source Shall notify the Protocol Layer of the end of the Atomic Message Sequence (AMS). If the transition into PE_SRC_Ready is the result of Protocol Error that has not caused a Soft Reset (see Section 8.3.3.4.1) then the notification to the Protocol Layer of the end of the AMS Shall Not be sent since there is a Message to be processed. On entry to the PE_SRC_Ready state if this is a DFP which needs to establish communication with a Cable Plug, the DFP Shall:  Initialize and run the DiscoverIdentityTimer (no GoodCRC Message response yet received to Discover Identity Message). On entry to the PE_SNK_Ready state if the current Explicit Contract is for a PPS APDO, then the Policy Engine Shall do the following:  Initialize and run the SourcePPSCommTimer. On exit from the PE_SRC_Ready, if the Source is initiating an AMS then the Policy Engine Shall notify the Protocol Layer that the first Message in an AMS will follow. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 433 The Policy Engine Shall transition to the PE_SRC_Send_Capabilities state when:  The Device Policy Manager indicates that Source Capabilities have changed or  A Get_Source_Cap Message is received. The Policy Engine Shall transition to the PE_SRC_Transition_Supply state when:  A GotoMin request is received from the Device Policy Manager for the Attached Device to go to minimum power. The Policy Engine Shall transition to the PE_SRC_Get_Sink_Cap state when:  The Device Policy Manager asks for the Sink’s capabilities.", "page_start": 433, "page_end": 433, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 286, "tags": []}
{"section_id": "8.3.3.2.7", "title": "PE_SRC_Disabled State", "content": "In the PE_SRC_Disabled state the PD Source supplies default power and is unresponsive to USB Power Delivery messaging, but not to Hard Reset Signaling.", "page_start": 434, "page_end": 433, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": []}
{"section_id": "8.3.3.2.8", "title": "PE_SRC_Capability_Response State", "content": "The Policy Engine Shall enter the PE_SRC_Capability_Response state if there is a Request received from the Sink that cannot be met based on the present capabilities. When the present Contract is not within the present capabilities it is regarded as Invalid and a Hard Reset will be triggered. On entry to the PE_SRC_Capability_Response state the Policy Engine Shall request the Protocol Layer to send one of the following:  Reject Message – if the request cannot be met or the present Contract is Invalid.  Wait Message – if the request could be met later from the Power Reserve. A Wait Message Shall Not be sent if the present Contract is Invalid. The Policy Engine Shall transition to the PE_SRC_Ready state when:  There is an Explicit Contract and  A Reject Message has been sent and the present Contract is still Valid or  A Wait Message has been sent. The Policy Engine Shall transition to the PE_SRC_Hard_Reset state when:  There is an Explicit Contract and  The Reject Message has been sent and the present Contract is Invalid (i.e. the Sink had to request a new value so instead we will return to USB Default Operation). The Policy Engine Shall transition to the PE_SRC_Wait_New_Capabilities state when:  There is no Explicit Contract and  A Reject Message has been sent or  A Wait Message has been sent.", "page_start": 434, "page_end": 433, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 231, "tags": []}
{"section_id": "8.3.3.2.9", "title": "PE_SRC_Hard_Reset State", "content": "On entry to the PE_SRC_Hard_Reset state the Policy Engine Shall request the generation of Hard Reset Signaling by the PHY Layer, initialize and run the PSHardResetTimer and increment the HardResetCounter. Note that the NoResponseTimer Shall continue to run in every state until it is stopped or times out. The Policy Engine Shall transition to the PE_SRC_Transition_to_default state when:  The PSHardResetTimer times out.", "page_start": 434, "page_end": 433, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 63, "tags": []}
{"section_id": "8.3.3.2.10", "title": "PE_SRC_Hard_Reset_Received State", "content": "The Policy Engine Shall transition from any state to the PE_SRC_Hard_Reset_Received state when: Page 434 USB Power Delivery Specification Revision 3.0, Version 1.1  Hard Reset Signaling is detected. On entry to the PE_SRC_Hard_Reset_Received state the Policy Engine Shall initialize and run the PSHardResetTimer. The Policy Engine Shall transition to the PE_SRC_Transition_to_default state when:  The PSHardResetTimer times out.", "page_start": 434, "page_end": 434, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 59, "tags": []}
{"section_id": "8.3.3.2.11", "title": "PE_SRC_Transition_to_default State", "content": "On entry to the PE_SRC_Transition_to_default state the Policy Engine Shall:  indicate to the Device Policy Manager that the power supply Shall Hard Reset (see Section 7.1.5)  request a reset of the local hardware  request the Device Policy Manager to set the Port Data Role to DFP and turn off VCONN. On exit from the PE_SRC_Transition_to_default state the Policy Engine Shall:  request the Device Policy Manager to turn on VCONN  initialize and run the NoResponseTimer. Note that the NoResponseTimer Shall continue to run in every state until it is stopped or times out.  inform the Protocol Layer that the Hard Reset is complete. The Policy Engine Shall transition to the PE_SRC_Startup state when:  The Device Policy Manager indicates that the power supply has reached the default level.", "page_start": 435, "page_end": 434, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 133, "tags": []}
{"section_id": "8.3.3.2.12", "title": "PE_SRC_Get_Sink_Cap State", "content": "In this state the Policy Engine, due to a request from the Device Policy Manager, Shall request the capabilities from the Attached Sink. On entry to the PE_SRC_Get_Sink_Cap state the Policy Engine Shall request the Protocol Layer to send a Get_Sink_Cap Message in order to retrieve the Sink’s capabilities. The Policy Engine Shall then start the SenderResponseTimer. On exit from the PE_SRC_Get_Sink_Cap state the Policy Engine Shall inform the Device Policy Manager of the outcome (capabilities or response timeout). The Policy Engine Shall transition to the PE_SRC_Ready state when:  A Sink_Capabilities Message is received.  Or SenderResponseTimer times out.", "page_start": 435, "page_end": 434, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 100, "tags": ["sink"]}
{"section_id": "8.3.3.2.13", "title": "PE_SRC_Wait_New_Capabilities State", "content": "In this state the Policy Engine has been unable to negotiate an Explicit Contract and is waiting for new Capabilities from the Device Policy Manager. The Policy Engine Shall transition to the PE_SRC_Send_Capabilities state when:  The Device Policy Manager indicates that Source Capabilities have changed. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 435", "page_start": 435, "page_end": 435, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 56, "tags": []}
{"section_id": "8.3.3.3", "title": "Policy Engine Sink Port State Diagram", "content": "Figure 8-67 below shows the state diagram for the Policy Engine in a Sink Port. The following sections describe operation in each of the states. Figure 8-67 Sink Port State Diagram Hard reset signalling received Start PE_SNK_Transition_to_default Actions on entry: PE_SNK_Startup R s R i e e n q s k e u t t e r a l s o n t c s D a i e t l i v H o i n W c e to P d o e li f c a y u M lt anager to request power P a o t w d e e r f a S u in lt k A R c e t s i e o t n P s r o o n to e c n o t l r y L : ayer Set Port Data Role to UFP and turn off VCONN Power = DefauIt (0V or 5V) or Implicit Contract Actions on exit: PD = Connected/not Connected Inform Protocol Layer Hard Reset complete Power = rising/falling to default (5V) Protocol Layer Reset ((SinkWaitCapTimer timeout | PD = not Connected PSTransitionTimer timeout) & PE_SNK_Discovery (HardResetCounter nHardResetCount)) | Hard Reset complete Hard Reset request from Actions on entry: Device Policy Manager PE_SNK_Hard_Reset Wait for VBUS Actions on entry: Power = Default (0V or 5V) or Generate Hard Reset signalling. Implicit Contract Increment HardResetCounter. PD = Connected/not Connected Im Po p w li e c r it = /E D x e p f l a ic u i I t t C ( o 5 n V t ) r o a r c t VBUS present4 PD = Connected/not Connected PE_SNK_Wait_for_Capabilities Actions on entry: Initialize and run SinkWaitCapTimer SenderResponseTimer Timeout Power = Default (0V or 5V) or Implicit Contract PD = Connected/not Connected Source capabilities message received1 PE_SNK_Evaluate_Capability Actions on entry: Reset HardResetCounter to zero. Ask Device Policy Manager to evaluate the options based on supplied capabilities, any Power Reserve that it needs, and respond indicating the selected capability and, Optionally, a Capability Mismatch Power = DefauIt (5V) or Implicit Contract PD = Connected no Explicit Contract & Device Policy Manager Response received (Reject message received | Wait message received) PE_SNK_Select_Capability Actions on entry: Send Request based on Device Policy Manager response:  Request from present capabilities  Optionally Indicate that other capabilities would be preferred Capability Mismatch Initialize and run SenderResponseTimer Power = DefauIt (5V) or Implicit Contract Explicit Contract & PD = Connected (Reject message received | New power required | Accept message Wait message received) SinkRequestTimer received Timeout | Protocol Error SinkPP T S i P m e e r o io u d t icTimer PE_SNK_Transition_Sink Actions on entry: Initialize and run PSTransitionTimer Actions on exit: Request Device Policy Manager transitions sink power supply to new power (if required) Power = transition PD = Connected GotoMin message PS_RDY message received received Source capabilities message received1 PE_SNK_Ready Actions on entry: Initialize and run SinkRequestTimer2 (on receiving Wait) Initialize and run DiscoverIdentityTimer4 Initialize and run the SinkPPSPeriodicTimer5 Actions on exit: If the Sink is initiating an AMS then notify the Protocol Layer that the first Message in the AMS will follow. Power = Explicit Contract PD = Connected Get_Sink_Cap message Update remote capabilities received Sink capabilities Get_Source_Cap request from message sent Message sent Device Policy Manager PE_SNK_Give_Sink_Cap PE_SNK_Get_Source_Cap A G Se c e n t t i d o p n r C e s a s o p e n a n b t e i s n li i t t n r ie k y s : c m ap e a s b s i a li g ti e e s (b f a ro s m ed D o e n v D ic e e v P ic o e li c P y o l M ic a y n ager A Se c n ti d o n G s e o t_ n S e o n u t r r c y e : _Cap message Manager response) Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected Page 436 USB Power Delivery Specification Revision 3.0, Version 1.1 1 Source capabilities messages received in states other than PE_SNK_Wait_for_Capabilities and PE_SNK_Ready constitute a Protocol Error. 2 The SinkRequestTimer Should Not be stopped if a Ping Message is received in the PE_SNK_Ready state since it represents the maximum time between requests after a Wait Message which is not reset by a Ping Message. 3 During a Hard Reset the Source voltage will transition to vSafe0V and then transition to vSafe5V. Sinks need to ensure that V present is not indicated until after the Source has completed the Hard Reset process by detecting BUS both of these transitions. 4 The DiscoverIdentityTimer is run when this is a VCONN Source and a PD Connection with a Cable Plug needs to be established i.e. no GoodCRC Message has yet been received in response to a Discover Identity Command. 5 The SinkPPSPeriodicTimer is only initialized and run when the present Explicit Contract is for a PPS APDO. Sink’s that do not support PPS do not need to implement the SinkPPSPeriodicTimer.", "page_start": 436, "page_end": 436, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-67 below shows the state diagram for the Policy Engine in a Sink Port. The following sections describe", "caption": "Figure 8-67 below shows the state diagram for the Policy Engine in a Sink Port. The following sections describe", "page": 436}, {"figure_id": "Figure 8-67 Sink Port State Diagram", "caption": "Figure 8-67 Sink Port State Diagram", "page": 436}], "subsections": [], "word_count": 871, "tags": ["policy", "sink"]}
{"section_id": "8.3.3.3.1", "title": "PE_SNK_Startup State", "content": "PE_SNK_Startup Shall be the starting state for a Sink Policy Engine either on power up or after a Hard Reset. On entry to this state the Policy Engine Shall reset the Protocol Layer. Note that resetting the Protocol Layer will also reset the MessageIDCounter and stored MessageID (see Section 6.11.2.3). Once the reset process completes, the Policy Engine Shall transition to the PE_SNK_Discovery state.", "page_start": 437, "page_end": 436, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 64, "tags": []}
{"section_id": "8.3.3.3.2", "title": "PE_SNK_Discovery State", "content": "In the PE_SNK_Discovery state the Sink Policy Engine waits for V to be present. BUS The Policy Engine Shall transition to the PE_SNK_Wait_for_Capabilities state when:  The Device Policy Manager indicates that V has been detected. BUS", "page_start": 437, "page_end": 436, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 37, "tags": []}
{"section_id": "8.3.3.3.3", "title": "PE_SNK_Wait_for_Capabilities State", "content": "On entry to the PE_SNK_Wait_for_Capabilities state the Policy Engine Shall initialize and start the SinkWaitCapTimer. The Policy Engine Shall transition to the PE_SNK_Evaluate_Capability state when:  A Source_Capabilities Message is received. When the SinkWaitCapTimer times out, the Policy Engine will perform a Hard Reset.", "page_start": 437, "page_end": 436, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 44, "tags": []}
{"section_id": "8.3.3.3.4", "title": "PE_SNK_Evaluate_Capability State", "content": "The PE_SNK_Evaluate_Capability state is first entered when the Sink receives its first Source_Capabilities Message from the Source. At this point the Sink knows that it is Attached to and communicating with a PD capable Source. On entry to the PE_SNK_Evaluate_Capability state the Policy Engine Shall request the Device Policy Manager to evaluate the supplied Source capabilities based on Local Policy. The Device Policy Manager Shall indicate to the Policy Engine the new power level required, selected from the present offered capabilities. The Device Policy Manager Shall also indicate to the Policy engine a Capability Mismatch if the offered power does not meet the device's requirements. The Policy Engine Shall transition to the PE_SNK_Select_Capability state when:  A response is received from the Device Policy Manager.", "page_start": 437, "page_end": 436, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 125, "tags": []}
{"section_id": "8.3.3.3.5", "title": "PE_SNK_Select_Capability State", "content": "On entry to the PE_SNK_Select_Capability state the Policy Engine Shall request the Protocol Layer to send a response Message, based on the evaluation from the Device Policy Manager. The Message Shall be one of the following: USB Power Delivery Specification Revision 3.0, Version 1.1 Page 437  A Request from the offered Source Capabilities.  A Request from the offered Source Capabilities with an indication that another power level would be preferred (“Capability Mismatch” bit set). The Policy Engine Shall initialize and run the SenderResponseTimer. The Policy Engine Shall transition to the PE_SNK_Transition_Sink state when:  An Accept Message is received from the Source. The Policy Engine Shall transition to the PE_SNK_Wait_for_Capabilities state when:  There is no Explicit Contract in place and  A Reject Message is received from the Source or  A Wait Message is received from the Source. The Policy Engine Shall transition to the PE_SNK_Ready state when:  There is an Explicit Contract in place and  A Reject Message is received from the Source or  A Wait Message is received from the Source. The Policy Engine Shall transition to the PE_SNK_Hard_Reset state when:  A SenderResponseTimer timeout occurs.", "page_start": 437, "page_end": 437, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 195, "tags": []}
{"section_id": "8.3.3.3.6", "title": "PE_SNK_Transition_Sink State", "content": "On entry to the PE_SNK_Transition_Sink state the Policy Engine Shall initialize and run the PSTransitionTimer (timeout will lead to a Hard Reset see Section 8.3.3.3.8 and Shall then request the Device Policy Manager to transition the Sink’s power supply to the new power level. Note that if there is no power level change the Device Policy Manager Should Not affect any change to the power supply. On exit from the PE_SNK_Transition_Sink state the Policy Engine Shall request the Device Policy Manager to transition the Sink’s power supply to the new power level. The Policy Engine Shall transition to the PE_SNK_Ready state when:  A PS_RDY Message is received from the Source. The Policy Engine Shall transition to the PE_SNK_Hard_Reset state when:  A Protocol Error occurs.", "page_start": 438, "page_end": 437, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 126, "tags": ["sink"]}
{"section_id": "8.3.3.3.7", "title": "PE_SNK_Ready State", "content": "In the PE_SNK_Ready state the PD Sink Shall be operating at a stable power level with no ongoing negotiation. It Shall respond to requests from the Source, events from the Device Policy Manager and May monitor for Ping Messages to maintain the PD link. On entry to the PE_SNK_Ready state as the result of a wait the Policy Engine Should do the following:  Initialize and run the SinkRequestTimer. On entry to the PE_SNK_Ready state if this is a DFP which needs to establish communication with a Cable Plug, then the Policy Engine Shall do the following:  Initialize and run the DiscoverIdentityTimer (no GoodCRC Message response yet received to Discover Identity Message). On entry to the PE_SNK_Ready state if the current Explicit Contract is for a PPS APDO, then the Policy Engine Shall do the following: Page 438 USB Power Delivery Specification Revision 3.0, Version 1.1  Initialize and run the SinkPPSPeriodicTimer. On exit from the PE_SNK_Ready state, if the transition is as a result of a DPM request to start a new Atomic Message Sequence (AMS) then the Policy Engine Shall notify the Protocol Layer that the first Message in an AMS will follow. The Policy Engine Shall transition to the PE_SNK_Evaluate_Capability state when:  A Source_Capabilities Message is received. The Policy Engine Shall transition to the PE_SNK_Select_Capability state when:  A new power level is requested by the Device Policy Manager.  A SinkRequestTimer timeout occurs. The Policy Engine Shall transition to the PE_SNK_Transition_Sink state when:  A GotoMin Message is received. The Policy Engine Shall transition back to the PE_SNK_Ready state when:  A Ping Message is received. Note this Should Not cause the SinkRequestTimer to be reinitialized. The Policy Engine Shall transition to the PE_SNK_Give_Sink_Cap state when:  A Get_Sink_Cap Message is received from the Protocol Layer. The Policy Engine Shall transition to the PE_SNK_Get_Source_Cap state when:  The Device Policy Manager requests an update of the remote Source’s capabilities.", "page_start": 438, "page_end": 438, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 325, "tags": []}
{"section_id": "8.3.3.3.8", "title": "PE_SNK_Hard_Reset State", "content": "The Policy Engine Shall transition to the PE_SNK_Hard_Reset state from any state when:  ((SinkWaitCapTimer timeout |  PSTransitionTimer timeout |  NoResponseTimer timeout) &  (HardResetCounter ≤ nHardResetCount)) |  Hard Reset request from Device Policy Manager. Note: if the NoResponseTimer times out and the HardResetCounter is greater than nHardResetCount the Sink Shall assume that the Source is non-responsive. Note: The HardResetCounter is reset on a power cycle or Detach. On entry to the PE_SNK_Hard_Reset state the Policy Engine Shall request the generation of Hard Reset Signaling by the PHY Layer and increment the HardResetCounter. The Policy Engine Shall transition to the PE_SNK_Transition_to_default state when:  The Hard Reset is complete.", "page_start": 439, "page_end": 438, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 112, "tags": []}
{"section_id": "8.3.3.3.9", "title": "PE_SNK_Transition_to_default State", "content": "The Policy Engine Shall transition from any state to PE_SNK_Transition_to_default state when:  Hard Reset Signaling is detected. When Hard Reset Signaling is received or transmitted then the Policy Engine Shall transition from any state to PE_SNK_Transition_to_default. This state can also be entered from the PE_SNK_Hard_Reset state. On entry to the PE_SNK_Transition_to_default state the Policy Engine Shall:  indicate to the Device Policy Manager that the Sink Shall transition to default USB Power Delivery Specification Revision 3.0, Version 1.1 Page 439  request a reset of the local hardware  request the Device Policy Manger that the Port Data Role is set to UFP. The Policy Engine Shall transition to the PE_SNK_Startup state when:  The Device Policy Manager indicates that the Sink has reached the default level.", "page_start": 439, "page_end": 439, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 128, "tags": []}
{"section_id": "8.3.3.3.10", "title": "PE_SNK_Give_Sink_Cap State", "content": "On entry to the PE_SNK_Give_Sink_Cap state the Policy Engine Shall request the Device Policy Manager for the current system capabilities. The Policy Engine Shall then request the Protocol Layer to send a Sink_Capabilities Message containing these capabilities. The Policy Engine Shall transition to the PE_SNK_Ready state when:  The Sink_Capabilities Message has been successfully sent.", "page_start": 440, "page_end": 439, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 55, "tags": ["sink"]}
{"section_id": "8.3.3.3.11", "title": "PE_SNK_Get_Source_Cap State", "content": "In the PE_SNK_Get_Source_Cap state the Policy Engine, due to a request from the Device Policy Manager, Shall request the capabilities from the Attached Source. On entry to the PE_SNK_Get_Source_Cap state the Policy Engine Shall request the Protocol Layer to send a Get_Source_Cap Message in order to retrieve the Source’s capabilities. The Policy Engine Shall transition to the PE_SNK_Ready state when:  The Get_Source_Cap Message is sent. Page 440 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 440, "page_end": 440, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 76, "tags": ["source"]}
{"section_id": "8.3.3.4", "title": "Soft Reset and Protocol Error State Diagrams", "content": "", "page_start": 441, "page_end": 440, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["protocol"]}
{"section_id": "8.3.3.4.1", "title": "Source Port Soft Reset and Protocol Error State Diagram", "content": "Figure 8-68 below shows the state diagram for the Policy Engine in a Source Port when performing a Soft Reset of its Port Partner. The following sections describe operation in each of the states. Figure 8-68 Source Port Soft Reset and Protocol Error State Diagram Accept message received PE_SRC_Send_Capabilities PE_SRC_Ready Accept message Protocol Error2 during Interruptible AMS | sent Protocol Error2 before first Message in AMS sent (no GoodCRC received) SenderResponseTimer PE_SRC_Soft_Reset Transmission Tr T a i n m sm eo i u ss t i | on PE_SRC_Send_Soft_Reset A R Se c e n t s i d e o t n A P s c r c o o e n t p o e t c n m o t l r e L y s a : s y a e g r e fro E m rr o P r r o in to d c ic o a l t L io ay n e r PE_SRC_Hard_Reset fro E m rr o P r r o in to d c ic o a l t L io ay n e r A R S In e c e i n t s t i i d e o a t n S l P i s o z r f e o o t n a t R o n e e c d n s o e t r l r t u L y m n a : y e S e s e r s n a d g e e rResponseTimer Power = DefauIt/Implicit or Power = DefauIt/Implicit or Explicit Contract Explicit Contract PD = Connected PD = Connected Soft Reset message Message not sent after retries (no GoodCRC received)1 | received Protocol Error2 during Non-interruptable AMS", "page_start": 441, "page_end": 440, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-68 below shows the state diagram for the Policy Engine in a Source Port when performing a Soft Reset of its", "caption": "Figure 8-68 below shows the state diagram for the Policy Engine in a Source Port when performing a Soft Reset of its", "page": 441}, {"figure_id": "Figure 8-68 Source Port Soft Reset and Protocol Error State Diagram", "caption": "Figure 8-68 Source Port Soft Reset and Protocol Error State Diagram", "page": 441}], "subsections": [], "word_count": 297, "tags": ["source", "protocol"]}
{"section_id": "1", "title": "Excludes the Soft_Reset Message itself.", "content": "2 An unrecognized or unsupported Message will result in a Not_Supported Message response being generated (see Section 6.3.14).", "page_start": 441, "page_end": 440, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["messages"]}
{"section_id": "8.3.3.4.1.1", "title": "PE_SRC_Send_Soft_Reset State", "content": "The PE_SRC_Send_Soft_Reset state Shall be entered from any state when a Protocol Error is detected by the Protocol Layer during a Non-interruptible AMS (see Section 6.8.1) or when a Message has not been sent after retries to the Sink. The main exceptions to this rule are when:  The source is in the PE_SRC_Send_Capabilities state, there is a Source_Capabilities Message sending failure (without GoodCRC) and the source is not presently Attached (as indicated in Figure 8-66). In this case, the PE_SRC_Discovery state is entered (see Section 8.3.3.2.3).  When the voltage is in transition due to a new Explicit Contract being negotiated (see Section 8.3.3.2). In this case a Hard Reset will be generated.  During a Power Role Swap when the power supply is in transition (see Section 8.3.3.16.3 and Section 8.3.3.16.4). In this case USB Type-C Error Recovery will be triggered directly.  During a Data Role Swap when there is a mismatch in the Port Date Role field (see Section 6.2.1.1.6). In this case USB Type-C Error Recovery will be triggered directly. Note that Protocol Errors occurring in the following situations Shall Not lead to a Soft Reset, but Shall result in a transition to the PE_SRC_Ready state where the Message received will be handled as if it had been received in the PE_SRC_Ready state:  Protocol Errors occurring during an Interruptible AMS.  Protocol Errors occurring during any AMS where the first Message in the sequence has not yet been sent i.e. an unexpected Message is received instead of the expected GoodCRC Message response. On entry to the PE_SRC_Send_Soft_Reset state the Policy Engine Shall request the Protocol Layer to perform a Soft Reset, then Shall send a Soft_Reset Message to the Sink, and initialize and run the SenderResponseTimer. The Policy Engine Shall transition to the PE_SRC_Send_Capabilities state when: USB Power Delivery Specification Revision 3.0, Version 1.1 Page 441  An Accept Message has been received. The Policy Engine Shall transition to the PE_SRC_Hard_Reset state when:  A SenderResponseTimer timeout occurs.  Or the Protocol Layer indicates that a transmission error has occurred.", "page_start": 441, "page_end": 441, "content_type": "text", "tables": [], "figures": [{"figure_id": "(without GoodCRC) and the source is not presently Attached (as indicated in Figure 8-66). In this case, the", "caption": "(without GoodCRC) and the source is not presently Attached (as indicated in Figure 8-66). In this case, the", "page": 441}], "subsections": [], "word_count": 346, "tags": []}
{"section_id": "8.3.3.4.1.2", "title": "PE_SRC_Soft_Reset State", "content": "The PE_SRC_Soft_Reset state Shall be entered from any state when a Soft_Reset Message is received from the Protocol Layer. On entry to the PE_SRC_Soft_Reset state the Policy Engine Shall reset the Protocol Layer and Shall then request the Protocol Layer to send an Accept Message. The Policy Engine Shall transition to the PE_SRC_Send_Capabilities state (see Section 8.3.3.2.3) when:  The Accept Message has been sent. The Policy Engine Shall transition to the PE_SRC_Hard_Reset state when:  The Protocol Layer indicates that a transmission error has occurred.", "page_start": 442, "page_end": 441, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 86, "tags": []}
{"section_id": "8.3.3.4.2", "title": "Sink Port Soft Reset and Protocol Error State Diagram", "content": "Figure 8-69 below shows the state diagram for the Policy Engine in a Sink Port when performing a Soft Reset of its Port Partner. The following sections describe operation in each of the states. Figure 8-69 Sink Port Soft Reset and Protocol Error Diagram Accept message received PE_SNK_Wait_for_Capabilities PE_SNK_Ready Accept message Protocol Error2 during Non-interruptable AMS | sent Protocol Error2 before first Message in AMS sent (no GoodCRC received) Transmission Error indication SenderResponseTimer PE_SNK_Soft_Reset from Protocol Layer Tr T a i n m sm eo i u ss t i | on PE_SNK_Send_Soft_Reset A R Se c e n t s i d e o t n A P s c r c o o e n t p o e t c n m o t l r e L y s a : s y a e g r e PE_SNK_Hard_Reset fro E m rr o P r r o in to d c ic o a l t L io ay n e r A R S In e c e i n t s t i i d e o a t n S l P i s o z r f e o o t n a t R o n e e c d n s o e t r l r t u L y m n a : y e S e s e r s n a d g e e rResponseTimer Power = DefauIt/Implicit or Power = DefauIt/Implicit or Explicit Contract Explicit Contract PD = Connected PD = Connected Message not sent after retries (no GoodCRC received)1 | Soft Reset message Protocol Error2 during Non-interruptable AMS received", "page_start": 442, "page_end": 441, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-69 below shows the state diagram for the Policy Engine in a Sink Port when performing a Soft Reset of its", "caption": "Figure 8-69 below shows the state diagram for the Policy Engine in a Sink Port when performing a Soft Reset of its", "page": 442}, {"figure_id": "Figure 8-69 Sink Port Soft Reset and Protocol Error Diagram", "caption": "Figure 8-69 Sink Port Soft Reset and Protocol Error Diagram", "page": 442}], "subsections": [], "word_count": 277, "tags": ["sink", "protocol"]}
{"section_id": "1", "title": "Excludes the Soft_Reset Message itself.", "content": "2 An unrecognized or unsupported Message will result in a Not_Supported Message response being generated (see Section 6.3.14).", "page_start": 442, "page_end": 441, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["messages"]}
{"section_id": "8.3.3.4.2.1", "title": "PE_SNK_Send_Soft_Reset State", "content": "The PE_SNK_Send_Soft_Reset state Shall be entered from any state when a Protocol Error is detected by the Protocol Layer during a Non-interruptible AMS (see Section 6.8.1) or when a Message has not been sent after retries to the Source. The main exceptions to this rule are when: • When the voltage is in transition due to a new Explicit Contract being negotiated (see Section 8.3.3.3). In this case a Hard Reset will be generated. Page 442 USB Power Delivery Specification Revision 3.0, Version 1.1 • During a Power Role Swap when the power supply is in transition (see Section 8.3.3.16.3 and Section 8.3.3.16.4). In this case a hard reset will be triggered directly. • During a Data Role Swap when the DFP/UFP roles are changing. In this case USB Type-C Error Recovery will be triggered directly. Note that Protocol Errors occurring in the following situations Shall Not lead to a Soft Reset, but Shall result in a transition to the PE_SNK_Ready state where the Message received will be handled as if it had been received in the PE_SNK_Ready state:  Protocol Errors occurring during an Interruptible AMS.  Protocol Errors occurring during any AMS where the first Message in the sequence has not yet been sent i.e. an unexpected Message is received instead of the expected GoodCRC Message response. On entry to the PE_SNK_Send_Soft_Reset state the Policy Engine Shall request the Protocol Layer to perform a Soft Reset, then Shall send a Soft_Reset Message to the Source, and initialize and run the SenderResponseTimer. The Policy Engine Shall transition to the PE_SNK_Wait_for_Capabilities state when: • An Accept Message has been received. The Policy Engine Shall transition to the PE_SNK_Hard_Reset state when: • A SenderResponseTimer timeout occurs. • Or the Protocol Layer indicates that a transmission error has occurred.", "page_start": 442, "page_end": 442, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 297, "tags": []}
{"section_id": "8.3.3.4.2.2", "title": "PE_SNK_Soft_Reset State", "content": "The PE_SNK_Soft_Reset state Shall be entered from any state when a Soft_Reset Message is received from the Protocol Layer. On entry to the PE_SNK_Soft_Reset state the Policy Engine Shall reset the Protocol Layer and Shall then request the Protocol Layer to send an Accept Message. The Policy Engine Shall transition to the PE_SNK_Wait_for_Capabilities state when:  The Accept Message has been sent. The Policy Engine Shall transition to the PE_SNK_Hard_Reset state when:  The Protocol Layer indicates that a transmission error has occurred. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 443", "page_start": 443, "page_end": 443, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 93, "tags": []}
{"section_id": "8.3.3.5", "title": "Not Supported Message State Diagrams", "content": "", "page_start": 444, "page_end": 443, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["messages"]}
{"section_id": "8.3.3.5.1", "title": "Source Port Not Supported Message State Diagram", "content": "Figure 8-70 shows the state diagram for a Not_Supported Message sent or received by a Source Port. Figure 8-70 Source Port Not Supported Message State Diagram PE_SRC_Chunk_Received ChunkingNotSupportedTimer timeout Actions on entry: Start ChunkingNotSupportedTimer Power = Explicit Contract PD = connected Protocol Error1 & Chunk from a multi-Chunk Message2 Protocol Error1 & not a Chunk from PE_SRC_Send_Not_Supported a multi-Chunk Message Not_Sup r p ec o e r i t v e e d d M 1 essage PE_SRC_Not_Supported_Received PE_SRC_Ready Actions on entry: Actions on entry: Send Not_Supported Message Not_Supported Inform Device Policy Manager of Message sent DPM informed Not_Supported Message Power = Explicit Contract PD = connected Power = Explicit Contract PD = connected 1 Transition can either be the result of a Protocol Error during an interruptible AMS or as a result of an unsupported Message being received in the PE_SRC_Ready state directly (see also Section 8.3.3.4.1). 2 Transition can only occur where a manufacturer has opted not to implement a Chunking state machine (see Section 6.11.2.1) and is communicating with a system which is attempting to send it Chunks.", "page_start": 444, "page_end": 443, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-70 shows the state diagram for a Not_Supported Message sent or received by a Source Port.", "caption": "Figure 8-70 shows the state diagram for a Not_Supported Message sent or received by a Source Port.", "page": 444}, {"figure_id": "Figure 8-70 Source Port Not Supported Message State Diagram", "caption": "Figure 8-70 Source Port Not Supported Message State Diagram", "page": 444}], "subsections": [], "word_count": 181, "tags": ["messages", "source"]}
{"section_id": "8.3.3.5.1.1", "title": "PE_SRC_Send_Not_Supported State", "content": "The PE_SRC_Send_Not_Supported state Shall be entered from the PE_SRC_Ready state either as the result of a Protocol Error received during an interruptible AMS or as a result of an unsupported Message being received in the PE_SRC_Ready state directly except for the first Chunk in a multi-Chunk Message (see also Section 6.11.2.1 and Section 8.3.3.4.1). On entry to the PE_SRC_Send_Not_Supported state (from the PE_SRC_Ready state) the Policy Engine Shall request the Protocol Layer to send a Not_Supported Message. The Policy Engine Shall transition back to the previous state (PE_SRC_Ready see Figure 8-70) when: • The Not_Supported Message has been successfully sent.", "page_start": 444, "page_end": 443, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the previous state (PE_SRC_Ready see Figure 8-70) when:", "caption": "The Policy Engine Shall transition back to the previous state (PE_SRC_Ready see Figure 8-70) when:", "page": 444}], "subsections": [], "word_count": 100, "tags": []}
{"section_id": "8.3.3.5.1.2", "title": "PE_SRC_Not_Supported_Received State", "content": "The PE_SRC_Not_Supported_Received state Shall be entered from the PE_SRC_Ready state when a Not_Supported Message is received. On entry to the PE_SRC_Not_Supported_Received state the Policy Engine Shall inform the Device Policy Manager. The Policy Engine Shall transition back to the previous state (PE_SRC_Ready see Figure 8-70) when: • The Device Policy Manager has been informed.", "page_start": 444, "page_end": 443, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the previous state (PE_SRC_Ready see Figure 8-70) when:", "caption": "The Policy Engine Shall transition back to the previous state (PE_SRC_Ready see Figure 8-70) when:", "page": 444}], "subsections": [], "word_count": 54, "tags": []}
{"section_id": "8.3.3.5.1.3", "title": "PE_SRC_Chunk_Received State", "content": "The PE_SRC_Chunk_Received state Shall be entered from the PE_SRC_Ready state either as the result of a Protocol Error received during an interruptible AMS or as a result of an unsupported Message being received in the Page 444 USB Power Delivery Specification Revision 3.0, Version 1.1 PE_SRC_Ready state directly where the Message is a Chunk in a multi-Chunk Message (see also Section 6.6.17.1 and Section 8.3.3.4.1). On entry to the PE_SRC_Chunk_Received state (from the PE_SRC_Ready state) the Policy Engine Shall initialize and run the ChunkingNotSupportedTimer. The Policy Engine Shall transition to PE_SRC_Send_Not_Supported when: • The ChunkingNotSupportedTimer has timed out.", "page_start": 444, "page_end": 444, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 98, "tags": []}
{"section_id": "8.3.3.5.2", "title": "Sink Port Not Supported Message State Diagram", "content": "Figure 8-71 shows the state diagram for a Not_Supported Message sent or received by a Sink Port. Figure 8-71 Sink Port Not Supported Message State Diagram PE_SRC_Chunk_Received ChunkingNotSupportedTimer timeout Actions on entry: Start ChunkingNotSupportedTimer Power = Explicit Contract PD = connected Protocol Error1 & Chunk from a multi-Chunk Message2 Protocol Error1 & not a Chunk from PE_SNK_Send_Not_Supported a multi-Chunk Message Not_Sup r p ec o e r i t v e e d d M 1 essage PE_SNK_Not_Supported_Received PE_SNK_Ready Actions on entry: Actions on entry: Send Not_Supported Message Not_Supported Inform Device Policy Manager of Message sent DPM informed Not_Supported Message Power = Explicit Contract PD = connected Power = Explicit Contract PD = connected 1 Transition can either be the result of a Protocol Error during an interruptible AMS or as a result of an unsupported Message being received in the PE_SNK_Ready state directly (see also Section 8.3.3.4.2).", "page_start": 445, "page_end": 444, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-71 shows the state diagram for a Not_Supported Message sent or received by a Sink Port.", "caption": "Figure 8-71 shows the state diagram for a Not_Supported Message sent or received by a Sink Port.", "page": 445}, {"figure_id": "Figure 8-71 Sink Port Not Supported Message State Diagram", "caption": "Figure 8-71 Sink Port Not Supported Message State Diagram", "page": 445}], "subsections": [], "word_count": 148, "tags": ["messages", "sink"]}
{"section_id": "8.3.3.5.2.1", "title": "PE_SNK_Send_Not_Supported State", "content": "The PE_SNK_Send_Not_Supported state Shall be entered from the PE_SNK_Ready state either as the result of a Protocol Error received during an interruptible AMS or as a result of an unsupported Message being received in the PE_SNK_Ready state directly except for the first Chunk in a multi-Chunk Message (see also Section 6.11.2.1 and Section 8.3.3.4.1). On entry to the PE_SNK_Send_Not_Supported state (from the PE_SNK_Ready state) the Policy Engine Shall request the Protocol Layer to send a Not_Supported Message. The Policy Engine Shall transition back to the previous state (PE_SNK_Ready see Figure 8-71) when: • The Not_Supported Message has been successfully sent.", "page_start": 445, "page_end": 444, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the previous state (PE_SNK_Ready see Figure 8-71) when:", "caption": "The Policy Engine Shall transition back to the previous state (PE_SNK_Ready see Figure 8-71) when:", "page": 445}], "subsections": [], "word_count": 100, "tags": []}
{"section_id": "8.3.3.5.2.2", "title": "PE_SNK_Not_Supported_Received State", "content": "The PE_SNK_Not_Supported_Received state Shall be entered from the PE_SNK_Ready state when a Not_Supported Message is received. On entry to the PE_SNK_Not_Supported_Received state the Policy Engine Shall inform the Device Policy Manager. The Policy Engine Shall transition back to the previous state (PE_SNK_Ready see Figure 8-71) when: • The Device Policy Manager has been informed. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 445", "page_start": 445, "page_end": 445, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the previous state (PE_SNK_Ready see Figure 8-71) when:", "caption": "The Policy Engine Shall transition back to the previous state (PE_SNK_Ready see Figure 8-71) when:", "page": 445}], "subsections": [], "word_count": 64, "tags": []}
{"section_id": "8.3.3.5.2.1", "title": "PE_SNK_Chunk_Received State", "content": "The PE_SNK_Chunk_Received state Shall be entered from the PE_SNK_Ready state either as the result of a Protocol Error received during an interruptible AMS or as a result of an unsupported Message being received in the PE_SNK_Ready state directly where the Message is a Chunk in a multi-Chunk Message (see also Section 6.6.17.1 and Section 8.3.3.4.1). On entry to the PE_SNK_Chunk_Received state (from the PE_SNK_Ready state) the Policy Engine Shall initialize and run the ChunkingNotSupportedTimer. The Policy Engine Shall transition to PE_SNK_Send_Not_Supported when: • The ChunkingNotSupportedTimer has timed out.", "page_start": 446, "page_end": 445, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 88, "tags": []}
{"section_id": "8.3.3.6", "title": "Source Port Ping State Diagram", "content": "Figure 8-70 shows the state diagram for a Ping Message from a Source Port. Figure 8-72 Source Port Ping State Diagram Send Ping request PE_SRC_Ping from DPM PE_SRC_Ready Actions on entry: Send Ping message Ping message sent Power = Explicit Contract PD = connected", "page_start": 446, "page_end": 445, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-70 shows the state diagram for a Ping Message from a Source Port.", "caption": "Figure 8-70 shows the state diagram for a Ping Message from a Source Port.", "page": 446}, {"figure_id": "Figure 8-72 Source Port Ping State Diagram", "caption": "Figure 8-72 Source Port Ping State Diagram", "page": 446}], "subsections": [], "word_count": 44, "tags": ["source"]}
{"section_id": "8.3.3.6.1", "title": "PE_SRC_Ping State", "content": "On entry to the PE_SRC_Ping state (from the PE_SRC_Ready state) the Policy Engine Shall request the Protocol Layer to send a Ping Message. The Policy Engine Shall transition back to the previous state (PE_SRC_Ready) (see Figure 8-66) when:  The Ping Message has been successfully sent.", "page_start": 446, "page_end": 445, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the previous state (PE_SRC_Ready) (see Figure 8-66) when:", "caption": "The Policy Engine Shall transition back to the previous state (PE_SRC_Ready) (see Figure 8-66) when:", "page": 446}], "subsections": [], "word_count": 46, "tags": []}
{"section_id": "8.3.3.7", "title": "Source Alert State Diagrams", "content": "", "page_start": 446, "page_end": 445, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source"]}
{"section_id": "8.3.3.7.1", "title": "Source Port Source Alert State Diagram", "content": "Figure 8-73 shows the state diagram for an Alert Message sent by a Source Port. Figure 8-73 Source Port Source Alert State Diagram DPM indicates Source PE_SRC_Send_Source_Alert alert condition PE_SRC_Ready Actions on entry: Send Alert Message Alert Message sent Power = Explicit Contract PD = connected", "page_start": 446, "page_end": 445, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-73 shows the state diagram for an Alert Message sent by a Source Port.", "caption": "Figure 8-73 shows the state diagram for an Alert Message sent by a Source Port.", "page": 446}, {"figure_id": "Figure 8-73 Source Port Source Alert State Diagram", "caption": "Figure 8-73 Source Port Source Alert State Diagram", "page": 446}], "subsections": [], "word_count": 46, "tags": ["source"]}
{"section_id": "8.3.3.7.1.1", "title": "PE_SRC_Send_Source_Alert State", "content": "The PE_SRC_Send_Source_Alert state Shall be entered from the PE_SRC_Ready state when the Device Policy Manager indicates that there is a Source alert condition to be reported. On entry to the PE_SRC_Send_Source_Alert state the Policy Engine Shall request the Protocol Layer to send an Alert Message. The Policy Engine Shall transition back to PE_SRC_Ready (see Figure 8-66) when: Page 446 USB Power Delivery Specification Revision 3.0, Version 1.1  The Alert Message has been successfully sent.", "page_start": 446, "page_end": 446, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to PE_SRC_Ready (see Figure 8-66) when:", "caption": "The Policy Engine Shall transition back to PE_SRC_Ready (see Figure 8-66) when:", "page": 446}], "subsections": [], "word_count": 75, "tags": ["source"]}
{"section_id": "8.3.3.7.2", "title": "Sink Port Source Alert State Diagram", "content": "Figure 8-74 shows the state diagram for an Alert Message received by a Sink Port. Figure 8-74 Sink Port Source Alert State Diagram Source Alert Message PE_SNK_Source_Alert_Received received PE_SNK_Ready Actions on entry: Inform DPM of the detail of the alert DPM Informed Power = Explicit Contract PD = connected", "page_start": 447, "page_end": 446, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-74 shows the state diagram for an Alert Message received by a Sink Port.", "caption": "Figure 8-74 shows the state diagram for an Alert Message received by a Sink Port.", "page": 447}, {"figure_id": "Figure 8-74 Sink Port Source Alert State Diagram", "caption": "Figure 8-74 Sink Port Source Alert State Diagram", "page": 447}], "subsections": [], "word_count": 49, "tags": ["source", "sink"]}
{"section_id": "8.3.3.7.2.1", "title": "PE_SNK_Source_Alert_Received State", "content": "The PE_SNK_Source_Alert_Received state Shall be entered from the PE_SNK_Ready state when an Alert Message is received. On entry to the PE_SNK_Source_Alert_Received state the Policy Engine Shall inform the Device Policy Manager of the details of the Source alert. The Policy Engine Shall transition back to PE_SNK_Ready (see Figure 8-67) when:  The DPM has been informed.", "page_start": 447, "page_end": 446, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to PE_SNK_Ready (see Figure 8-67) when:", "caption": "The Policy Engine Shall transition back to PE_SNK_Ready (see Figure 8-67) when:", "page": 447}], "subsections": [], "word_count": 56, "tags": ["source"]}
{"section_id": "8.3.3.7.3", "title": "Sink Port Sink Alert State Diagram", "content": "Figure 8-75 shows the state diagram for an Alert Message sent by a Sink Port. Figure 8-75 Sink Port Sink Alert State Diagram DPM indicates Sink PE_SNK_Send_Sink_Alert alert condition PE_SNK_Ready Actions on entry: Send Alert Message Alert Message sent Power = Explicit Contract PD = connected", "page_start": 447, "page_end": 446, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-75 shows the state diagram for an Alert Message sent by a Sink Port.", "caption": "Figure 8-75 shows the state diagram for an Alert Message sent by a Sink Port.", "page": 447}, {"figure_id": "Figure 8-75 Sink Port Sink Alert State Diagram", "caption": "Figure 8-75 Sink Port Sink Alert State Diagram", "page": 447}], "subsections": [], "word_count": 46, "tags": ["sink"]}
{"section_id": "8.3.3.7.3.1", "title": "PE_SNK_Send_Sink_Alert State", "content": "The PE_SNK_Send_Sink_Alert state Shall be entered from the PE_SNK_Ready state when the Device Policy Manager indicates that there is a Source alert condition to be reported. On entry to the PE_SNK_Send_Sink_Alert state the Policy Engine Shall request the Protocol Layer to send an Alert Message. The Policy Engine Shall transition back to PE_SNK_Ready (see Figure 8-67) when:  The Alert Message has been successfully sent.", "page_start": 447, "page_end": 446, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to PE_SNK_Ready (see Figure 8-67) when:", "caption": "The Policy Engine Shall transition back to PE_SNK_Ready (see Figure 8-67) when:", "page": 447}], "subsections": [], "word_count": 65, "tags": ["sink"]}
{"section_id": "8.3.3.7.4", "title": "Source Port Sink Alert State Diagram", "content": "Figure 8-76 shows the state diagram for an Alert Message received by a Source Port. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 447 Figure 8-76 Source Port Sink Alert State Diagram Sink Alert Message PE_SRC_Sink_Alert_Received received PE_SRC_Ready Actions on entry: Inform DPM of the detail of the alert DPM Informed Power = Explicit Contract PD = connected", "page_start": 447, "page_end": 447, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-76 shows the state diagram for an Alert Message received by a Source Port.", "caption": "Figure 8-76 shows the state diagram for an Alert Message received by a Source Port.", "page": 447}, {"figure_id": "Figure 8-76 Source Port Sink Alert State Diagram", "caption": "Figure 8-76 Source Port Sink Alert State Diagram", "page": 448}], "subsections": [], "word_count": 59, "tags": ["source", "sink"]}
{"section_id": "8.3.3.7.4.1", "title": "PE_SRC_Sink_Alert_Received State", "content": "The PE_SRC_Sink_Alert_Received state Shall be entered from the PE_SRC_Ready state when an Alert Message is received. On entry to the PE_SRC_Sink_Alert_Received state the Policy Engine Shall inform the Device Policy Manager of the details of the Source alert. The Policy Engine Shall transition back to PE_SRC_Ready (see Figure 8-66) when:  The DPM has been informed.", "page_start": 448, "page_end": 447, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to PE_SRC_Ready (see Figure 8-66) when:", "caption": "The Policy Engine Shall transition back to PE_SRC_Ready (see Figure 8-66) when:", "page": 448}], "subsections": [], "word_count": 56, "tags": ["sink"]}
{"section_id": "8.3.3.8", "title": "Source Capabilities Extended State Diagrams", "content": "", "page_start": 448, "page_end": 447, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["source"]}
{"section_id": "8.3.3.8.1", "title": "Sink Port Get Source Capabilities Extended State Diagram", "content": "Figure 8-77 shows the state diagram for a Sink on receiving a request from the Device Policy Manager to get the Port Partner’s extended Source capabilities. See also Section 6.5.1. Figure 8-77 Sink Port Get Source Capabilities Extended State Diagram get extended source capabilities request PE_SNK_Get_Source_Cap_Ext from Device Policy Manager PE_SNK_Ready Actions on entry: Send Get_Source_Cap_Extended Message Initialize and run SenderResponseTimer Source_Capabilities_Extended Message received | Actions on exit: SenderResponseTimer Pass source extended capabilities/ Timeout outcome to Device Policy Manager Power = Explicit Contract PD = Connected", "page_start": 448, "page_end": 447, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-77 shows the state diagram for a Sink on receiving a request from the Device Policy Manager to get the Port", "caption": "Figure 8-77 shows the state diagram for a Sink on receiving a request from the Device Policy Manager to get the Port", "page": 448}, {"figure_id": "Figure 8-77 Sink Port Get Source Capabilities Extended State Diagram", "caption": "Figure 8-77 Sink Port Get Source Capabilities Extended State Diagram", "page": 448}], "subsections": [], "word_count": 86, "tags": ["source", "sink"]}
{"section_id": "8.3.3.8.1.1", "title": "PE_SNK_Get_Source_Cap_Ext State", "content": "The Policy Engine Shall transition to the PE_SNK_Get_Source_Cap_Ext state, from the PE_SNK_Ready state, due to a request to get the remote extended source capabilities from the Device Policy Manager. On entry to the PE_SNK_Get_Source_Cap_Ext state the Policy Engine Shall send a Get_Source_Cap_Extended Message and initialize and run the SenderResponseTimer. On exit from the PE_SNK_Get_Source_Cap_Ext state the Policy Engine Shall inform the Device Policy Manager of the outcome (capabilities or response timeout). The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:  A Source_Capabilities_Extended Message is received  Or SenderResponseTimer times out.", "page_start": 448, "page_end": 447, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "caption": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "page": 448}], "subsections": [], "word_count": 96, "tags": ["source"]}
{"section_id": "8.3.3.8.2", "title": "Source Give Source Capabilities Extended State Diagram", "content": "Figure 8-78 shows the state diagram for a Source on receiving a Get_Source_Cap_Extended Message. See also Section 6.5.1. Page 448 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-78 Source Give Source Capabilities Extended State Diagram Get_Source_Cap_Extended message PE_SRC_Ready received PE_SRC_Give_Source_Cap_Ext Actions on entry: Get present extended source capabilities from Device Source_Capabilities_Extended Policy Manager Message sent Send Source_Capabilities_Extended message (based on Device Policy Manager response) Power = Explicit Contract PD = Connected", "page_start": 448, "page_end": 448, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-78 shows the state diagram for a Source on receiving a Get_Source_Cap_Extended Message. See also Section", "caption": "Figure 8-78 shows the state diagram for a Source on receiving a Get_Source_Cap_Extended Message. See also Section", "page": 448}, {"figure_id": "Figure 8-78 Source Give Source Capabilities Extended State Diagram", "caption": "Figure 8-78 Source Give Source Capabilities Extended State Diagram", "page": 449}], "subsections": [], "word_count": 73, "tags": ["source"]}
{"section_id": "8.3.3.8.2.1", "title": "PE_SRC_Give_Source_Cap_Ext State", "content": "The Policy Engine Shall transition to the PE_SRC_Give_Source_Cap_Ext state, from the PE_SRC_Ready state, when a Get_Source_Cap_Extended Message is received. On entry to the PE_SRC_Give_Source_Cap_Ext state the Policy Engine Shall request the present extended Source capabilities from the Device Policy Manager and then send a Source_Capabilities_Extended Message based on these capabilities. The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:  The Source_Capabilities_Extended Message has been successfully sent.", "page_start": 449, "page_end": 448, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "caption": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "page": 449}], "subsections": [], "word_count": 72, "tags": ["source"]}
{"section_id": "8.3.3.9", "title": "Status State Diagrams", "content": "", "page_start": 449, "page_end": 448, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.3.9.1", "title": "Sink Port Get Source Status State Diagram", "content": "Figure 8-79 shows the state diagram for a Sink on receiving a request from the Device Policy Manager to get the Port Partner’s Source status. See also Section 6.5.2. Figure 8-79 Sink Port Get Source Status State Diagram get source status request from Device Policy Manager PE_SNK_Get_Source_Status PE_SNK_Ready Actions on entry: Send Get_Status Message Initialize and run SenderResponseTimer Status Message received | Actions on exit: SenderResponseTimer Pass Source status/outcome to Device Timeout Policy Manager Power = Explicit Contract PD = Connected", "page_start": 449, "page_end": 448, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-79 shows the state diagram for a Sink on receiving a request from the Device Policy Manager to get the Port", "caption": "Figure 8-79 shows the state diagram for a Sink on receiving a request from the Device Policy Manager to get the Port", "page": 449}, {"figure_id": "Figure 8-79 Sink Port Get Source Status State Diagram", "caption": "Figure 8-79 Sink Port Get Source Status State Diagram", "page": 449}], "subsections": [], "word_count": 81, "tags": ["source", "sink"]}
{"section_id": "8.3.3.9.1.1", "title": "PE_SNK_Get_Source_Status State", "content": "The Policy Engine Shall transition to the PE_SNK_Get_Source_Status state, from the PE_SNK_Ready state, due to a request to get the remote source status from the Device Policy Manager. On entry to the PE_SNK_Get_Source_Status state the Policy Engine Shall send a Get_Status Message and initialize and run the SenderResponseTimer. On exit from the PE_SNK_Get_Source_Status state the Policy Engine Shall inform the Device Policy Manager of the outcome (status or response timeout). The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:  A Status Message is received  Or SenderResponseTimer times out.", "page_start": 449, "page_end": 448, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "caption": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "page": 449}], "subsections": [], "word_count": 95, "tags": ["source"]}
{"section_id": "8.3.3.9.2", "title": "Source Give Source Status State Diagram", "content": "Figure 8-80 shows the state diagram for a Source on receiving a Get_Status Message. See also Section 6.5.1. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 449 Figure 8-80 Source Give Source Status State Diagram Get_Status message PE_SRC_Ready received PE_SRC_Give_Source_Status Actions on entry: Get present Source status from Device Policy Manager Status Send Status message (based on Device Policy Manager Message sent response) Power = Explicit Contract PD = Connected", "page_start": 449, "page_end": 449, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-80 shows the state diagram for a Source on receiving a Get_Status Message. See also Section 6.5.1.", "caption": "Figure 8-80 shows the state diagram for a Source on receiving a Get_Status Message. See also Section 6.5.1.", "page": 449}, {"figure_id": "Figure 8-80 Source Give Source Status State Diagram", "caption": "Figure 8-80 Source Give Source Status State Diagram", "page": 450}], "subsections": [], "word_count": 71, "tags": ["source"]}
{"section_id": "8.3.3.9.2.1", "title": "PE_SRC_Give_Source_Status State", "content": "The Policy Engine Shall transition to the PE_SRC_Give_Source_Status state, from the PE_SRC_Ready state, when a Get_Status Message is received. On entry to the PE_SRC_Give_Source_Status state the Policy Engine Shall request the present Source status from the Device Policy Manager and then send a Status Message based on these capabilities. The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:  The Status Message has been successfully sent.", "page_start": 450, "page_end": 449, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "caption": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "page": 450}], "subsections": [], "word_count": 71, "tags": ["source"]}
{"section_id": "8.3.3.9.3", "title": "Source Port Get Sink Status State Diagram", "content": "Figure 8-81 shows the state diagram for a Source on receiving a request from the Device Policy Manager to get the Port Partner’s Sink status. See also Section 6.5.2. Figure 8-81 Source Port Get Sink Status State Diagram get sink status request from Device Policy Manager PE_SRC_Get_Sink_Status PE_SRC_Ready Actions on entry: Send Get_Status Message Initialize and run SenderResponseTimer Status Message received | Actions on exit: SenderResponseTimer Pass Sink status/outcome to Device Timeout Policy Manager Power = Explicit Contract PD = Connected", "page_start": 450, "page_end": 449, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-81 shows the state diagram for a Source on receiving a request from the Device Policy Manager to get the", "caption": "Figure 8-81 shows the state diagram for a Source on receiving a request from the Device Policy Manager to get the", "page": 450}, {"figure_id": "Figure 8-81 Source Port Get Sink Status State Diagram", "caption": "Figure 8-81 Source Port Get Sink Status State Diagram", "page": 450}], "subsections": [], "word_count": 81, "tags": ["source", "sink"]}
{"section_id": "8.3.3.9.3.1", "title": "PE_SRC_Get_Sink_Status State", "content": "The Policy Engine Shall transition to the PE_SRC_Get_Sink_Status state, from the PE_SRC_Ready state, due to a request to get the remote source status from the Device Policy Manager. On entry to the PE_SRC_Get_Sink_Status state the Policy Engine Shall send a Status Message and initialize and run the SenderResponseTimer. On exit from the PE_SRC_Get_Sink_Status state the Policy Engine Shall inform the Device Policy Manager of the outcome (status or response timeout). The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:  A Status Message is received  Or SenderResponseTimer times out.", "page_start": 450, "page_end": 449, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "caption": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "page": 450}], "subsections": [], "word_count": 95, "tags": ["sink"]}
{"section_id": "8.3.3.9.4", "title": "Sink Give Sink Status State Diagram", "content": "Figure 8-82 shows the state diagram for a Source on receiving a Get_Status Message. See also Section 6.5.1. Page 450 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-82 Sink Give Sink Status State Diagram Get_Status message PE_SNK_Ready received PE_SNK_Give_Sink_Status Actions on entry: Get present Sink status from Device Policy Manager Status Send Status message (based on Device Policy Manager Message sent response) Power = Explicit Contract PD = Connected", "page_start": 450, "page_end": 450, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-82 shows the state diagram for a Source on receiving a Get_Status Message. See also Section 6.5.1.", "caption": "Figure 8-82 shows the state diagram for a Source on receiving a Get_Status Message. See also Section 6.5.1.", "page": 450}, {"figure_id": "Figure 8-82 Sink Give Sink Status State Diagram", "caption": "Figure 8-82 Sink Give Sink Status State Diagram", "page": 451}], "subsections": [], "word_count": 71, "tags": ["sink"]}
{"section_id": "8.3.3.9.4.1", "title": "PE_SNK_Give_Sink_Status State", "content": "The Policy Engine Shall transition to the PE_SNK_Give_Sink_Status state, from the PE_SNK_Ready state, when a Get_Status Message is received. On entry to the PE_SNK_Give_Sink_Status state the Policy Engine Shall request the present extended Source capabilities from the Device Policy Manager and then send a Status Message based on these capabilities. The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:  The Status Message has been successfully sent.", "page_start": 451, "page_end": 450, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "caption": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "page": 451}], "subsections": [], "word_count": 72, "tags": ["sink"]}
{"section_id": "8.3.3.9.5", "title": "Sink Port Get Source PPS Status State Diagram", "content": "Figure 8-83 shows the state diagram for a Sink on receiving a request from the Device Policy Manager to get the Port Partner’s Source status when operating as a PPS. See also Section 6.5.10. Figure 8-83 Sink Port Get Source PPS Status State Diagram get PPS status request from Device Policy Manager PE_SNK_Get_PPS_Status PE_SNK_Ready Actions on entry: Send Get_PPS_Status Message Initialize and run SenderResponseTimer PPS_Status Message received | Actions on exit: SenderResponseTimer Pass Source status/outcome to Device Timeout Policy Manager Power = Explicit Contract PD = Connected", "page_start": 451, "page_end": 450, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-83 shows the state diagram for a Sink on receiving a request from the Device Policy Manager to get the Port", "caption": "Figure 8-83 shows the state diagram for a Sink on receiving a request from the Device Policy Manager to get the Port", "page": 451}, {"figure_id": "Figure 8-83 Sink Port Get Source PPS Status State Diagram", "caption": "Figure 8-83 Sink Port Get Source PPS Status State Diagram", "page": 451}], "subsections": [], "word_count": 87, "tags": ["source", "sink"]}
{"section_id": "8.3.3.9.5.1", "title": "PE_SNK_Get_PPS_Status State", "content": "The Policy Engine Shall transition to the PE_SNK_Get_PPS_Status state, from the PE_SNK_Ready state, due to a request to get the remote source PPS status from the Device Policy Manager. On entry to the PE_SNK_Get_PPS_Status state the Policy Engine Shall send a Get_PPS_Status Message and initialize and run the SenderResponseTimer. On exit from the PE_SNK_Get_PPS_Status state the Policy Engine Shall inform the Device Policy Manager of the outcome (status or response timeout). The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:  A PPS_Status Message is received  Or SenderResponseTimer times out.", "page_start": 451, "page_end": 450, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "caption": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "page": 451}], "subsections": [], "word_count": 96, "tags": []}
{"section_id": "8.3.3.9.6", "title": "Source Give Source PPS Status State Diagram", "content": "Figure 8-84 shows the state diagram for a Source on receiving a Get_PPS_Status Message. See also Section 6.5.1. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 451 Figure 8-84 Source Give Source PPS Status State Diagram Get_PPS_Status message PE_SRC_Ready received PE_SRC_Give_PPS_Status Actions on entry: Get present Source PPS status from Device Policy PPS_Status Manager Message sent Send PPS_Status message (based on Device Policy Manager response) Power = Explicit Contract PD = Connected", "page_start": 451, "page_end": 451, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-84 shows the state diagram for a Source on receiving a Get_PPS_Status Message. See also Section 6.5.1.", "caption": "Figure 8-84 shows the state diagram for a Source on receiving a Get_PPS_Status Message. See also Section 6.5.1.", "page": 451}, {"figure_id": "Figure 8-84 Source Give Source PPS Status State Diagram", "caption": "Figure 8-84 Source Give Source PPS Status State Diagram", "page": 452}], "subsections": [], "word_count": 73, "tags": ["source"]}
{"section_id": "8.3.3.9.6.1", "title": "PE_SRC_Give_PPS_Status State", "content": "The Policy Engine Shall transition to the PE_SRC_Give_PPS_Status state, from the PE_SRC_Ready state, when a Get_PPS_Status Message is received. On entry to the PE_SRC_Give_PPS_Status state the Policy Engine Shall request the present Source PPS status from the Device Policy Manager and then send a PPS_Status Message based on these capabilities. The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:  The PPS_Status Message has been successfully sent.", "page_start": 452, "page_end": 451, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "caption": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "page": 452}], "subsections": [], "word_count": 72, "tags": []}
{"section_id": "8.3.3.10", "title": "Battery Capabilities State Diagrams", "content": "", "page_start": 452, "page_end": 451, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.3.10.1", "title": "Get Battery Capabilities State Diagram", "content": "Figure 8-85 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get the Port Partner’s Battery capabilities for a specified Battery. See also Section 6.5.5. Figure 8-85 Get Battery Capabilities State Diagram get Battery capabilities request PE_Get_Battery_Cap from Device Policy Manager PE_SRC_Ready or Actions on entry: PE_SNK_Ready Send Get_Battery_Cap Message Initialize and run SenderResponseTimer Battery_Capabilities Message received | Actions on exit: SenderResponseTimer Pass Battery capabilities/outcome to Timeout Device Policy Manager Power = Explicit Contract PD = Connected", "page_start": 452, "page_end": 451, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-85 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get", "caption": "Figure 8-85 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get", "page": 452}, {"figure_id": "Figure 8-85 Get Battery Capabilities State Diagram", "caption": "Figure 8-85 Get Battery Capabilities State Diagram", "page": 452}], "subsections": [], "word_count": 87, "tags": []}
{"section_id": "8.3.3.10.1.1", "title": "PE_Get_Battery_Cap State", "content": "The Policy Engine Shall transition to the PE_Get_Battery_Cap state, from either the PE_SRC_Ready or PE_SNK_Ready state, due to a request to get the remote Battery capabilities, for a specified Battery, from the Device Policy Manager. On entry to the PE_Get_Battery_Cap state the Policy Engine Shall send a Get_Battery_Cap Message and initialize and run the SenderResponseTimer. On exit from the PE_Get_Battery_Cap state the Policy Engine Shall inform the Device Policy Manager of the outcome (capabilities or response timeout). The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state as appropriate (see Figure 8-66 and Figure 8-67) when:  A Battery_Capabilities Message is received  Or SenderResponseTimer times out.", "page_start": 452, "page_end": 451, "content_type": "text", "tables": [], "figures": [{"figure_id": "8-66 and Figure 8-67) when:", "caption": "8-66 and Figure 8-67) when:", "page": 452}], "subsections": [], "word_count": 110, "tags": []}
{"section_id": "8.3.3.10.2", "title": "Give Battery Capabilities State Diagram", "content": "Figure 8-86 shows the state diagram for a Source or Sink on receiving a Get_Battery_Cap Message. See also Section 6.5.5. Page 452 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-86 Give Battery Capabilities State Diagram Get_Battery_Cap Message PE_SRC_Ready or received PE_Give_Battery_Cap PE_SNK_Ready Actions on entry: Get present Battery capabilities from Device Policy Battery_Capabilities Manager Message sent Send Battery_Capabilities Message (based on Device Policy Manager response) Power = Explicit Contract PD = Connected", "page_start": 452, "page_end": 452, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-86 shows the state diagram for a Source or Sink on receiving a Get_Battery_Cap Message. See also Section", "caption": "Figure 8-86 shows the state diagram for a Source or Sink on receiving a Get_Battery_Cap Message. See also Section", "page": 452}, {"figure_id": "Figure 8-86 Give Battery Capabilities State Diagram", "caption": "Figure 8-86 Give Battery Capabilities State Diagram", "page": 453}], "subsections": [], "word_count": 74, "tags": []}
{"section_id": "8.3.3.10.2.1", "title": "PE_Give_Battery_Cap State", "content": "The Policy Engine Shall transition to the PE_Give_Battery_Cap state, from either the PE_SRC_Ready or PE_SNK_Ready state, when a Get_Battery_Cap Message is received. On entry to the PE_Give_Battery_Cap state the Policy Engine Shall request the present Battery capabilities, for the requested Battery, from the Device Policy Manager and then send a Source_Capabilities_Extended Message based on these capabilities. The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state as appropriate (see Figure 8-66 and Figure 8-67) when:  The Battery_Capabilities Message has been successfully sent.", "page_start": 453, "page_end": 452, "content_type": "text", "tables": [], "figures": [{"figure_id": "8-66 and Figure 8-67) when:", "caption": "8-66 and Figure 8-67) when:", "page": 453}], "subsections": [], "word_count": 86, "tags": []}
{"section_id": "8.3.3.11", "title": "Battery Status State Diagrams", "content": "", "page_start": 453, "page_end": 452, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.3.11.1", "title": "Get Battery Status State Diagram", "content": "Figure 8-87 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get the Port Partner’s Battery status for a specified Battery. See also Section 6.5.4. Figure 8-87 Get Battery Status State Diagram get Battery status request PE_Get_Battery_Status from Device Policy Manager PE_SRC_Ready or Actions on entry: PE_SNK_Ready Send Get_Battery_Status Message Initialize and run SenderResponseTimer Battery_Status Message received | Actions on exit: SenderResponseTimer Pass Battery status/outcome to Device Timeout Policy Manager Power = Explicit Contract PD = Connected", "page_start": 453, "page_end": 452, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-87 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get", "caption": "Figure 8-87 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get", "page": 453}, {"figure_id": "Figure 8-87 Get Battery Status State Diagram", "caption": "Figure 8-87 Get Battery Status State Diagram", "page": 453}], "subsections": [], "word_count": 87, "tags": []}
{"section_id": "8.3.3.11.1.1", "title": "PE_Get_Battery_Status State", "content": "The Policy Engine Shall transition to the PE_Get_Battery_Status state, from either the PE_SRC_Ready or PE_SNK_Ready state, due to a request to get the remote Battery status, for a specified Battery, from the Device Policy Manager. On entry to the PE_Get_Battery_Status state the Policy Engine Shall send a Get_Battery_Status Message and initialize and run the SenderResponseTimer. On exit from the PE_Get_Battery_Status state the Policy Engine Shall inform the Device Policy Manager of the outcome (status or response timeout). The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state as appropriate (see Figure 8-66 and Figure 8-67) when:  A Battery_Status Message is received  Or SenderResponseTimer times out. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 453", "page_start": 453, "page_end": 453, "content_type": "text", "tables": [], "figures": [{"figure_id": "8-66 and Figure 8-67) when:", "caption": "8-66 and Figure 8-67) when:", "page": 453}], "subsections": [], "word_count": 120, "tags": []}
{"section_id": "8.3.3.11.2", "title": "Give Battery Status State Diagram", "content": "Figure 8-88 shows the state diagram for a Source or Sink on receiving a Get_Battery_Status Message. See also Section 6.5.4. Figure 8-88 Give Battery Status State Diagram Get_Battery_Status Message PE_SRC_Ready or received PE_Give_Battery_Status PE_SNK_Ready Actions on entry: Get present Battery status from Device Policy Manager Battery_Status Send Battery_Status Message (based on Device Policy Message sent Manager response) Power = Explicit Contract PD = Connected", "page_start": 454, "page_end": 453, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-88 shows the state diagram for a Source or Sink on receiving a Get_Battery_Status Message. See also Section", "caption": "Figure 8-88 shows the state diagram for a Source or Sink on receiving a Get_Battery_Status Message. See also Section", "page": 454}, {"figure_id": "Figure 8-88 Give Battery Status State Diagram", "caption": "Figure 8-88 Give Battery Status State Diagram", "page": 454}], "subsections": [], "word_count": 64, "tags": []}
{"section_id": "8.3.3.11.2.1", "title": "PE_Give_Battery_Status State", "content": "The Policy Engine Shall transition to the PE_Give_Battery_Status state, from either the PE_SRC_Ready or PE_SNK_Ready state, when a Get_Battery_Status Message is received. On entry to the PE_Give_Battery_Status state the Policy Engine Shall request the present Battery status, for the requested Battery, from the Device Policy Manager and then send a Battery_Status Message based on this status. The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state as appropriate (see Figure 8-66 and Figure 8-67) when:  The Battery_Status Message has been successfully sent.", "page_start": 454, "page_end": 453, "content_type": "text", "tables": [], "figures": [{"figure_id": "8-66 and Figure 8-67) when:", "caption": "8-66 and Figure 8-67) when:", "page": 454}], "subsections": [], "word_count": 86, "tags": []}
{"section_id": "8.3.3.12", "title": "Manufacturer Information State Diagrams", "content": "", "page_start": 454, "page_end": 453, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.3.12.1", "title": "Get Manufacturer Information State Diagram", "content": "Figure 8-89 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get the Port Partner’s Manufacturer Information. See also Section 6.5.6. Figure 8-89 Get Manufacturer Information State Diagram get manufacturer information request PE_Get_Manfacturer_Info from Device Policy Manager PE_SRC_Ready or Actions on entry: PE_SNK_Ready Send Get_Manfacturer_Info Message Initialize and run SenderResponseTimer Manufacturer_Info Message received | Actions on exit: SenderResponseTimer Pass Manufacturer Information/ Timeout outcome to Device Policy Manager Power = Explicit Contract PD = Connected", "page_start": 454, "page_end": 453, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-89 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get", "caption": "Figure 8-89 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get", "page": 454}, {"figure_id": "Figure 8-89 Get Manufacturer Information State Diagram", "caption": "Figure 8-89 Get Manufacturer Information State Diagram", "page": 454}], "subsections": [], "word_count": 84, "tags": []}
{"section_id": "8.3.3.12.1.1", "title": "PE_Get_Manufacturer_Info State", "content": "The Policy Engine Shall transition to the PE_Get_Manufacturer_Info state, from either the PE_SRC_Ready or PE_SNK_Ready state, due to a request to get the remote Manufacturer Information from the Device Policy Manager. On entry to the PE_Get_Manufacturer_Info state the Policy Engine Shall send a Get_Manufacturer_Info Message and initialize and run the SenderResponseTimer. On exit from the PE_Get_Manufacturer_Info state the Policy Engine Shall inform the Device Policy Manager of the outcome (status or response timeout). The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state as appropriate (see Figure 8-66 and Figure 8-67) when: Page 454 USB Power Delivery Specification Revision 3.0, Version 1.1  A Manufacturer_Info Message is received  Or SenderResponseTimer times out.", "page_start": 454, "page_end": 454, "content_type": "text", "tables": [], "figures": [{"figure_id": "8-66 and Figure 8-67) when:", "caption": "8-66 and Figure 8-67) when:", "page": 454}], "subsections": [], "word_count": 116, "tags": []}
{"section_id": "8.3.3.12.2", "title": "Give Manufacturer Information State Diagram", "content": "Figure 8-90 shows the state diagram for a Source, Sink or Cable Plug on receiving a Get_Manufacturer_Info Message. See also Section 6.5.6. Figure 8-90 Give Manufacturer Information State Diagram Get_Manufacturer_Info Message PE_SRC_Ready, received PE_Give_Manufacturer_Info PE_SNK_Ready or Actions on entry: PE_CBL_Ready Get present Manufacturer Information from Device Policy Manufacturer_Info Manager Message sent Send Manufacturer_Info Message (based on Device Policy Manager response) Power = Explicit Contract PD = Connected", "page_start": 455, "page_end": 454, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-90 shows the state diagram for a Source, Sink or Cable Plug on receiving a Get_Manufacturer_Info Message.", "caption": "Figure 8-90 shows the state diagram for a Source, Sink or Cable Plug on receiving a Get_Manufacturer_Info Message.", "page": 455}, {"figure_id": "Figure 8-90 Give Manufacturer Information State Diagram", "caption": "Figure 8-90 Give Manufacturer Information State Diagram", "page": 455}], "subsections": [], "word_count": 67, "tags": []}
{"section_id": "8.3.3.12.2.1", "title": "PE_Give_Manufacturer_Info State", "content": "The Policy Engine Shall transition to the PE_Give_Manufacturer_Info state, from either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state, when a Get_Manufacturer_Info Message is received. On entry to the PE_Give_Manufacturer_Info state the Policy Engine Shall request the manufacturer information from the Device Policy Manager and then send a Manufacturer_Info Message based on this status. The Policy Engine Shall transition back to either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state as appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:  The Manufacturer_Info Message has been successfully sent.", "page_start": 455, "page_end": 454, "content_type": "text", "tables": [], "figures": [{"figure_id": "appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:", "caption": "appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:", "page": 455}], "subsections": [], "word_count": 84, "tags": []}
{"section_id": "8.3.3.13", "title": "Country Codes and Information State Diagrams", "content": "", "page_start": 455, "page_end": 454, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.3.13.1", "title": "Get Country Codes State Diagram", "content": "Figure 8-91 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get the Port Partner’s Manufacturer Information. See also Section 6.5.11. Figure 8-91 Get Country Codes State Diagram get country codes request from Device Policy Manager PE_Get_Country_Codes PE_SRC_Ready or Actions on entry: PE_SNK_Ready Send Get_Country_Codes Message Initialize and run SenderResponseTimer Country_Codes Message received | Actions on exit: SenderResponseTimer Pass Country Codes/outcome to Device Timeout Policy Manager Power = Explicit Contract PD = Connected", "page_start": 455, "page_end": 454, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-91 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get", "caption": "Figure 8-91 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get", "page": 455}, {"figure_id": "Figure 8-91 Get Country Codes State Diagram", "caption": "Figure 8-91 Get Country Codes State Diagram", "page": 455}], "subsections": [], "word_count": 83, "tags": []}
{"section_id": "8.3.3.13.1.1", "title": "PE_Get_Country_Codes State", "content": "The Policy Engine Shall transition to the PE_Get_Country_Codes state, from either the PE_SRC_Ready or PE_SNK_Ready state, due to a request to get the remote Manufacturer Information from the Device Policy Manager. On entry to the PE_Get_Country_Codes state the Policy Engine Shall send a Get_Country_Codes Message and initialize and run the SenderResponseTimer. On exit from the PE_Get_Country_Codes state the Policy Engine Shall inform the Device Policy Manager of the outcome (status or response timeout). USB Power Delivery Specification Revision 3.0, Version 1.1 Page 455 The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state as appropriate (see Figure 8-66 and Figure 8-67) when:  A Country_Codes Message is received  Or SenderResponseTimer times out.", "page_start": 455, "page_end": 455, "content_type": "text", "tables": [], "figures": [{"figure_id": "8-66 and Figure 8-67) when:", "caption": "8-66 and Figure 8-67) when:", "page": 456}], "subsections": [], "word_count": 116, "tags": []}
{"section_id": "8.3.3.13.2", "title": "Give Country Codes State Diagram", "content": "Figure 8-92 shows the state diagram for a Source, Sink or Cable Plug on receiving a Get_Country_Codes Message. See also Section 6.5.11. Figure 8-92 Give Country Codes State Diagram Get_Country_Codes Message PE_SRC_Ready, received PE_Give_Country_Codes PE_SNK_Ready or Actions on entry: PE_CBL_Ready Get present Country Codes from Device Policy Manager Country_Codes Send Country_Codes Message (based on Device Policy Message sent Manager response) Power = Explicit Contract PD = Connected", "page_start": 456, "page_end": 455, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-92 shows the state diagram for a Source, Sink or Cable Plug on receiving a Get_Country_Codes Message. See", "caption": "Figure 8-92 shows the state diagram for a Source, Sink or Cable Plug on receiving a Get_Country_Codes Message. See", "page": 456}, {"figure_id": "Figure 8-92 Give Country Codes State Diagram", "caption": "Figure 8-92 Give Country Codes State Diagram", "page": 456}], "subsections": [], "word_count": 67, "tags": []}
{"section_id": "8.3.3.13.2.1", "title": "PE_Give_Country_Codes State", "content": "The Policy Engine Shall transition to the PE_Give_Country_Codes state, from either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state, when a Get_Country_Codes Message is received. On entry to the PE_Give_Country_Codes state the Policy Engine Shall request the country codes from the Device Policy Manager and then send a Country_Codes Message containing these codes. The Policy Engine Shall transition back to either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state as appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:  The Country_Codes Message has been successfully sent.", "page_start": 456, "page_end": 455, "content_type": "text", "tables": [], "figures": [{"figure_id": "appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:", "caption": "appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:", "page": 456}], "subsections": [], "word_count": 83, "tags": []}
{"section_id": "8.3.3.13.3", "title": "Get Country Information State Diagram", "content": "Figure 8-93 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get the Port Partner’s Country Information. See also Section 6.5.12. Figure 8-93 Get Country Information State Diagram get country information request PE_Get_Country_Info from Device Policy Manager PE_SRC_Ready or Actions on entry: PE_SNK_Ready Send Get_Country_Info Message Initialize and run SenderResponseTimer Country_Info Message received | Actions on exit: SenderResponseTimer Pass Country Information/outcome to Timeout Device Policy Manager Power = Explicit Contract PD = Connected", "page_start": 456, "page_end": 455, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-93 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get", "caption": "Figure 8-93 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to get", "page": 456}, {"figure_id": "Figure 8-93 Get Country Information State Diagram", "caption": "Figure 8-93 Get Country Information State Diagram", "page": 456}], "subsections": [], "word_count": 83, "tags": []}
{"section_id": "8.3.3.13.3.1", "title": "PE_Get_Country_Info State", "content": "The Policy Engine Shall transition to the PE_Get_Country_Info state, from either the PE_SRC_Ready or PE_SNK_Ready state, due to a request to get the remote Manufacturer Information from the Device Policy Manager. On entry to the PE_Get_Country_Info state the Policy Engine Shall send a Get_Manufacturer_Info Message and initialize and run the SenderResponseTimer. On exit from the PE_Get_Country_Info state the Policy Engine Shall inform the Device Policy Manager of the outcome (country information or response timeout). Page 456 USB Power Delivery Specification Revision 3.0, Version 1.1 The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state as appropriate (see Figure 8-66 and Figure 8-67) when:  A Country_Info Message is received  Or SenderResponseTimer times out.", "page_start": 456, "page_end": 456, "content_type": "text", "tables": [], "figures": [{"figure_id": "8-66 and Figure 8-67) when:", "caption": "8-66 and Figure 8-67) when:", "page": 457}], "subsections": [], "word_count": 117, "tags": []}
{"section_id": "8.3.3.13.4", "title": "Give Country Information State Diagram", "content": "Figure 8-90 shows the state diagram for a Source, Sink or Cable Plug on receiving a Get_Country_Info Message. See also Section 6.5.12. Figure 8-94 Give Country Information State Diagram Get_Country_Info Message PE_SRC_Ready, received PE_Give_Country_Info PE_SNK_Ready or Actions on entry: PE_CBL_Ready Get present Country Information from Device Policy Country_Info Manager Message sent Send Country_Info Message (based on Device Policy Manager response) Power = Explicit Contract PD = Connected", "page_start": 457, "page_end": 456, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-90 shows the state diagram for a Source, Sink or Cable Plug on receiving a Get_Country_Info Message. See", "caption": "Figure 8-90 shows the state diagram for a Source, Sink or Cable Plug on receiving a Get_Country_Info Message. See", "page": 457}, {"figure_id": "Figure 8-94 Give Country Information State Diagram", "caption": "Figure 8-94 Give Country Information State Diagram", "page": 457}], "subsections": [], "word_count": 67, "tags": []}
{"section_id": "8.3.3.13.4.1", "title": "PE_Give_Country_Info State", "content": "The Policy Engine Shall transition to the PE_Give_Country_Info state, from either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state, when a Get_Country_Info Message is received. On entry to the PE_Give_Country_Info state the Policy Engine Shall request the country information from the Device Policy Manager and then send a Country_Info Message containing this country information. The Policy Engine Shall transition back to either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state as appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:  The Country_Info Message has been successfully sent.", "page_start": 457, "page_end": 456, "content_type": "text", "tables": [], "figures": [{"figure_id": "appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:", "caption": "appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:", "page": 457}], "subsections": [], "word_count": 84, "tags": []}
{"section_id": "8.3.3.14", "title": "Security State Diagrams", "content": "", "page_start": 457, "page_end": 456, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.3.14.1", "title": "Send Security Request State Diagram", "content": "Figure 8-95 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to send a security request. See also Section 6.5.8. Figure 8-95 Send security request State Diagram Send security request from Device Policy Manager PE_Send_Security_Request PE_SRC_Ready or PE_SNK_Ready Actions on entry: Security_Request Send Security_Request Message Message sent Power = Explicit Contract PD = Connected", "page_start": 457, "page_end": 456, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-95 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to", "caption": "Figure 8-95 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to", "page": 457}, {"figure_id": "Figure 8-95 Send security request State Diagram", "caption": "Figure 8-95 Send security request State Diagram", "page": 457}], "subsections": [], "word_count": 63, "tags": []}
{"section_id": "8.3.3.14.1.1", "title": "PE_Send_Security_Request State", "content": "The Policy Engine Shall transition to the PE_Send_Security_Request state, from either the PE_SRC_Ready or PE_SNK_Ready state, due to a request to send a security request from the Device Policy Manager. On entry to the PE_Send_Security_Request state the Policy Engine Shall send a Security_Request Message. The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state as appropriate (see Figure 8-66 and Figure 8-67) when: USB Power Delivery Specification Revision 3.0, Version 1.1 Page 457  The Security_Request Message has been sent.", "page_start": 457, "page_end": 457, "content_type": "text", "tables": [], "figures": [{"figure_id": "8-66 and Figure 8-67) when:", "caption": "8-66 and Figure 8-67) when:", "page": 457}], "subsections": [], "word_count": 83, "tags": []}
{"section_id": "8.3.3.14.2", "title": "Send Security Response State Diagram", "content": "Figure 8-96 shows the state diagram for a Source, Sink or Cable Plug on receiving a Security_Request Message. See also Section 6.5.8. Figure 8-96 Send security response State Diagram Security_Request Message PE_SRC_Ready, received PE_Send_Security_Response PE_SNK_Ready or Actions on entry: PE_CBL_Ready Get present Security response from Device Policy Security_Response Manager Message sent Send Security_Response Message (based on Device Policy Manager response) Power = Explicit Contract PD = Connected", "page_start": 458, "page_end": 457, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-96 shows the state diagram for a Source, Sink or Cable Plug on receiving a Security_Request Message. See", "caption": "Figure 8-96 shows the state diagram for a Source, Sink or Cable Plug on receiving a Security_Request Message. See", "page": 458}, {"figure_id": "Figure 8-96 Send security response State Diagram", "caption": "Figure 8-96 Send security response State Diagram", "page": 458}], "subsections": [], "word_count": 67, "tags": []}
{"section_id": "8.3.3.14.2.1", "title": "PE_Send_Security_Response State", "content": "The Policy Engine Shall transition to the PE_Send_Security_Response state, from either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state, when a Security_Request Message is received. On entry to the PE_Send_Security_Response state the Policy Engine Shall request the appropriate response from the Device Policy Manager and then send a Security_Response Message based on this status. The Policy Engine Shall transition back to either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state as appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:  The Security_Response Message has been successfully sent.", "page_start": 458, "page_end": 457, "content_type": "text", "tables": [], "figures": [{"figure_id": "appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:", "caption": "appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:", "page": 458}], "subsections": [], "word_count": 84, "tags": []}
{"section_id": "8.3.3.14.3", "title": "Security Response Received State Diagram", "content": "Figure 8-97 shows the state diagram for a Source or Sink on receiving a Security_Response Message. See also Section 6.5.8. Figure 8-97 Security response received State Diagram Security_Response Message PE_SRC_Ready or received PE_Security_Response_Received PE_SNK_Ready Actions on entry: Inform Device Policy Manager of the security response details. DPM informed Power = Explicit Contract PD = Connected", "page_start": 458, "page_end": 457, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-97 shows the state diagram for a Source or Sink on receiving a Security_Response Message. See also Section", "caption": "Figure 8-97 shows the state diagram for a Source or Sink on receiving a Security_Response Message. See also Section", "page": 458}, {"figure_id": "Figure 8-97 Security response received State Diagram", "caption": "Figure 8-97 Security response received State Diagram", "page": 458}], "subsections": [], "word_count": 55, "tags": []}
{"section_id": "8.3.3.14.3.1", "title": "PE_Security_Response_Received State", "content": "The Policy Engine Shall transition to the PE_Security_Response_Received state, from either the PE_SRC_Ready or PE_SNK_Ready when a Security_Response Message is received. On entry to the PE_Security_Response_Received state the Policy Engine Shall inform the Device Policy Manager of the details of the security response. The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state as appropriate (see Figure 8-66, Figure 8-67 and Figure 8-126) when:  The Device Policy Manager has been informed. Page 458 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 458, "page_end": 458, "content_type": "text", "tables": [], "figures": [{"figure_id": "8-66, Figure 8-67 and Figure 8-126) when:", "caption": "8-66, Figure 8-67 and Figure 8-126) when:", "page": 458}], "subsections": [], "word_count": 85, "tags": []}
{"section_id": "8.3.3.15", "title": "Firmware Update State Diagrams", "content": "", "page_start": 459, "page_end": 458, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.3.15.1", "title": "Send Firmware Update Request State Diagram", "content": "Figure 8-98 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to send a firmware update request. See also Section 6.5.9. Figure 8-98 Send firmware update request State Diagram Send firmware update request from Device Policy Manager PE_Send_Firmware_Update_Request PE_SRC_Ready or PE_SNK_Ready Actions on entry: Firmware_Update_Request Send Firmware_Update_Request Message Message sent Power = Explicit Contract PD = Connected", "page_start": 459, "page_end": 458, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-98 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to", "caption": "Figure 8-98 shows the state diagram for a Source or Sink on receiving a request from the Device Policy Manager to", "page": 459}, {"figure_id": "Figure 8-98 Send firmware update request State Diagram", "caption": "Figure 8-98 Send firmware update request State Diagram", "page": 459}], "subsections": [], "word_count": 66, "tags": []}
{"section_id": "8.3.3.15.1.1", "title": "PE_Send_Firmware_Update_Request State", "content": "The Policy Engine Shall transition to the PE_Send_Firmware_Update_Request state, from either the PE_SRC_Ready or PE_SNK_Ready state, due to a request to send a firmware update request from the Device Policy Manager. On entry to the PE_Send_Firmware_Update_Request state the Policy Engine Shall send a Firmware_Update_Request Message. The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state as appropriate (see Figure 8-66 and Figure 8-67) when:  The Firmware_Update_Request Message has been sent.", "page_start": 459, "page_end": 458, "content_type": "text", "tables": [], "figures": [{"figure_id": "8-66 and Figure 8-67) when:", "caption": "8-66 and Figure 8-67) when:", "page": 459}], "subsections": [], "word_count": 74, "tags": []}
{"section_id": "8.3.3.15.2", "title": "Send Firmware Update Response State Diagram", "content": "Figure 8-99 shows the state diagram for a Source, Sink or Cable Plug on receiving a Firmware_Update_Request Message. See also Section 6.5.9. Figure 8-99 Send firmware update response State Diagram Firmware_Update_Request PE_SRC_Ready, Message received PE_Send_Firmware_Update_Response PE_SNK_Ready or Actions on entry: PE_CBL_Ready Get present firmware update response from Device Policy Firmware_Update_Response Manager Message sent Send Firmware_Update_Response Message (based on Device Policy Manager response) Power = Explicit Contract PD = Connected", "page_start": 459, "page_end": 458, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-99 shows the state diagram for a Source, Sink or Cable Plug on receiving a Firmware_Update_Request", "caption": "Figure 8-99 shows the state diagram for a Source, Sink or Cable Plug on receiving a Firmware_Update_Request", "page": 459}, {"figure_id": "Figure 8-99 Send firmware update response State Diagram", "caption": "Figure 8-99 Send firmware update response State Diagram", "page": 459}], "subsections": [], "word_count": 69, "tags": []}
{"section_id": "8.3.3.15.2.1", "title": "PE_Send_Firmware_Update_Response State", "content": "The Policy Engine Shall transition to the PE_Send_Firmware_Update_Response state, from either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state, when a Firmware_Update_Request Message is received. On entry to the PE_Send_Firmware_Update_Response state the Policy Engine Shall request the appropriate response from the Device Policy Manager and then send a Firmware_Update_Response Message based on this status. The Policy Engine Shall transition back to either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state as appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:  The Firmware_Update_Response Message has been successfully sent. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 459", "page_start": 459, "page_end": 459, "content_type": "text", "tables": [], "figures": [{"figure_id": "appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:", "caption": "appropriate (see Figure 8-66, Figure 8-67and Figure 8-126) when:", "page": 459}], "subsections": [], "word_count": 94, "tags": []}
{"section_id": "8.3.3.15.3", "title": "Firmware Update Response Received State Diagram", "content": "Figure 8-100 shows the state diagram for a Source or Sink on receiving a Firmware_Update_Response Message. See also Section 6.5.9. Figure 8-100 Firmware update response received State Diagram Firmware_Update_Response PE_SRC_Ready or Message received PE_Firmware_Update_Response_Received PE_SNK_Ready Actions on entry: Inform Device Policy Manager of the firmware update response details. DPM informed Power = Explicit Contract PD = Connected", "page_start": 460, "page_end": 459, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-100 shows the state diagram for a Source or Sink on receiving a Firmware_Update_Response Message. See", "caption": "Figure 8-100 shows the state diagram for a Source or Sink on receiving a Firmware_Update_Response Message. See", "page": 460}, {"figure_id": "Figure 8-100 Firmware update response received State Diagram", "caption": "Figure 8-100 Firmware update response received State Diagram", "page": 460}], "subsections": [], "word_count": 57, "tags": []}
{"section_id": "8.3.3.15.3.1", "title": "PE_Firmware_Update_Response_Received State", "content": "The Policy Engine Shall transition to the PE_Firmware_Update_Response_Received state, from either the PE_SRC_Ready or PE_SNK_Ready when a Firmware_Update_Response Message is received. On entry to the PE_Firmware_Update_Response_Received state the Policy Engine Shall inform the Device Policy Manager of the details of the firmware update response. The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state as appropriate (see Figure 8-66, Figure 8-67 and Figure 8-126) when:  The Device Policy Manager has been informed.", "page_start": 460, "page_end": 459, "content_type": "text", "tables": [], "figures": [{"figure_id": "8-66, Figure 8-67 and Figure 8-126) when:", "caption": "8-66, Figure 8-67 and Figure 8-126) when:", "page": 460}], "subsections": [], "word_count": 76, "tags": []}
{"section_id": "8.3.3.16", "title": "Dual-Role Port State Diagrams", "content": "Dual-Role Ports that combine Source and Sink capabilities Shall comprise Source and Sink Policy Engine state machines. In addition they Shall have the capability to perform a Power Role Swap from the PE_SRC_Ready or PE_SNK_Ready states and Shall return to USB Default Operation on a Hard Reset. The State Diagrams in this section Shall apply to every [USB Type-C 1.2] DRP. Page 460 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 460, "page_end": 460, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 71, "tags": []}
{"section_id": "8.3.3.16.1", "title": "DFP to UFP Data Role Swap State Diagram", "content": "Figure 8-101 shows the additional state diagram required to perform a Data Role Swap from DFP to UFP operation and the changes that Shall be followed for error and Hard Reset handling. Figure 8-101: DFP to UFP Data Role Swap State Diagram DR_Swap message received & in Modal Operation PE_SRC_Hard_Reset or PE_SNK_Hard_Reset PE_SRC_Ready or PE_SNK_Ready (DFP) Data Role Swap required (indication from Reject message received | Message sent Device Policy ManagerW)ait message received | DR_Swap message received & SenderResponseTimer not in Modal Operation timeout PE_ R D e R je S c _ t D _ F S P w _ a U p FP_ Dat F a u R rt o h l e e r S e w va a l p u a n t o io t n o k | PE E _ v D a R lu S a _ t D e F _ P S _ w U a F p P_ PE_D Se R n S d _ _ D S F w P_ a U p FP_ Actions on entry: required Actions on entry: Send Reject or Wait message Get evaluation of Data Role Swap Actions on entry: as appropriate request from Device Policy Manager Send Swap DR message Initialize and run Power = Explicit Contract Power = Explicit Contract SenderResponseTimer PD = Connected PD = Connected Power = Explicit Contract PD = Connected Data Role Swap ok Accept received PE_DRS_DFP_UFP_ Accept_Swap Actions on entry: Send Accept message Power = Explicit Contract PD = Connected Accept message sent PE_DRS_DFP_UFP_ Change_to_UFP Actions on entry: Request Device Policy Manager to change port to UFP Power = Explicit Contract PD = Connected Port changed to UFP PE_SRC_Ready or PE_SNK_Ready (UFP)", "page_start": 461, "page_end": 460, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-101 shows the additional state diagram required to perform a Data Role Swap from DFP to UFP operation", "caption": "Figure 8-101 shows the additional state diagram required to perform a Data Role Swap from DFP to UFP operation", "page": 461}, {"figure_id": "Figure 8-101: DFP to UFP Data Role Swap State Diagram", "caption": "Figure 8-101: DFP to UFP Data Role Swap State Diagram", "page": 461}], "subsections": [], "word_count": 287, "tags": ["data"]}
{"section_id": "8.3.3.16.1.1", "title": "PE_SRC_Ready or PE_SNK_Ready State", "content": "The Data Role Swap process Shall start only from either the PE_SRC_Ready or PE_SNK_Ready state where power is stable. The Policy Engine Shall transition to the PE_DRS_DFP_UFP_Evaluate_Swap state when:  A DR_Swap Message is received and  There are no Active Modes (not in Modal Operation). The Policy Engine Shall transition to either the PE_SRC_Hard_Reset or PE_SNK_Hard_Reset states when:  A DR_Swap Message is received and USB Power Delivery Specification Revision 3.0, Version 1.1 Page 461  There are one or more Active Modes (Modal Operation). The Policy Engine Shall transition to the PE_DRS_DFP_UFP_Send_Swap state when:  The Device Policy Manager indicates that a Data Role Swap is required.", "page_start": 461, "page_end": 461, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 109, "tags": []}
{"section_id": "8.3.3.16.1.2", "title": "PE_DRS_DFP_UFP_Evaluate_Swap State", "content": "On entry to the PE_DRS_DFP_UFP_Evaluate_Swap state the Policy Engine Shall ask the Device Policy Manager whether a Data Role Swap can be made. The Policy Engine Shall transition to the PE_DRS_DFP_UFP_Accept_Swap state when:  The Device Policy Manager indicates that a Data Role Swap is ok. The Policy Engine Shall transition to the PE_DRS_DFP_UFP_Reject_Swap state when:  The Device Policy Manager indicates that a Data Role Swap is not ok.  Or further evaluation of the Data Role Swap request is needed.", "page_start": 462, "page_end": 461, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 82, "tags": []}
{"section_id": "8.3.3.16.1.3", "title": "PE_DRS_DFP_UFP_Accept_Swap State", "content": "On entry to the PE_DRS_DFP_UFP_Accept_Swap state the Policy Engine Shall request the Protocol Layer to send an Accept Message. The Policy Engine Shall transition to the PE_DRS_DFP_UFP_Change_to_UFP state when:  The Accept Message has been sent.", "page_start": 462, "page_end": 461, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": []}
{"section_id": "8.3.3.16.1.4", "title": "PE_DRS_DFP_UFP_Change_to_UFP State", "content": "On entry to the PE_DRS_DFP_UFP_Change_to_UFP state the Policy Engine Shall request the Device Policy Manager to change the Port from a DFP to a UFP. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state when:  The Device Policy Manager indicates that the Port has been changed to a UFP.", "page_start": 462, "page_end": 461, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 53, "tags": []}
{"section_id": "8.3.3.16.1.5", "title": "PE_DRS_DFP_UFP_Send_Swap State", "content": "On entry to the PE_DRS_DFP_UFP_Send_Swap state the Policy Engine Shall request the Protocol Layer to send a DR_Swap Message and Shall start the SenderResponseTimer. On exit from the PE_DRS_DFP_UFP_Send_Swap state the Policy Engine Shall stop the SenderResponseTimer. The Policy Engine Shall continue as a DFP and Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state when:  A Reject Message is received.  Or a Wait Message is received.  Or the SenderResponseTimer times out. The Policy Engine Shall transition to the PE_DRS_DFP_UFP_Change_to_UFP state when:  An Accept Message is received.", "page_start": 462, "page_end": 461, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 91, "tags": []}
{"section_id": "8.3.3.16.1.6", "title": "PE_DRS_DFP_UFP_Reject_Swap State", "content": "On entry to the PE_DRS_DFP_UFP_Reject_Swap state the Policy Engine Shall request the Protocol Layer to send:  A Reject Message if the device is unable to perform a Data Role Swap at this time.  A Wait Message if further evaluation of the Data Role Swap request is required. Note: in this case it is expected that one of the Port Partners will send a DR_Swap Message at a later time (see Section 6.3.12.3). Page 462 USB Power Delivery Specification Revision 3.0, Version 1.1 The Policy Engine Shall continue as a DFP and Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state when:  The Reject or Wait Message has been sent.", "page_start": 462, "page_end": 462, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 112, "tags": []}
{"section_id": "8.3.3.16.2", "title": "UFP to DFP Data Role Swap State Diagram", "content": "Figure 8-102 shows the additional state diagram required to perform a Data Role Swap from DRP UFP to DFP operation and the changes that Shall be followed for error and Hard Reset handling. Figure 8-102: UFP to DFP Data Role Swap State Diagram DR_Swap message received & PE_SRC_Hard_Reset or in Modal Operation PE_SNK_Hard_Reset PE_SRC_Ready or PE_SNK_Ready (UFP) Reject message received | Wait message received | SenderResponseTimer timeout DR_Swap message received & Data Role Swap required not in Modal Operation (indication from Message sent Device Policy Manager) PE_DRS_UFP_DFP_ PE_DRS_UFP_DFP_ PE_DRS_UFP_DFP_ Reject_Swap Data Role Swap not ok | Evaluate_Swap Send_Swap A S as e c n t a i d o p n p R s r e o o j p e n r c i t e a n o te t r r W y: ait message Furth r e e r q e u v ir a e lu d ation A G re c e q t t u i o e e n v s a s t l f u o r a n o t m i e o n n D t r e o y v f : i D ce a t P a o R li o c l y e M Sw an a a p g er A S In e c it n t i i a d o l n i S z s e w o a a n p n d e D n r R t u r n y m : essage SenderResponseTimer Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected Power = Explicit Contract PD = Connected Data Role Swap ok PE_DRS_UFP_DFP_ Accept received Accept_Swap Actions on entry: Send Accept message Power = Explicit Contract PD = Connected Accept message sent PE_DRS_UFP_DFP_ Change_to_DFP Actions on entry: Request Device Policy Manager to change port to DFP Power = Explicit Contract PD = Connected Port changed to DFP PE_SRC_Ready or PE_SNK_Ready (DFP)", "page_start": 463, "page_end": 462, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-102 shows the additional state diagram required to perform a Data Role Swap from DRP UFP to DFP", "caption": "Figure 8-102 shows the additional state diagram required to perform a Data Role Swap from DRP UFP to DFP", "page": 463}, {"figure_id": "Figure 8-102: UFP to DFP Data Role Swap State Diagram", "caption": "Figure 8-102: UFP to DFP Data Role Swap State Diagram", "page": 463}], "subsections": [], "word_count": 335, "tags": ["data"]}
{"section_id": "8.3.3.16.2.1", "title": "PE_SRC_Ready or PE_SNK_Ready State", "content": "The Data Role Swap process Shall start only from the either the PE_SRC_Ready or PE_SNK_Ready state where power is stable. The Policy Engine Shall transition to the PE_DRS_UFP_DFP_Evaluate_Swap state when: USB Power Delivery Specification Revision 3.0, Version 1.1 Page 463  A DR_Swap Message is received and  There are no Active Modes (not in Modal Operation). The Policy Engine Shall transition to either the PE_SRC_Hard_Reset or PE_SNK_Hard_Reset states when:  A DR_Swap Message is received and  There are one or more Active Modes (Modal Operation). The Policy Engine Shall transition to the PE_DRS_UFP_DFP_Send_Swap state when:  The Device Policy Manager indicates that a Data Role Swap is required.", "page_start": 463, "page_end": 463, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 110, "tags": []}
{"section_id": "8.3.3.16.2.2", "title": "PE_DRS_UFP_DFP_Evaluate_Swap State", "content": "On entry to the PE_DRS_UFP_DFP_Evaluate_Swap state the Policy Engine Shall ask the Device Policy Manager whether a Data Role Swap can be made. The Policy Engine Shall transition to the PE_DRS_UFP_DFP_Accept_Swap state when:  The Device Policy Manager indicates that a Data Role Swap is ok. The Policy Engine Shall transition to the PE_DRS_UFP_DFP_Reject_Swap state when:  The Device Policy Manager indicates that a Data Role Swap is not ok.  Or further evaluation of the Data Role Swap request is needed.", "page_start": 464, "page_end": 463, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 82, "tags": []}
{"section_id": "8.3.3.16.2.3", "title": "PE_DRS_UFP_DFP_Accept_Swap State", "content": "On entry to the PE_DRS_UFP_DFP_Accept_Swap state the Policy Engine Shall request the Protocol Layer to send an Accept Message. The Policy Engine Shall transition to the PE_DRS_UFP_DFP_Change_to_DFP state when:  The Accept Message has been sent.", "page_start": 464, "page_end": 463, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": []}
{"section_id": "8.3.3.16.2.4", "title": "PE_DRS_UFP_DFP_Change_to_DFP State", "content": "On entry to the PE_DRS_UFP_DFP_Change_to_DFP state the Policy Engine Shall request the Device Policy Manager to change the Port from a UFP to a DFP. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state when:  The Device Policy Manager indicates that the Port has been changed to a DFP.", "page_start": 464, "page_end": 463, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 53, "tags": []}
{"section_id": "8.3.3.16.2.5", "title": "PE_DRS_UFP_DFP_Send_Swap State", "content": "On entry to the PE_DRS_UFP_DFP_Send_Swap state the Policy Engine Shall request the Protocol Layer to send a DR_Swap Message and Shall start the SenderResponseTimer. On exit from the PE_DRS_UFP_DFP_Send_Swap state the Policy Engine Shall stop the SenderResponseTimer. The Policy Engine Shall continue as a UFP and Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state when:  A Reject Message is received.  Or a Wait Message is received.  Or the SenderResponseTimer times out. The Policy Engine Shall transition to the PE_DRS_UFP_DFP_Change_to_DFP state when:  An Accept Message is received. Page 464 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 464, "page_end": 464, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 101, "tags": []}
{"section_id": "8.3.3.16.2.6", "title": "PE_DRS_UFP_DFP_Reject_Swap State", "content": "On entry to the PE_DRS_UFP_DFP_Reject_Swap state the Policy Engine Shall request the Protocol Layer to send:  A Reject Message if the device is unable to perform a Data Role Swap at this time.  A Wait Message if further evaluation of the Data Role Swap request is required. Note: in this case it is expected that one of the Port Partners will send a DR_Swap Message at a later time (see Section 6.3.12.3). The Policy Engine Shall continue as a UFP and Shall transition to the either the PE_SRC_Ready or PE_SNK_Ready state when:  The Reject or Wait Message has been sent. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 465", "page_start": 465, "page_end": 465, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 113, "tags": []}
{"section_id": "8.3.3.16.3", "title": "Policy Engine in Source to Sink Power Role Swap State Diagram", "content": "Dual-Role Ports that combine Source and Sink capabilities Shall comprise Source and Sink Policy Engine state machines. In addition they Shall have the capability to do a Power Role Swap from the PE_SRC_Ready state and Shall return to USB Default Operation on a Hard Reset. Figure 8-103 shows the additional state diagram required to perform a Power Role Swap from Source to Sink roles and the changes that Shall be followed for error handling. Figure 8-103: Dual-Role Port in Source to Sink Power Role Swap State Diagram Message sent PE_SRC_Ready Reject message received | Wait message received | PR_Swap message received Power Role Swap required SenderResponseTimer (indication from timeout Device Policy Manager) PE_PRS_SRC_SNK_ PE_PRS_SRC_SNK_ Reject_PR_Swap Power Role Swap not ok | Evaluate_Swap Further evaluation Actions on entry: required Actions on entry: PE_PRS_SRC_SNK_ Send Reject or Wait message Get evaluation of swap request from Send_Swap as appropriate Device Policy Manager Actions on entry: Power = Explicit Contract Power = Explicit Contract Send PR_Swap message PD = Connected PD = Connected Initialize and run SenderResponseTimer Power Role Swap ok Power = Explicit Contract PD = Connected PE_PRS_SRC_SNK_ Accept_Swap Actions on entry: Send Accept message Accept received Power = Explicit Contract PD = Connected Accept message sent PE_PRS_SRC_SNK_ Transition_to_off Actions on entry: Tell Device Policy Manager to turn off power supply Power = Transition to stop sourcing PD = Connected Source turned off PE_PRS_SRC_SNK_ Assert_Rd Actions on entry: Request DPM to assert Rd Power = Source off PD = Connected Rd asserted PSSourceOnTimer Timeout | PS_RDY message not sent after retries (no GoodCRC received) PE_PRS_SRC_SNK_ Wait_Source_on Actions on entry: Send PS_RDY message Initialize and run PSSourceOnTimer Power = Source off PD = Connected PS_RDY message received ErrorRecovery PE_SNK_Startup", "page_start": 466, "page_end": 465, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-103 shows the additional state diagram required to perform a Power Role Swap from Source to Sink roles", "caption": "Figure 8-103 shows the additional state diagram required to perform a Power Role Swap from Source to Sink roles", "page": 466}, {"figure_id": "Figure 8-103: Dual-Role Port in Source to Sink Power Role Swap State Diagram", "caption": "Figure 8-103: Dual-Role Port in Source to Sink Power Role Swap State Diagram", "page": 466}], "subsections": [], "word_count": 285, "tags": ["policy", "power", "source", "sink"]}
{"section_id": "8.3.3.16.3.1", "title": "PE_SRC_Ready State", "content": "The Power Role Swap process Shall start only from the PE_SRC_Ready state where power is stable. Page 466 USB Power Delivery Specification Revision 3.0, Version 1.1 The Policy Engine Shall transition to the PE_PRS_SRC_SNK_Evaluate_Swap state when:  A PR_Swap Message is received. The Policy Engine Shall transition to the PE_PRS_SRC_SNK_Send_Swap state when:  The Device Policy Manager indicates that a Power Role Swap is required.", "page_start": 466, "page_end": 466, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 65, "tags": []}
{"section_id": "8.3.3.16.3.2", "title": "PE_PRS_SRC_SNK_Evaluate_Swap State", "content": "On entry to the PE_PRS_SRC_SNK_Evaluate_Swap state the Policy Engine Shall ask the Device Policy Manager whether a Power Role Swap can be made. The Policy Engine Shall transition to the PE_PRS_SRC_SNK_Accept_Swap state when:  The Device Policy Manager indicates that a Power Role Swap is ok. The Policy Engine Shall transition to the PE_PRS_SRC_SNK_Reject_Swap state when:  The Device Policy Manager indicates that a Power Role Swap is not ok.  Or further evaluation of the Power Role Swap request is needed.", "page_start": 467, "page_end": 466, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 82, "tags": []}
{"section_id": "8.3.3.16.3.3", "title": "PE_PRS_SRC_SNK_Accept_Swap State", "content": "On entry to the PE_PRS_SRC_SNK_Accept_Swap state the Policy Engine Shall request the Protocol Layer to send an Accept Message. The Policy Engine Shall transition to the PE_PRS_SRC_SNK_Transition_to_off state when:  The Accept Message has been sent.", "page_start": 467, "page_end": 466, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": []}
{"section_id": "8.3.3.16.3.4", "title": "PE_PRS_SRC_SNK_Transition_to_off State", "content": "On entry to the PE_PRS_SRC_SNK_Transition_to_off state the Policy Engine Shall request the Device Policy Manager to turn off the Source. The Policy Engine Shall transition to the PE_PRS_SRC_SNK_Assert_Rd state when:  The Device Policy Manager indicates that the Source has been turned off.", "page_start": 467, "page_end": 466, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 43, "tags": []}
{"section_id": "8.3.3.16.3.5", "title": "PE_PRS_SRC_SNK_Assert_Rd State", "content": "On entry to the PE_PRS_SRC_SNK_Assert_Rd state the Policy Engine Shall request the Device Policy Manager to change the resistor asserted on the CC wire from Rp to Rd. The Policy Engine Shall transition to the PE_PRS_SRC_SNK_Wait_Source_on state when:  The Device Policy Manager indicates that Rd is asserted.", "page_start": 467, "page_end": 466, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": []}
{"section_id": "8.3.3.16.3.6", "title": "PE_PRS_SRC_SNK_Wait_Source_on State", "content": "On entry to the PE_PRS_SRC_SNK_Wait_Source_on state the Policy Engine Shall request the Protocol Layer to send a PS_RDY Message and Shall start the PSSourceOnTimer. On exit from the Source off state the Policy Engine Shall stop the PSSourceOnTimer. The Policy Engine Shall transition to the PE_SNK_Startup when:  A PS_RDY Message is received indicating that the remote Source is now supplying power. The Policy Engine Shall transition to the ErrorRecovery state when:  The PSSourceOnTimer times out or USB Power Delivery Specification Revision 3.0, Version 1.1 Page 467  The PS_RDY Message is not sent after retries (a GoodCRC Message has not been received). Note: a soft reset Shall Not be initiated in this case.", "page_start": 467, "page_end": 467, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 115, "tags": ["source"]}
{"section_id": "8.3.3.16.3.7", "title": "PE_PRS_SRC_SNK_Send_Swap State", "content": "On entry to the PE_PRS_SRC_SNK_Send_Swap state the Policy Engine Shall request the Protocol Layer to send a PR_Swap Message and Shall start the SenderResponseTimer. On exit from the PE_PRS_SRC_SNK_Send_Swap state the Policy Engine Shall stop the SenderResponseTimer. The Policy Engine Shall transition to the PE_SRC_Ready state when:  A Reject Message is received.  Or a Wait Message is received.  Or the SenderResponseTimer times out. The Policy Engine Shall transition to the PE_PRS_SRC_SNK_Transition_to_off state when:  An Accept Message is received.", "page_start": 468, "page_end": 467, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 82, "tags": []}
{"section_id": "8.3.3.16.3.8", "title": "PE_PRS_SRC_SNK_Reject_Swap State", "content": "On entry to the PE_PRS_SRC_SNK_Reject_Swap state the Policy Engine Shall request the Protocol Layer to send:  A Reject Message if the device is unable to perform a Power Role Swap at this time.  A Wait Message if further evaluation of the Power Role Swap request is required. Note: in this case it is expected that one of the Port Partners will send a PR_Swap Message at a later time (see Section 6.3.12.2). The Policy Engine Shall transition to the PE_SRC_Ready when:  The Reject or Wait Message has been sent.", "page_start": 468, "page_end": 467, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 92, "tags": []}
{"section_id": "8.3.3.16.4", "title": "Policy Engine in Sink to Source Power Role Swap State Diagram", "content": "Dual-Role Ports that combine Sink and Source capabilities Shall comprise Sink and Source Policy Engine state machines. In addition they Shall have the capability to do a Power Role Swap from the PE_SNK_Ready state and Shall return to USB Default Operation on a Hard Reset. Figure 8-104 shows the additional state diagram required to perform a Power Role Swap from Sink to Source roles and the changes that Shall be followed for error handling. Page 468 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-104: Dual-role Port in Sink to Source Power Role Swap State Diagram Message sent PE_SNK_Ready Reject message received | Power Role Swap required Wait message received | PR_Swap message received (indication from SenderResponseTimer Device Policy Manager) timeout PE_PRS_SNK_SRC_ PE_PRS_SNK_SRC_ Reject_Swap Power Role Swap not ok | Evaluate_Swap Further evaluation PE_PRS_SNK_SRC_ Actions on entry: required Actions on entry: Send_Swap Send Reject or Wait message Get evaluation of swap request from as appropriate Device Policy Manager Actions on entry: Send PR_Swap message Power = Explicit Contract Power = Explicit Contract Initialize and run PD = Connected PD = Connected SenderResponseTimer Power Role Swap ok Power = Explicit Contract PD = Connected PE_PRS_SNK_SRC_ Accept_Swap Actions on entry: Send Accept message Accept message received Power = Explicit Contract PD = Connected Accept message sent PE_PRS_SNK_SRC_ Transition_to_off Actions on entry: PSSourceOffTimer timeout Initialize and run PSSourceOffTimer Tell Device Policy Manager to turn off Power Sink. Power = Transition to stop sinking PD = Connected PS_RDY message received PE_PRS_SNK_SRC_ Assert_Rp ErrorRecovery Actions on entry: Request DPM to assert Rp Power = Source off PD = Connected Rp asserted PE_PRS_SNK_SRC_ Source_on Actions on entry: Tell Device Policy Manager to turn on PS_RDY message not sent Source after retries (no GoodCRC received) Actions on exit: Send PS_RDY message Power = Transition to source on PD = Connected Source is on PE_SRC_Startup", "page_start": 468, "page_end": 468, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-104 shows the additional state diagram required to perform a Power Role Swap from Sink to Source roles", "caption": "Figure 8-104 shows the additional state diagram required to perform a Power Role Swap from Sink to Source roles", "page": 468}, {"figure_id": "Figure 8-104: Dual-role Port in Sink to Source Power Role Swap State Diagram", "caption": "Figure 8-104: Dual-role Port in Sink to Source Power Role Swap State Diagram", "page": 469}], "subsections": [], "word_count": 308, "tags": ["policy", "power", "source", "sink"]}
{"section_id": "8.3.3.16.4.1", "title": "PE_SNK_Ready State", "content": "The Power Role Swap process Shall start only from the PE_SNK_Ready state where power is stable. The Policy Engine Shall transition to the PE_PRS_SNK_SRC_Evaluate_Swap state when:  A PR_Swap Message is received. The Policy Engine Shall transition to the PE_PRS_SNK_SRC_Send_Swap state when:  The Device Policy Manager indicates that a Power Role Swap is required. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 469", "page_start": 469, "page_end": 469, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 65, "tags": []}
{"section_id": "8.3.3.16.4.2", "title": "PE_PRS_SNK_SRC_Evaluate_Swap State", "content": "On entry to the PE_PRS_SNK_SRC_Send_Swap state the Policy Engine Shall ask the Device Policy Manager whether a Power Role Swap can be made. The Policy Engine Shall transition to the PE_PRS_SNK_SRC_Accept_Swap state when:  The Device Policy Manager indicates that a Power Role Swap is ok. The Policy Engine Shall transition to the PE_PRS_SNK_SRC_Reject_Swap state when:  The Device Policy Manager indicates that a Power Role Swap is not ok.", "page_start": 470, "page_end": 469, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 70, "tags": []}
{"section_id": "8.3.3.16.4.3", "title": "PE_PRS_SNK_SRC_Accept_Swap State", "content": "On entry to the PE_PRS_SNK_SRC_Accept_Swap state the Policy Engine Shall request the Protocol Layer to send an Accept Message. The Policy Engine Shall transition to the PE_PRS_SNK_SRC_Transition_to_off state when:  The Accept Message has been sent.", "page_start": 470, "page_end": 469, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": []}
{"section_id": "8.3.3.16.4.4", "title": "PE_PRS_SNK_SRC_Transition_to_off State", "content": "On entry to the PE_PRS_SNK_SRC_Transition_to_off state the Policy Engine Shall initialize and run the PSSourceOffTimer and then request the Device Policy Manager to turn off the Sink. The Policy Engine Shall transition to the ErrorRecovery state when:  The PSSourceOffTimer times out. The Policy Engine Shall transition to the PE_PRS_SNK_SRC_Assert_Rp state when:  A PS_RDY Message is received.", "page_start": 470, "page_end": 469, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 58, "tags": []}
{"section_id": "8.3.3.16.4.5", "title": "PE_PRS_SNK_SRC_Assert_Rp State", "content": "On entry to the PE_PRS_SNK_SRC_Assert_Rp state the Policy Engine Shall request the Device Policy Manager to change the resistor asserted on the CC wire from Rd to Rp. The Policy Engine Shall transition to the PE_PRS_SNK_SRC_Source_on state when:  The Device Policy Manager indicates that Rd is asserted.", "page_start": 470, "page_end": 469, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": []}
{"section_id": "8.3.3.16.4.6", "title": "PE_PRS_SNK_SRC_Source_on State", "content": "On entry to the PE_PRS_SNK_SRC_Source_on state the Policy Engine Shall request the Device Policy Manager to turn on the Source. On exit from the PE_PRS_SNK_SRC_Source_on state the Policy Engine Shall send a PS_RDY Message. The Policy Engine Shall transition to the PE_SRC_Startup state when:  The Source Port has been turned on. The Policy Engine Shall transition to the ErrorRecovery state when:  The PS_RDY Message is not sent after retries (a GoodCRC Message has not been received). A soft reset Shall Not be initiated in this case.", "page_start": 470, "page_end": 469, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 88, "tags": ["source"]}
{"section_id": "8.3.3.16.4.7", "title": "PE_PRS_SNK_SRC_Send_Swap State", "content": "On entry to the PE_PRS_SNK_SRC_Send_Swap state the Policy Engine Shall request the Protocol Layer to send a PR_Swap Message and Shall initialize and run the SenderResponseTimer. Page 470 USB Power Delivery Specification Revision 3.0, Version 1.1 The Policy Engine Shall transition to the PE_SNK_Ready state when:  A Reject Message is received.  Or a Wait Message is received.  Or the SenderResponseTimer times out. The Policy Engine Shall transition to the PE_PRS_SNK_SRC_Transition_to_off state when:  An Accept Message is received.", "page_start": 470, "page_end": 470, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 81, "tags": []}
{"section_id": "8.3.3.16.4.8", "title": "PE_PRS_SNK_SRC_Reject_Swap State", "content": "On entry to the PE_PRS_SNK_SRC_Reject_Swap state the Policy Engine Shall request the Protocol Layer to send:  A Reject Message if the device is unable to perform a Power Role Swap at this time.  A Wait Message if further evaluation of the Power Role Swap request is required. Note: in this case it is expected that one of the Port Partners will send a PR_Swap Message at a later time (see Section 6.3.12.2). The Policy Engine Shall transition to the PE_SNK_Ready state when:  The Reject or Wait Message has been sent. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 471", "page_start": 471, "page_end": 471, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 103, "tags": []}
{"section_id": "8.3.3.16.5", "title": "Policy Engine in Source to Sink Fast Role Swap State Diagram", "content": "Dual-Role Ports that combine Source and Sink capabilities Shall comprise Source and Sink Policy Engine state machines. In addition they Should have the capability to do a Fast Role Swap from the PE_SRC_Ready state and Shall return to USB Default Operation on a Hard Reset. Figure 8-103 shows the additional state diagram required to perform a Fast Role Swap from Source to Sink roles and the changes that Shall be followed for error handling. Figure 8-105: Dual-Role Port in Source to Sink Fast Role Swap State Diagram FR_Swap Message received PE_SRC_Ready PE_FRS_SRC_SNK_ CC_Signal DPM indicates Fast Role Swap Actions on entry: is being signaled CC signaled on CC Wire Power = Implicit Contract PD = Connected FR_Swap Message received PE_FRS_SRC_SNK_ Evaluate_Swap Actions on entry: Power Role Swap not ok | Get evaluation of swap request from Fast Role Swap not signaled Device Policy Manager Power = Implicit Contract PD = Connected Power Role Swap ok PE_FRS_SRC_SNK_ Accept_Swap Actions on entry: Send Accept message Power = Implicit Contract PD = Connected Accept message PS_RDY message not sent after sent retries (no GoodCRC received) PE_FRS_SRC_SNK_ Transition_to_off Actions on entry: PE_SRC_Hard_Reset Wait for VBUS to reach vSafe5V Power = Implicit contract PD = Connected VBUS at vSafe5V PE_FRS_SRC_SNK_ Assert_Rd Actions on entry: Request DPM to assert Rd Power = Implicit contract PD = Connected Rd asserted PE_FRS_SRC_SNK_ PSSourceOnTimer Timeout | Wait_Source_on PS_RDY message not sent after retries (no GoodCRC received) Actions on entry: Send PS_RDY message Initialize and run PSSourceOnTimer Power = Implicit contract PD = Connected PS_RDY message received ErrorRecovery PE_SNK_Startup Page 472 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 472, "page_end": 472, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-103 shows the additional state diagram required to perform a Fast Role Swap from Source to Sink roles and", "caption": "Figure 8-103 shows the additional state diagram required to perform a Fast Role Swap from Source to Sink roles and", "page": 472}, {"figure_id": "Figure 8-105: Dual-Role Port in Source to Sink Fast Role Swap State Diagram", "caption": "Figure 8-105: Dual-Role Port in Source to Sink Fast Role Swap State Diagram", "page": 472}], "subsections": [], "word_count": 269, "tags": ["policy", "source", "sink"]}
{"section_id": "8.3.3.16.5.1", "title": "PE_SRC_Ready State", "content": "The Fast Role Swap process Shall start only from the PE_SRC_Ready state where power is stable. The Policy Engine Shall transition to the PE_FRS_SRC_SNK_Evaluate_Swap state when:  An FR_Swap Message is received.", "page_start": 473, "page_end": 472, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 32, "tags": []}
{"section_id": "8.3.3.16.5.2", "title": "PE_FRS_SRC_SNK_CC_Signal State", "content": "The Policy Engine Shall transition to the PE_FRS_SRC_SNK_CC_Signal state from any other state provided there is an Explicit Contract in place when:  The Device Policy Manager indicates that Fast Role Swap signaling is being applied to the CC Wire. In the PE_FRS_SRC_SNK_CC_Signal state the Policy Engine waits for an FR_Swap Message from the new Source. The Policy Engine Shall transition to the PE_FRS_SRC_SNK_Evaluate_Swap state when:  An FR_Swap Message is received.", "page_start": 473, "page_end": 472, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 72, "tags": []}
{"section_id": "8.3.3.16.5.3", "title": "PE_FRS_SRC_SNK_Evaluate_Swap State", "content": "On entry to the PE_FRS_SRC_SNK_Evaluate_Swap state the Policy Engine Shall ask the Device Policy Manager whether a Fast Role Swap can be made. The Policy Engine Shall transition to the PE_FRS_SRC_SNK_Accept_Swap state when:  The Device Policy Manager indicates that a Fast Role Swap is ok. The Policy Engine Shall transition to the PE_SRC_Hard_Reset state when:  The Device Policy Manager indicates that a Fast Role Swap is not ok or  The Device Policy Manager indicates that a Fast Role Swap is not being signaled.", "page_start": 473, "page_end": 472, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 86, "tags": []}
{"section_id": "8.3.3.16.5.4", "title": "PE_FRS_SRC_SNK_Accept_Swap State", "content": "On entry to the PE_FRS_SRC_SNK_Accept_Swap state the Policy Engine Shall request the Protocol Layer to send an Accept Message. The Policy Engine Shall transition to the PE_FRS_SNK_SRC_Transition_to_off state when:  The Accept Message has been sent. The Policy Engine Shall transition to the PE_SRC_Hard_Reset state when:  The Accept Message is not sent after retries (a GoodCRC Message has not been received). Note: a soft reset Shall Not be initiated in this case.", "page_start": 473, "page_end": 472, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 73, "tags": []}
{"section_id": "8.3.3.16.5.5", "title": "PE_FRS_SRC_SNK_Transition_to_off State", "content": "On entry to the PE_FRS_SNK_SRC_Transition_to_off state the Policy Engine Shall until V has discharged to vSafe5V. BUS The Policy Engine Shall transition to the PE_PRS_SRC_SNK_Assert_Rd state when:  The Device Policy Manager indicates that V has discharged to vSafe5V. BUS", "page_start": 473, "page_end": 472, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 40, "tags": []}
{"section_id": "8.3.3.16.5.6", "title": "PE_FRS_SRC_SNK_Assert_Rd State", "content": "On entry to the PE_PRS_SRC_SNK_Assert_Rd state the Policy Engine Shall request the Device Policy Manager to change the resistor asserted on the CC wire from Rp to Rd. The Policy Engine Shall transition to the PE_PRS_SRC_SNK_Wait_Source_on state when:  The Device Policy Manager indicates that Rd is asserted. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 473", "page_start": 473, "page_end": 473, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 58, "tags": []}
{"section_id": "8.3.3.16.5.7", "title": "PE_FRS_SRC_SNK_Wait_Source_on State", "content": "On entry to the PE_PRS_SRC_SNK_Wait_Source_on state the Policy Engine Shall request the Protocol Layer to send a PS_RDY Message and Shall start the PSSourceOnTimer. On exit from the Source off state the Policy Engine Shall stop the PSSourceOnTimer. The Policy Engine Shall transition to the PE_SNK_Startup when:  A PS_RDY Message is received indicating that the new Source is now applying Rp. The Policy Engine Shall transition to the ErrorRecovery state when:  The PSSourceOnTimer times out or  The PS_RDY Message is not sent after retries (a GoodCRC Message has not been received). Note: a soft reset Shall Not be initiated in this case.", "page_start": 474, "page_end": 473, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 105, "tags": ["source"]}
{"section_id": "8.3.3.16.6", "title": "Policy Engine in Sink to Source Fast Role Swap State Diagram", "content": "Dual-Role Ports that combine Sink and Source capabilities Shall comprise Sink and Source Policy Engine state machines. In addition they Should have the capability to do a Fast Role Swap from the PE_SNK_Ready state and Shall return to USB Default Operation on a Hard Reset. Figure 8-104 shows the additional state diagram required to perform a Fast Role Swap from Sink to Source roles and the changes that Shall be followed for error handling. Page 474 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-106: Dual-role Port in Sink to Source Fast Role Swap State Diagram Fast Swap signal detected on CC Wire and vSafe5V applied From Device Policy Manager PE_FRS_SNK_SRC_ Start_AMS Actions on entry: Notify the Protocol Layer that the first Message in the AMS will follow. Power = Implicit Contract PD = Connected Protocol Layer notified PE_FRS_SNK_SRC_ SenderResponseTimer timeout | Send_Swap FR_Swap message not sent Actions on entry: after retries (no GoodCRC received) Send FR_Swap message Initialize and run SenderResponseTimer Power = Implicit Contract PD = Connected Accept message received PE_FRS_SNK_SRC_ Transition_to_off PSSourceOffTimer timeout Actions on entry: Initialize and run PSSourceOffTimer Power = Implicit Contract PD = Connected PS_RDY message received PE_FRS_SNK_SRC_Vbus_Applied Actions on entry: Request Device Policy Manager to notify when vSafe5v is being applied by the local power source. Power = Implicit Contract PD = Connected New Source is applying vSafe5V PE_FRS_SNK_SRC_ Assert_Rp Actions on entry: Request DPM to assert Rp Power = Implicit Contract PD = Connected Rp asserted PE_FRS_SNK_SRC_ Source_on PS_RDY message not sent Actions on entry: after retries (no GoodCRC received) Send PS_RDY Message Power = Transition to source on PD = Connected PS_RDY Message sent ErrorRecovery PE_SRC_Startup USB Power Delivery Specification Revision 3.0, Version 1.1 Page 475", "page_start": 474, "page_end": 475, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-104 shows the additional state diagram required to perform a Fast Role Swap from Sink to Source roles and", "caption": "Figure 8-104 shows the additional state diagram required to perform a Fast Role Swap from Sink to Source roles and", "page": 474}, {"figure_id": "Figure 8-106: Dual-role Port in Sink to Source Fast Role Swap State Diagram", "caption": "Figure 8-106: Dual-role Port in Sink to Source Fast Role Swap State Diagram", "page": 475}], "subsections": [], "word_count": 286, "tags": ["policy", "source", "sink"]}
{"section_id": "8.3.3.16.6.1", "title": "PE_FRS_SNK_SRC_Start_AMS State", "content": "The Policy Engine Shall transition to the PE_FRS_SNK_SRC_Send_Swap state from any other state provided there is an Explicit Contract in place when:  The Device Policy Manager indicates that a Fast Role Swap signal has been detected on the CC Wire and vSafe5V has been applied to V . BUS On entry to the PE_FRS_SNK_SRC_Start_AMS state the Policy Engine Shall notify the Protocol Layer that the first Message in an AMS will follow. The Policy Engine Shall transition to the PE_FRS_SNK_SRC_Send_Swap state when:  The Protocol Layer has been notified.", "page_start": 476, "page_end": 475, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 90, "tags": []}
{"section_id": "8.3.3.16.6.2", "title": "PE_FRS_SNK_SRC_Send_Swap State", "content": "On entry to the PE_FRS_SNK_SRC_Send_Swap state the Policy Engine Shall request the Protocol Layer to send an FR_Swap Message and Shall initialize and run the SenderResponseTimer. The Policy Engine Shall transition to the PE_FRS_SNK_SRC_Transition_to_off state when:  An Accept Message is received. The Policy Engine Shall transition to the ErrorRecovery state when:  The SenderResponseTimer times out or  The FR_Swap Message is not sent after retries (a GoodCRC Message has not been received). A soft reset Shall Not be initiated in this case.", "page_start": 476, "page_end": 475, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 84, "tags": []}
{"section_id": "8.3.3.16.6.3", "title": "PE_FRS_SNK_SRC_Transition_to_off State", "content": "On entry to the PE_FRS_SNK_SRC_Transition_to_off state the Policy Engine Shall initialize and run the PSSourceOffTimer and then request the Device Policy Manager to turn off the Sink. The Policy Engine Shall transition to the ErrorRecovery state when:  The PSSourceOffTimer times out. The Policy Engine Shall transition to the PE_FRS_SNK_SRC_Vbus_Applied state when:  A PS_RDY Message is received.", "page_start": 476, "page_end": 475, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 58, "tags": []}
{"section_id": "8.3.3.16.6.4", "title": "PE_FRS_SNK_SRC_Vbus_Applied State", "content": "On entry to the PE_FRS_SNK_SRC_Vbus_Applied state the Policy Engine waits for a notification from the Device Policy Manager that the local power source has applied vSafe5V to V (see Section5.8.6.3). Note this could have already BUS been applied prior to entering this state or could be applied while waiting in this state. The Policy Engine Shall transition to the PE_FRS_SNK_SRC_Assert_Rp state when:  The Device Policy Manager indicates that vSafe5V is being applied.", "page_start": 476, "page_end": 475, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 73, "tags": []}
{"section_id": "8.3.3.16.6.5", "title": "PE_FRS_SNK_SRC_Assert_Rp State", "content": "On entry to the PE_FRS_SNK_SRC_Assert_Rp state the Policy Engine Shall request the Device Policy Manager to change the resistor asserted on the CC wire from Rd to Rp. The Policy Engine Shall transition to the PE_FRS_SNK_SRC_Source_on state when:  The Device Policy Manager indicates that Rp is asserted. Page 476 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 476, "page_end": 476, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 58, "tags": []}
{"section_id": "8.3.3.16.6.6", "title": "PE_FRS_SNK_SRC_Source_on State", "content": "On entry to the PE_FRS_SNK_SRC_Source_on state the Policy Engine Shall request the Device Policy Manager to turn on the Source. On exit from the PE_FRS_SNK_SRC_Source_on state (except if the exit is to send a Ping Message) the Policy Engine Shall send a PS_RDY Message. The Policy Engine Shall transition to the PE_SRC_Startup state when:  The PS_RDY Message has been sent. The Policy Engine Shall transition to the ErrorRecovery state when:  The PS_RDY Message is not sent after retries (a GoodCRC Message has not been received). A soft reset Shall Not be initiated in this case.", "page_start": 477, "page_end": 476, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 97, "tags": ["source"]}
{"section_id": "8.3.3.16.7", "title": "Dual-Role (Source Port) Get Source Capabilities State Diagram", "content": "Figure 8-107 shows the state diagram for a Dual-Role device, presently operating as a Source, on receiving a request from the Device Policy Manager to get the Port Partner’s Source capabilities. See also Section 6.4.1.1.3. Figure 8-107 Dual-Role (Source) Get Source Capabilities diagram get source capabilities request PE_DR_SRC_Get_Source_Cap PE_SRC_Ready from Device Policy Manager Actions on entry: Send Get_Source_Cap message Source capabilities Initialize and run SenderResponseTimer R S e e j m n e d c e t e s m r s T R a e i g e m s e s s e p r a o o e g u c n e e t s r i e | e v T c e i e d m i v | e e r d A P D a c e t s v i s i o c s n e o s P u o r o n c li e e c y x ca i M t p : a a n b a il g it e i r es/outcome to Power = Explicit Contract PD = Connected", "page_start": 477, "page_end": 476, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-107 shows the state diagram for a Dual-Role device, presently operating as a Source, on receiving a request", "caption": "Figure 8-107 shows the state diagram for a Dual-Role device, presently operating as a Source, on receiving a request", "page": 477}, {"figure_id": "Figure 8-107 Dual-Role (Source) Get Source Capabilities diagram", "caption": "Figure 8-107 Dual-Role (Source) Get Source Capabilities diagram", "page": 477}], "subsections": [], "word_count": 187, "tags": ["source"]}
{"section_id": "8.3.3.16.7.1", "title": "PE_DR_SRC_Get_Source_Cap State", "content": "The Policy Engine Shall transition to the PE_DR_SRC_Get_Source_Cap state, from the PE_SRC_Ready state, due to a request to get the remote source capabilities from the Device Policy Manager. On entry to the PE_DR_SRC_Get_Source_Cap state the Policy Engine Shall send a Get_Source_Cap Message and initialize and run the SenderResponseTimer. On exit from the PE_DR_SRC_Get_Source_Cap state the Policy Engine Shall inform the Device Policy Manager of the outcome (capabilities or response timeout). The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:  A Source_Capabilities Message is received  Or SenderResponseTimer times out  Or a Reject Message is received.", "page_start": 477, "page_end": 476, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "caption": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "page": 477}], "subsections": [], "word_count": 102, "tags": ["source"]}
{"section_id": "8.3.3.16.8", "title": "Dual-Role (Source Port) Give Sink Capabilities State Diagram", "content": "Figure 8-108 shows the state diagram for a Dual-Role device, presently operating as a Source, on receiving a Get_Sink_Cap Message. See also Section 6.4.1.1.3. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 477 Figure 8-108 Dual-Role (Source) Give Sink Capabilities diagram Get_Sink_Cap message PE_SRC_Ready received PE_DR_SRC_Give_Sink_Cap Actions on entry: Get present sink capabilities from Device Policy Manager Sink Capabilities Send Capabilities message (based on Device Policy message sent Manager response) Power = Explicit Contract PD = Connected", "page_start": 477, "page_end": 477, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-108 shows the state diagram for a Dual-Role device, presently operating as a Source, on receiving a", "caption": "Figure 8-108 shows the state diagram for a Dual-Role device, presently operating as a Source, on receiving a", "page": 477}, {"figure_id": "Figure 8-108 Dual-Role (Source) Give Sink Capabilities diagram", "caption": "Figure 8-108 Dual-Role (Source) Give Sink Capabilities diagram", "page": 478}], "subsections": [], "word_count": 78, "tags": ["source", "sink"]}
{"section_id": "8.3.3.16.8.1", "title": "PE_DR_SRC_Give_Sink_Cap State", "content": "The Policy Engine Shall transition to the PE_DR_SRC_Give_Sink_Cap state, from the PE_SRC_Ready state, when a Get_Sink_Cap Message is received. On entry to the PE_DR_SRC_Give_Sink_Cap state the Policy Engine Shall request the present capabilities from the Device Policy Manager and then send a Sink_Capabilities Message based on these capabilities. The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:  The Sink_Capabilities Message has been successfully sent.", "page_start": 478, "page_end": 477, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "caption": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "page": 478}], "subsections": [], "word_count": 70, "tags": ["sink"]}
{"section_id": "8.3.3.16.9", "title": "Dual-Role (Sink Port) Get Sink Capabilities State Diagram", "content": "Figure 8-109 shows the state diagram for a Dual-Role device, presently operating as a Sink, on receiving a request from the Device Policy Manager to get the Port Partner’s Sink capabilities. See also Section 6.4.1.1.3. Figure 8-109 Dual-Role (Sink) Get Sink Capabilities State Diagram get sink capabilities request PE_DR_SNK_Get_Sink_Cap from Device Policy Manager PE_SNK_Ready Actions on entry: Send Get_Sink_Cap message Initialize and run Sink capabilities SenderResponseTimer R S e e j m n e d c e t e s m r s T R a e i g e m s e s s e p r a o o e g u c n e e t s r i e | e v T c e i e d m i v | e e r d A P D a c e t s v i s i o c s n e i s n P o k o n c li a e c p y x a i M t b : a il n it a ie g s e / r outcome to Power = Explicit Contract PD = Connected", "page_start": 478, "page_end": 477, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-109 shows the state diagram for a Dual-Role device, presently operating as a Sink, on receiving a request", "caption": "Figure 8-109 shows the state diagram for a Dual-Role device, presently operating as a Sink, on receiving a request", "page": 478}, {"figure_id": "Figure 8-109 Dual-Role (Sink) Get Sink Capabilities State Diagram", "caption": "Figure 8-109 Dual-Role (Sink) Get Sink Capabilities State Diagram", "page": 478}], "subsections": [], "word_count": 189, "tags": ["sink"]}
{"section_id": "8.3.3.16.9.1", "title": "PE_DR_SNK_Get_Sink_Cap State", "content": "The Policy Engine Shall transition to the PE_DR_SNK_Get_Sink_Cap state, from the PE_SNK_Ready state, due to a request to get the remote source capabilities from the Device Policy Manager. On entry to the PE_DR_SNK_Get_Sink_Cap state the Policy Engine Shall send a Get_Sink_Cap Message and initialize and run the SenderResponseTimer. On exit from the PE_DR_SNK_Get_Sink_Cap state the Policy Engine Shall inform the Device Policy Manager of the outcome (capabilities or response timeout). The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:  A Source_Capabilities Message is received  Or SenderResponseTimer times out  Or a Reject Message is received.", "page_start": 478, "page_end": 477, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "caption": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "page": 478}], "subsections": [], "word_count": 102, "tags": ["sink"]}
{"section_id": "8.3.3.16.10", "title": "Dual-Role (Sink Port) Give Source Capabilities State Diagram", "content": "Figure 8-110 shows the state diagram for a Dual-Role device, presently operating as a Sink, on receiving a Get_Source_Cap Message. See also Section 6.4.1.1.3. Page 478 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-110 Dual-Role (Sink) Give Source Capabilities State Diagram Get_Source_Cap message PE_SNK_Ready received PE_DR_SNK_Give_Source_Cap Actions on entry: Request source capabilities from Source Capabilities Device Policy Manager message sent Send Capabilities message Power = Explicit Contract PD = Connected", "page_start": 478, "page_end": 478, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-110 shows the state diagram for a Dual-Role device, presently operating as a Sink, on receiving a", "caption": "Figure 8-110 shows the state diagram for a Dual-Role device, presently operating as a Sink, on receiving a", "page": 478}, {"figure_id": "Figure 8-110 Dual-Role (Sink) Give Source Capabilities State Diagram", "caption": "Figure 8-110 Dual-Role (Sink) Give Source Capabilities State Diagram", "page": 479}], "subsections": [], "word_count": 72, "tags": ["source", "sink"]}
{"section_id": "8.3.3.16.10.1", "title": "PE_DR_SNK_Give_Source_Cap State", "content": "The Policy Engine Shall transition to the PE_DR_SNK_Give_Source_Cap state, from the PE_SNK_Ready state, when a Get_Source_Cap Message is received. On entry to the PE_DR_SNK_Give_Source_Cap state the Policy Engine Shall request the present capabilities from the Device Policy Manager and then send a Source_Capabilities Message based on these capabilities. The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:  The Source_Capabilities Message has been successfully sent.", "page_start": 479, "page_end": 478, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "caption": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "page": 479}], "subsections": [], "word_count": 70, "tags": ["source"]}
{"section_id": "8.3.3.16.11", "title": "Dual-Role (Source Port) Get Source Capabilities Extended State Diagram", "content": "Figure 8-111 shows the state diagram for a Dual-Role device, presently operating as a Source, on receiving a request from the Device Policy Manager to get the Port Partner’s extended Source capabilities. See also Section 6.5.1. Figure 8-111 Dual-Role (Source) Get Source Capabilities Extended State Diagram get extended source capabilities request PE_DR_SRC_Get_Source_Cap_Ext from Device Policy Manager PE_SRC_Ready Actions on entry: Send Get_Source_Cap_Extended Message Initialize and run SenderResponseTimer Source_Capabilities_Extended Message received | Actions on exit: SenderResponseTimer Pass source extended capabilities/ Timeout outcome to Device Policy Manager Power = Explicit Contract PD = Connected", "page_start": 479, "page_end": 478, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-111 shows the state diagram for a Dual-Role device, presently operating as a Source, on receiving a request", "caption": "Figure 8-111 shows the state diagram for a Dual-Role device, presently operating as a Source, on receiving a request", "page": 479}, {"figure_id": "Figure 8-111 Dual-Role (Source) Get Source Capabilities Extended State Diagram", "caption": "Figure 8-111 Dual-Role (Source) Get Source Capabilities Extended State Diagram", "page": 479}], "subsections": [], "word_count": 92, "tags": ["source"]}
{"section_id": "8.3.3.16.11.1", "title": "PE_DR_SRC_Get_Source_Cap_Ext State", "content": "The Policy Engine Shall transition to the PE_DR_SRC_Get_Source_Cap_Ext state, from the PE_SRC_Ready state, due to a request to get the remote extended source capabilities from the Device Policy Manager. On entry to the PE_DR_SRC_Get_Source_Cap_Ext state the Policy Engine Shall send a Get_Source_Cap_Extended Message and initialize and run the SenderResponseTimer. On exit from the PE_DR_SRC_Get_Source_Cap_Ext state the Policy Engine Shall inform the Device Policy Manager of the outcome (capabilities or response timeout). The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:  A Source_Capabilities_Extended Message is received  Or SenderResponseTimer times out.", "page_start": 479, "page_end": 478, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "caption": "The Policy Engine Shall transition back to the PE_SRC_Ready state (see Figure 8-66) when:", "page": 479}], "subsections": [], "word_count": 96, "tags": ["source"]}
{"section_id": "8.3.3.16.12", "title": "Dual-Role (Sink Port) Give Source Capabilities Extended State Diagram", "content": "Figure 8-112 shows the state diagram for a Dual-Role device, presently operating as a Sink, on receiving a Get_Source_Cap_Extended Message. See also Section 6.5.1. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 479 Figure 8-112 Dual-Role (Source) Give Sink Capabilities diagram Get_Source_Cap_Extended message PE_SNK_Ready received PE_DR_SNK_Give_Source_Cap_Ext Actions on entry: Get present extended source capabilities from Device Source_Capabilities_Extended Policy Manager Message sent Send Source_Capabilities_Extended message (based on Device Policy Manager response) Power = Explicit Contract PD = Connected", "page_start": 479, "page_end": 479, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-112 shows the state diagram for a Dual-Role device, presently operating as a Sink, on receiving a", "caption": "Figure 8-112 shows the state diagram for a Dual-Role device, presently operating as a Sink, on receiving a", "page": 479}, {"figure_id": "Figure 8-112 Dual-Role (Source) Give Sink Capabilities diagram", "caption": "Figure 8-112 Dual-Role (Source) Give Sink Capabilities diagram", "page": 480}], "subsections": [], "word_count": 78, "tags": ["source", "sink"]}
{"section_id": "8.3.3.16.12.1", "title": "PE_DR_SNK_Give_Source_Cap_Ext State", "content": "The Policy Engine Shall transition to the PE_DR_SNK_Give_Source_Cap_Ext state, from the PE_SNK_Ready state, when a Get_Source_Cap_Extended Message is received. On entry to the PE_DR_SNK_Give_Source_Cap_Ext state the Policy Engine Shall request the present extended Source capabilities from the Device Policy Manager and then send a Source_Capabilities_Extended Message based on these capabilities. The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:  The Source_Capabilities_Extended Message has been successfully sent.", "page_start": 480, "page_end": 479, "content_type": "text", "tables": [], "figures": [{"figure_id": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "caption": "The Policy Engine Shall transition back to the PE_SNK_Ready state (see Figure 8-67) when:", "page": 480}], "subsections": [], "word_count": 72, "tags": ["source"]}
{"section_id": "8.3.3.17", "title": "VCONN Swap State Diagram", "content": "The State Diagram in this section Shall apply to Ports that supply VCONN. Figure 8-113 shows the state operation for a Port on sending or receiving a VCONN Swap request. Page 480 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-113 VCONN Swap State Diagram VCONN Swap required (indication from Device Policy Manager) PE_SRC_Ready or PE_SNK_Ready Reject message received | Message sent Wait message received | VCONN_Swap message received SenderResponseTimer timeout Not presently VCONN Source & PE_VCS_Reject_VCONN_Swap (VCONN Swap not ok | PE_VCS_Evaluate_Swap PE_VCS_Send_Swap Further evaluation Actions on entry: Required) Actions on entry: Actions on entry: Send Reject or Wait message as Get evaluation of VCONN swap Send VCONN_Swap message appropriate request from Device Policy Manager Initialize and run SenderResponseTimer Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected Power = Explicit Contract PD = Connected VCONN Swap ok Accept received & Presently VCONN Source1 Accept received & Not presently VCONN Source1 PE_VCS_Accept_Swap Actions on entry: Send Accept message Power = Explicit Contract PD = Connected Accept message sent & Not presently VCONN Source1 Accept message sent & Presently VCONN Source1 PE_VCS_Wait_for_VCONN PE_VCS_Turn_On_VCONN VCONNOnTimer Timeout Actions on entry: Actions on entry: Start VCONNOnTimer Tell Device Policy Manager to turn on VCONN Power = Explicit Contract PD = Connected Power = Explicit Contract PD = Connected PS_RDY message received VCONN turned on PE_VCS_Turn_Off_VCONN PE_VCS_Send_PS_Rdy Actions on entry: Tell Device Policy Manager to turn off Actions on entry: VCONN Send PS_RDY message Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected UFP VCONN is off Hard Reset: PS_RDY message sent  Consumer/Provider -> PE_SNK_Hard_Reset PE_SRC_Ready or  Provider/Consumer -> PE_SNK_Ready PE_SRC_Hard_Reset 1 A Port is presently the VCONN Source if it has the responsibility for supplying VCONN even if VCONN has been turned off.", "page_start": 480, "page_end": 480, "content_type": "text", "tables": [], "figures": [{"figure_id": "The State Diagram in this section Shall apply to Ports that supply VCONN. Figure 8-113 shows the state operation for a", "caption": "The State Diagram in this section Shall apply to Ports that supply VCONN. Figure 8-113 shows the state operation for a", "page": 480}, {"figure_id": "Figure 8-113 VCONN Swap State Diagram", "caption": "Figure 8-113 VCONN Swap State Diagram", "page": 481}], "subsections": [], "word_count": 303, "tags": []}
{"section_id": "8.3.3.17.1.1", "title": "PE_VCS_Send_Swap State", "content": "The PE_VCS_Send_Swap state is entered from either the PE_SRC_Ready or PE_SNK_Ready state when the Policy Engine receives a request from the Device Policy Manager to perform a VCONN Swap. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 481 On entry to the PE_VCS_Send_Swap state the Policy Engine Shall send a VCONN_Swap Message and start the SenderResponseTimer. The Policy Engine Shall transition to the PE_VCS_Wait_For_VCONN state when:  An Accept Message is received and  DFP current has VCONN turned on. The Policy Engine Shall transition to the PE_VCS_Turn_On_VCONN state when:  An Accept Message is received and  DFP current has VCONN turned off. The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state for a DFP when:  A Reject Message is received or  A Wait Message is received or  The SenderResponseTimer times out.", "page_start": 481, "page_end": 481, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 141, "tags": []}
{"section_id": "8.3.3.17.1.2", "title": "PE_VCS_Evaluate_Swap State", "content": "The PE_VCS_Evaluate_Swap state is entered from either the PE_SRC_Ready or PE_SNK_Ready state when the Policy Engine receives a VCONN_Swap Message. On entry to the PE_VCS_Evaluate_Swap state the Policy Engine Shall request the Device Policy Manager for an evaluation of the VCONN Swap request. Note: Ports that are presently the VCONN Source must always accept a VCONN swap request (see Section 6.3.11). The Policy Engine Shall transition to the PE_VCS_Accept_Swap state when:  The Device Policy Manager indicates that a VCONN Swap is ok. The Policy Engine Shall transition to the PE_VCS_Reject_Swap state when:  The Port is not presently the VCONN Source and  The Device Policy Manager indicates that a VCONN Swap is not ok or  The Device Policy Manager indicates that a VCONN Swap cannot be done at this time.", "page_start": 482, "page_end": 481, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 133, "tags": []}
{"section_id": "8.3.3.17.1.3", "title": "PE_VCS_Accept_Swap State", "content": "On entry to the PE_VCS_Accept_Swap state the Policy Engine Shall send an Accept Message. The Policy Engine Shall transition to the PE_VCS_Wait_For_VCONN state when:  The Accept Message has been sent and  The UFP’s VCONN is on. The Policy Engine Shall transition to the PE_VCS_Turn_On_VCONN state when:  The Accept Message has been sent and  The UFP’s VCONN is off.", "page_start": 482, "page_end": 481, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 62, "tags": []}
{"section_id": "8.3.3.17.1.4", "title": "PE_VCS_Reject_Swap State", "content": "On entry to the PE_VCS_Reject_Swap state the Policy Engine Shall request the Protocol Layer to send:  A Reject Message if the device is unable to perform a VCONN Swap at this time.  A Wait Message if further evaluation of the VCONN Swap request is required. Note: in this case it is expected that the DFP will send a VCONN_Swap Message at a later time. The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state when: Page 482 USB Power Delivery Specification Revision 3.0, Version 1.1  The Reject or Wait Message has been sent.", "page_start": 482, "page_end": 482, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 99, "tags": []}
{"section_id": "8.3.3.17.1.5", "title": "PE_VCS_UFP_Wait_for_VCONN State", "content": "On entry to the PE_VCS_Wait_For_VCONN state the Policy Engine Shall start the VCONNOnTimer. The Policy Engine Shall transition to the PE_VCS_Turn_Off_VCONN state when:  A PS_RDY Message is received. The Policy Engine Shall transition to either the PE_SRC_Hard_Reset or PE_SNK_Hard_Reset state when:  The VCONNOnTimer times out.", "page_start": 483, "page_end": 482, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 47, "tags": []}
{"section_id": "8.3.3.17.1.6", "title": "PE_VCS_Turn_Off_VCONN State", "content": "On entry to the PE_VCS_Turn_Off_VCONN state the Policy Engine Shall tell the Device Policy Manager to turn off VCONN. The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state for a UFP when:  The UFP’s VCONN is off.", "page_start": 483, "page_end": 482, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 42, "tags": []}
{"section_id": "8.3.3.17.1.7", "title": "PE_VCS_Turn_On_VCONN State", "content": "On entry to the PE_VCS_Turn_On_VCONN state the Policy Engine Shall tell the Device Policy Manager to turn on VCONN. The Policy Engine Shall transition to the PE_VCS_Send_Ps_Rdy state when:  The UFP’s VCONN is on.", "page_start": 483, "page_end": 482, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": []}
{"section_id": "8.3.3.17.1.8", "title": "PE_VCS_Send_PS_Rdy State", "content": "On entry to the PE_VCS_Send_Ps_Rdy state the Policy Engine Shall send a PS_RDY Message. The Policy Engine Shall transition back to either the PE_SRC_Ready or PE_SNK_Ready state for a UFP when:  The PS_RDY Message has been sent.", "page_start": 483, "page_end": 482, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": []}
{"section_id": "8.3.3.18", "title": "Initiator Structured VDM State Diagrams", "content": "The State Diagrams in this section Shall apply to all Initiators.", "page_start": 483, "page_end": 482, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "8.3.3.18.1", "title": "Initiator Structured VDM Discover Identity State Diagram", "content": "Figure 8-114 shows the state diagram for an Initiator when discovering the identity of its Port Partner or Cable Plug. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 483 Figure 8-114 Initiator to Port VDM Discover Identity State Diagram PE_INIT_PORT_VDM_Identity_ACKed PE_INIT_PORT_VDM_Identity_NAKed Actions on entry: Actions on entry: Inform DPM of identity Inform DPM of result Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected DPM informed Discover Identity ACK received Discover Identity NAK/BUSY | VDMResponseTimer Timeout PE_INIT_PORT_VDM_Identity_Request Actions on entry: Send Discover Identity request DPM informed Start VDMResponseTimer Power = Explicit Contract PD = Connected DPM requests identity discovery PE_SRC_Ready or PE_SNK_Ready", "page_start": 483, "page_end": 483, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-114 shows the state diagram for an Initiator when discovering the identity of its Port Partner or Cable Plug.", "caption": "Figure 8-114 shows the state diagram for an Initiator when discovering the identity of its Port Partner or Cable Plug.", "page": 483}, {"figure_id": "Figure 8-114 Initiator to Port VDM Discover Identity State Diagram", "caption": "Figure 8-114 Initiator to Port VDM Discover Identity State Diagram", "page": 484}], "subsections": [], "word_count": 108, "tags": []}
{"section_id": "8.3.3.18.1.1", "title": "PE_INIT_PORT_VDM_Identity_Request State", "content": "The Policy Engine transitions to the PE_INIT_PORT_VDM_Identity_Request state from either the PE_SRC_Ready or PE_SNK_Ready state when:  The Device Policy Manager requests the discovery of the identity of the Port Partner. On entry to the PE_INIT_PORT_VDM_Identity_Request state the Policy Engine Shall send a Structured VDM Discover Identity Command request and Shall start the VDMResponseTimer. The Policy Engine Shall transition to the PE_INIT_PORT_VDM_Identity_ACKed state when:  A Structured VDM Discover Identity ACK Command response is received. The Policy Engine Shall transition to the PE_INIT_PORT_VDM_Identity_NAKed state when:  A Structured VDM Discover Identity NAK or BUSY Command response is received or  The VDMResponseTimer times out.", "page_start": 484, "page_end": 483, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 104, "tags": []}
{"section_id": "8.3.3.18.1.2", "title": "PE_INIT_PORT_VDM_Identity_ACKed State", "content": "On entry to the PE_INIT_PORT_VDM_Identity_ACKed state the Policy Engine Shall inform the Device Policy Manager of the Identity information. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state when:  The Device Policy Manager has been informed.", "page_start": 484, "page_end": 483, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 40, "tags": []}
{"section_id": "8.3.3.18.1.3", "title": "PE_INIT_PORT_VDM_Identity_NAKed State", "content": "On entry to the PE_INIT_PORT_VDM_Identity_NAKed state the Policy Engine Shall inform the Device Policy Manager of the result (NAK, BUSY or timeout). The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state when:  The Device Policy Manager has been informed. Page 484 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 484, "page_end": 484, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 53, "tags": []}
{"section_id": "8.3.3.18.2", "title": "Initiator Structured VDM Discover SVIDs State Diagram", "content": "Figure 8-115 shows the state diagram for an Initiator when discovering SVIDs of its Port Partner or Cable Plug. Figure 8-115 Initiator VDM Discover SVIDs State Diagram PE_INIT_VDM_SVIDs_ACKed PE_INIT_VDM_SVIDs_NAKed Actions on entry: Actions on entry: Inform DPM of SVIDs Inform DPM of result Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected DPM informed Discover SVIDs ACK Discover SVIDs NAK/BUSY | received VDMResponseTimer Timeout PE_INIT_VDM_SVIDs_Request Actions on entry: Send Discover SVIDs request DPM informed Start VDMResponseTimer Power = Explicit Contract PD = Connected DPM requests SVIDs discovery PE_SRC_Ready or PE_SNK_Ready", "page_start": 485, "page_end": 484, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-115 shows the state diagram for an Initiator when discovering SVIDs of its Port Partner or Cable Plug.", "caption": "Figure 8-115 shows the state diagram for an Initiator when discovering SVIDs of its Port Partner or Cable Plug.", "page": 485}, {"figure_id": "Figure 8-115 Initiator VDM Discover SVIDs State Diagram", "caption": "Figure 8-115 Initiator VDM Discover SVIDs State Diagram", "page": 485}], "subsections": [], "word_count": 95, "tags": []}
{"section_id": "8.3.3.18.2.1", "title": "PE_INIT_VDM_SVIDs_Request State", "content": "The Policy Engine transitions to the PE_INIT_VDM_SVIDs_Request state from either the PE_SRC_Ready or PE_SNK_Ready state when:  The Device Policy Manager requests the discovery of the SVIDs of the Port Partner or a Cable Plug. On entry to the PE_INIT_VDM_SVIDs_Request state the Policy Engine Shall send a Structured VDM Discover SVIDs Command request and Shall start the VDMResponseTimer. The Policy Engine Shall transition to the PE_INIT_VDM_SVIDs_ACKed state when:  A Structured VDM Discover SVIDs ACK Command response is received. The Policy Engine Shall transition to the PE_INIT_VDM_SVIDs_NAKed state when:  A Structured VDM Discover SVIDs NAK or BUSY Command response is received or  The VDMResponseTimer times out.", "page_start": 485, "page_end": 484, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 108, "tags": []}
{"section_id": "8.3.3.18.2.2", "title": "PE_INIT_VDM_SVIDs_ACKed State", "content": "On entry to the PE_INIT_VDM_SVIDs_ACKed state the Policy Engine Shall inform the Device Policy Manager of the SVIDs information. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state when:  The Device Policy Manager has been informed.", "page_start": 485, "page_end": 484, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 40, "tags": []}
{"section_id": "8.3.3.18.2.3", "title": "PE_INIT_VDM_SVIDs_NAKed State", "content": "On entry to the PE_INIT_VDM_SVIDs_NAKed state the Policy Engine Shall inform the Device Policy Manager of the result (NAK, BUSY or timeout). USB Power Delivery Specification Revision 3.0, Version 1.1 Page 485 The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state when:  The Device Policy Manager has been informed.", "page_start": 485, "page_end": 485, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 53, "tags": []}
{"section_id": "8.3.3.18.3", "title": "Initiator Structured VDM Discover Modes State Diagram", "content": "Figure 8-116 shows the state diagram for an Initiator when discovering Modes of its Port Partner or Cable Plug. Figure 8-116 Initiator VDM Discover Modes State Diagram PE_INIT_VDM_Modes_ACKed PE_INIT_VDM_Modes_NAKed Actions on entry: Actions on entry: Inform DPM of Modes Inform DPM of result Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected DPM informed Discover Modes ACK Discover Modes NAK/BUSY | received VDMResponseTimer Timeout PE_INIT_VDM_Modes_Request Actions on entry: Send Discover Modes request DPM informed Start VDMResponseTimer Power = Explicit Contract PD = Connected DPM requests Modes discovery PE_SRC_Ready or PE_SNK_Ready", "page_start": 486, "page_end": 485, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-116 shows the state diagram for an Initiator when discovering Modes of its Port Partner or Cable Plug.", "caption": "Figure 8-116 shows the state diagram for an Initiator when discovering Modes of its Port Partner or Cable Plug.", "page": 486}, {"figure_id": "Figure 8-116 Initiator VDM Discover Modes State Diagram", "caption": "Figure 8-116 Initiator VDM Discover Modes State Diagram", "page": 486}], "subsections": [], "word_count": 95, "tags": []}
{"section_id": "8.3.3.18.3.1", "title": "PE_INIT_VDM_Modes_Request State", "content": "The Policy Engine transitions to the PE_INIT_VDM_Modes_Request state from either the PE_SRC_Ready or PE_SNK_Ready state when:  The Device Policy Manager requests the discovery of the Modes of the Port Partner or a Cable Plug. On entry to the PE_INIT_VDM_Modes_Request state the Policy Engine Shall send a Structured VDM Discover Modes Command request and Shall start the VDMResponseTimer. The Policy Engine Shall transition to the PE_INIT_VDM_Modes_ACKed state when:  A Structured VDM Discover Modes ACK Command response is received. The Policy Engine Shall transition to the PE_INIT_VDM_Modes_NAKed state when:  A Structured VDM Discover Modes NAK or BUSY Command response is received or  The VDMResponseTimer times out.", "page_start": 486, "page_end": 485, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 108, "tags": []}
{"section_id": "8.3.3.18.3.2", "title": "PE_INIT_VDM_Modes_ACKed State", "content": "On entry to the PE_INIT_VDM_Modes_ACKed state the Policy Engine Shall inform the Device Policy Manager of the Modes information. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state for a DFP when:  The Device Policy Manager has been informed. Page 486 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 486, "page_end": 486, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 53, "tags": []}
{"section_id": "8.3.3.18.3.3", "title": "PE_INIT_VDM_Modes_NAKed State", "content": "On entry to the PE_INIT_VDM_Modes_NAKed state the Policy Engine Shall inform the Device Policy Manager of the result (NAK, BUSY or timeout). The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state for a DFP when:  The Device Policy Manager has been informed.", "page_start": 487, "page_end": 486, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 46, "tags": []}
{"section_id": "8.3.3.18.4", "title": "Initiator Structured VDM Attention State Diagram", "content": "Figure 8-121 shows the state diagram for an Initiator when sending an Attention Command request. Figure 8-117 Initiator VDM Attention State Diagram PE_SRC_Ready or PE_SNK_Ready Attention request Attention Command from DPM request sent PE_INIT_VDM_Attention_Request Actions on entry: Send Attention Command request Power = Explicit Contract PD = Connected", "page_start": 487, "page_end": 486, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-121 shows the state diagram for an Initiator when sending an Attention Command request.", "caption": "Figure 8-121 shows the state diagram for an Initiator when sending an Attention Command request.", "page": 487}, {"figure_id": "Figure 8-117 Initiator VDM Attention State Diagram", "caption": "Figure 8-117 Initiator VDM Attention State Diagram", "page": 487}], "subsections": [], "word_count": 48, "tags": []}
{"section_id": "8.3.3.18.4.1", "title": "PE_INIT_VDM_Attention_Request State", "content": "The Policy Engine transitions to the PE_INIT_VDM_Attention_Request state from either the PE_SRC_Ready or PE_SNK_Ready state when:  When the Device Policy Manager requests attention from its Port Partner. On entry to the PE_INIT_VDM_Attention_Request state the Policy Engine Shall send an Attention Command request. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state when:  The Attention Command request has been sent.", "page_start": 487, "page_end": 486, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 64, "tags": []}
{"section_id": "8.3.3.19", "title": "Responder Structured VDM State Diagrams", "content": "The State Diagrams in this section Shall apply to all Responders that are not Cable Plugs.", "page_start": 487, "page_end": 486, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 16, "tags": []}
{"section_id": "8.3.3.19.1", "title": "Responder Structured VDM Discover Identity State Diagram", "content": "Figure 8-118 shows the state diagram for a Responder receiving a Discover Identity Command request. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 487 Figure 8-118 Responder Structured VDM Discover Identity State Diagram PE_RESP_VDM__Get_Identity_NAK PE_RESP_VDM__Get_Identity PE_RESP_VDM__Send_Identity Actions on entry: DPM says Actions on entry: Identity information Actions on entry: Send Discover Identity NAK/BUSY Command NAK/BUSY Request Identity information from DPM from DPM Send Discover Identity ACK response as requested Power = Explicit Contract Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected PD = Connected Discover Ide s n e t n it t y NAK/BUSY Disco r v e e q r u I e d s e t ntity Discover s I e d n e t ntity ACK PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready", "page_start": 487, "page_end": 487, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-118 shows the state diagram for a Responder receiving a Discover Identity Command request.", "caption": "Figure 8-118 shows the state diagram for a Responder receiving a Discover Identity Command request.", "page": 487}, {"figure_id": "Figure 8-118 Responder Structured VDM Discover Identity State Diagram", "caption": "Figure 8-118 Responder Structured VDM Discover Identity State Diagram", "page": 488}], "subsections": [], "word_count": 131, "tags": []}
{"section_id": "8.3.3.19.1.1", "title": "PE_RESP_VDM_Get_Identity State", "content": "The Policy Engine transitions to the PE_RESP_VDM_Get_Identity state from either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state when:  A Structured VDM Discover Identity Command request is received. On entry to the PE_RESP_VDM_Get_Identity state the Responder Shall request identity information from the Device Policy Manager. The Policy Engine Shall transition to the PE_RESP_VDM_Send_Identity state when:  Identity information is received from the Device Policy Manager. The Policy Engine Shall transition to the PE_RESP_VDM_Get_Identity_NAK state when:  The Device Policy Manager indicates that the response to the Discover Identity Command request is NAK or BUSY.", "page_start": 488, "page_end": 487, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 93, "tags": []}
{"section_id": "8.3.3.19.1.2", "title": "PE_RESP_VDM_Send_Identity State", "content": "On entry to the PE_RESP_VDM_Send_Identity state the Responder Shall send the Structured VDM Discover Identity ACK Command response. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state for a UFP when:  The Structured VDM Discover Identity ACK Command response has been sent.", "page_start": 488, "page_end": 487, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 46, "tags": []}
{"section_id": "8.3.3.19.1.3", "title": "PE_RESP_VDM_Get_Identity_NAK State", "content": "On entry to the PE_RESP_VDM_Get_Identity_NAK state the Policy Engine Shall send a Structured VDM Discover Identity NAK or BUSY Command response as indicated by the Device Policy Manager. The Policy Engine Shall transition to either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state when:  The Structured VDM Discover Identity NAK or BUSY Command response has been sent.", "page_start": 488, "page_end": 487, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 56, "tags": []}
{"section_id": "8.3.3.19.2", "title": "Responder Structured VDM Discover SVIDs State Diagram", "content": "Figure 8-119 shows the state diagram for a Responder when receiving a Discover SVIDs Command. Page 488 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-119 Responder Structured VDM Discover SVIDs State Diagram PE_RESP_VDM__Get_SVIDs_NAK PE_RESP_VDM__Get_SVIDs PE_RESP_VDM__Send_SVID s Actions on entry: DPM says Actions on entry: SVIDs information Actions on entry: Send Discover SVIDs NAK/BUSY Command NAK/BUSY Request SVIDs information from DPM from DPM Send Discover SVIDs ACK response as requested Power = Explicit Contract Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected PD = Connected Discover SV s I e D n s t NAK/BUSY Disc r o e v q e u r e S s V t IDs Discove s r e S n V t IDs ACK PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready", "page_start": 488, "page_end": 488, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-119 shows the state diagram for a Responder when receiving a Discover SVIDs Command.", "caption": "Figure 8-119 shows the state diagram for a Responder when receiving a Discover SVIDs Command.", "page": 488}, {"figure_id": "Figure 8-119 Responder Structured VDM Discover SVIDs State Diagram", "caption": "Figure 8-119 Responder Structured VDM Discover SVIDs State Diagram", "page": 489}], "subsections": [], "word_count": 131, "tags": []}
{"section_id": "8.3.3.19.2.1", "title": "PE_RESP_VDM_Get_SVIDs State", "content": "The Policy Engine transitions to the PE_RESP_VDM_Get_SVIDs state from either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state when:  A Structured VDM Discover SVIDs Command request is received. On entry to the PE_RESP_VDM_Get_SVIDs state the Responder Shall request SVIDs information from the Device Policy Manager. The Policy Engine Shall transition to the PE_RESP_VDM_Send_SVIDs state when:  SVIDs information is received from the Device Policy Manager. The Policy Engine Shall transition to the PE_RESP_VDM_Get_SVIDs_NAK state when:  The Device Policy Manager indicates that the response to the Discover SVIDs Command request is NAK or BUSY.", "page_start": 489, "page_end": 488, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 93, "tags": []}
{"section_id": "8.3.3.19.2.2", "title": "PE_UFP_VDM_Send_SVIDs State", "content": "On entry to the PE_RESP_VDM_Send_SVIDs state the Responder Shall send the Structured VDM Discover SVIDs ACK Command response. The Policy Engine Shall transition to either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state when:  The Structured VDM Discover SVIDs ACK Command response has been sent.", "page_start": 489, "page_end": 488, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 44, "tags": []}
{"section_id": "8.3.3.19.2.3", "title": "PE_UFP_VDM_Get_SVIDs_NAK State", "content": "On entry to the PE_RESP_VDM_Get_SVIDs_NAK state the Policy Engine Shall send a Structured VDM Discover SVIDs NAK or BUSY Command response as indicated by the Device Policy Manager. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state when:  The Structured VDM Discover SVIDs NAK or BUSY Command response has been sent.", "page_start": 489, "page_end": 488, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 55, "tags": []}
{"section_id": "8.3.3.19.3", "title": "Responder Structured VDM Discover Modes State Diagram", "content": "Figure 8-120 shows the state diagram for a Responder on receiving a Discover Modes Command. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 489 Figure 8-120 Responder Structured VDM Discover Modes State Diagram PE_RESP_VDM__Get_Modes PE_RESP_VDM__Get_Modes PE_RESP_VDM__Send_Mod _NAK es Actions on entry: DPM says Actions on entry: Modes information Actions on entry: Send Discover Modes NAK/BUSY Command NAK/BUSY Request Modes information from DPM from DPM Send Discover Modes ACK response as requested Power = Explicit Contract Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected PD = Connected Discover Mo s d en es t NAK/BUSY Disc r o e v q e u r e M st odes Discover s e M n o t des ACK PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready", "page_start": 489, "page_end": 489, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-120 shows the state diagram for a Responder on receiving a Discover Modes Command.", "caption": "Figure 8-120 shows the state diagram for a Responder on receiving a Discover Modes Command.", "page": 489}, {"figure_id": "Figure 8-120 Responder Structured VDM Discover Modes State Diagram", "caption": "Figure 8-120 Responder Structured VDM Discover Modes State Diagram", "page": 490}], "subsections": [], "word_count": 127, "tags": []}
{"section_id": "8.3.3.19.3.1", "title": "PE_RESP_VDM_Get_Modes State", "content": "The Policy Engine transitions to the PE_RESP_VDM_Get_Modes state from either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state when:  A Structured VDM Discover Modes Command request is received. On entry to the PE_RESP_VDM_Get_Modes state the Responder Shall request Modes information from the Device Policy Manager. The Policy Engine Shall transition to the PE_RESP_VDM_Send_Modes state when:  Modes information is received from the Device Policy Manager. The Policy Engine Shall transition to the PE_RESP_VDM_Get_Modes_NAK state when:  The Device Policy Manager indicates that the response to the Discover Modes Command request is NAK or BUSY.", "page_start": 490, "page_end": 489, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 93, "tags": []}
{"section_id": "8.3.3.19.3.2", "title": "PE_RESP_VDM_Send_Modes State", "content": "On entry to the PE_RESP_VDM_Send_Modes state the Responder Shall send the Structured VDM Discover Modes ACK Command response. The Policy Engine Shall transition to either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state when:  The Structured VDM Discover Modes ACK Command response has been sent.", "page_start": 490, "page_end": 489, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 44, "tags": []}
{"section_id": "8.3.3.19.3.3", "title": "PE_RESP_VDM_Get_Modes_NAK State", "content": "On entry to the PE_RESP_VDM_Get_Modes_NAK state the Policy Engine Shall send a Structured VDM Discover Modes NAK or BUSY Command response as indicated by the Device Policy Manager. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state when:  The Structured VDM Discover Modes NAK or BUSY Command response has been sent.", "page_start": 490, "page_end": 489, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 55, "tags": []}
{"section_id": "8.3.3.19.4", "title": "Receiving a Structured VDM Attention State Diagram", "content": "Figure 8-121 shows the state diagram when receiving an Attention Command request. Page 490 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-121 Receiving a Structured VDM Attention State Diagram PE_SRC_Ready or PE_SNK_Ready Attention Command request received DPM informed PE_RCV_VDM_Attention_Request Actions on entry: Inform Device Policy Manager of Attention Command request Power = Explicit Contract PD = Connected", "page_start": 490, "page_end": 490, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-121 shows the state diagram when receiving an Attention Command request.", "caption": "Figure 8-121 shows the state diagram when receiving an Attention Command request.", "page": 490}, {"figure_id": "Figure 8-121 Receiving a Structured VDM Attention State Diagram", "caption": "Figure 8-121 Receiving a Structured VDM Attention State Diagram", "page": 491}], "subsections": [], "word_count": 59, "tags": []}
{"section_id": "8.3.3.19.4.1", "title": "PE_RCV_VDM_Attention_Request State", "content": "The Policy Engine transitions to the PE_RCV_VDM_Attention_Request state from either the PE_SRC_Ready or PE_SNK_Ready state when:  An Attention Command request is received. On entry to the PE_RCV_VDM_Attention_Request state the Policy Engine Shall inform the Device Policy Manager of the Attention Command request. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state when:  The Device Policy Manager has been informed.", "page_start": 491, "page_end": 490, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 64, "tags": []}
{"section_id": "8.3.3.20", "title": "DFP Structured VDM State Diagrams", "content": "The State Diagrams in this section Shall apply to all DFPs that support Structured VDMs.", "page_start": 491, "page_end": 490, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": []}
{"section_id": "8.3.3.20.1", "title": "DFP Structured VDM Mode Entry State Diagram", "content": "Figure 8-122 shows the state operation for a DFP when entering a Mode. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 491 Figure 8-122 DFP VDM Mode Entry State Diagram PE_DFP_VDM_Mode_Entry_ACKed PE_DFP_VDM_Mode_Entry_NAKed Actions on entry: Actions on entry: Request DPM to enter the mode Inform DPM of reason for failure Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected Mode Entry ACK received Mode Entry NAK/BUSY Received | Mode entered VDMModeEntryTimer timeout | PE_DFP_VDM_Mode_Entry_Request Protocol Error3 Actions on entry: Send Mode Entry request DPM informed2 Start VDMModeEntryTimer Power = Explicit Contract PD = Connected DPM requests Mode entry1 PE_SRC_Ready or PE_SNK_Ready (DFP) 1 The Device Policy Manager Shall have placed the system into USB Safe State before issuing this request when entering Modal operation. 2 The Device Policy Manager Shall have returned the system to USB operation if not in Modal operation at this point. 3 Protocol Errors are handled by informing the DPM, returning to USB Safe State and then processing the Message once the PE_SRC_Ready or PE_SNK_Ready state has been entered.", "page_start": 491, "page_end": 491, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-122 shows the state operation for a DFP when entering a Mode.", "caption": "Figure 8-122 shows the state operation for a DFP when entering a Mode.", "page": 491}, {"figure_id": "Figure 8-122 DFP VDM Mode Entry State Diagram", "caption": "Figure 8-122 DFP VDM Mode Entry State Diagram", "page": 492}], "subsections": [], "word_count": 179, "tags": []}
{"section_id": "8.3.3.20.1.1", "title": "PE_DFP_VDM_Mode_Entry_Request State", "content": "The Policy Engine transitions to the PE_DFP_VDM_Mode_Entry_Request state from either the PE_SRC_Ready or PE_SNK_Ready state for a DFP when:  The Device Policy Manager requests that the Port Partner or a Cable Plug enter a Mode. On entry to the PE_DFP_VDM_Mode_Entry_Request state the Policy Engine Shall send a Structured VDM Enter Mode Command request and Shall start the VDMModeEntryTimer. The Policy Engine Shall transition to the PE_DFP_VDM_Mode_Entry_ACKed state when:  A Structured VDM Enter Mode ACK Command response is received. The Policy Engine Shall transition to the PE_DFP_VDM_Mode_Entry_NAKed state when:  A Structured VDM Enter Mode NAK or BUSY Command response is received or  The VDMModeEntryTimer times out.", "page_start": 492, "page_end": 491, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 109, "tags": []}
{"section_id": "8.3.3.20.1.2", "title": "PE_DFP_VDM_Mode_Entry_ACKed State", "content": "On entry to the PE_DFP_VDM_Mode_Entry_ACKed state the Policy Engine Shall request the Device Policy Manager to enter the Mode. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state for a DFP when:  The Mode has been entered. Page 492 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 492, "page_end": 492, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 51, "tags": []}
{"section_id": "8.3.3.20.1.3", "title": "PE_DFP_VDM_Mode_Entry_NAKed State", "content": "On entry to the PE_DFP_VDM_Mode_Entry_NAKed state the Policy Engine Shall inform the Device Policy Manager of the reason for failure (NAK, BUSY, timeout or Protocol Error). The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state for a DFP when:  The Device Policy Manager has been informed.", "page_start": 493, "page_end": 492, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 50, "tags": []}
{"section_id": "8.3.3.20.2", "title": "DFP Structured VDM Mode Exit State Diagram", "content": "Figure 8-123 shows the state diagram for a DFP when exiting a Mode. Figure 8-123 DFP VDM Mode Exit State Diagram PE_SRC_Ready or PE_SNK_Ready (DFP) DPM indicates DPM informed1 Mode exit PE_DFP_VDM_Mode_Exit_Request Actions on entry: Send Exit Mode request Start VDMModeExitTimer Exit Mode BUSY Received | Power = Explicit Contract VDMModeExitTimer Timeout PD = Connected Exit Mode ACK/NAK received PE_DFP_VDM_Exit_Mode_ACKed PE_SRC_Hard_Reset or Actions on entry: PE_SNK_Hard_Reset Inform DPM of ACK or NAK (DFP) Power = Explicit Contract PD = Connected 1 The Device Policy Manager is required to return the system to USB operation at this point when exiting Modal Operation.", "page_start": 493, "page_end": 492, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-123 shows the state diagram for a DFP when exiting a Mode.", "caption": "Figure 8-123 shows the state diagram for a DFP when exiting a Mode.", "page": 493}, {"figure_id": "Figure 8-123 DFP VDM Mode Exit State Diagram", "caption": "Figure 8-123 DFP VDM Mode Exit State Diagram", "page": 493}], "subsections": [], "word_count": 101, "tags": []}
{"section_id": "8.3.3.20.2.1", "title": "PE_DFP_VDM_Mode_Exit_Request State", "content": "The Policy Engine transitions to the PE_DFP_VDM_Mode_Exit_Request state from either the PE_SRC_Ready or PE_SNK_Ready state for a DFP when:  The Device Policy Manager requests that the Port Partner or a Cable Plug exit a Mode. On entry to the PE_DFP_VDM_Mode_Exit_Request state the Policy Engine Shall send a Structured VDM Exit Mode Command request and Shall start the VDMModeExitTimer. The Policy Engine Shall transition to the PE_DFP_VDM_Mode_Exit_ACKed state when:  A Structured VDM Exit Mode ACK or NAK Command response is received. The Policy Engine Shall transition to either the PE_SRC_Hard_Reset or PE_SNK_Hard_Reset state depending on the present Power Role when:  A Structured VDM Exit Mode BUSY Command response is received or USB Power Delivery Specification Revision 3.0, Version 1.1 Page 493  The VDMModeExitTimer times out.", "page_start": 493, "page_end": 493, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 128, "tags": []}
{"section_id": "8.3.3.20.2.2", "title": "PE_DFP_VDM_DFP_Mode_Exit_ACKed State", "content": "On Exit to the PE_DFP_VDM_Mode_Exit_ACKed state the Policy Engine Shall inform the Device Policy Manager Of the result: ACK or NAK. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state for a DFP when:  The Device Policy Manager has been informed.", "page_start": 494, "page_end": 493, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 45, "tags": []}
{"section_id": "8.3.3.21", "title": "UFP Structured VDM State Diagrams", "content": "The State Diagrams in this section Shall apply to all UFPs that support Structured VDMs.", "page_start": 494, "page_end": 493, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": []}
{"section_id": "8.3.3.21.1", "title": "UFP Structured VDM Enter Mode State Diagram", "content": "Figure 8-124 shows the state diagram for a UFP in response to an Enter Mode Command. Figure 8-124 UFP Structured VDM Enter Mode State Diagram PE_SRC_Ready or PE_SNK_Ready (UFP) Actions on entry: Power = Explicit Contract PD = Connected Enter Modes request1 Enter Mode NAK sent PE_UFP_VDM__Evaluate_Mode_Entry DPM says Actions on entry: NAK Request DPM to evaluate request to enter a Mode Cable = Awake PD = Connected Enter Mode ACK sent DPM says Mode entered PE_UFP_VDM__Mode_Entry PE_UFP_VDM__Mode_Entry_ACK _NAK Actions on entry: Send Enter Mode NAK Command response as Actions on entry: requested Send Enter Mode ACK Command Cable = Awake Cable = Awake PD = Connected PD = Connected", "page_start": 494, "page_end": 493, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-124 shows the state diagram for a UFP in response to an Enter Mode Command.", "caption": "Figure 8-124 shows the state diagram for a UFP in response to an Enter Mode Command.", "page": 494}, {"figure_id": "Figure 8-124 UFP Structured VDM Enter Mode State Diagram", "caption": "Figure 8-124 UFP Structured VDM Enter Mode State Diagram", "page": 494}], "subsections": [], "word_count": 110, "tags": []}
{"section_id": "1", "title": "The UFP is required to be in USB operation or USB Safe State at this point.", "content": "", "page_start": 494, "page_end": 493, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.3.21.1.1", "title": "PE_UFP_VDM_Evaluate_Mode_Entry State", "content": "The Policy Engine transitions to the PE_UFP_VDM_Evaluate_Mode_Entry state from either the PE_SRC_Ready or PE_SNK_Ready state for a UFP when:  A Structured VDM Enter Mode Command request is received from the DFP. On Entry to the PE_UFP_VDM_Evaluate_Mode_Entry state the Policy Engine Shall request the Device Policy Manager to evaluate the Enter Mode Command request and enter the Mode indicated in the Command request if the request is acceptable. The Policy Engine Shall transition to the PE_UFP_VDM_Mode_Entry_ACK state when:  The Device Policy Manager indicates that the Mode has been entered. The Policy Engine Shall transition to the PE_UFP_VDM_Mode_Entry_NAK state when: Page 494 USB Power Delivery Specification Revision 3.0, Version 1.1  The Device Policy Manager indicates that the response to the Mode request is NAK.", "page_start": 494, "page_end": 494, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 125, "tags": []}
{"section_id": "8.3.3.21.1.2", "title": "PE_UFP_VDM_Mode_Entry_ACK State", "content": "On entry to the PE_UFP_VDM_Mode_Entry_ACK state the Policy Engine Shall send a Structured VDM Enter Mode ACK Command response. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state for a UFP when:  The Structured VDM Enter Mode ACK Command response has been sent.", "page_start": 495, "page_end": 494, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 47, "tags": []}
{"section_id": "8.3.3.21.1.3", "title": "PE_UFP_VDM_Mode_Entry_NAK State", "content": "On entry to the PE_UFP_VDM_Mode_Entry_NAK state the Policy Engine Shall send a Structured VDM Enter Mode NAK Command response as indicated by the Device Policy Manager. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state for a UFP when:  The Structured VDM Enter Mode NAK Command response has been sent.", "page_start": 495, "page_end": 494, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 54, "tags": []}
{"section_id": "8.3.3.21.2", "title": "UFP Structured VDM Exit Mode State Diagram", "content": "Figure 8-125 shows the state diagram for a UFP in response to an Exit Mode Command. Figure 8-125 UFP Structured VDM Exit Mode State Diagram PE_SRC_Ready or PE_SNK_Ready (UFP) Actions on entry: Power = Explicit Contract PD = Connected Exit Mode request received PE_UFP_VDM__Mode_Exit Actions on entry: Request DPM to evaluate request to exit the requested Mode Exit Mode NAK sent Power = Explicit Contract DPM says NAK PD = Connected Exit Mode ACK sent1 Mode exited PE_UFP_VDM__Mode_Exit_ PE_UFP_VDM__Mode_Exit_ Actions on entry: ACK Actions on entry: NAK Send Exit Mode ACK Command Send Exit Mode NAK Command Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected", "page_start": 495, "page_end": 494, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-125 shows the state diagram for a UFP in response to an Exit Mode Command.", "caption": "Figure 8-125 shows the state diagram for a UFP in response to an Exit Mode Command.", "page": 495}, {"figure_id": "Figure 8-125 UFP Structured VDM Exit Mode State Diagram", "caption": "Figure 8-125 UFP Structured VDM Exit Mode State Diagram", "page": 495}], "subsections": [], "word_count": 111, "tags": []}
{"section_id": "1", "title": "The UFP is required to be in USB operation or USB Safe State at this point.", "content": "", "page_start": 495, "page_end": 494, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.3.21.2.1", "title": "PE_UFP_VDM_Mode_Exit State", "content": "The Policy Engine transitions to the PE_UFP_VDM_Mode_Exit state from either the PE_SRC_Ready or PE_SNK_Ready state for a UFP when:  A Structured VDM Exit Mode Command request is received from the DFP. On entry to the PE_UFP_VDM_Mode_Exit state the Policy Engine Shall request the Device Policy Manager to exit the Mode indicated in the Command. The Policy Engine Shall transition to the PE_UFP_VDM_Mode_Exit_ACK state when: USB Power Delivery Specification Revision 3.0, Version 1.1 Page 495  The Device Policy Manger indicates that the Mode has been exited. The Policy Engine Shall transition to the PE_UFP_VDM_Mode_Exit_NAK state when:  The Device Policy Manager indicates that the Command response to the Exit Mode Command request is NAK.", "page_start": 495, "page_end": 495, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 115, "tags": []}
{"section_id": "8.3.3.21.2.2", "title": "PE_CBL_Mode_Exit_ACK State", "content": "On entry to the PE_UFP_VDM_Mode_Exit_ACK state the Policy Engine Shall send a Structured VDM Exit Mode ACK Command response. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state for a UFP when:  The Structured VDM Exit Mode ACK Command response has been sent.", "page_start": 496, "page_end": 495, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 47, "tags": []}
{"section_id": "8.3.3.21.2.3", "title": "PE_UFP_VDM_Mode_Exit_NAK State", "content": "On entry to the PE_UFP_VDM_Mode_Exit_NAK state the Policy Engine Shall send a Structured VDM Exit Mode NAK Command response as indicated by the Device Policy Manager. The Policy Engine Shall transition to either the either the PE_SRC_Ready or PE_SNK_Ready state for a UFP when:  The Structured VDM Exit Mode NAK Command response has been sent.", "page_start": 496, "page_end": 495, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 56, "tags": []}
{"section_id": "8.3.3.22", "title": "Cable Plug Specific State Diagrams", "content": "The State Diagrams in this section Shall apply to all Cable Plugs that support Structured VDMs.", "page_start": 496, "page_end": 495, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 16, "tags": ["cable"]}
{"section_id": "8.3.3.22.1", "title": "Cable Plug Cable Ready State Diagram", "content": "Figure 8-126 shows the Cable Ready state diagram for a Cable Plug. Figure 8-126 Cable Ready VDM State Diagram Power up | Hard Reset Complete | Cable Reset Complete PE_CBL__Ready Actions on entry: Cable = Awake/Asleep PD = Not Connected/Connected", "page_start": 496, "page_end": 495, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-126 shows the Cable Ready state diagram for a Cable Plug.", "caption": "Figure 8-126 shows the Cable Ready state diagram for a Cable Plug.", "page": 496}, {"figure_id": "Figure 8-126 Cable Ready VDM State Diagram", "caption": "Figure 8-126 Cable Ready VDM State Diagram", "page": 496}], "subsections": [], "word_count": 40, "tags": ["cable"]}
{"section_id": "8.3.3.22.1.1", "title": "PE_CBL_Ready State", "content": "The PE_CBL_Ready state shown in the following sections is the normal operational state for a Cable Plug and where it starts after power up or a Hard/Cable Reset.", "page_start": 496, "page_end": 495, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": []}
{"section_id": "8.3.3.22.2", "title": "Soft/Hard/Cable Reset", "content": "", "page_start": 496, "page_end": 495, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["cable"]}
{"section_id": "8.3.3.22.2.1", "title": "Cable Plug Soft Reset State Diagram", "content": "Figure 8-127 shows the Cable Plug state diagram on reception of a Soft_Reset Message. Page 496 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 8-127 Cable Plug Soft Reset State Diagram PE_CBL_Ready Accept message sent PE_CBL_Soft_Reset Transmission Error indication Actions on entry: from Protocol Layer Reset Protocol Layer PE_CBL_Hard_Reset Send Accept message Cable = Awake PD = Connected Soft Reset message received", "page_start": 496, "page_end": 496, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-127 shows the Cable Plug state diagram on reception of a Soft_Reset Message.", "caption": "Figure 8-127 shows the Cable Plug state diagram on reception of a Soft_Reset Message.", "page": 496}, {"figure_id": "Figure 8-127 Cable Plug Soft Reset State Diagram", "caption": "Figure 8-127 Cable Plug Soft Reset State Diagram", "page": 497}], "subsections": [], "word_count": 63, "tags": ["cable"]}
{"section_id": "8.3.3.22.2.1.1", "title": "PE_CBL_Soft_Reset State", "content": "The PE_CBL_Soft_Reset state Shall be entered from any state when a Reset Message is received from the Protocol Layer. On entry to the PE_CBL_Soft_Reset state the Policy Engine Shall reset the Protocol Layer in the Cable Plug and Shall then request the Protocol Layer to send an Accept Message. The Policy Engine Shall transition to the PE_CBL_Ready state when:  The Accept Message has been sent. The Policy Engine Shall transition to the PE_CBL_Hard_Reset state when:  The Protocol Layer indicates that a transmission error has occurred.", "page_start": 497, "page_end": 496, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 87, "tags": []}
{"section_id": "8.3.3.22.2.2", "title": "Cable Plug Hard Reset State Diagram", "content": "Figure 8-128 shows the Cable Plug state diagram for a Hard Reset or Cable Reset. Figure 8-128 Cable Plug Hard Reset State Diagram Hard Reset signalling Received | Cable Reset Command PE_CBL_Hard_Reset Actions on entry: Reset Cable Plug Cable = Awake/Asleep PD = Not Connected Cable reset complete PE_CBL_Ready USB Power Delivery Specification Revision 3.0, Version 1.1 Page 497", "page_start": 497, "page_end": 497, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-128 shows the Cable Plug state diagram for a Hard Reset or Cable Reset.", "caption": "Figure 8-128 shows the Cable Plug state diagram for a Hard Reset or Cable Reset.", "page": 497}, {"figure_id": "Figure 8-128 Cable Plug Hard Reset State Diagram", "caption": "Figure 8-128 Cable Plug Hard Reset State Diagram", "page": 497}], "subsections": [], "word_count": 59, "tags": ["cable"]}
{"section_id": "8.3.3.22.2.2.1", "title": "PE_CBL_Hard_Reset State", "content": "The PE_CBL_Hard_Reset state Shall be entered from any state when either Hard Reset Signaling or Cable Reset Signaling is detected. On entry to the PE_CBL_Hard_Reset state the Policy Engine Shall reset the Cable Plug (equivalent to a power cycle). The Policy Engine Shall transition to the PE_CBL_Ready state when:  The Cable Plug reset is complete.", "page_start": 498, "page_end": 497, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 56, "tags": []}
{"section_id": "8.3.3.22.2.3", "title": "DFP Soft Reset or Cable Reset of a Cable Plug State Diagram", "content": "Figure 8-129 below shows the state diagram for the Policy Engine in a DFP when performing a Soft Reset or Cable Reset of a Cable Plug. The following sections describe operation in each of the states. Figure 8-129 DFP Soft Reset or Cable Reset of a Cable Plug State Diagram Accept message PE_SRC_Ready or PE_SNK_Ready received (DFP) Cable Reset sent SenderResponseTimer Timeout | PE_DFP_CBL_Send_Soft_Reset PE_DFP_CBL_Send_Cable_Reset Transmission Error indication Actions on entry: Actions on entry: from Protocol Layer Reset Protocol Layer Turn on VCONN Send Soft Reset message Send Cable Reset message Initialize and run SenderResponseTimer Power = DefauIt/Implicit or Explicit Contract PD = Connected Power = DefauIt/Implicit or Explicit Contract PD = Connected Cable Reset Request Message not sent after retries (no GoodCRC received)1 | from Device Policy Manager Protocol error detected", "page_start": 498, "page_end": 497, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-129 below shows the state diagram for the Policy Engine in a DFP when performing a Soft Reset or Cable", "caption": "Figure 8-129 below shows the state diagram for the Policy Engine in a DFP when performing a Soft Reset or Cable", "page": 498}, {"figure_id": "Figure 8-129 DFP Soft Reset or Cable Reset of a Cable Plug State Diagram", "caption": "Figure 8-129 DFP Soft Reset or Cable Reset of a Cable Plug State Diagram", "page": 498}], "subsections": [], "word_count": 132, "tags": ["cable"]}
{"section_id": "1", "title": "Excludes the Soft_Reset Message itself.", "content": "", "page_start": 498, "page_end": 497, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["messages"]}
{"section_id": "8.3.3.22.2.3.1", "title": "PE_DFP_CBL_Send_Soft_Reset State", "content": "The PE_DFP_CBL_Send_Soft_Reset state Shall be entered from any state when a Protocol Error is detected by the Protocol Layer (see Section 6.8.1) when a Message has not been sent after retries while communicating with a Cable Plug or whenever the Device Policy Manager directs a Soft Reset. On entry to the PE_DFP_CBL_Send_Soft_Reset state the Policy Engine Shall request the Protocol Layer to perform a Soft Reset, then Shall send a Soft_Reset Message to the Cable Plug, and initialize and run the SenderResponseTimer. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state, depending on the DFP’s Power Role, when:  An Accept Message has been received. The Policy Engine Shall transition to the PE_DFP_CBL_Send_Cable_Reset state when:  A SenderResponseTimer timeout occurs  Or the Protocol Layer indicates that a transmission error has occurred. Page 498 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 498, "page_end": 498, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 145, "tags": []}
{"section_id": "8.3.3.22.2.3.2", "title": "PE_DFP_CBL_Send_Cable_Reset State", "content": "The PE_DFP_CBL_Send_Cable_Reset state Shall be entered from any state when the Device Policy Manager requests a Cable Reset. On entry to the PE_DFP_CBL_Send_Cable_Reset state the Policy Engine Shall request the Protocol Layer to send Cable Reset Signaling. The Policy Engine Shall transition to either the PE_SRC_Ready or PE_SNK_Ready state, depending on the DFP’s Power Role, when:  Cable Reset Signaling has been sent.", "page_start": 499, "page_end": 498, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 63, "tags": ["cable"]}
{"section_id": "8.3.3.22.2.4", "title": "UFP Source Soft Reset of a Cable Plug State Diagram", "content": "Figure 8-130 below shows the state diagram for the Policy Engine in a UFP Source, prior to an Explicit Contract, when performing a Soft Reset of a Cable Plug. The following sections describe operation in each of the states. Figure 8-130 UFP Source Soft Reset of a Cable Plug State Diagram PE_SRC_Ready (UFP) Accept message Received | SenderResponseTimer Timeout | Transmission Error indication from Protocol Layer PE_UFP_CBL_Send_Soft_Reset Actions on entry: Reset Protocol Layer Send Soft Reset message Initialize and run SenderResponseTimer Power = DefauIt/Implicit or Explicit Contract PD = Connected Message not sent after retries (no GoodCRC received)1 | Protocol error detected", "page_start": 499, "page_end": 498, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-130 below shows the state diagram for the Policy Engine in a UFP Source, prior to an Explicit Contract, when", "caption": "Figure 8-130 below shows the state diagram for the Policy Engine in a UFP Source, prior to an Explicit Contract, when", "page": 499}, {"figure_id": "Figure 8-130 UFP Source Soft Reset of a Cable Plug State Diagram", "caption": "Figure 8-130 UFP Source Soft Reset of a Cable Plug State Diagram", "page": 499}], "subsections": [], "word_count": 102, "tags": ["cable", "source"]}
{"section_id": "1", "title": "Excludes the Soft_Reset Message itself.", "content": "", "page_start": 499, "page_end": 498, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["messages"]}
{"section_id": "8.3.3.22.2.4.1", "title": "PE_UFP_CBL_Send_Soft_Reset State", "content": "The PE_UFP_CBL_Send_Soft_Reset state Shall be entered from any state when a Protocol Error is detected by the Protocol Layer, when a Message has not been sent after retries while communicating with a Cable Plug or whenever the Device Policy Manager directs a Soft Reset. Note that there are corner cases that are not shown in the defined state diagrams that could be handled without generating a Protocol Error. On entry to the PE_UFP_CBL_Send_Soft_Reset state the Policy Engine Shall request the Protocol Layer to perform a Soft Reset, then Shall send a Soft_Reset Message to the Cable Plug, and initialize and run the SenderResponseTimer. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 499 The Policy Engine Shall transition to the PE_SRC_Ready state when:  An Accept Message has been received  Or a SenderResponseTimer timeout occurs  Or the Protocol Layer indicates that a transmission error has occurred.", "page_start": 499, "page_end": 499, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 148, "tags": []}
{"section_id": "8.3.3.22.3", "title": "Source Startup Structured VDM Discover Identity of a Cable Plug State Diagram", "content": "Figure 8-131 shows the state diagram for Source discovery of identity information from a Cable Plug during the startup sequence. Figure 8-131 Source Startup Structured VDM Discover Identity State Diagram PE_SRC_Startup DPM requests identity discovery & Protocol Layer Reset Complete PE_SRC_VDM_Identity_Request Actions on entry: Send Discover Identity request Increment the DiscoverIdentityCounter Start VDMResponseTimer Power = No or Implicit Contract Discover Identity NAK/BUSY | DPM requests identity discovery & Cable Plug = Not PD Connected VDMResponseTimer Timeout | DiscoverIdentityCounter < nDiscoverIdentityCount2 Discover Identity request sending failure (without GoodCRC) Discover Identity ACK received PE_SRC_VDM_Identity_ACKed PE_SRC_VDM_Identity_NAKed Actions on entry: Actions on entry: Inform DPM of identity Inform DPM of result Power = No or Implicit Contract Power =No or Implicit Contract Cable Plug = PD Connected Cable Plug = PD Connected DPM informed DPM informed PE_SRC_Send_Capabilities or PE_SRC_Discovery PE_SRC_Discovery1 1 If the Discover Identity Command is being sent at startup then the Policy Engine will subsequently transition to the PE_SRC_Send_Capabilities state as normal. Otherwise the Policy Engine will transition to the PE_SRC_Discovery state. 2 The SourceCapabilityTimer continues to run during the states defined in this diagram even though there has been an exit from the PE_SRC_Discovery state. This ensures that Source_Capabilities Messages are sent out at a regular rate.", "page_start": 500, "page_end": 499, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-131 shows the state diagram for Source discovery of identity information from a Cable Plug during the", "caption": "Figure 8-131 shows the state diagram for Source discovery of identity information from a Cable Plug during the", "page": 500}, {"figure_id": "Figure 8-131 Source Startup Structured VDM Discover Identity State Diagram", "caption": "Figure 8-131 Source Startup Structured VDM Discover Identity State Diagram", "page": 500}], "subsections": [], "word_count": 206, "tags": ["cable", "source"]}
{"section_id": "8.3.3.22.3.1", "title": "PE_SRC_VDM_Identity_Request State", "content": "The Policy Engine Shall transition to the PE_SRC_VDM_Identity_Request state from the PE_SRC_Startup state when: Page 500 USB Power Delivery Specification Revision 3.0, Version 1.1  The Device Policy Manager requests the discovery of the identity of the Cable Plug. The Policy Engine Shall transition to the PE_SRC_VDM_Identity_Request state from the PE_SRC_Discovery state when:  The Device Policy Manager requests the discovery of the identity of the Cable Plug and  The DiscoverIdentityCounter < nDiscoverIdentityCount. Even though there has been a transition out of the PE_SRC_Discovery state the SourceCapabilityTimer Shall continue to run during the states shown in Figure 8-131 and Shall Not be initialized on re-entry to PE_SRC_Discovery. On entry to the PE_SRC_VDM_Identity_Request state the Policy Engine Shall send a Structured VDM Discover Identity Command request, Shall increment the DiscoverIdentityCounter and Shall start the VDMResponseTimer. The Policy Engine Shall transition to the PE_SRC_VDM_Identity_ACKed state when:  A Structured VDM Discover Identity ACK Command response is received. The Policy Engine Shall transition to the PE_SRC_VDM_Identity_NAKed state when:  A Structured VDM Discover Identity NAK or BUSY Command response is received or  The VDMResponseTimer times out or  The Structured VDM Discover Identity Command request Message sending fails (no GoodCRC Message received after retries).", "page_start": 500, "page_end": 500, "content_type": "text", "tables": [], "figures": [{"figure_id": "to run during the states shown in Figure 8-131 and Shall Not be initialized on re-entry to PE_SRC_Discovery.", "caption": "to run during the states shown in Figure 8-131 and Shall Not be initialized on re-entry to PE_SRC_Discovery.", "page": 501}], "subsections": [], "word_count": 203, "tags": []}
{"section_id": "8.3.3.22.3.2", "title": "PE_SRC_VDM_Identity_ACKed State", "content": "On entry to the PE_SRC_VDM_Identity_ACKed state the Policy Engine Shall inform the Device Policy Manager of the Identity information. The Policy Engine Shall transition back to either the PE_SRC_Send_Capabilities or PE_SRC_Discovery state when:  The Device Policy Manager has been informed.", "page_start": 501, "page_end": 500, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": []}
{"section_id": "8.3.3.22.3.3", "title": "PE_SRC_VDM_Identity_NAKed State", "content": "On entry to the PE_SRC_VDM_Identity_NAKed state the Policy Engine Shall inform the Device Policy Manager of the result (NAK, BUSY or timeout). The Policy Engine Shall transition back to either the PE_SRC_Send_Capabilities or PE_SRC_Discovery state when:  The Device Policy Manager has been informed.", "page_start": 501, "page_end": 500, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 44, "tags": []}
{"section_id": "8.3.3.22.4", "title": "Cable Plug Mode Entry/Exit", "content": "", "page_start": 501, "page_end": 500, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["cable"]}
{"section_id": "8.3.3.22.4.1", "title": "Cable Plug Structured VDM Enter Mode State Diagram", "content": "Figure 8-132 shows the state diagram for a Cable Plug in response to an Enter Mode Command. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 501 Figure 8-132 Cable Plug Structured VDM Enter Mode State Diagram PE_CBL__Ready Actions on entry: Cable = Awake/Asleep PD = Not Connected/Connected Enter Modes request1 Enter Mode NAK sent PE_CBL__Evaluate_Mode_Entry DPM says Actions on entry: NAK Request DPM to evaluate request to enter a Mode Cable = Awake PD = Connected Enter Mode ACK sent DPM says Mode entered PE_CBL__Mode_Entry_NAK PE_CBL__Mode_Entry_ACK Actions on entry: Send Enter Mode NAK Command response as Actions on entry: requested Send Enter Mode ACK Command Cable = Awake Cable = Awake PD = Connected PD = Connected", "page_start": 501, "page_end": 501, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-132 shows the state diagram for a Cable Plug in response to an Enter Mode Command.", "caption": "Figure 8-132 shows the state diagram for a Cable Plug in response to an Enter Mode Command.", "page": 501}, {"figure_id": "Figure 8-132 Cable Plug Structured VDM Enter Mode State Diagram", "caption": "Figure 8-132 Cable Plug Structured VDM Enter Mode State Diagram", "page": 502}], "subsections": [], "word_count": 118, "tags": ["cable"]}
{"section_id": "1", "title": "The Cable is required to be in USB operation or USB Safe State at this point.", "content": "", "page_start": 502, "page_end": 501, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["cable"]}
{"section_id": "8.3.3.22.4.1.1", "title": "PE_CBL_Evaluate_Mode_Entry State", "content": "The Policy Engine transitions to the PE_CBL_Evaluate_Mode_Entry state from the PE_CBL_Ready state when:  A Structured VDM Enter Mode Command request is received from the DFP. On Entry to the PE_CBL_Evaluate_Mode_Entry state the Policy Engine Shall request the Device Policy Manager to evaluate the Enter Mode Command request and enter the Mode indicated in the Command request if the request is acceptable. The Policy Engine Shall transition to the PE_CBL_Mode_Entry_ACK state when:  The Device Policy Manager indicates that the Mode has been entered. The Policy Engine Shall transition to the PE_CBL_Mode_Entry_NAK state when:  The Device Policy Manager indicates that the response to the Mode request is NAK.", "page_start": 502, "page_end": 501, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 109, "tags": []}
{"section_id": "8.3.3.22.4.1.2", "title": "PE_CBL_Mode_Entry_ACK State", "content": "On entry to the PE_CBL_Mode_Entry_ACK state the Policy Engine Shall send a Structured VDM Enter Mode ACK Command response. The Policy Engine Shall transition to the PE_CBL_Ready state when:  The Structured VDM Enter Mode ACK Command response has been sent.", "page_start": 502, "page_end": 501, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": []}
{"section_id": "8.3.3.22.4.1.3", "title": "PE_CBL_Mode_Entry_NAK State", "content": "On entry to the PE_CBL_Mode_Entry_NAK state the Policy Engine Shall send a Structured VDM Enter Mode NAK Command response as indicated by the Device Policy Manager. The Policy Engine Shall transition to the PE_CBL_Ready state when:  The Structured VDM Enter Mode NAK Command response has been sent. Page 502 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 502, "page_end": 502, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 58, "tags": []}
{"section_id": "8.3.3.22.4.2", "title": "Cable Plug Structured VDM Exit Mode State Diagram", "content": "Figure 8-133 shows the state diagram for a Cable Plug in response to an Exit Mode Command. Figure 8-133 Cable Plug Structured VDM Exit Mode State Diagram PE_CBL__Ready Actions on entry: Cable = Awake/Asleep PD = Not Connected/Connected Exit Mode request received PE_CBL__Mode_Exit Actions on entry: Request DPM to evaluate request to exit the requested Mode Exit Mode NAK sent Cable = Awake DPM says NAK PD = Connected Exit Mode ACK sent1 Mode exited PE_CBL__Mode_Exit_ACK PE_CBL__Mode_Exit_NAK Actions on entry: Actions on entry: Send Exit Mode ACK Command Send Exit Mode NAK Command Cable = Awake Cable = Awake PD = Connected PD = Connected", "page_start": 503, "page_end": 502, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-133 shows the state diagram for a Cable Plug in response to an Exit Mode Command.", "caption": "Figure 8-133 shows the state diagram for a Cable Plug in response to an Exit Mode Command.", "page": 503}, {"figure_id": "Figure 8-133 Cable Plug Structured VDM Exit Mode State Diagram", "caption": "Figure 8-133 Cable Plug Structured VDM Exit Mode State Diagram", "page": 503}], "subsections": [], "word_count": 105, "tags": ["cable"]}
{"section_id": "1", "title": "The Cable is required to be in USB operation or USB Safe State at this point.", "content": "", "page_start": 503, "page_end": 502, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["cable"]}
{"section_id": "8.3.3.22.4.2.1", "title": "PE_CBL_Mode_Exit State", "content": "The Policy Engine transitions to the PE_CBL_Mode_Exit state from the PE_CBL_Ready state when:  A Structured VDM Exit Mode Command request is received from the DFP. On entry to the PE_CBL_Mode_Exit state the Policy Engine Shall request the Device Policy Manager to exit the Mode indicated in the Command. The Policy Engine Shall transition to the PE_CBL_Mode_Exit_ACK state when:  The Device Policy Manger indicates that the Mode has been exited. The Policy Engine Shall transition to the PE_CBL_Mode_Exit_NAK state when:  The Device Policy Manager indicates that the Command response to the Exit Mode Command request is NAK.", "page_start": 503, "page_end": 502, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 99, "tags": []}
{"section_id": "8.3.3.22.4.2.2", "title": "PE_CBL_Mode_Exit_ACK State", "content": "On entry to the PE_CBL_Mode_Exit_ACK state the Policy Engine Shall send a Structured VDM Exit Mode ACK Command response. The Policy Engine Shall transition to the PE_CBL_Ready state when:  The Structured VDM Exit Mode ACK Command response has been sent.", "page_start": 503, "page_end": 502, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": []}
{"section_id": "8.3.3.22.4.2.3", "title": "PE_CBL_Mode_Exit_NAK State", "content": "On entry to the PE_CBL_Mode_Exit_NAK state the Policy Engine Shall send a Structured VDM Exit Mode NAK Command response as indicated by the Device Policy Manager. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 503 The Policy Engine Shall transition to the PE_CBL_Ready state when:  The Structured VDM Exit Mode NAK Command response has been sent.", "page_start": 503, "page_end": 503, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 58, "tags": []}
{"section_id": "8.3.3.23", "title": "BIST State diagrams", "content": "", "page_start": 504, "page_end": 503, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8.3.3.23.1", "title": "BIST Carrier Mode State Diagram", "content": "Figure 8-134 shows the state diagram required by a UUT, which can be either a Source, Sink or Cable Plug, when operating in BIST Carrier Mode. Transitions Shall be from either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready states. Figure 8-134 BIST Carrier Mode State Diagram PE_SRC_Ready or PE_SNK_Ready or PE_CBL_Ready BIST message received with Data Object BIST Carrier Mode & VBUS = vSafe5V PE_BIST_Carrier_Mode Actions on entry: Tell Protocol Layer to go to BIST Carrier Mode Initialize and run BISTContModeTimer VBUS = vSafe5V PD = Connected BISTContModeTimer timeout PE_SRC_Transition_to_default or PE_SNK_Transition_to_default or PE_CBL_Ready", "page_start": 504, "page_end": 503, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 8-134 shows the state diagram required by a UUT, which can be either a Source, Sink or Cable Plug, when", "caption": "Figure 8-134 shows the state diagram required by a UUT, which can be either a Source, Sink or Cable Plug, when", "page": 504}, {"figure_id": "Figure 8-134 BIST Carrier Mode State Diagram", "caption": "Figure 8-134 BIST Carrier Mode State Diagram", "page": 504}], "subsections": [], "word_count": 92, "tags": []}
{"section_id": "8.3.3.23.1.1", "title": "PE_BIST_Carrier_Mode State", "content": "The Source, Sink or Cable Plug Shall enter the PE_BIST_Carrier_Mode state from either the PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready state when:  A BIST Message is received with a BIST Carrier Mode BIST Data Object and  V is at vSafe5V. BUS On entry to the PE_BIST_Carrier_Mode state the Policy Engine Shall tell the Protocol Layer to go to BIST Carrier Mode and Shall initialize and run the BISTContModeTimer. The Policy Engine Shall transition to either the PE_SRC_Transition_to_default state, PE_SNK_Transition_to_default state or PE_CBL_Ready state (as appropriate) when:  The BISTContModeTimer times out. Page 504 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 504, "page_end": 504, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 101, "tags": []}
{"section_id": "8.3.3.24", "title": "USB Type-C Referenced States", "content": "This section contains states cross-referenced from the [USB Type-C 1.2] specification.", "page_start": 505, "page_end": 504, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "8.3.3.24.1", "title": "ErrorRecovery state", "content": "The ErrorRecovery state is used to electronically disconnect Port Partners using the USB Type-C connector. The ErrorRecovery state Shall be entered when there are errors on USB Type-C Ports which cannot be recovered by Hard Reset. The ErrorRecovery state Shall map to USB Type-C ErrorRecovery state operation as defined in the [USB Type- C 1.2] specification, including any other state transitions mandated in cases where USB Type-C ErrorRecovery is not supported. On entry to the ErrorRecovery state the Contract and PD Connection Shall be ended. On exit from the ErrorRecovery state a new Explicit Contract Should be established once the Port Partners have re- connected over the CC wire. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 505", "page_start": 505, "page_end": 505, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 119, "tags": []}
{"section_id": "8.3.3.25", "title": "Policy Engine States", "content": "Table 8-62 lists the states used by the various state machines. Table 8-62 Policy Engine States State name Reference Source Port PE_SRC_Startup Section 8.3.3.2.1 PE_SRC_Discovery Section 8.3.3.2.2 PE_SRC_Send_Capabilities Section 8.3.3.2.3 PE_SRC_Negotiate_Capability Section 8.3.3.2.4 PE_SRC_Transition_Supply Section 8.3.3.2.5 PE_SRC_Ready Section 8.3.3.2.6 PE_SRC_Disabled Section 8.3.3.2.7 PE_SRC_Capability_Response Section 8.3.3.2.8 PE_SRC_Hard_Reset Section 8.3.3.2.9 PE_SRC_Hard_Reset_Received Section 8.3.3.2.10 PE_SRC_Transition_to_default Section 8.3.3.2.11 PE_SRC_Get_Sink_Cap Section 8.3.3.2.12 PE_SRC_Wait_New_Capabilities Section 8.3.3.2.13 Sink Port PE_SNK_Startup Section 8.3.3.3.1 PE_SNK_Discovery Section 8.3.3.3.2 PE_SNK_Wait_for_Capabilities Section 8.3.3.3.3 PE_SNK_Evaluate_Capability Section 8.3.3.3.4 PE_SNK_Select_Capability Section 8.3.3.3.5 PE_SNK_Transition_Sink Section 8.3.3.3.6 PE_SNK_Ready Section 8.3.3.3.7 PE_SNK_Hard_Reset Section 8.3.3.3.8 PE_SNK_Transition_to_default Section 8.3.3.3.9 PE_SNK_Give_Sink_Cap Section 8.3.3.3.10 PE_SNK_Get_Source_Cap Section 8.3.3.3.11 Soft Reset and Protocol Error Source Port Soft Reset PE_SRC_Send_Soft_Reset Section 8.3.3.4.1.1 PE_SRC_Soft_Reset Section 8.3.3.4.1.2 Sink Port Soft Reset PE_SNK_Send_Soft_Reset Section 8.3.3.4.2.1 PE_SNK_Soft_Reset Section 8.3.3.4.2.2 Not Supported Message Source Port Not Supported PE_SRC_Send_Not_Supported Section 8.3.3.5.1.1 Page 506 USB Power Delivery Specification Revision 3.0, Version 1.1 State name Reference PE_SRC_Not_Supported_Received Section 8.3.3.5.1.2 PE_SRC_Chunk_Received Section 8.3.3.5.1.3 Sink Port Not Supported PE_SNK_Send_Not_Supported Section 8.3.3.5.2.1 PE_SNK_Not_Supported_Received Section 8.3.3.5.2.2 PE_SNK_Chunk_Received Section 8.3.3.5.2.1 Source Port Ping PE_SRC_Ping Section 8.3.3.6.1 Source Alert Source Port Source Alert PE_SRC_Send_Source_Alert Section 8.3.3.7.1.1 Sink Port Source Alert PE_SNK_Source_Alert_Received Section 8.3.3.7.2.1 Sink Port Sink Alert PE_SNK_Send_Sink_Alert Section 8.3.3.7.3.1 Source Port Sink Alert PE_SRC_Sink_Alert_Received Section 8.3.3.7.4.1 Source Extended Capabilities Sink Port Get Source Capabilities Extended PE_SNK_Get_Source_Cap_Ext Section 8.3.3.8.1.1 Source Port Give Source Capabilities Extended PE_SRC_Give_Source_Cap_Ext Section 8.3.3.8.2.1 Source Status Sink Port Get Source Status PE_SNK_Get_Source_Status Section 8.3.3.9.1.1 Source Port Give Source Status PE_SRC_Give_Source_Status Section 8.3.3.9.2.1 Source Port Get Sink Status PE_SRC_Get_Sink_Status Section 8.3.3.9.3.1 Sink Port Give Sink Status PE_SNK_Give_Sink_Status Section 8.3.3.9.4.1 Sink Port Get PPS Status PE_SNK_Get_PPS_Status Section 8.3.3.9.5.1 Source Port Give PPS Status PE_SRC_Give_PPS_Status Section 8.3.3.9.6.1 Battery Capabilities Get Battery Capabilities PE_Get_Battery_Cap Section 8.3.3.10.1.1 Give Battery Capabilities PE_Give_Battery_Cap Section 8.3.3.10.2.1 Battery Status Get Battery Status PE_Get_Battery_Status Section 8.3.3.11.1.1 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 507 State name Reference Give Battery Status PE_Give_Battery_Status Section 8.3.3.11.2.1 Manufacturer Information Get Manufacturer Information PE_Get_Manufacturer_Info Section 8.3.3.12.1 Give Manufacturer Information PE_Give_Manufacturer_Info Section 8.3.3.12.2 Country Codes and Information Get Country Codes PE_Get_Country_Codes Section 8.3.3.13.1.1 Give Country Codes PE_Give_Country_Codes Section 8.3.3.13.2.1 Get Country Information PE_Get_Country_Info Section 8.3.3.13.3.1 Give Country Information PE_Give_Country_Info Section 8.3.3.13.4.1 Security Request/Response Send Security Request PE_Send_Security_Request Section 8.3.3.14.1 Send Security Response PE_Send_Security_Response Section 8.3.3.14.2 Security Response Received PE_Security_Response_Received Section 8.3.3.14.3 Firmware Update Request/Response Send Firmware Update Request PE_Send_Firmware_Update_Request Section 8.3.3.15.1.1 Send Firmware Update Response PE_Send_Firmware_Update_Response Section 8.3.3.15.2.1 Firmware Update Response Received PE_Firmware_Update_Response_Received Section 8.3.3.15.3.1 Dual-Role Port DFP to UFP Data Role Swap PE_DRS_DFP_UFP_Evaluate_Swap Section 8.3.3.16.1.2 PE_DRS_DFP_UFP_Accept_Swap Section 8.3.3.16.1.3 PE_DRS_DFP_UFP_Change_to_UFP Section 8.3.3.16.1.4 PE_DRS_DFP_UFP_Send_Swap Section 8.3.3.16.1.5 PE_DRS_DFP_UFP_Reject_Swap Section 8.3.3.16.1.6 UFP to DFP Data Role Swap PE_DRS_UFP_DFP_Evaluate_Swap Section 8.3.3.16.2.2 PE_DRS_UFP_DFP_Accept_Swap Section 8.3.3.16.2.3 PE_DRS_UFP_DFP_Change_to_DFP Section 8.3.3.16.2.4 PE_DRS_UFP_DFP_Send_Swap Section 8.3.3.16.2.5 Page 508 USB Power Delivery Specification Revision 3.0, Version 1.1 State name Reference PE_DRS_UFP_DFP_Reject_Swap Section 8.3.3.16.2.6 Source to Sink Power Role Swap PE_PRS_SRC_SNK_Evaluate_Swap Section 8.3.3.16.3.2 PE_PRS_SRC_SNK_Accept_Swap Section 8.3.3.16.3.3 PE_PRS_SRC_SNK_Transition_to_off Section 8.3.3.16.3.4 PE_PRS_SRC_SNK_Assert_Rd Section 8.3.3.16.3.5 PE_PRS_SRC_SNK_Wait_Source_on Section 8.3.3.16.3.6 PE_PRS_SRC_SNK_Send_Swap Section 8.3.3.16.3.7 PE_PRS_SRC_SNK_Reject_Swap Section 8.3.3.16.3.8 Sink to Source Power Role Swap PE_PRS_SNK_SRC_Evaluate_Swap Section 8.3.3.16.4.2 PE_PRS_SNK_SRC_Accept_Swap Section 8.3.3.16.4.3 PE_PRS_SNK_SRC_Transition_to_off Section 8.3.3.16.4.4 PE_PRS_SNK_SRC_Assert_Rp PE_PRS_SNK_SRC_Source_on Section 8.3.3.16.4.5 PE_PRS_SNK_SRC_Send_Swap Section 8.3.3.16.4.7 PE_PRS_SNK_SRC_Reject_Swap Section 8.3.3.16.4.8 Source to Sink Fast Role Swap PE_FRS_SRC_SNK_CC_Signal Section 8.3.3.16.5.2 PE_FRS_SRC_SNK_Evaluate_Swap Section 8.3.3.16.5.3 PE_FRS_SRC_SNK_Accept_Swap Section 8.3.3.16.5.4 PE_FRS_SRC_SNK_Transition_to_off Section 8.3.3.16.5.5 PE_FRS_SRC_SNK_Assert_Rd Section 8.3.3.16.5.6 PE_FRS_SRC_SNK_Wait_Source_on Section 8.3.3.16.5.7 Sink to Source Fast Role Swap PE_FRS_SNK_SRC_Start_AMS Section 8.3.3.16.6.1 PE_FRS_SNK_SRC_Send_Swap Section 8.3.3.16.6.2 PE_FRS_SNK_SRC_Transition_to_off Section 8.3.3.16.6.3 PE_FRS_SNK_SRC_Vbus_Applied Section 8.3.3.16.6.4 PE_FRS_SNK_SRC_Assert_Rp Section 8.3.3.16.6.5 PE_FRS_SNK_SRC_Source_on Section 8.3.3.16.6.6 Dual-Role Source Port Get Source Capabilities PE_DR_SRC_Get_Source_Cap Section 8.3.3.16.7.1 Dual-Role Source Port Give Sink Capabilities PE_DR_SRC_Give_Sink_Cap Section 8.3.3.16.8.1 Dual-Role Sink Port Get Sink Capabilities PE_DR_SNK_Get_Sink_Cap Section 8.3.3.16.9.1 Dual-Role Sink Port Give Source Capabilities PE_DR_SNK_Give_Source_Cap Section 8.3.3.16.10.1 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 509 State name Reference Dual-Role Source Port Get Source Capabilities Extended PE_DR_SRC_Get_Source_Cap_Ext Section 8.3.3.16.11.1 Dual-Role Sink Port Give Source Capabilities Extended PE_DR_SNK_Give_Source_Cap_Ext Section 8.3.3.16.12.1 USB Type-C VCONN Swap PE_VCS_Send_Swap Section 8.3.3.17.1.1 PE_VCS_Evaluate_Swap Section 8.3.3.17.1.2 PE_VCS_Accept_Swap Section 8.3.3.17.1.3 PE_VCS_Reject_Swap Section 8.3.3.17.1.4 PE_VCS_Wait_For_VCONN Section 8.3.3.17.1.5 PE_VCS_Turn_Off_VCONN Section 8.3.3.17.1.6 PE_VCS_Turn_On_VCONN Section 8.3.3.17.1.7 PE_VCS_Send_Ps_Rdy Section 8.3.3.17.1.8 Initiator Structured VDM Initiator to Port Structured VDM Discover Identity PE_INIT_PORT_VDM_Identity_Request Section 8.3.3.18.1.1 PE_INIT_PORT_VDM_Identity_ACKed Section 8.3.3.18.1.2 PE_INIT_PORT_VDM_Identity_NAKed Section 8.3.3.18.1.3 Initiator Structured VDM Discover SVIDs PE_INIT_VDM_SVIDs_Request Section 8.3.3.18.2.1 PE_INIT_VDM_SVIDs_ACKed Section 8.3.3.18.2.2 PE_INIT_VDM_SVIDs_NAKed Section 8.3.3.18.2.3 Initiator Structured VDM Discover Modes PE_INIT_VDM_Modes_Request Section 8.3.3.18.3.1 PE_INIT_VDM_Modes_ACKed Section 8.3.3.18.3.2 PE_INIT_VDM_Modes_NAKed Section 8.3.3.18.3.3 Initiator Structured VDM Attention PE_INIT_VDM_Attention_Request Section 8.3.3.18.4.1 Responder Structured VDM Responder Structured VDM Discovery Identity PE_RESP_VDM_Get_Identity Section 8.3.3.19.1.1 PE_RESP_VDM_Send_Identity Section 8.3.3.19.1.2 PE_RESP_VDM_Get_Identity_NAK Section 8.3.3.19.1.3 Responder Structured VDM Discovery SVIDs PE_RESP_VDM_Get_SVIDs Section 8.3.3.19.2.1 PE_RESP_VDM_Send_SVIDs Section 8.3.3.19.2.2 PE_RESP_VDM_Get_SVIDs_NAK Section 8.3.3.19.2.3 Responder Structured VDM Discovery Modes PE_RESP_VDM_Get_Modes Section 8.3.3.19.3.1 PE_RESP_VDM_Send_Modes Section 8.3.3.19.3.2 PE_RESP_VDM_Get_Modes_NAK Section 8.3.3.19.3.3 Page 510 USB Power Delivery Specification Revision 3.0, Version 1.1 State name Reference Receiving a Structured VDM Attention PE_RCV_VDM_Attention_Request Section 8.3.3.19.4.1 DFP Structured VDM DFP Structured VDM Mode Entry PE_DFP_VDM_Mode_Entry_Request Section 8.3.3.20.1.1 PE_DFP_VDM_Mode_Entry_ACKed Section 8.3.3.20.1.2 PE_DFP_VDM_Mode_Entry_NAKed Section 8.3.3.20.1.3 DFP Structured VDM Mode Exit PE_DFP_VDM_Mode_Exit_Request Section 8.3.3.20.2.1 PE_DFP_VDM_Mode_Exit_ACKed Section 8.3.3.20.2.2 UFP Structure VDM UFP Structured VDM Enter Mode PE_UFP_VDM_Evaluate_Mode_Entry Section 8.3.3.21.1.1 PE_UFP_VDM_Mode_Entry_ACK Section 8.3.3.21.1.2 PE_UFP_VDM_Mode_Entry_NAK Section 8.3.3.21.1.3 UFP Structured VDM Exit Mode PE_UFP_VDM_Mode_Exit Section 8.3.3.21.2.1 PE_UFP_VDM_Mode_Exit_ACK Section 8.3.3.21.2.2 PE_UFP_VDM_Mode_Exit_NAK Section 8.3.3.21.2.3 Cable Plug Specific Cable Ready PE_CBL_Ready Section 8.3.3.22.1.1 Mode Entry PE_CBL_Evaluate_Mode_Entry Section 8.3.3.22.4.1.1 PE_CBL_Mode_Entry_ACK Section 8.3.3.22.4.1.2 PE_CBL_Mode_Entry_NAK Section 8.3.3.22.4.1.3 Mode Exit PE_CBL_Mode_Exit Section 8.3.3.22.4.2.1 PE_CBL_Mode_Exit_ACK Section 8.3.3.22.4.2.2 PE_CBL_Mode_Exit_NAK Section 8.3.3.22.4.2.3 Cable Soft Reset PE_CBL_Soft_Reset Section 8.3.3.22.2.1.1 Cable Hard Reset PE_CBL_Hard_Reset Section 8.3.3.22.2.2.1 DFP Soft Reset or Cable Reset PE_DFP_CBL_Send_Soft_Reset Section 8.3.3.22.2.3.1 PE_DFP_CBL_Send_Cable_Reset Section 8.3.3.22.2.3.2 UFP Source Soft Reset PE_UFP_CBL_Send_Soft_Reset Section 8.3.3.22.2.4 Source Startup Structured VDM Discover Identity PE_SRC_VDM_Identity_Request Section 8.3.3.22.3.1 PE_SRC_VDM_Identity_ACKed Section 8.3.3.22.3.2 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 511 State name Reference PE_SRC_VDM_Identity_NAKed Section 8.3.3.22.3.3 BIST Carrier Mode PE_BIST_Carrier_Mode Section 8.3.3.23.1.1 USB Type-C referenced states ErrorRecovery Section 8.3.3.24.1 Page 512 USB Power Delivery Specification Revision 3.0, Version 1.1 9. States and Status Reporting", "page_start": 506, "page_end": 512, "content_type": "text", "tables": [{"table_id": "Table 8-62 lists the states used by the various state machines.", "caption": "Table 8-62 lists the states used by the various state machines.", "page": 506, "data": []}, {"table_id": "Table 8-62 Policy Engine States", "caption": "Table 8-62 Policy Engine States", "page": 506, "data": []}], "figures": [], "subsections": [], "word_count": 946, "tags": ["policy"]}
{"section_id": "9.1", "title": "Overview", "content": "This chapter describes the Status reporting mechanisms for devices with data connections (e.g. D+/D- and or SSTx+/- and SSRx+/-). It also describes the corresponding USB state a device that supports USB PD Shall transition to as a result of changes to the USB PD state that the device is in. This chapter does not define the System Policy or the System Policy Manager. That is defined in [USBTypeCBridge 1.0]. In addition the Policies themselves are not described here; these are left to the implementers of the relevant products and systems to define. All PD Capable USB (PDUSB) Devices Shall report themselves as self-powered devices (over USB) when plugged into a PD capable Port even if they are entirely powered from V However, there are some differences between PD and BUS. [USB 2.0] / [USB 3.1]; for example, the presence of V alone does not mean that the device (Consumer) moves from BUS the USB Attached state to the USB Powered state. Similarly the removal of V alone does not move the device BUS (Consumer) from any of the USB states to the Attached state. See Section 9.1.2 for details. PDUSB Devices Shall follow the PD requirements when it comes to suspend (see Section 6.4.1.2.2.2), configured, and operational power. The PD requirements when the device is configured or operational are defined in this section (see Table 9-4). Note that the power requirements reported in the PD Consumer Port descriptor of the device Shall override the power draw reported in the bMaxPower field in the configuration descriptor. A PDUSB Device Shall report zero in the bMaxPower field after successfully negotiating a mutually agreeable Contract and Shall disconnect and re-enumerate when it switches operation back to operating in standard [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2] When operating in [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2] mode it Shall report its power draw via the bMaxPower field. As shown in Figure 9-1, each Provider and Consumer will have their own Local Policies which operate between directly connected ports. An example of a typical PD system is shown in Figure 9-1. This example consists of a Provider, Consumer/Providers and Consumers connected together in a tree topology. Between directly connected devices there is both a flow of Power and also Communication consisting of both Status and Control information. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 513 Figure 9-1 Example PD Topology AC/Battery Power Provider Communication P/C Provider/Consumer Consumer/ Provider P/C P/C P/C Consumer/ AC/Battery Consumer Consumer Provider Figure 9-2 shows how this same topology can be mapped to USB. In a USB based system, policy is managed by the host and communication of system level policy information is via standard USB data line communication. This is a separate mechanism to the USB Power Delivery V protocol which is used to manage Local Policy. When USB data BUS line communication is used, status information and control requests are passed directly between the System Policy Manager (SPM) on the host and the Provider or Consumer. Status information comes from a Provider or Consumer to the SPM so it can better manage the resources on the host and provide feedback to the end user. Real systems will be a mixture of devices which in terms of power management support might have implemented PD, [USB 2.0], [USB 3.1], [USB Type-C 1.2] or [USBBC 1.2] or they might even just be non-compliant Power Sucking Devices. The level of communication of system status to the SPM will therefore not necessarily be comprehensive. The aim of the status mechanisms described here is to provide a mechanism whereby each connected entity in the system provides as much information as possible on the status of itself. Page 514 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 9-2 Mapping of PD Topology to USB AC/Battery Power Root Hub Communication Hub AC/Battery Device Device Device Information described in this section that is communicated to the SPM is as follows:  Versions of USB Type-C Current, PD and BC supported.  Capabilities as a Provider/Consumer.  Current operational state of each Port e.g. Standard, USB Type-C Current, BC, PD and negotiated power level.  Status of AC or Battery Power for each PDUSB Device in the system. The SPM can negotiate with Providers or Consumers in the system in order to request a different Local Policy, or to request the amount of power to be delivered by the Provider to the Consumer. Any change in Local Policy could trigger a renegotiation of the Contract, using USB Power Delivery protocols, between a directly connected Provider and Consumer. A change in how much power is to be delivered will, for example, cause a renegotiation.", "page_start": 513, "page_end": 514, "content_type": "text", "tables": [{"table_id": "Table 9-4). Note that the power requirements reported in the PD Consumer Port descriptor of the device Shall", "caption": "Table 9-4). Note that the power requirements reported in the PD Consumer Port descriptor of the device Shall", "page": 513, "data": []}], "figures": [{"figure_id": "As shown in Figure 9-1, each Provider and Consumer will have their own Local Policies which operate between", "caption": "As shown in Figure 9-1, each Provider and Consumer will have their own Local Policies which operate between", "page": 513}, {"figure_id": "directly connected ports. An example of a typical PD system is shown in Figure 9-1. This example consists of a", "caption": "directly connected ports. An example of a typical PD system is shown in Figure 9-1. This example consists of a", "page": 513}, {"figure_id": "Figure 9-1 Example PD Topology", "caption": "Figure 9-1 Example PD Topology", "page": 514}, {"figure_id": "Figure 9-2 shows how this same topology can be mapped to USB. In a USB based system, policy is managed by the", "caption": "Figure 9-2 shows how this same topology can be mapped to USB. In a USB based system, policy is managed by the", "page": 514}, {"figure_id": "Figure 9-2 Mapping of PD Topology to USB", "caption": "Figure 9-2 Mapping of PD Topology to USB", "page": 515}], "subsections": [], "word_count": 784, "tags": []}
{"section_id": "9.1.1", "title": "PDUSB Device and Hub Requirements", "content": "All PDUSB Devices Shall return all relevant descriptors mentioned in this chapter. PDUSB Hubs Shall also support a PD bridge as defined in [USBTypeCBridge 1.0].", "page_start": 515, "page_end": 514, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": ["devices"]}
{"section_id": "9.1.2", "title": "Mapping to USB Device States", "content": "As mentioned in Section 9.1 a PDUSB Device reports itself as a self-powered device. However, the device Shall determine whether or not it is in the USB Attached or USB Powered states as described in Figure 9-3, Figure 9-4 and Figure 9-5. All other USB states of the PDUSB Device Shall be as described in Chapter 9 of [USB 2.0] and [USB 3.1]. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 515 Figure 9-3 shows how a PDUSB Device determines when to transition from the USB Attached to the USB Powered state. USB Type-C Dead Battery operation does not require special handling since the default state at Attach or after a Hard Reset is that the USB Device is a Sink. Figure 9-3 USB Attached to USB Powered State Transition Negotiate enough No Yes Power? Hard Reset No USB VBUS Yes Can Yes USB Attached Present enumerate? Powered Device in Sink Mode No Device in Source Mode (5V) Device is a Yes Attached Yes Source? Sink? No No Figure 9-4 shows how a PDUSB Device determines when to transition from the USB Powered state to the USB Attached state when the device is a Consumer. A PDUSB Device determines that it is performing a Power Role Swap as described in Section 8.3.3.16.3 and Section 8.3.3.16.4. See Section 7.1.5 for additional information on device behavior during Hard Resets. Page 516 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure 9-4 Any USB State to USB Attached State Transition (When operating as a Consumer) Hard Reset Hard Reset and and Can Operate Can’t Operate Swapping Any USB VBUS No No USB Power State Present Attached Roles? Yes Yes Hard Reset and Bus Powered Figure 9-5 shows how a PDUSB Device determines when to transition from the USB Powered state to the USB Attached state when the device is a Provider. Figure 9-5 Any USB State to USB Attached State Transition (When operating as a Provider) Local Power Source Lost Hard Reset Any USB Lack of PD Yes USB State comms? Attached No Figure 9-6 shows how a PDUSB Device using the USB Type-C connector determines when to transition from the USB Powered state to the USB Attached state after a Data Role Swap has been performed i.e. it has just changed from operation as a PDUSB Host to operation as a PDUSB Device. The Data Role Swap is described in Section 6.3.9. A Hard Reset will also return a Sink acting as a PDUSB Host to PDUSB Device operation as described in Section 6.8.2. See Section 7.1.5 for additional information on device behavior during Hard Resets. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 517 Figure 9-6 Any USB State to USB Attached State Transition (After a USB Type-C Data Role Swap) Hard Reset Changes Data No Role Swapping Any USB VBUS Yes Yes USB Data State Present Attached Roles?", "page_start": 515, "page_end": 517, "content_type": "text", "tables": [], "figures": [{"figure_id": "determine whether or not it is in the USB Attached or USB Powered states as described in Figure 9-3, Figure 9-4 and", "caption": "determine whether or not it is in the USB Attached or USB Powered states as described in Figure 9-3, Figure 9-4 and", "page": 515}, {"figure_id": "Figure 9-5. All other USB states of the PDUSB Device Shall be as described in Chapter 9 of [USB 2.0] and [USB 3.1].", "caption": "Figure 9-5. All other USB states of the PDUSB Device Shall be as described in Chapter 9 of [USB 2.0] and [USB 3.1].", "page": 515}, {"figure_id": "Figure 9-3 shows how a PDUSB Device determines when to transition from the USB Attached to the USB Powered", "caption": "Figure 9-3 shows how a PDUSB Device determines when to transition from the USB Attached to the USB Powered", "page": 516}, {"figure_id": "Figure 9-3 USB Attached to USB Powered State Transition", "caption": "Figure 9-3 USB Attached to USB Powered State Transition", "page": 516}, {"figure_id": "Figure 9-4 shows how a PDUSB Device determines when to transition from the USB Powered state to the USB", "caption": "Figure 9-4 shows how a PDUSB Device determines when to transition from the USB Powered state to the USB", "page": 516}, {"figure_id": "Figure 9-4 Any USB State to USB Attached State Transition (When operating as a Consumer)", "caption": "Figure 9-4 Any USB State to USB Attached State Transition (When operating as a Consumer)", "page": 517}, {"figure_id": "Figure 9-5 shows how a PDUSB Device determines when to transition from the USB Powered state to the USB", "caption": "Figure 9-5 shows how a PDUSB Device determines when to transition from the USB Powered state to the USB", "page": 517}, {"figure_id": "Figure 9-5 Any USB State to USB Attached State Transition (When operating as a Provider)", "caption": "Figure 9-5 Any USB State to USB Attached State Transition (When operating as a Provider)", "page": 517}, {"figure_id": "Figure 9-6 shows how a PDUSB Device using the USB Type-C connector determines when to transition from the USB", "caption": "Figure 9-6 shows how a PDUSB Device using the USB Type-C connector determines when to transition from the USB", "page": 517}, {"figure_id": "Figure 9-6 Any USB State to USB Attached State Transition (After a USB Type-C Data Role Swap)", "caption": "Figure 9-6 Any USB State to USB Attached State Transition (After a USB Type-C Data Role Swap)", "page": 518}], "subsections": [], "word_count": 480, "tags": ["devices"]}
{"section_id": "9.1.3", "title": "PD Software Stack", "content": "Figure 9-7 gives an example of the software stack on a PD aware OS. In this stack we are using the example of a system with an xHCI based controller. The USB Power Delivery hardware May or May Not be a part of the xHC. Figure 9-7 Software stack on a PD aware OS", "page_start": 518, "page_end": 517, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 9-7 gives an example of the software stack on a PD aware OS. In this stack we are using the example of a", "caption": "Figure 9-7 gives an example of the software stack on a PD aware OS. In this stack we are using the example of a", "page": 518}, {"figure_id": "Figure 9-7 Software stack on a PD aware OS", "caption": "Figure 9-7 Software stack on a PD aware OS", "page": 518}], "subsections": [], "word_count": 54, "tags": []}
{"section_id": "9.1.4", "title": "PDUSB Device Enumeration", "content": "As described earlier, a PDUSB Device acts as a self-powered device with some caveats with respect to how it transitions from the USB Attached state to USB Powered state. Figure 9-8 gives a high level overview of the enumeration steps involved due to this change. A PDUSB Device will first (Step1) interact with the Power Delivery Page 518 USB Power Delivery Specification Revision 3.0, Version 1.1 hardware and the Local Policy manager to determine whether or not it can get sufficient power to enumerate/operate. Note: PD is likely to have established a Contract prior to enumeration. The SPM will be notified (Step 2) of the result of this negotiation between the Power Delivery hardware and the PDUSB Device. After successfully negotiating a mutually agreeable Contract the device will signal a connect to the xHC. The standard USB enumeration process (Steps 3, 4 and 5) is then followed to load the appropriate driver for the function(s) that the PDUSB Device exposes. Figure 9-8 Enumeration of a PDUSB Device If a PDUSB Device cannot perform its intended function with the amount of power that it can get from the Port it is connected to then the host system Should display a Message (on a PD aware OS) about the failure to provide sufficient power to the device. In addition the device Shall follow the requirements listed in Section 8.2.5.2.1. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 519", "page_start": 518, "page_end": 519, "content_type": "text", "tables": [], "figures": [{"figure_id": "transitions from the USB Attached state to USB Powered state. Figure 9-8 gives a high level overview of the", "caption": "transitions from the USB Attached state to USB Powered state. Figure 9-8 gives a high level overview of the", "page": 518}, {"figure_id": "Figure 9-8 Enumeration of a PDUSB Device", "caption": "Figure 9-8 Enumeration of a PDUSB Device", "page": 519}], "subsections": [], "word_count": 237, "tags": ["devices"]}
{"section_id": "9.2", "title": "PD Specific Descriptors", "content": "A PDUSB Device Shall return all relevant descriptors mentioned in this section. The device Shall return its capability descriptors as part of the device’s Binary Object Store (BOS) descriptor set. Table 9-1 lists the type of PD device capabilities. Table 9-1 USB Power Delivery Type Codes Capability Code Value Description POWER_DELIVERY_CAPABILITY 06H Defines the various PD Capabilities of this device BATTERY_INFO_CAPABILITY 07H Provides information on each Battery supported by the device PD_CONSUMER_PORT_CAPABILITY 08H The Consumer characteristics of a Port on the device PD_PROVIDER_PORT_CAPABILITY 09H The provider characteristics of a Port on the device", "page_start": 520, "page_end": 519, "content_type": "text", "tables": [{"table_id": "Table 9-1 lists the type of PD device capabilities.", "caption": "Table 9-1 lists the type of PD device capabilities.", "page": 520, "data": []}, {"table_id": "Table 9-1 USB Power Delivery Type Codes", "caption": "Table 9-1 USB Power Delivery Type Codes", "page": 520, "data": []}], "figures": [], "subsections": [], "word_count": 93, "tags": []}
{"section_id": "9.2.1", "title": "USB Power Delivery Capability Descriptor", "content": "Table 9-2 USB Power Delivery Capability Descriptor Offset Field Size Value Description", "page_start": 520, "page_end": 519, "content_type": "text", "tables": [{"table_id": "Table 9-2 USB Power Delivery Capability Descriptor", "caption": "Table 9-2 USB Power Delivery Capability Descriptor", "page": 520, "data": []}], "figures": [], "subsections": [], "word_count": 12, "tags": ["power"]}
{"section_id": "0", "title": "bLength 1 Number Size of descriptor", "content": "", "page_start": 520, "page_end": 519, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "bDescriptorType 1 Constant DEVICE CAPABILITY Descriptor type", "content": "", "page_start": 520, "page_end": 519, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["devices"]}
{"section_id": "2", "title": "bDevCapabilityType 1 Constant Capability type: POWER_DELIVERY_CAPABILITY", "content": "", "page_start": 520, "page_end": 519, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power"]}
{"section_id": "3", "title": "bReserved 1 Shall be set to zero.", "content": "Reserved", "page_start": 520, "page_end": 519, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "4", "title": "bmAttributes 4 Bitmap Bitmap encoding of supported device level features. A", "content": "value of one in a bit location indicates a feature is supported; a value of zero indicates it is not supported. Encodings are: Bit Description", "page_start": 520, "page_end": 519, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": ["devices"]}
{"section_id": "0", "title": "Reserved. Shall be set to zero.", "content": "", "page_start": 520, "page_end": 519, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "Battery Charging. This bit Shall be set to one", "content": "to indicate this device supports the Battery Charging Specification as per the value reported in the bcdBCVersion field.", "page_start": 520, "page_end": 519, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": []}
{"section_id": "2", "title": "USB Power Delivery. This bit Shall be set to", "content": "one to indicate this device supports the USB Power Delivery Specification as per the value reported in the bcdPDVersion field.", "page_start": 520, "page_end": 519, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": ["power"]}
{"section_id": "3", "title": "Provider. This bit Shall be set to one to", "content": "indicate this device is capable of providing power. This field is only Valid if Bit 2 is set to one.", "page_start": 520, "page_end": 519, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": []}
{"section_id": "4", "title": "Consumer. This bit Shall be set to one to", "content": "indicate that this device is a consumer of power. This field is only Valid if Bit 2 is set to one.", "page_start": 520, "page_end": 519, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "5", "title": "This bit Shall be set to 1 to indicate that this", "content": "device supports the feature CHARGING_POLICY. Note that supporting the CHARGING_POLICY feature does not require a BC or PD mechanism to be implemented.", "page_start": 520, "page_end": 519, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "6", "title": "USB Type-C Current. This bit Shall be set to", "content": "one to indicate this device supports power Page 520 USB Power Delivery Specification Revision 3.0, Version 1.1 Offset Field Size Value Description capabilities defined in the USB Type-C Specification as per the value reported in the bcdUSBTypeCVersion field", "page_start": 520, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": []}
{"section_id": "7", "title": "Reserved. Shall be set to zero.", "content": "15:8 bmPowerSource. At least one of the following bits 8, 9 and 14 Shall be set to indicate which power sources are supported. Bit Description", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": []}
{"section_id": "8", "title": "AC Supply", "content": "", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "9", "title": "Battery", "content": "", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "10", "title": "Other", "content": "13:11 NumBatteries. This field Shall only be Valid when the Battery field is set to one and Shall be used to report the number of batteries in the device.", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": []}
{"section_id": "14", "title": "Uses VBUS", "content": "", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "15", "title": "Reserved and Shall be", "content": "set to zero. 31:16 Reserved and Shall be set to zero.", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "8", "title": "bcdBCVersion 2 BCD Battery Charging Specification Release Number in Binary-", "content": "Coded Decimal (e.g., V1.20 is 120H). This field Shall only be Valid if the device indicates that it supports BC in the bmAttributes field.", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": []}
{"section_id": "10", "title": "bcdPDVersion 2 BCD USB Power Delivery Specification Release Number in", "content": "Binary-Coded Decimal. This field Shall only be Valid if the device indicates that it supports PD in the bmAttributes field.", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": ["power"]}
{"section_id": "12", "title": "bcdUSBTypeCVersion 2 BCD USB Type-C Specification Release Number in Binary-Coded", "content": "Decimal. This field Shall only be Valid if the device indicates that it supports USB Type-C in the bmAttributes field.", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": []}
{"section_id": "9.2.2", "title": "Battery Info Capability Descriptor", "content": "A PDUSB Device Shall support this capability descriptor if it reported that one of its power sources was a Battery in the bmPowerSource field in its Power Deliver Capability Descriptor. It Shall return one Battery Info Descriptor per Battery it supports. Table 9-3 Battery Info Capability Descriptor Offset Field Size Value Description", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [{"table_id": "Table 9-3 Battery Info Capability Descriptor", "caption": "Table 9-3 Battery Info Capability Descriptor", "page": 521, "data": []}], "figures": [], "subsections": [], "word_count": 52, "tags": []}
{"section_id": "0", "title": "bLength 1 Number Size of descriptor", "content": "", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "bDescriptorType 1 Constant DEVICE CAPABILITY Descriptor type", "content": "", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["devices"]}
{"section_id": "2", "title": "bDevCapabilityType 1 Constant Capability type: BATTERY_INFO_CAPABILITY", "content": "", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "iBattery 1 Index Index of string descriptor Shall contain the user", "content": "friendly name for this Battery.", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": []}
{"section_id": "4", "title": "iSerial 1 Index Index of string descriptor Shall contain the Serial", "content": "Number String for this Battery.", "page_start": 521, "page_end": 520, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": []}
{"section_id": "5", "title": "iManufacturer 1 Index Index of string descriptor Shall contain the name of the", "content": "Manufacturer for this Battery. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 521 Offset Field Size Value Description", "page_start": 521, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": []}
{"section_id": "6", "title": "bBatteryId 1 Number Value Shall be used to uniquely identify this Battery in", "content": "status Messages.", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": []}
{"section_id": "7", "title": "bReserved 1 Number Reserved and Shall be set to zero.", "content": "", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8", "title": "dwChargedThreshold 4 mWh Shall contain the Battery Charge value above which", "content": "this Battery is considered to be fully charged but not necessarily “topped off.”", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": []}
{"section_id": "12", "title": "dwWeakThreshold 4 mWh Shall contain the minimum charge level of this Battery", "content": "such that above this threshold, a device can be assured of being able to power up successfully (see Battery Charging 1.2).", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "16", "title": "dwBatteryDesignCapacity 4 mWh Shall contain the design capacity of the Battery.", "content": "", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "20", "title": "dwBatteryLastFullchargeCapacity 4 mWh Shall contain the maximum capacity of the Battery", "content": "when fully charged.", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 3, "tags": []}
{"section_id": "9.2.3", "title": "PD Consumer Port Capability Descriptor", "content": "A PDUSB Device Shall support this capability descriptor if it is a Consumer. Table 9-4 PD Consumer Port Descriptor Offset Field Size Value Description", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [{"table_id": "Table 9-4 PD Consumer Port Descriptor", "caption": "Table 9-4 PD Consumer Port Descriptor", "page": 522, "data": []}], "figures": [], "subsections": [], "word_count": 24, "tags": []}
{"section_id": "0", "title": "bLength 1 Number Size of descriptor", "content": "", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "bDescriptorType 1 Constant DEVICE CAPABILITY Descriptor type", "content": "", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["devices"]}
{"section_id": "2", "title": "bDevCapabilityType 1 Constant Capability type: PD_CONSUMER_PORT_CAPABILITY", "content": "", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "bReserved 1 Number Reserved and Shall be set to zero.", "content": "", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "bmCapabilities 2 Bitmap Capability: This field Shall indicate the specification", "content": "the Consumer Port will operate under. Bit Description", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "0", "title": "Battery Charging (BC)", "content": "", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "USB Power Delivery (PD)", "content": "", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power"]}
{"section_id": "2", "title": "USB Type-C Current", "content": "15:3 Reserved and Shall be set to zero.", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "6", "title": "wMinVoltage 2 Number Shall contain the minimum voltage in 50mV units that", "content": "this Consumer is capable of operating at.", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": ["voltage"]}
{"section_id": "8", "title": "wMaxVoltage 2 Number Shall contain the maximum voltage in 50mV units that", "content": "this Consumer is capable of operating at.", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": ["voltage"]}
{"section_id": "10", "title": "wReserved 2 Number Reserved and Shall be set to zero.", "content": "", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "12", "title": "dwMaxOperatingPower 4 Number Shall contain the maximum power in 10mW units this", "content": "Consumer can draw when it is in a steady state operating mode.", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": ["power"]}
{"section_id": "16", "title": "dwMaxPeakPower 4 Number Shall contain the maximum power in 10mW units this", "content": "Consumer can draw for a short duration of time (dwMaxPeakPowerTime) before it falls back into a steady state.", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["power"]}
{"section_id": "20", "title": "dwMaxPeakPowerTime 4 Number Shall contain the time in 100ms units that this", "content": "Consumer can draw peak current. A device Shall set this field to 0xFFFF if this value is unknown.", "page_start": 522, "page_end": 521, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": ["power"]}
{"section_id": "9.2.4", "title": "PD Provider Port Capability Descriptor", "content": "A PDUSB Device Shall support this capability descriptor if it is a Provider. Page 522 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 9-5 PD Provider Port Descriptor Offset Field Size Value Description", "page_start": 522, "page_end": 522, "content_type": "text", "tables": [{"table_id": "Table 9-5 PD Provider Port Descriptor", "caption": "Table 9-5 PD Provider Port Descriptor", "page": 523, "data": []}], "figures": [], "subsections": [], "word_count": 34, "tags": []}
{"section_id": "0", "title": "bLength 1 Number Size of descriptor", "content": "", "page_start": 523, "page_end": 522, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "bDescriptorType 1 Constant DEVICE CAPABILITY Descriptor type", "content": "", "page_start": 523, "page_end": 522, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["devices"]}
{"section_id": "2", "title": "bDevCapabilityType 1 Constant Capability type: PD_PROVIDER_PORT_CAPABILITY", "content": "", "page_start": 523, "page_end": 522, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "bReserved 1 Number Reserved and Shall be set to zero.", "content": "", "page_start": 523, "page_end": 522, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "bmCapabilities 2 Bitmap This field Shall indicate the specification the Provider", "content": "Port will operation under. Bit Description", "page_start": 523, "page_end": 522, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "0", "title": "Battery Charging (BC)", "content": "", "page_start": 523, "page_end": 522, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "USB Power Delivery (PD)", "content": "", "page_start": 523, "page_end": 522, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power"]}
{"section_id": "2", "title": "USB Type-C Current", "content": "15:3 Reserved. Shall be set to zero.", "page_start": 523, "page_end": 522, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": []}
{"section_id": "6", "title": "bNumOfPDObjects 1 Number Shall indicate the number of Power Data Objects.", "content": "", "page_start": 523, "page_end": 522, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power", "data"]}
{"section_id": "7", "title": "bReserved 1 Number Reserved and Shall be set to zero.", "content": "", "page_start": 523, "page_end": 522, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "8", "title": "wPowerDataObject1 4 Bitmap Shall contain the first Power Data Object supported by", "content": "this Provider Port. See Section 6.4.1 for details of the Power Data Objects. … … … … … N+4 wPowerDataObjectN 4 Bitmap Shall contain the 2nd and subsequent Power Data Objects supported by this Provider Port. See Section", "page_start": 523, "page_end": 522, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": ["power", "data"]}
{"section_id": "6.4.1", "title": "for details of the Power Data Objects.", "content": "USB Power Delivery Specification Revision 3.0, Version 1.1 Page 523", "page_start": 523, "page_end": 523, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["power", "data"]}
{"section_id": "9.3", "title": "PD Specific Requests and Events", "content": "A PDUSB Device that is compliant to this specification Shall support the Battery related requests if it has a battery. A PDUSB Hub that is compliant to this specification Shall support a USB PD Bridge as described in [USBTypeCBridge 1.0] irrespective of whether the PDUSB Hub is a Provider, a Consumer, or both.", "page_start": 524, "page_end": 523, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 53, "tags": []}
{"section_id": "9.3.1", "title": "PD Specific Requests", "content": "PD defines requests to which PDUSB Devices Shall respond as outlined in Table 9-6. All Valid requests in Table 9-6 Shall be implemented by PDUSB Devices. Table 9-6 PD Requests Request bmRequestType bRequest wValue wIndex wLength Data GetBatteryStatus 10000000B Get_Battery_Status Zero Battery ID Eight Battery Status SetPDFeature 00000000B SET_FEATURE Feature Feature Zero None Selector Specific Table 9-7 gives the bRequest values for commands that are not listed in the hub/device framework chapters of [USB 2.0], [USB 3.1]. Table 9-7 PD Request Codes bRequest Value GET_BATTERY_STATUS 21 Table 9-8 gives the Valid feature selectors for the PD class. Refer to Section 9.4.2.1, and Section 9.4.2.2 for a description of the features. Table 9-8 PD Feature Selectors Feature Selector Recipient Value BATTERY_WAKE_MASK Device 40 CHARGING_POLICY Device 54 Page 524 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 524, "page_end": 524, "content_type": "text", "tables": [{"table_id": "PD defines requests to which PDUSB Devices Shall respond as outlined in Table 9-6. All Valid requests in Table 9-6", "caption": "PD defines requests to which PDUSB Devices Shall respond as outlined in Table 9-6. All Valid requests in Table 9-6", "page": 524, "data": []}, {"table_id": "Table 9-6 PD Requests", "caption": "Table 9-6 PD Requests", "page": 524, "data": []}, {"table_id": "Table 9-7 gives the bRequest values for commands that are not listed in the hub/device framework chapters of [USB", "caption": "Table 9-7 gives the bRequest values for commands that are not listed in the hub/device framework chapters of [USB", "page": 524, "data": []}, {"table_id": "Table 9-7 PD Request Codes", "caption": "Table 9-7 PD Request Codes", "page": 524, "data": []}, {"table_id": "Table 9-8 gives the Valid feature selectors for the PD class. Refer to Section 9.4.2.1, and Section 9.4.2.2 for a", "caption": "Table 9-8 gives the Valid feature selectors for the PD class. Refer to Section 9.4.2.1, and Section 9.4.2.2 for a", "page": 524, "data": []}, {"table_id": "Table 9-8 PD Feature Selectors", "caption": "Table 9-8 PD Feature Selectors", "page": 524, "data": []}], "figures": [], "subsections": [], "word_count": 135, "tags": []}
{"section_id": "9.4", "title": "PDUSB Hub and PDUSB Peripheral Device Requests", "content": "", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["devices"]}
{"section_id": "9.4.1", "title": "GetBatteryStatus", "content": "This request returns the current status of the Battery in a PDUSB Hub/Peripheral. bmRequestType bRequest wValue wIndex wLength Data Battery 10000000B Get_Battery_Status Zero Battery ID Eight Status The PDUSB Hub/Peripheral Shall return the Battery Status of the Battery identified by the value of wIndex field. Every PDUSB Device that has a Battery Shall return its Battery Status when queried with this request. For Providers or Consumers with multiple batteries, the status of each Battery Shall be reported per Battery. Table 9-9 Battery Status Structure Offset Field Size Value Description", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [{"table_id": "Table 9-9 Battery Status Structure", "caption": "Table 9-9 Battery Status Structure", "page": 525, "data": []}], "figures": [], "subsections": [], "word_count": 89, "tags": []}
{"section_id": "0", "title": "bBatteryAttributes 1 Number Shall indicate whether a Battery is installed and whether", "content": "this is charging or discharging. Value Description", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": []}
{"section_id": "0", "title": "There is no Battery", "content": "", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "The Battery is charging", "content": "", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "The Battery is discharging", "content": "", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "The Battery is neither discharging nor", "content": "charging 255-4 Reserved and Shall Not be used", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "1", "title": "bBatterySOC 1 Number Shall indicate the Battery State of Charge given as", "content": "percentage value from Battery Remaining Capacity.", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "2", "title": "bBatteryStatus 1 Number If a Battery is present Shall indicate the present status of", "content": "the Battery. Value Meaning", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": []}
{"section_id": "0", "title": "No error", "content": "", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "Battery required and not present", "content": "", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "Battery non-chargeable/wrong", "content": "chemistry", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "3", "title": "Over-temp shutdown", "content": "", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "4", "title": "Over-voltage shutdown", "content": "", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["voltage"]}
{"section_id": "5", "title": "Over-current shutdown", "content": "", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "6", "title": "Fatigued Battery", "content": "", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "7", "title": "Unspecified error", "content": "255-8 Reserved and Shall Not be used", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": []}
{"section_id": "3", "title": "bRemoteWakeCapStatus 1 Bitmap If the device supports remote wake, then the device Shall", "content": "support Battery Remote wake events. The default value for the Remote wake events Shall be turned off (set to zero) and can be enable/disabled by the host as required. If set to one the device Shall generate a wake event when a change of status occurs. See Section 9.4.2 for more details. Bit Description", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 54, "tags": ["devices"]}
{"section_id": "0", "title": "Battery present event", "content": "", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "Charging flow", "content": "", "page_start": 525, "page_end": 524, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "2", "title": "Battery error", "content": "7:3 Reserved and Shall be set to zero USB Power Delivery Specification Revision 3.0, Version 1.1 Page 525 Offset Field Size Value Description", "page_start": 525, "page_end": 525, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": []}
{"section_id": "4", "title": "wRemainingOperatingTime 2 Number Shall contain the operating time (in minutes) until the", "content": "Weak Battery threshold is reached, based on Present Battery Strength and the device’s present operational power needs. Note: this value Shall exclude any additional power received from charging. A Battery that is not capable of returning this information Shall return a value of 0xFFFF.", "page_start": 526, "page_end": 525, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 44, "tags": []}
{"section_id": "6", "title": "wRemainingChargeTime 2 Number Shall contain the remaining time (in minutes) until the", "content": "Charged Battery threshold is reached based on Present Battery Strength, charging power and the device’s present operational power needs. Value Shall only be Valid if the Charging Flow is “Charging”. A Battery that is not capable of returning this information Shall return a value of 0xFFFF. If wValue or wLength are not as specified above, then the behavior of the PDUSB Device is not specified. If wIndex refers to a Battery that does not exist, then the PDUSB Device Shall respond with a Request Error. If the PDUSB Device is not configured, the PDUSB Hub's response to this request is undefined. If the PDUSB Hub is not configured, the PDUSB Hub's response to this request is undefined.", "page_start": 526, "page_end": 525, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 117, "tags": []}
{"section_id": "9.4.2", "title": "SetPDFeature", "content": "This request sets the value requested in the PDUSB Hub/Peripheral. bmRequestType bRequest wValue wIndex wLength Data 00000000B SET_ FEATURE Feature Selector Feature Specific Zero None Setting a feature enables that feature or starts a process associated with that feature; see Table 9-8 for the feature selector definitions. Features that May be set with this request are:  BATTERY_WAKE_MASK.  CHARGING_POLICY.", "page_start": 526, "page_end": 525, "content_type": "text", "tables": [{"table_id": "Setting a feature enables that feature or starts a process associated with that feature; see Table 9-8 for the feature", "caption": "Setting a feature enables that feature or starts a process associated with that feature; see Table 9-8 for the feature", "page": 526, "data": []}], "figures": [], "subsections": [], "word_count": 60, "tags": []}
{"section_id": "9.4.2.1", "title": "BATTERY_WAKE_MASK Feature Selector", "content": "When the feature selector is set to BATTERY_WAKE_MASK, then the wIndex field is structured as shown in the following table. Table 9-10 Battery Wake Mask Bit Description", "page_start": 526, "page_end": 525, "content_type": "text", "tables": [{"table_id": "Table 9-10 Battery Wake Mask", "caption": "Table 9-10 Battery Wake Mask", "page": 526, "data": []}], "figures": [], "subsections": [], "word_count": 27, "tags": []}
{"section_id": "0", "title": "Battery Present: When this bit is set then", "content": "the PDUSB Device Shall generate a wake event if it detects that a Battery has been Attached.", "page_start": 526, "page_end": 525, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": []}
{"section_id": "1", "title": "Charging Flow: When this bit is set then", "content": "the PDUSB Device Shall generate a wake event if it detects that a Battery switched from charging to discharging or vice versa.", "page_start": 526, "page_end": 525, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "2", "title": "Battery Error: When this bit is set then", "content": "the PDUSB Device Shall generate a wake event if the Battery has detected an error condition. 15:3 Reserved and Shall Not be used. Page 526 USB Power Delivery Specification Revision 3.0, Version 1.1 The SPM May Enable or Disable the wake events associated with one or more of the above events by using this feature. If the PDUSB Hub is not configured, the PDUSB Hub's response to this request is undefined.", "page_start": 526, "page_end": 526, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 71, "tags": []}
{"section_id": "9.4.2.2", "title": "CHARGING_POLICY Feature Selector", "content": "When the feature selector is set to CHARGING_POLICY, the wIndex field Shall be set to one of the values defined in Table 9-11. If the device is using USB Type-C Current above the default value or is using PD then this feature setting has no effect and the rules for power levels specified in the [USB Type-C 1.2] or USB PD specifications Shall apply. Table 9-11 Charging Policy Encoding Value Description 00H The device Shall follow the default current limits as defined in the USB 2.0 or USB 3.1 specification, or as negotiated through other USB mechanisms such as BC. This is the default value. 01H The Device May draw additional power during the unconfigured and suspend states for the purposes of charging. For charging the device itself, the device Shall limit its current draw to the higher of these two values: ICCHPF as defined in the USB 2.0 or USB 3.1 specification, regardless of its USB state. Current limit as negotiated through other USB mechanisms such as BC. 02H The Device May draw additional power during the unconfigured and suspend states for the purposes of charging. For charging the device itself, the device Shall limit its current draw to the higher of these two values: ICCLPF as defined in the USB 2.0 or USB 3.1 specification, regardless of its USB state. Current limit as negotiated through other USB mechanisms such as BC. 03H The device Shall Not consume any current for charging the device itself regardless of its USB state. 04H-FFFFH Reserved and Shall Not be used This is a Valid command for the PDUSB Hub/Peripheral in the Address or Configured USB states. Further, it is only Valid if the device reports a USB PD capability descriptor in its BOS descriptor and Bit 5 of the bmAttributes in that descriptor is set to 1. The device will go back to the wIndex default value of 0 whenever it is reset. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 527 10. Power Rules", "page_start": 527, "page_end": 527, "content_type": "text", "tables": [{"table_id": "Table 9-11. If the device is using USB Type-C Current above the default value or is using PD then this feature setting", "caption": "Table 9-11. If the device is using USB Type-C Current above the default value or is using PD then this feature setting", "page": 527, "data": []}, {"table_id": "Table 9-11 Charging Policy Encoding", "caption": "Table 9-11 Charging Policy Encoding", "page": 527, "data": []}], "figures": [], "subsections": [], "word_count": 334, "tags": ["policy"]}
{"section_id": "10.1", "title": "Introduction", "content": "The flexibility of power provision on USB Type-C is expected to lead to adapter re-use and the increasingly widespread provision of USB power outlets in domestic and public places and in transport of all kinds. Environmental considerations could result in unbundled adapters. Rules are needed to avoid incompatibility between the Sources and the Sinks they are used to power, in order to avoid user confusion and to meet user expectations. This section specifies a set of rules that Sources and Sinks Shall follow. These rules provide a simple and consistent user experience.", "page_start": 528, "page_end": 527, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 92, "tags": []}
{"section_id": "10.2", "title": "Source Power Rules", "content": "", "page_start": 528, "page_end": 527, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power", "source"]}
{"section_id": "10.2.1", "title": "Source Power Rule Considerations", "content": "The Source power rules are designed to:  Ensure the PD Power (PDP) of an adapter specified in watts explicitly defines the voltages and currents at each voltage the adapter supports  Ensure that adapters with a large PDP are always capable of providing the power to devices designed for use with adapters with a smaller PDP  Enable an ecosystem of adapters that are interoperable with the devices in the ecosystem. The considerations that lead to the Source power rules are based are summarized in Table 10-1. Table 10-1 Considerations for Sources Considerations Rationale Consequence Simple to identify capability A user going into an electronics retailer Cannot have a complex identification knows what they need scheme Higher power Sources are a Bigger is always better in user’s eyes – Higher power Sources do everything superset of smaller ones don’t want a degradation in performance smaller ones do Unambiguous Source definitions Sources with the same power rating but To avoid user confusion, any given power different VI combinations might not rating has a single definition interoperate A range of power ratings Users and companies will want freedom to Fixed profiles at specific power levels don’t pick appropriate Source ratings provide adequate flexibility, e.g. profiles as defined in previous versions of PD. 5V@3A USB Type-C Source is 5V@3A USB Type-C Source is considered All > 15W adapters must support 5V@3A or defined by [USB Type-C 1.2] superset consideration is violated Maximize 3A cable utilization 3A cables will be ubiquitous Increase to maximum voltage (20V) before increasing current beyond 3A Optimize voltage rail count More rails are a higher burden for Sources, 5V is a basic USB requirement. 20V particularly in terms of testing provides the maximum capability. Some Sources are not able to Some small Battery operated Sources e.g. In addition to the minimal 5V provide significant power mobile devices, are able to provide more advertisement are able to advertise more power directly from their Battery than power from their Battery from a regulated 5V supply Some Sources share power Hubs have to be supported See Section 10.2.4 between multiple Ports (Hubs) Page 528 USB Power Delivery Specification Revision 3.0, Version 1.1", "page_start": 528, "page_end": 528, "content_type": "text", "tables": [{"table_id": "The considerations that lead to the Source power rules are based are summarized in Table 10-1.", "caption": "The considerations that lead to the Source power rules are based are summarized in Table 10-1.", "page": 528, "data": []}, {"table_id": "Table 10-1 Considerations for Sources", "caption": "Table 10-1 Considerations for Sources", "page": 528, "data": []}], "figures": [], "subsections": [], "word_count": 361, "tags": ["power", "source"]}
{"section_id": "10.2.2", "title": "Normative Voltages and Currents", "content": "The voltages and currents a Source with a PDP of x Watts Shall support are as defined in Table 10-2. Table 10-2 Normative Voltages and Currents PDP (W) Current at 5V (A) Current at 9V (A) Current at 15V (A) Current at 20V (A)", "page_start": 529, "page_end": 528, "content_type": "text", "tables": [{"table_id": "The voltages and currents a Source with a PDP of x Watts Shall support are as defined in Table 10-2.", "caption": "The voltages and currents a Source with a PDP of x Watts Shall support are as defined in Table 10-2.", "page": 529, "data": []}, {"table_id": "Table 10-2 Normative Voltages and Currents", "caption": "Table 10-2 Normative Voltages and Currents", "page": 529, "data": []}], "figures": [], "subsections": [], "word_count": 44, "tags": ["voltage"]}
{"section_id": "0.5", "title": "≤ x ≤ 15 x ÷ 5", "content": "", "page_start": 529, "page_end": 528, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "15", "title": "< x ≤ 27 3 x ÷ 9", "content": "", "page_start": 529, "page_end": 528, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "27", "title": "< x ≤ 45 3 3 x ÷ 15", "content": "", "page_start": 529, "page_end": 528, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "45", "title": "< x ≤ 60 3 3 3 x ÷ 20", "content": "", "page_start": 529, "page_end": 528, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "60", "title": "< x ≤ 100 3 3 3 x ÷ 201", "content": "", "page_start": 529, "page_end": 528, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "Requires a 5A cable.", "content": "Figure 10-1 illustrates the maximum current and power rails that a Source Shall support at each voltage for a given PDP. Figure 10-1 Source Power Rule Illustration 6 5 4 ) A", "page_start": 529, "page_end": 528, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 10-1 illustrates the maximum current and power rails that a Source Shall support at each voltage for a given", "caption": "Figure 10-1 illustrates the maximum current and power rails that a Source Shall support at each voltage for a given", "page": 529}, {"figure_id": "Figure 10-1 Source Power Rule Illustration", "caption": "Figure 10-1 Source Power Rule Illustration", "page": 529}], "subsections": [], "word_count": 32, "tags": ["cable"]}
{"section_id": "5", "title": "+ 9V 5 + 9 + 15V", "content": "( 3 t n e r r u 2 C", "page_start": 529, "page_end": 528, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": []}
{"section_id": "1", "title": "W WW WW WW", "content": "", "page_start": 529, "page_end": 528, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "5", "title": ".7 55 11 77 22 55 44", "content": "0 RRpp11 RRpp22", "page_start": 529, "page_end": 528, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 3, "tags": []}
{"section_id": "0", "title": "10 20 30 40 50 60 70 80 90 100", "content": "Source Power Rating (W) Figure 10-2 shows an example of an adapter with a rating at 50W. The adapter is required to support 20V at 2.5A, 15V at 3A, 9V at 3A and 5V at 3A. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 529 Figure 10-2 Source Power Rule Example 6 5 4 ) A", "page_start": 529, "page_end": 529, "content_type": "text", "tables": [], "figures": [{"figure_id": "Figure 10-2 shows an example of an adapter with a rating at 50W. The adapter is required to support 20V at 2.5A,", "caption": "Figure 10-2 shows an example of an adapter with a rating at 50W. The adapter is required to support 20V at 2.5A,", "page": 529}, {"figure_id": "Figure 10-2 Source Power Rule Example", "caption": "Figure 10-2 Source Power Rule Example", "page": 530}], "subsections": [], "word_count": 57, "tags": []}
{"section_id": "5", "title": "+ 9V 5 + 9 + 15V", "content": "( 3 t n e r r u 2 C", "page_start": 530, "page_end": 529, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": []}
{"section_id": "1", "title": "W W W W W", "content": "", "page_start": 530, "page_end": 529, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "5", "title": ".7 5 1 7 2 5 4 0 5", "content": "0 Rp1 Rp2", "page_start": 530, "page_end": 529, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 3, "tags": []}
{"section_id": "0", "title": "10 20 30 40 50 60 70 80 90 100", "content": "Source Power Rating (W) Table 10-3, Table 10-4, Table 10-5 and Table 10-6 show the Fixed Supply PDOs that Shall be supported for each of the Normative voltages defined in Table 10-2. Table 10-3 Fixed Supply PDO – Source 5V Bit(s) Description B31…30 Fixed supply B29 Dual-Role Power B28 USB Suspend Supported B27 Unconstrained Power B26 USB Communications Capable B25 Dual-Role Data B24…22 Reserved – Shall be set to zero. B21…20 Peak Current B19…10 5V B9…0 PDP (x) Current (A)", "page_start": 530, "page_end": 529, "content_type": "text", "tables": [{"table_id": "Table 10-3, Table 10-4, Table 10-5 and Table 10-6 show the Fixed Supply PDOs that Shall be supported for each of the", "caption": "Table 10-3, Table 10-4, Table 10-5 and Table 10-6 show the Fixed Supply PDOs that Shall be supported for each of the", "page": 530, "data": []}, {"table_id": "Normative voltages defined in Table 10-2.", "caption": "Normative voltages defined in Table 10-2.", "page": 530, "data": []}, {"table_id": "Table 10-3 Fixed Supply PDO – Source 5V", "caption": "Table 10-3 Fixed Supply PDO – Source 5V", "page": 530, "data": []}], "figures": [], "subsections": [], "word_count": 80, "tags": []}
{"section_id": "0.5", "title": "≤ x ≤ 15 x ÷ 5", "content": "", "page_start": 530, "page_end": 529, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "15", "title": "< x ≤ 100 3", "content": "Page 530 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 10-4 Fixed Supply PDO – Source 9V Bit(s) Description B31…30 Fixed Supply B29…22 Reserved – Shall be set to zero. B21…20 Peak Current B19…10 9V B9…0 PDP (x) Current (A)", "page_start": 530, "page_end": 530, "content_type": "text", "tables": [{"table_id": "Table 10-4 Fixed Supply PDO – Source 9V", "caption": "Table 10-4 Fixed Supply PDO – Source 9V", "page": 531, "data": []}], "figures": [], "subsections": [], "word_count": 41, "tags": []}
{"section_id": "0.5", "title": "≤ x ≤ 15 PDO not required", "content": "", "page_start": 531, "page_end": 530, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "15", "title": "< x ≤ 27 x ÷ 9", "content": "", "page_start": 531, "page_end": 530, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "27", "title": "< x ≤ 100 3", "content": "Table 10-5 Fixed Supply PDO – Source 15V Bit(s) Description B31…30 Fixed Supply B29…22 Reserved – Shall be set to zero. B21…20 Peak Current B19…10 15V B9…0 PDP (x) Current (A)", "page_start": 531, "page_end": 530, "content_type": "text", "tables": [{"table_id": "Table 10-5 Fixed Supply PDO – Source 15V", "caption": "Table 10-5 Fixed Supply PDO – Source 15V", "page": 531, "data": []}], "figures": [], "subsections": [], "word_count": 31, "tags": []}
{"section_id": "0.5", "title": "≤ x ≤ 27 PDO not required", "content": "", "page_start": 531, "page_end": 530, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "27", "title": "< x ≤ 45 x ÷ 15", "content": "", "page_start": 531, "page_end": 530, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "45", "title": "< x ≤ 100 3", "content": "Table 10-6 Fixed Supply PDO – Source 20V Bit(s) Description B31…30 Fixed Supply B29…22 Reserved – Shall be set to zero. B21…20 Peak Current B19…10 20V B9…0 PDP (x) Current (A)", "page_start": 531, "page_end": 530, "content_type": "text", "tables": [{"table_id": "Table 10-6 Fixed Supply PDO – Source 20V", "caption": "Table 10-6 Fixed Supply PDO – Source 20V", "page": 531, "data": []}], "figures": [], "subsections": [], "word_count": 31, "tags": []}
{"section_id": "0.5", "title": "≤ x ≤ 45 PDO not required", "content": "", "page_start": 531, "page_end": 530, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "45", "title": "< x ≤ 100 x ÷ 20", "content": "More current May be offered in the PDOs when Optional voltages/currents are supported and a 5A cable is being used (see Section 10.2.3). USB Power Delivery Specification Revision 3.0, Version 1.1 Page 531", "page_start": 531, "page_end": 531, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": []}
{"section_id": "10.2.3", "title": "Optional Voltages/Currents", "content": "", "page_start": 532, "page_end": 531, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["voltage"]}
{"section_id": "10.2.3.1", "title": "Optional Normative Fixed, Variable and Battery Supply", "content": "In addition to the voltages and currents specified in Section 10.2.2 a Source that is optimized for use with a specific Sink or a specific class of Sinks May Optionally supply additional voltages and increased currents. When Optional voltages and increased currents are provided, the following requirements Shall apply:  The Source Shall be able to meet its PDP at the Normative voltages and currents as specified in Section 10.2.2.  A Source Shall Not advertise Fixed Supply PDO Optional voltages and currents that exceed the PDP.  A Source Shall Not advertise Variable Supply PDO Optional maximum voltages and currents that exceed the PDP.  A Source Shall Not advertise a Battery Supply PDO Optional maximum allowable power that exceeds the PDP.", "page_start": 532, "page_end": 531, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 123, "tags": []}
{"section_id": "10.2.3.2", "title": "Optional Normative Programmable Power Supply", "content": "In addition to the voltages and currents specified in Section 10.2.2 a Source that is optimized for use with a specific Sink or a specific class of Sinks May Optionally offer a Programmable Power Supply. The Programmable Power Supply’s PDP Shall be calculated as the product of the Nominal Voltage times the Maximum Current. When Optional Programmable Power Supply APDOs are offered, the following requirements Shall apply:  A Source that advertises Optional Programmable Power Supply APDOs Shall advertise the PDOs and APDOs shown in Table 10-7.  A Source Shall advertise Optional Programmable Power Supply APDOs with Maximum Voltage and Minimum Voltages for nominal voltage as defined in Table 10-8.  A Source that advertises Programmable Power Supply APDOs other than the ones listed in Table 10-8 Shall Not advertise additional APDO's with a Maximum Voltage * Maximum Current that exceeds the adapter's PDP.  In no case Shall a Source advertise a current that exceeds the attached cable’s current rating. Table 10-7 shows the Programmable Power Supply APDOs that Shall be offered for a given PDP. Table 10-7 Programmable Power Supply PDOs and APDOs based on the PDP PDP (W) 5V fixed 9V fixed 15V fixed 20V fixed 5V Prog 9V Prog 15V Prog 20V Prog x <= 15W PDP/5 - - - PDP/5 - - -", "page_start": 532, "page_end": 531, "content_type": "text", "tables": [{"table_id": "shown in Table 10-7.", "caption": "shown in Table 10-7.", "page": 532, "data": []}, {"table_id": "Voltages for nominal voltage as defined in Table 10-8.", "caption": "Voltages for nominal voltage as defined in Table 10-8.", "page": 532, "data": []}, {"table_id": " A Source that advertises Programmable Power Supply APDOs other than the ones listed in Table 10-8 Shall Not", "caption": " A Source that advertises Programmable Power Supply APDOs other than the ones listed in Table 10-8 Shall Not", "page": 532, "data": []}, {"table_id": "Table 10-7 shows the Programmable Power Supply APDOs that Shall be offered for a given PDP.", "caption": "Table 10-7 shows the Programmable Power Supply APDOs that Shall be offered for a given PDP.", "page": 532, "data": []}, {"table_id": "Table 10-7 Programmable Power Supply PDOs and APDOs based on the PDP", "caption": "Table 10-7 Programmable Power Supply PDOs and APDOs based on the PDP", "page": 532, "data": []}], "figures": [], "subsections": [], "word_count": 219, "tags": ["power"]}
{"section_id": "15", "title": "< x <= 27W 3A PDP/9 - - 3A or PDP/9 - -", "content": "PDP/52", "page_start": 532, "page_end": 531, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "27", "title": "< x <= 45W 3A 3A PDP/15 - PDP/51 3A or PDP/15 -", "content": "PDP/92", "page_start": 532, "page_end": 531, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "45", "title": "< x <= 100W 3A 3A 3A PDP/20 - PDP/91 3A or PDP/202", "content": "PDP/152 Notes: 1. This PPS APDO is Optional. 2. The PPS May offer more than 3A when a 5A cable is present.", "page_start": 532, "page_end": 531, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "10.2.3.2.1", "title": "Programmable Power Supply Voltage Ranges", "content": "The Programmable Power Supply voltage ranges map to the Fixed Supply Voltages. For each Fixed Voltage there is a defined voltage range for the matching Programmable Power Supply APDO. Table 10-8 shows the Minimum and Maximum voltage for the Programmable Power Supply that corresponds to the Fixed nominal voltage. Page 532 USB Power Delivery Specification Revision 3.0, Version 1.1 Table 10-8 Programmable Power Supply Voltage Ranges Fixed Nominal Voltage 5V Prog 9V Prog 15V Prog 20V Prog Maximum Voltage 5.9V 11V 16V 21V Minimum Voltage 3V 3V 3V 3V The voltage output at the Source’s connector Shall be +/-5% for both the Maximum Voltage and the Minimum Voltage.", "page_start": 532, "page_end": 532, "content_type": "text", "tables": [{"table_id": "defined voltage range for the matching Programmable Power Supply APDO. Table 10-8 shows the Minimum and", "caption": "defined voltage range for the matching Programmable Power Supply APDO. Table 10-8 shows the Minimum and", "page": 532, "data": []}, {"table_id": "Table 10-8 Programmable Power Supply Voltage Ranges", "caption": "Table 10-8 Programmable Power Supply Voltage Ranges", "page": 533, "data": []}], "figures": [], "subsections": [], "word_count": 108, "tags": ["power", "voltage"]}
{"section_id": "10.1.2.2", "title": "Examples of the use of the Programmable Power Supplies", "content": "The following examples illustrate what a power adapter that advertises a particular PDP May offer: 1. PDP 15W  5V @ 3A and 5V Prog @ 3A is the baseline 2. PDP 25W  5V @ 3A, 9V @ 2.8A, 5V Prog @ 3A and 9V Prog @ 2.8A is the baseline  5V @ 3A, 9V @ 2.8A, 5V Prog @ >3A up to 5A and 9V Prog @ 2.8A (with a 5A cable) 3. PDP 27W  5V @ 3A, 9V @ 3A, 9V Prog @ 3A is the baseline  5V @ 3A, 9V @ 3A, 5V Prog @ 3A and 9V Prog @ 3A can offer 5V Prog, but it is covered by the 9V Prog  5V @ 3A, 9V @ 3A, 5V Prog @ >3A up to 5A and 9V Prog @ 3A (with a 5A cable) 4. PDP 36W  5V @ 3A, 9V @ 3A, 15 @ 2.4A, 9V Prog @ 3 A and 15V Prog @ 2.4A is the baseline  5V @ 3A, 9V @ 3A, 15 @ 2.4A, 5V Prog @ >3A up to 5A, 9V Prog @ >3A up to 4A and 15V Prog @ 2.4A (with a 5A cable) The first example is a simple single output voltage supply. Both the Fixed and Programmable outputs supply 3A. The second example illustrates that there are multiple ways to meet the requirements. The first sub-bullet is the power that the power rules require. The second sub-bullet illustrates that the power supply can offer more power at a particular voltage so long as it does not violate the power rules. In this case it offers 25W at both 5V and 9V. The third example illustrates that there are multiple ways a 27W PDP power adapter can be implemented and meet the power rules. The first sub-bullet shows that the 9V Prog @ 3A fully covers the 5V Prog @3A range so it is not necessary to advertise both. The second and third sub-bullets illustrate that the power adapter can advertise lower voltages at higher currents than required so long as the power does not exceed the PDP. The fourth example illustrates as the PDP goes higher there are more possible combinations that meet the power rules. Although there are multiple ways to meet the power rules, no more than a combination of seven PDO and APDOs can be offered.", "page_start": 533, "page_end": 532, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 399, "tags": ["power"]}
{"section_id": "10.2.4", "title": "Power sharing between ports", "content": "The Source power rules defined in Section 10.2.2 and Section 10.2.3 Shall apply independently to each port on a system with multiple ports.", "page_start": 533, "page_end": 532, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["power"]}
{"section_id": "10.3", "title": "Sink Power Rules", "content": "", "page_start": 533, "page_end": 532, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": ["power", "sink"]}
{"section_id": "10.3.1", "title": "Sink Power Rule Considerations", "content": "The Sink power rules are designed to ensure the best possible user experience when a given Sink used with a compliant Source of arbitrary Output Power Rating that only supplies the Normative voltages and currents. The Sink Power Rules are based on the following considerations: USB Power Delivery Specification Revision 3.0, Version 1.1 Page 533  Low power Sources (e.g., 5V) are expected to be very common and will be used with Sinks designed for a higher PDP.  Optimizing the user experience when Sources with a high PDP are used with low power Sinks.  Preventing Sinks that only function well (or at all) when using Optional voltages and currents.", "page_start": 533, "page_end": 533, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 111, "tags": ["power", "sink"]}
{"section_id": "10.3.2", "title": "Normative Sink Rules", "content": "Sinks designed to use Sources with a PDP of x W Shall:  Either operate or charge from Sources that have a PDP ≥ x W.  Either operate, charge or indicate a capability mismatch (see Section 6.4.2.3) from Sources that have a PDP < x W and ≥ 0.5W. A Sink optimized for a Source with Optional voltages and currents or power as described in Section 10.2.3 with a PDP of x W Shall provide a similar user experience when powered from a Source with a PDP of ≥ x W that supplies only the Normative voltages and currents as specified in Section 10.2.2. The following requirements Shall apply to the advertised Sink Capabilities:  A Sink Shall Not advertise Fixed Supply PDO maximum voltages and currents that exceed the PDP they were designed to use.  A Sink Shall Not advertise Variable Supply PDO maximum voltages and currents that exceed the PDP they were designed to use.  A Sink Shall Not advertise a Battery Supply PDO maximum allowable power that exceeds the PDP they were designed to use. Page 534 USB Power Delivery Specification Revision 3.0, Version 1.1 A. CRC calculation A.1 C code example // // USB PD CRC Demo Code. // #include <stdio.h> int crc; //----------------------------------------------------------------------------- void crcBits(int x, int len) { const int poly = 0x04C11DB6; //spec 04C1 1DB7h int newbit, newword, rl_crc; for(int i=0; i<len; i++) { newbit = ((crc>>31) ^ ((x>>i)&1)) & 1; if(newbit) newword=poly; else newword=0; rl_crc = (crc<<1) | newbit; crc = rl_crc ^ newword; printf(\"%2d newbit=%d, x>>i=0x%x, crc=0x%x\\n\", i, newbit,(x>>i),crc); } } int crcWrap(int c){ int ret = 0; int j, bit; c = ~c; printf(\"~crc=0x%x\\n\", c); for(int i=0;i<32;i++) { j = 31-i; bit = (c>>i) & 1; ret |= bit<<j; USB Power Delivery Specification Revision 3.0, Version 1.1 Page 535 } return ret; } //----------------------------------------------------------------------------- int main(){ int txCrc=0,rxCrc=0,residue=0,data; printf(\"using packet data 0x%x\\n\", data=0x0101); crc = 0xffffffff; crcBits(data,16); txCrc = crcWrap(crc); printf(\"crc=0x%x, txCrc=0x%x\\n\", crc, txCrc); printf(\"received packet after decode= 0x%x, 0x%x\\n\", data, txCrc); crc = 0xffffffff; crcBits(data,16); rxCrc = crcWrap(crc); printf(\"Crc of the received packet data is (of course) =0x%x\\n\", rxCrc); printf(\"continue by running the transmit crc through the crc\\n\"); crcBits(rxCrc,32); printf(\"Now the crc residue is 0x%x\\n\", crc); printf(\"should be 0xc704dd7b\\n\"); } Page 536 USB Power Delivery Specification Revision 3.0, Version 1.1 A.2 Table showing the full calculation over one Message CRC register CRC register CRC register CRC register Function Nibble Symbol Bits bit nr. Function Nibble Symbol Bits bit nr. transmitter receiver transmitter receiver", "page_start": 534, "page_end": 536, "content_type": "text", "tables": [{"table_id": "A.2 Table showing the full calculation over one Message", "caption": "A.2 Table showing the full calculation over one Message", "page": 537, "data": []}], "figures": [], "subsections": [], "word_count": 417, "tags": ["sink"]}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 1 1 FFFFFFFF FFFFFFFF 85", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 2 0 FFFFFFFE FFFFFFFF 86", "content": "#1", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 3 #09 0 FB3EE24B FFFFFFFF 87", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 4 1 F2BCD921 FFFFFFFF 88", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 5 0 E1B8AFF5 FFFFFFFF 89", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 6 0 E1B8AFF5 FFFFFFFF 90", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 7 1 C7B0425D FFFFFFFE 91", "content": "#0", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 8 #1E 1 8BA1990D FB3EE24B 92", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 9 1 13822FAD F2BCD921 93", "content": "GoodCRC", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 10 1 27045F5A E1B8AFF5 94", "content": "Header", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 11 1 27045F5A E1B8AFF5 95", "content": "#0101", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 12 0 4AC9A303 C7B0425D 96", "content": "#1", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 13 #09 0 95934606 8BA1990D 97", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 14 1 2FE791BB 13822FAD 98", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 15 0 5FCF2376 27045F5A 99", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 16 0 5FCF2376 27045F5A 100", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 17 1 BF9E46EC 4AC9A303 101", "content": "#0", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 18 #1E 1 7BFD906F 95934606 102", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 19 1 F7FB20DE 2FE791BB 103", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 20 1 EB375C0B 5FCF2376 104", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 21 0 EB375C0B 5FCF2376 105", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 22 1 EB375C0B BF9E46EC 106", "content": "#8", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 23 #12 0 EB375C0B 7BFD906F 107", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 24 0 EB375C0B F7FB20DE 108", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 25 1 EB375C0B EB375C0B 109", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 26 0 EB375C0B EB375C0B 110", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 27 0 EB375C0B D2AFA5A1 111", "content": "#2", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 28 #14 1 EB375C0B A19E56F5 112", "content": "P 0 FFFFFFFF FFFFFFFF 29 0 EB375C0B 47FDB05D 113 r 1 FFFFFFFF FFFFFFFF 30 1 EB375C0B 8B3A7D0D 114 e 0 FFFFFFFF FFFFFFFF 31 1 EB375C0B 8B3A7D0D 115 a 1 FFFFFFFF FFFFFFFF 32 0 EB375C0B 12B5E7AD 116 m 0 FFFFFFFF FFFFFFFF 33 #3 #15 1 EB375C0B 21AAD2ED 117 b 1 FFFFFFFF FFFFFFFF 34 0 EB375C0B 4355A5DA 118 l 0 FFFFFFFF FFFFFFFF 35 1 EB375C0B 86AB4BB4 119 e 1 FFFFFFFF FFFFFFFF 36 1 EB375C0B 86AB4BB4 120", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 74, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 37 0 EB375C0B 0D569768 121", "content": "CRC-32 = #1", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 3, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 38 #09 0 EB375C0B 1E6C3367 122", "content": "swapped", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 39 1 EB375C0B 3CD866CE 123", "content": "and", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 40 0 EB375C0B 79B0CD9C 124", "content": "inverted", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 41 1 EB375C0B 79B0CD9C 125", "content": "EB375C0B", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 42 1 EB375C0B F7A0868F 126", "content": "= #5", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 43 #0B 0 EB375C0B EB8010A9 127", "content": "2FC51328", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 44 1 EB375C0B D3C13CE5 128", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 45 0 EB375C0B A343647D 129", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 46 0 EB375C0B A343647D 130", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 47 1 EB375C0B 4686C8FA 131", "content": "#C", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 48 #1A 0 EB375C0B 8D0D91F4 132", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 49 1 EB375C0B 1A1B23E8 133", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 50 1 EB375C0B 343647D0 134", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 51 1 EB375C0B 343647D0 135", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 52 0 EB375C0B 686C8FA0 136", "content": "#F", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 53 #1D 1 EB375C0B D0D91F40 137", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 54 1 EB375C0B A1B23E80 138", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 55 1 EB375C0B 43647D00 139", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 56 0 EB375C0B 43647D00 140", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 57 0 EB375C0B 8209E7B7 141", "content": "#2", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 58 #14 1 EB375C0B 0413CF6E 142", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 59 0 EB375C0B 0CE6836B 143", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 60 1 EB375C0B 1D0C1B61 144", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 61 1 EB375C0B 1D0C1B61 145", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 62 0 EB375C0B 3A1836C2 146", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 63 EOP #0D 1 EB375C0B 70F17033 147", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 64 1 EB375C0B E1E2E066 148", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 65 0 EB375C0B C704DD7B 149", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 66", "content": "Sync1", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 67", "content": "(#18) Note: CRC transmitter is calculated over data bytes", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 68", "content": "only, in casu marked nibbles, and calculation results", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 69", "content": "are available one (bit-) clock later", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 70", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 71", "content": "Sync1", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 72", "content": "(#18) Note: CRC receiver is calculated over data bytes and", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 73", "content": "S received CRC bytes, in casu marked nibbles, and", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 74", "content": "O calculation results are available five (bit-) clocks later P 0 FFFFFFFF FFFFFFFF 75", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 76", "content": "Sync1", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 77 Fixed residual", "content": "(#18)", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 78", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 79", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 80", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 81", "content": "Sync2", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 82", "content": "(#11)", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "0", "title": "FFFFFFFF FFFFFFFF 83", "content": "", "page_start": 537, "page_end": 536, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "1", "title": "FFFFFFFF FFFFFFFF 84", "content": "USB Power Delivery Specification Revision 3.0, Version 1.1 Page 537 B. PD Message Sequence Examples The following examples are intended to show how the Device Policy Manager might operate and the sequence of Power Delivery messaging which will result. The aim of this section is to inform implementer’s how some of the mechanisms detailed in this specification might be applied; it does not contain any Normative requirements. All ports are assumed to be Enhanced SuperSpeed capable, with a default operating voltage of 5V and a unit load of 150mA. This 0.75W is assumed to be enough power to enable an externally powered device to maintain communication over USB and is enough to allow such a device to enumerate but not operate until more power is negotiated. Although the Hubs in these illustrations support Power Delivery on both their UFPs and DFPs this is only one possible Hub implementation. HDDs are assumed to spin up immediately after they are Attached. This follows the typical operation of current systems. Ideal power transmission is assumed so that there are no power losses through a device; in practice these would need to be taken into account when requesting power. B.1 External power is supplied downstream Figure B-1 External Power supplied downstream Laptop AC Display 1 Display 2 Configuration: 1. Laptop with an AC supply. AC supply provides sufficient power to charge the laptop and, in addition, to provide up to 60W downstream via its Enhanced SuperSpeed Port. According to the Source Power Rules described in Section 10.2 this means that the Port has a PD Power of 60W and so can supply: 5V@3A, 9V@3A, 15V@3A and 20V@3A. 2. Display 1 requires 30W to display and therefore a PD Power of 60W to operate itself plus Display 2 connected downstream. Display 1 initially uses 15V@2A to operate itself, since this also allows operation with a Source of 30W PD Power. On connection of Display 2, Display 1 will move to operation at 20V@3A to allow operation of the additional 30W ganged display. According to the Sink Power Rules described in Section 10.3 this means that Display 1 Page 538 USB Power Delivery Specification Revision 3.0, Version 1.1 requires a Source with a PD Power of 60W to fully operate. Display 1 contains a Hub allowing Display 2 to be connected to Display 1. 3. Display 2 requires 30W operate itself and does not support an additional display connected downstream. Display 1 uses 15V@2A to operate itself from a Source of 30W PD Power. 4. In USB suspend Display 1 and Display 2 will power down but can maintain USB connection using the PD power provided. Table B-1 External power is supplied downstream Step Laptop Display 1 Display 2 Device Policy Power (W) Manager Display 1", "page_start": 537, "page_end": 538, "content_type": "text", "tables": [{"table_id": "Table B-1 External power is supplied downstream", "caption": "Table B-1 External power is supplied downstream", "page": 539, "data": []}], "figures": [{"figure_id": "Figure B-1 External Power supplied downstream", "caption": "Figure B-1 External Power supplied downstream", "page": 538}], "subsections": [], "word_count": 460, "tags": []}
{"section_id": "1", "title": "Connected to wall Detached Detached 0", "content": "supply", "page_start": 539, "page_end": 538, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "2", "title": "Display 1 Attached, Attached, drawing Detached 0.75", "content": "V powered. 5V@150mA. BUS", "page_start": 539, "page_end": 538, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": []}
{"section_id": "3", "title": "Set of Source Source Capabilities Detached Laptop determines 0.75", "content": "Capabilities sent received its Source including: 5V@3A Capabilities based (15W), 9V@3A (27W), on its needs and 15V@3A(45W) and the presence of a 20V@3A (60W). wall supply. The Unconstrained Power and USB suspend bits are set.", "page_start": 539, "page_end": 538, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["source"]}
{"section_id": "4", "title": "Request received Requests 15V@2A Detached Display 1 knows it 0.75", "content": "(30W) from laptop needs 20v@1.5A (30W) for its own operation, evaluates the supplied capabilities and determines that this is available.", "page_start": 539, "page_end": 538, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": []}
{"section_id": "5", "title": "Sends Accept Accept received Detached Waiting for PS_RDY 0.75", "content": "before drawing additional power.", "page_start": 539, "page_end": 538, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": []}
{"section_id": "6", "title": "Sends PS_RDY PS_RDY received. Detached Laptop evaluates 30", "content": "Starts drawing the request, finds 15V@2A. Display 1 that it can meet turns on and starts this and so sends operating. an accept. Display 2", "page_start": 539, "page_end": 538, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": []}
{"section_id": "7", "title": "Powering Display 1 Detects Attach Attached, no V 30", "content": "BUS USB Power Delivery Specification Revision 3.0, Version 1.1 Page 539 Step Laptop Display 1 Display 2 Device Policy Power (W) Manager", "page_start": 539, "page_end": 539, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": ["power"]}
{"section_id": "8", "title": "Request received Display 1 requests Attached, no V Display 1 detects 30", "content": "BUS 20V@1.73A (34.6W) Attach and from Laptop. requests additional 4.5W of power for USB 3.1 Port.", "page_start": 540, "page_end": 539, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 16, "tags": []}
{"section_id": "9", "title": "Sends Accept Accept received. Attached, no V 34.6", "content": "BUS", "page_start": 540, "page_end": 539, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "10", "title": "Sends PS_RDY PS_RDY received Attached, no V", "content": "BUS", "page_start": 540, "page_end": 539, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "11", "title": "Powers V Attached, drawing 34.6", "content": "BUS 5V@150mA.", "page_start": 540, "page_end": 539, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 2, "tags": ["power"]}
{"section_id": "12", "title": "Sends out Source Source Capabilities Display 1 has 4.5W 34.6", "content": "Capabilities including: received to allocate to 5V@0.9A to Display 2. Display 1. This is The Unconstrained offered as a Power and USB standard USB 3.1 suspend bits are set. Port.", "page_start": 540, "page_end": 539, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 30, "tags": ["source"]}
{"section_id": "13", "title": "Request received Display 2 requests Display 2 decides it 34.6", "content": "5V@0.15A but can manage to run indicates a its USB/PD function Capability with 1 unit load but Mismatch. Display 2 needs more power remains off. to function as a display.", "page_start": 540, "page_end": 539, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 30, "tags": []}
{"section_id": "14", "title": "Sends Accept Accept received 34.6", "content": "", "page_start": 540, "page_end": 539, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "15", "title": "Sends PS_RDY PS_RDY received Display 2 indicates 34.6", "content": "a capability mismatch to the user.", "page_start": 540, "page_end": 539, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "16", "title": "Get Sink Capabilities Get Sink Capabilities Display 1 needs to 34.6", "content": "sent received assess the capability mismatch by first determining what Display 2 actually needs.", "page_start": 540, "page_end": 539, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["sink"]}
{"section_id": "17", "title": "Sink Capabilities Display 2 returns 34.6", "content": "received Sink Capabilities indicating operation at 15V@2A. Page 540 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Laptop Display 1 Display 2 Device Policy Power (W) Manager", "page_start": 540, "page_end": 540, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": ["sink"]}
{"section_id": "18", "title": "Request received Display 1 requests Display1 now 34.6", "content": "20V@3A (60W) from knows what Laptop. Display 2 needs and requests the additional power from the laptop.", "page_start": 541, "page_end": 540, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": []}
{"section_id": "19", "title": "Sends Accept Accept received. 34.6", "content": "", "page_start": 541, "page_end": 540, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "20", "title": "Sends PS_RDY PS_RDY received An additional 30W 60", "content": "is now available to Display 1 to offer to Display 2.", "page_start": 541, "page_end": 540, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "21", "title": "Sends out Source Source Capabilities Now that Display 1 60", "content": "Capabilities including: received can power Display 5V@0.9A and 2 correctly this 20V@1.5A to Display power is offered by 2. The Unconstrained Display 1 via a new Power and USB capabilities suspend bits are set. Message.", "page_start": 541, "page_end": 540, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["source"]}
{"section_id": "22", "title": "Request received Display 2 requests 60", "content": "15V@2A.", "page_start": 541, "page_end": 540, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "23", "title": "Sends Accept Accept received Display 1 60", "content": "determines that the request by Display 2 is within the offered capabilities so the request is accepted.", "page_start": 541, "page_end": 540, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": []}
{"section_id": "24", "title": "Sends PS_RDY. PS_RDY received. Display 2 now has 60", "content": "Drawing 20V@3A from Starts drawing the power it needs laptop. 15V@2A, turns on and can start and starts working. operating. USB Suspend", "page_start": 541, "page_end": 540, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "25", "title": "Laptop OS goes into Display 1 turns off but Display 2 turns off No changes in 60", "content": "suspend (S3), V draws 50mW, 25mW but draws 25mW to Contract. This is a BUS remains on but USB to maintain PDUSB maintain USB/PD power reduction bus is also suspended. Hub functions. The functions. purely based on additional 25mW is the USB state. used to supply the Port used by Display 2. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 541 Step Laptop Display 1 Display 2 Device Policy Power (W) Manager", "page_start": 541, "page_end": 541, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 73, "tags": []}
{"section_id": "26", "title": "Laptop OS wakes up. Display 1 turns on and Display 2 turns on No changes in PD 60", "content": "USB is woken up. returns to drawing and returns to Contract. This 20V@3A. drawing 15V@2A. purely relates to USB bus state. B.2 External power is supplied upstream Figure B-2 External Power supplied upstream Tablet Display 1 Display 2 AC Configuration: 1. Tablet with no AC supply. Tablet is a USB host and can use 5V@0.2A (1W) during normal operation and up to 5V@2.4A (12W) in order to charge. 2. Display 1 requires 30W to operate and therefore a PD Power of 42W to operate itself and charge the tablet. Display 1 uses 15V@2A to operate itself, since this allows operation with a Source of 30W PD Power and then moves to operation at 20V@2.1A to allow charging of the laptop. According to the Sink Power Rules described in Section 10.3 this means that the Display 1 requires a Source with a PD Power of 42W to fully operate. 3. Display 2 has an AC supply connected. AC supply provides sufficient power to power Display 2 and, in addition, to provide up to 60W PD Power upstream. Table B-2 External power is supplied upstream Step Tablet Display 1 Display 2 Device Policy Power (W) Manager Display 1 - Dead Battery", "page_start": 542, "page_end": 541, "content_type": "text", "tables": [{"table_id": "1. Tablet with no AC supply. Tablet is a USB host and can use 5V@0.2A (1W) during normal operation and up to", "caption": "1. Tablet with no AC supply. Tablet is a USB host and can use 5V@0.2A (1W) during normal operation and up to", "page": 542, "data": []}, {"table_id": "Table B-2 External power is supplied upstream", "caption": "Table B-2 External power is supplied upstream", "page": 542, "data": []}, {"table_id": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "caption": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "page": 542, "data": []}], "figures": [{"figure_id": "Figure B-2 External Power supplied upstream", "caption": "Figure B-2 External Power supplied upstream", "page": 542}], "subsections": [], "word_count": 199, "tags": []}
{"section_id": "1", "title": "Detached Detached Connected to the 0", "content": "wall supply. Page 542 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Tablet Display 1 Display 2 Device Policy Power (W) Manager", "page_start": 542, "page_end": 542, "content_type": "text", "tables": [{"table_id": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "caption": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "page": 543, "data": []}], "figures": [], "subsections": [], "word_count": 23, "tags": []}
{"section_id": "2", "title": "Attached to Display 2 Display 1 Attached 0", "content": "", "page_start": 543, "page_end": 542, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 0, "tags": []}
{"section_id": "3", "title": "USB Type-C Power USB Type-C Power 0", "content": "drawn 5V@1.5A advertised 5V@1.5A", "page_start": 543, "page_end": 542, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": ["power"]}
{"section_id": "4", "title": "Attached to Display 2, Providing 1 unit 7.5", "content": "drawing 5V@1.5A load to Display 1. (7.5W)", "page_start": 543, "page_end": 542, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": []}
{"section_id": "5", "title": "Source Capabilities Display2 sends out Based on the 7.5", "content": "received a set of capabilities capabilities of the including: 5V@3A wall supply and its (15W), 9V@3A own needs Display (27W), 15V@3A 2 calculates what it (45W) and 20V@3A can offer upstream. (60W). The Unconstrained Power and USB suspend bits are set.", "page_start": 543, "page_end": 542, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": ["source"]}
{"section_id": "6", "title": "Display 1 requests Request received Display 1 knows it 7.5", "content": "15V@2A (30W) from needs 30W to Display 2. operate so it requests this amount.", "page_start": 543, "page_end": 542, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": []}
{"section_id": "7", "title": "Accept received Sends Accept Display 2 accepts 7.5", "content": "the offer since it is within its capabilities.", "page_start": 543, "page_end": 542, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "8", "title": "PS_RDY received. Sends PS_RDY Display 2 indicates 30", "content": "Display 1 starts drawing its power supply is power and turns on. ready to offer the power. Tablet – Power Role Swap", "page_start": 543, "page_end": 542, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "9", "title": "Tablet is Attached to Attached, V 30", "content": "BUS Display 1. powered.", "page_start": 543, "page_end": 542, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": []}
{"section_id": "10", "title": "Tablet sends out a set Capabilities received 30", "content": "of capabilities including: 5V@0.5A (2.5W). The Unconstrained Power bit cleared and USB suspend bit set. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 543 Step Tablet Display 1 Display 2 Device Policy Power (W) Manager", "page_start": 543, "page_end": 543, "content_type": "text", "tables": [{"table_id": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "caption": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "page": 544, "data": []}], "figures": [], "subsections": [], "word_count": 36, "tags": []}
{"section_id": "11", "title": "Request received Display 1 requests Display 1 has 30", "content": "5V@0A from the external power Tablet. The providing Unconstrained Power everything it needs and Dual-Role Power so it does not bits are set. request any more.", "page_start": 544, "page_end": 543, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": []}
{"section_id": "12", "title": "Sends Accept Accept received. No power has been 30", "content": "requested from the Tablet so the tablet has no reason to Reject this.", "page_start": 544, "page_end": 543, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": ["power"]}
{"section_id": "13", "title": "Sends PS_RDY PS_RDY received. Table completes 30", "content": "the Explicit Contract by sending PS_RDY.", "page_start": 544, "page_end": 543, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "14", "title": "Get Sink Capabilities Sends Get Sink Display 1 has access 30", "content": "received. Capabilities to an external supply so it needs to check whether the Tablet upstream, which has no external supply, could use some power. Display 1 also knows that there is excess capacity, based on the last capabilities it received, which it is not currently using from Display 2.", "page_start": 544, "page_end": 543, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 49, "tags": ["sink"]}
{"section_id": "15", "title": "The Tablet returns Sink Capabilities 30", "content": "Sink Capabilities received indicating that it is a Dual-Role and that it can use 5V@0.2A (1W) as a Sink.", "page_start": 544, "page_end": 543, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 19, "tags": ["sink"]}
{"section_id": "16", "title": "Display 1 requests Request received 30", "content": "15V@2.1A (31.5W) from Display 2.", "page_start": 544, "page_end": 543, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": []}
{"section_id": "17", "title": "Accept received Sends Accept Request is within 30", "content": "the available power so Display 2 sends an accept. Page 544 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Tablet Display 1 Display 2 Device Policy Power (W) Manager", "page_start": 544, "page_end": 544, "content_type": "text", "tables": [{"table_id": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "caption": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "page": 545, "data": []}], "figures": [], "subsections": [], "word_count": 30, "tags": []}
{"section_id": "18", "title": "PS_RDY received Sends PS_RDY Display 2 indicates 31.5", "content": "that the power supply is ready to supply the power.", "page_start": 545, "page_end": 544, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": []}
{"section_id": "19", "title": "PR_Swap received Requests PR_Swap Display 1 now 31.5", "content": "from Tablet. offers to provide power to the Tablet by initiating a Power Role Swap.", "page_start": 545, "page_end": 544, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": []}
{"section_id": "20", "title": "Accept sent. Tablet Accept received. Tablet is happy to 31.5", "content": "turns off its V accept a Power BUS supply. Role Swap from any device offering it power.", "page_start": 545, "page_end": 544, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": []}
{"section_id": "21", "title": "Send PS_RDY PS_RDY received. Tablet indicates 31.5", "content": "Display 1 turns on its that its supply has V supply been turned off. BUS", "page_start": 545, "page_end": 544, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": []}
{"section_id": "22", "title": "PS_RDY received. PS_RDY sent. Display 1 indicates 31.5", "content": "that its power supply is ready so the Tablet starts drawing power.", "page_start": 545, "page_end": 544, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "23", "title": "Source Capabilities Display 1 sends out a 31.5", "content": "received set of capabilities to the Tablet including: 5V@0.48A (2.4W), 12V@0.2A (2.4W) and 20V@0.12 (2.4W). The Unconstrained Power and USB suspend bits are set.", "page_start": 545, "page_end": 544, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": ["source"]}
{"section_id": "24", "title": "The Tablet requests Request received. Tablet can now 31.5", "content": "12V@0.2A. request the power it needs.", "page_start": 545, "page_end": 544, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "25", "title": "Accept received Accept sent Power is within the 31.5", "content": "capabilities of Display 1 so it accepts the request.", "page_start": 545, "page_end": 544, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": ["power"]}
{"section_id": "26", "title": "PS_RDY received. The PS_RDY sent Display 1 indicates 31.5", "content": "Tablet starts drawing that its power 12V@0.2A. supply is ready so the tablet starts drawing the power. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 545 Step Tablet Display 1 Display 2 Device Policy Power (W) Manager Tablet – Charge", "page_start": 545, "page_end": 545, "content_type": "text", "tables": [{"table_id": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "caption": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "page": 546, "data": []}], "figures": [], "subsections": [], "word_count": 41, "tags": []}
{"section_id": "27", "title": "Tablet requests Request received. Tablet needs to 31.5", "content": "12V@0.2A (2.4W) charge but the from Display 1. The power offered is Tablet needs to not sufficient. charge and so sets the Since Display 1 Capability Mismatch claims to have an bit and the No USB external supply the Suspend bit. Tablet will try to get more power using the Capability Mismatch Flag.", "page_start": 546, "page_end": 545, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 53, "tags": []}
{"section_id": "28", "title": "Accept received Accept sent A Valid request has 31.5", "content": "been made so Display 1 accepts the request.", "page_start": 546, "page_end": 545, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "29", "title": "PS_RDY received PS_RDY received Tablet indicates a 31.5", "content": "capability mismatch to the user.", "page_start": 546, "page_end": 545, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": []}
{"section_id": "30", "title": "Get Sink Capabilities Get Sink Capabilities Due to the 31.5", "content": "received. sent Capability Mismatch Flag Display 1 requests Sink Capabilities from the Tablet?", "page_start": 546, "page_end": 545, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": ["sink"]}
{"section_id": "31", "title": "The Tablet returns Sink Capabilities 31.5", "content": "Sink capabilities received containing: 5V@2.4A (12W). The Unconstrained Power bit is cleared. Page 546 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Tablet Display 1 Display 2 Device Policy Power (W) Manager", "page_start": 546, "page_end": 546, "content_type": "text", "tables": [{"table_id": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "caption": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "page": 547, "data": []}], "figures": [], "subsections": [], "word_count": 33, "tags": ["sink"]}
{"section_id": "32", "title": "Display 1 requests Request received Since the Tablet 31.5", "content": "15V@2.8A (42W) from requires an Display 2. The No additional 12W of Suspend Bit is set to power, and Display reflect the request from 1 knows that this is the Tablet. available from Display 2 based on the last Capabilities received so it requests it. In addition the Request from the Tablet indicated that it wanted No Suspend so this is reflected upwards.", "page_start": 547, "page_end": 546, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 63, "tags": []}
{"section_id": "33", "title": "Accept received Sends Accept Display 2 has 42W 42", "content": "available and so accepts the request.", "page_start": 547, "page_end": 546, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "34", "title": "PS_RDY received Sends PS_RDY Display 2 completes 42", "content": "the Explicit Contract but at this point has not accepted that power can be drawn during suspend.", "page_start": 547, "page_end": 546, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": []}
{"section_id": "35", "title": "Source Capabilities Display2 sends out Based on the 42", "content": "received a new set of capabilities of the capabilities wall supply and its including: 5V@3A own needs Display (15W), 9V@3A 2 calculates what it (27W), 15V@3A can offer upstream. (45W) and 20V@3A It decides that it (60W). The can continue to Unconstrained supply the power Power and USB even during USB suspend bits is now suspend and so set to zero. resets the USB suspend bit. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 547 Step Tablet Display 1 Display 2 Device Policy Power (W) Manager", "page_start": 547, "page_end": 547, "content_type": "text", "tables": [{"table_id": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "caption": "Step Tablet Display 1 Display 2 Device Policy Power (W)", "page": 548, "data": []}], "figures": [], "subsections": [], "word_count": 87, "tags": ["source"]}
{"section_id": "36", "title": "Display 1 requests Request received Display 1 repeats its 42", "content": "15V@2.8A (42W) from request since a new Display 2. The No set of Capabilities Suspend Bit is set to have been sent out. reflect the request from the Tablet.", "page_start": 548, "page_end": 547, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": []}
{"section_id": "37", "title": "Accept received Sends Accept Display 2 has 42W 42", "content": "available, even during suspend, and so accepts the request.", "page_start": 548, "page_end": 547, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": []}
{"section_id": "38", "title": "PS_RDY received Sends PS_RDY Display 2 completes 42", "content": "the Explicit Contract.", "page_start": 548, "page_end": 547, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 3, "tags": []}
{"section_id": "39", "title": "Capabilities received Display 1 sends out a Display 1 now has 42", "content": "set of capabilities to the the additional Tablet including: power available 5V@2.4A (12W). The and so offers this to Unconstrained Power the Tablet. bit is set and USB suspend bit is cleared.", "page_start": 548, "page_end": 547, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 32, "tags": []}
{"section_id": "40", "title": "Tablet requests Request received. Tablet is being 42", "content": "5V@2.4A (12W) from offered the power Display 1. it needs to charge and so the Tablet requests this from Display 1.", "page_start": 548, "page_end": 547, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 21, "tags": []}
{"section_id": "41", "title": "Accept received Sends Accept Request is within 42", "content": "the available Display 1's available power and so it accepts the request.", "page_start": 548, "page_end": 547, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "42", "title": "PS_RDY received. Sends PS_RDY Display 1 indicates 42", "content": "Tablet starts drawing its supply is ready 5V@2.4A (12W) to supply power. Display 1 and starts to charge. Page 548 USB Power Delivery Specification Revision 3.0, Version 1.1 B.3 Giving back power Figure B-3 Giving Back Power Laptop AC Hub Hard Hard Disk Disk PPhhoonnee Drive 1 Drive 2 Configuration: 1. Laptop with an AC supply. AC supply provides sufficient power to charge the laptop and, in addition, to provide up to 60W PD Power downstream. 2. A Hub with 4 downstream ports which initially provides 1 unit load (150mA) per Port plus 1 unit load for its internal functions. 3. Two Hard Disk Drives both of which require 5V@2A (10W) to spin up and 5V@1A (5W) while being accessed. 4. A phone which uses 5V@2A (10W) to charge and can give back all of this power when requested. Table B-3 Giving back power Step Laptop Hub Peripherals Device Policy Hub Power Manager (W) Connect Hub", "page_start": 548, "page_end": 548, "content_type": "text", "tables": [{"table_id": "Table B-3 Giving back power", "caption": "Table B-3 Giving back power", "page": 549, "data": []}], "figures": [{"figure_id": "Figure B-3 Giving Back Power", "caption": "Figure B-3 Giving Back Power", "page": 549}], "subsections": [], "word_count": 156, "tags": []}
{"section_id": "1", "title": "Connected to wall Detached Detached Default", "content": "supply", "page_start": 549, "page_end": 548, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 1, "tags": []}
{"section_id": "2", "title": "Hub is Attached Attached, V Default", "content": "BUS powered USB Power Delivery Specification Revision 3.0, Version 1.1 Page 549 Step Laptop Hub Peripherals Device Policy Hub Power Manager (W)", "page_start": 549, "page_end": 549, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "3", "title": "Laptop sends out a Source Capabilities Laptop sends out Default", "content": "set of capabilities received details of all including: 5V@3A available power via (15W), 12V@3A external supply (36W), and 20V@3A (60W). The Unconstrained Power and USB suspend bits are set.", "page_start": 550, "page_end": 549, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 29, "tags": ["source"]}
{"section_id": "4", "title": "The Hub requests Request received Hub needs 1 unit Default", "content": "5V@0.15A. This is load for its own the power for the operation and so Hubs internal requests this operation. amount.", "page_start": 550, "page_end": 549, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": []}
{"section_id": "5", "title": "Send Accept Accept received Laptop evaluates 0.75", "content": "request and it is within its available power.", "page_start": 550, "page_end": 549, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "6", "title": "Send PS_RDY PS_RDY received. Laptop indicates 0.75", "content": "Starts to draw that its power 5V@0.15A supply is ready. Connect Hard Disk Drive 1", "page_start": 550, "page_end": 549, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": []}
{"section_id": "7", "title": "Attached detected. Hard Disk Drive 1 is 0.75", "content": "Attached to one of the downstream ports of the Hub.", "page_start": 550, "page_end": 549, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": []}
{"section_id": "8", "title": "Request received The Hub requests Hub needs 0.75W 0.75", "content": "5V@0.3A (1.5W) for its own from the Laptop. operation plus 0.75W for USB communication on one Port.", "page_start": 550, "page_end": 549, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": []}
{"section_id": "9", "title": "Accept sent Accept received Request is within 1.5", "content": "available power so the laptop accepts.", "page_start": 550, "page_end": 549, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "10", "title": "PS_RDY sent PS_RDY received Laptop indicates 1.5", "content": "that its power supply is ready Page 550 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Laptop Hub Peripherals Device Policy Hub Power Manager (W)", "page_start": 550, "page_end": 550, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": []}
{"section_id": "11", "title": "Hub turns on V Source Capabilities 1.5", "content": "BUS and sends out a set received of capabilities to Hard Disk Drive 1 including: 5V@0.15A. The Unconstrained Power and USB suspend bits are set.", "page_start": 551, "page_end": 550, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": ["source"]}
{"section_id": "12", "title": "Request received Hard Disk Drive 1 Hard Disk Drive 1 1.5", "content": "requests only needs one 5V@0.15A from unit load when not the Hub. operating so requests this.", "page_start": 551, "page_end": 550, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 16, "tags": []}
{"section_id": "13", "title": "Accept sent Accept received Request is within 1.5", "content": "available power so the Hub accepts.", "page_start": 551, "page_end": 550, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "14", "title": "PS_RDY sent PS_RDY received. Laptop indicates its 1.5", "content": "The Hard Disk Drive power supply is starts drawing 1 ready and the Hard unit load Disk Drive starts 5V@0.15A. drawing power. Hard Disk Drive 1 spin up", "page_start": 551, "page_end": 550, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": []}
{"section_id": "15", "title": "Request received Hard Disk Drive 1 Hard Disk Drive 1 1.5", "content": "requests needs 20V@0.5A 5V@0.15A from to spin up but this the Hub but sets is not available so the Capability it re-requests the Mismatch bit. available power flagging a capability mismatch.", "page_start": 551, "page_end": 550, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 31, "tags": []}
{"section_id": "16", "title": "Accept sent Accept received Request is within 1.5", "content": "available power so the Hub accepts.", "page_start": 551, "page_end": 550, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "17", "title": "PS_RDY sent PS_RDY received Hard Disk Drive 1 1.5", "content": "indicates a capability mismatch to the user. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 551 Step Laptop Hub Peripherals Device Policy Hub Power Manager (W)", "page_start": 551, "page_end": 551, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": []}
{"section_id": "18", "title": "The Hub requests Get Sink Due to the 1.5", "content": "the Sink Capabilities Capabilities Capability from Hard Disk Drive received Mismatch the Hub 1. needs to determine what Hard Disk Drive 1 actually needs", "page_start": 552, "page_end": 551, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": ["sink"]}
{"section_id": "19", "title": "Sink Capabilities Hard Disk Drive 1 1.5", "content": "received returns capabilities indicating that it requires 5V@2A.", "page_start": 552, "page_end": 551, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": ["sink"]}
{"section_id": "20", "title": "Request received The Hub requests The Hub evaluates 1.5", "content": "5V@2.2A (11W) that it now needs from the Laptop. 0.75W for the Hub and 10W for Hard Disk Drive 1.", "page_start": 552, "page_end": 551, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": []}
{"section_id": "21", "title": "Accept sent Accept received Power request 11", "content": "from the Hub is within the Laptop's capabilities so the Laptop accepts the request.", "page_start": 552, "page_end": 551, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 14, "tags": ["power"]}
{"section_id": "22", "title": "PS_RDY sent PS_RDY received Laptop completes 11", "content": "the Explicit Contract.", "page_start": 552, "page_end": 551, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 3, "tags": []}
{"section_id": "23", "title": "Hub sends out a set Source Capabilities Hub now offers 11", "content": "of capabilities to received Hard Disk Drive 1 Hard Disk Drive 1 what it needs. including: 5V@2A. The Unconstrained Power and USB suspend bits are set.", "page_start": 552, "page_end": 551, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": ["source"]}
{"section_id": "24", "title": "Request received Hard Disk Drive 1 Hard Disk Drive 1 is 11", "content": "requests 5V@2A operating at its operating current maximum current and indicates to spin up so sets 5V@2A maximum operating current = current. maximum current.", "page_start": 552, "page_end": 551, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": []}
{"section_id": "25", "title": "Accept sent Accept received Request is within 11", "content": "the Hubs capabilities so it accepts. Page 552 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Laptop Hub Peripherals Device Policy Hub Power Manager (W)", "page_start": 552, "page_end": 552, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": []}
{"section_id": "26", "title": "PS_RDY sent PS_RDY received. Hub indicates its 11", "content": "Hard Disk Drive 1 power supply is starts to draw ready so Hard Disk 5V@2A and spins Drive 1 starts to up. draw power.", "page_start": 553, "page_end": 552, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 24, "tags": []}
{"section_id": "27", "title": "Request received Once spun up Hard Hard Disk Drive 1 is 11", "content": "Disk Drive 1 operating at a requests 5V@1A lower current so operating current sets operating and 5V@2A current < maximum current. maximum current.", "page_start": 553, "page_end": 552, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": []}
{"section_id": "28", "title": "Accept sent Accept received The Hub will 11", "content": "maintain a Power Reserve of 5V@1A (5W) for Hard Disk Drive 1 in addition to the 5V@1A (5W) it is currently using.", "page_start": 553, "page_end": 552, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "29", "title": "PS_RDY sent PS_RDY received Hub completes the 11", "content": "Explicit Contract. Hard Disk Drive 2 spin up", "page_start": 553, "page_end": 552, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "30", "title": "Attach detected Hard Disk Drive 2 is 11", "content": "Attached to one of the downstream ports of the Hub.", "page_start": 553, "page_end": 552, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": []}
{"section_id": "31", "title": "Request received The Hub requests The Hub needs 11", "content": "5V@2.3A (11.5W) 0.75W for itself, from the Laptop. 0.75W for USB communication on one Port, 5W for Hard Disk Drive 1 operation and 5W for the Power Reserve.", "page_start": 553, "page_end": 552, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": []}
{"section_id": "32", "title": "Accept sent Accept received Power request 11", "content": "from the Hub is within the Laptop's capabilities so it accepts the request. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 553 Step Laptop Hub Peripherals Device Policy Hub Power Manager (W)", "page_start": 553, "page_end": 553, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": ["power"]}
{"section_id": "33", "title": "PS_RDY sent PS_RDY received Laptop indicates its 11.5", "content": "power supply is ready.", "page_start": 554, "page_end": 553, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": []}
{"section_id": "34", "title": "Hub sends out a set Source Capabilities Hub offers Hard 11.5", "content": "of capabilities to received by Hard Disk Drive 2 Hard Disk Drive 2 Disk Drive 2 enough power to including: enumerate. 5V@0.15A. The Unconstrained Power and USB suspend bits are set.", "page_start": 554, "page_end": 553, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 31, "tags": ["source"]}
{"section_id": "35", "title": "Request received Hard Disk Drive 2 11.5", "content": "requests 5V@0.15A from the Hub.", "page_start": 554, "page_end": 553, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": []}
{"section_id": "36", "title": "Accept sent to Hard Accept received by Request is within 11.5", "content": "Disk Drive 2 Hard Disk Drive 2 available capabilities so the Hub accepts", "page_start": 554, "page_end": 553, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": []}
{"section_id": "37", "title": "PS_RDY sent to Hard PS_RDY received. Hard Disk Drive 2 11.5", "content": "Disk Drive 2. Hard Disk Drive 2 takes the power starts drawing that it needs 5V@0.15A. Phone charge", "page_start": 554, "page_end": 553, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": []}
{"section_id": "38", "title": "Attach detected The phone is 11.5", "content": "Attached to one of the downstream ports of the Hub.", "page_start": 554, "page_end": 553, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": []}
{"section_id": "39", "title": "Request received The Hub Requests The Hub needs 11.5", "content": "5V@2.5A (12.5W) 0.75W for itself, from the Laptop. 1.5W for USB communications on two ports (Hard Disk Drive 1 and the Phone), 5W for Hard Disk Drive 1 operation and 5W for the Power Reserve. Page 554 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Laptop Hub Peripherals Device Policy Hub Power Manager (W)", "page_start": 554, "page_end": 554, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 55, "tags": []}
{"section_id": "40", "title": "Accept sent Accept received Request is within 12.5", "content": "available capabilities so the Laptop accepts", "page_start": 555, "page_end": 554, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "41", "title": "PS_RDY sent PS_RDY received Laptop indicates 12.5", "content": "that its power supply is ready.", "page_start": 555, "page_end": 554, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "42", "title": "The Hub powers V Source Capabilities The Hub offers the 12.5", "content": "BUS and sends out a set received by the Phone 1 unit load of capabilities to the Phone to enumerate. Phone including: 5V@0.15A. The Unconstrained Power and USB suspend bits are set.", "page_start": 555, "page_end": 554, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 32, "tags": ["power", "source"]}
{"section_id": "43", "title": "Request received The Phone The Phone would 12.5", "content": "from the Phone requests like to charge and 5V@0.15A from so indicates this the Hub but sets fact through the the Capability Capability Mismatch bit. Mismatch bit.", "page_start": 555, "page_end": 554, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 27, "tags": []}
{"section_id": "44", "title": "Accept sent Accept received Request is within 12.5", "content": "available capabilities so the Hub accepts", "page_start": 555, "page_end": 554, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "45", "title": "PS_RDY sent PS_RDY received Hub indicates that 12.5", "content": "its power supply is ready", "page_start": 555, "page_end": 554, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": []}
{"section_id": "46", "title": "The Hub requests Get Sink Due to the 12.5", "content": "the Sink Capabilities Capabilities Capability from the phone. received by the Mismatch the Hub Phone needs to determine what the Phone actually needs", "page_start": 555, "page_end": 554, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": ["sink"]}
{"section_id": "47", "title": "Sink Capabilities The Phone returns Phone returns the 12.5", "content": "received from the capabilities Capabilities it Phone indicating that it needs to charge requires 5V@2A. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 555 Step Laptop Hub Peripherals Device Policy Hub Power Manager (W)", "page_start": 555, "page_end": 555, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": ["sink"]}
{"section_id": "48", "title": "Request received The Hub Requests The Hub needs 12.5", "content": "9V@2.4A (21.6W) 0.75W for itself, from the Laptop. 0.75W for Hard Disk Drive 2, 10W for the phone, 5W for Hard Disk Drive", "page_start": 556, "page_end": 555, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 23, "tags": []}
{"section_id": "1", "title": "operation and", "content": "5W for the Power Reserve.", "page_start": 556, "page_end": 555, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 5, "tags": []}
{"section_id": "49", "title": "Accept sent Accept received Request is within 12.5", "content": "available capabilities so the Laptop accepts", "page_start": 556, "page_end": 555, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "50", "title": "PS_RDY sent PS_RDY received Laptop indicates 21.6", "content": "that its power supply is ready.", "page_start": 556, "page_end": 555, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "51", "title": "The Hub sends out a Source Capabilities The Hub now has 21.6", "content": "set of capabilities to received by the the power that the the Phone including: Phone Phone needs and 5V@2A. The so sends out a new Unconstrained set of Capabilities. Power and USB suspend bits are set.", "page_start": 556, "page_end": 555, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 36, "tags": ["source"]}
{"section_id": "52", "title": "Request received The Phone The Phone 21.6", "content": "from the Phone requests 5V@2A requests the power from the Hub and it needs to charge. sets the No USB It asks for the USB Suspend bit since it Suspend needs to charge requirement to be constantly. It sets removed. the GiveBack flag and sets the Minimum Operating Current to 5V@0A.", "page_start": 556, "page_end": 555, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 51, "tags": []}
{"section_id": "53", "title": "Accept sent to the Accept received by 21.6", "content": "Phone the Phone", "page_start": 556, "page_end": 555, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 3, "tags": []}
{"section_id": "54", "title": "PS_RDY sent to the PS_RDY received by 21.6", "content": "phone. the phone. Phone starts to charge 5V@2A but has to follow USB Suspend rules Page 556 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Laptop Hub Peripherals Device Policy Hub Power Manager (W)", "page_start": 556, "page_end": 556, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 35, "tags": []}
{"section_id": "55", "title": "Request received The Hub Requests The Hub needs 21.6", "content": "9V@1.9A (17.1W) 0.75W for itself, from the Laptop but 0.75W for Hard sets the No USB Disk Drive 2, 10W Suspend bit. for the phone (includes the Power Reserve of 5W), and 5W for Hard Disk Drive 1 operation. It requests for USB Suspend rule to be removed.", "page_start": 557, "page_end": 556, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 48, "tags": []}
{"section_id": "56", "title": "Accept sent Accept received Request is within 21.6", "content": "available capabilities so the Laptop accepts. Note that the request for No Suspend has not been acted on by the Laptop. USB Suspend rules apply until the Laptop sends out new Source Capabilities with the USB Suspend bit cleared.", "page_start": 557, "page_end": 556, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 39, "tags": []}
{"section_id": "57", "title": "PS_RDY sent PS_RDY received Laptop indicates 17.1", "content": "that its power supply is ready. Hard Disk Drive 2 spin up", "page_start": 557, "page_end": 556, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "58", "title": "Request received Hard Disk Drive 2 Hard Disk Drive 2 17.1", "content": "from Hard Disk Drive requests needs more power", "page_start": 557, "page_end": 556, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "2", "title": "5V@0.15A from to spin up and so", "content": "the Hub but sets indicates a the Capability Capability Mismatch bit. Mismatch", "page_start": 557, "page_end": 556, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 12, "tags": []}
{"section_id": "59", "title": "Accept sent Accept received The request is 17.1", "content": "within its capabilities so the Hub accepts.", "page_start": 557, "page_end": 556, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 7, "tags": []}
{"section_id": "60", "title": "PS_RDY sent PS_RDY received The Hub indicates 17.1", "content": "that its power supply is ready. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 557 Step Laptop Hub Peripherals Device Policy Hub Power Manager (W)", "page_start": 557, "page_end": 557, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 26, "tags": []}
{"section_id": "61", "title": "The Hub requests Get Sink Due to the 17.1", "content": "the Sink Capabilities Capabilities Capability from Hard Disk Drive received by Hard Mismatch the Hub 2. Disk Drive 2 has to determine what Hard Disk Drive 2 needs", "page_start": 558, "page_end": 557, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 28, "tags": ["sink"]}
{"section_id": "62", "title": "Sink Capabilities Hard Disk Drive 2 17.1", "content": "received returns capabilities indicating that it requires 20V@0.5A maximum current.", "page_start": 558, "page_end": 557, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": ["sink"]}
{"section_id": "63", "title": "The Hub instructs Goto Min received Hub assess that 17.1", "content": "the Phone to Goto by the Phone there is additional Minimum operation. power available from the Phone and so tells it to Goto Min. In this case it is reallocating the Phone’s Charging power as the Power Reserve for the Hard Disk Drives.", "page_start": 558, "page_end": 557, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 43, "tags": []}
{"section_id": "64", "title": "The Phone drops to 17.1", "content": "zero current draw.", "page_start": 558, "page_end": 557, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 3, "tags": []}
{"section_id": "65", "title": "PD_RDY sent PS_RDY received. Hub indicates that 17.1", "content": "its power supply has changed to the new level.", "page_start": 558, "page_end": 557, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 9, "tags": []}
{"section_id": "66", "title": "Request received The Hub Requests The Hub has an 17.1", "content": "9V@2.4A (21.6W) additional 10W from the Laptop from the Phone but needs 5W more to maintain its Power Reserve. The Hub needs 0.75W for itself, 10W for Hard Disk Drive 2, 5W for the Power Reserve, 5W for Hard Disk Drive", "page_start": 558, "page_end": 557, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": []}
{"section_id": "1", "title": "operation.", "content": "Page 558 USB Power Delivery Specification Revision 3.0, Version 1.1 Step Laptop Hub Peripherals Device Policy Hub Power Manager (W)", "page_start": 558, "page_end": 558, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 20, "tags": []}
{"section_id": "67", "title": "Accept sent Accept received Request is within 17.1", "content": "available capabilities so the Laptop accepts.", "page_start": 559, "page_end": 558, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "68", "title": "PS_RDY sent PS_RDY received Laptop indicates 21.6", "content": "that its power supply is ready.", "page_start": 559, "page_end": 558, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 6, "tags": []}
{"section_id": "69", "title": "Hub sends out a set Source Capabilities The Hub now has 21.6", "content": "of capabilities to received by Hard the power that Hard Disk Drive 2 Disk Drive 2 Hard Disk Drive 2 including: 5V@0.5A needs so it sends and 20V@0.5A. The out new Unconstrained Capabilities. Power and USB suspend bits are set.", "page_start": 559, "page_end": 558, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 40, "tags": ["source"]}
{"section_id": "70", "title": "Request received Hard Disk Drive 2 Hard Disk Drive 2 21.6", "content": "from Hard Disk Drive requests requests what it", "page_start": 559, "page_end": 558, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 8, "tags": []}
{"section_id": "2", "title": "20V@0.5A needs to spin up.", "content": "operating current and 20V@0.5A.", "page_start": 559, "page_end": 558, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 4, "tags": []}
{"section_id": "71", "title": "Accept sent to Hard Accept received by The Hub assesses 21.6", "content": "Disk Drive 2 Hard Disk Drive 2 that the request is within its Capabilities so it accepts.", "page_start": 559, "page_end": 558, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": []}
{"section_id": "72", "title": "PS_RDY sent. PS_RDY sent. Hard 21.6", "content": "Disk Drive 2 starts to draw 20V@0.5A and spins up.", "page_start": 559, "page_end": 558, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": []}
{"section_id": "73", "title": "Request received Once spun up Hard Hard Disk Drive 2 21.6", "content": "from Hard Disk Drive Disk Drive 2 no longer needs", "page_start": 559, "page_end": 558, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 10, "tags": []}
{"section_id": "2", "title": "requests the additional", "content": "20V@0.25A power so it gives operating current back what it does and 20V@0.5A not need. maximum current.", "page_start": 559, "page_end": 558, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": []}
{"section_id": "74", "title": "Accept sent to Hard Accept received by The Hub assesses 21.6", "content": "Disk Drive 2 Hard Disk Drive 2 that the request is within its Capabilities so it accepts.", "page_start": 559, "page_end": 558, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 17, "tags": []}
{"section_id": "75", "title": "PS_RDY sent to Hard PS_RDY received by The Hub indicates 21.6", "content": "Disk Drive 2. Hard Disk Drive 2. that its power supply is ready. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 559 Step Laptop Hub Peripherals Device Policy Hub Power Manager (W)", "page_start": 559, "page_end": 559, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 33, "tags": []}
{"section_id": "76", "title": "The Hub sends out a Source Capabilities The Hub now has 21.6", "content": "set of capabilities to received by the the power the Phone including: Phone available to charge 5V@2A. The the phone so it Unconstrained sends out new Power bit is set and Capabilities the USB suspend bit is set.", "page_start": 560, "page_end": 559, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 38, "tags": ["source"]}
{"section_id": "77", "title": "Request received The Phone The Phone 21.6", "content": "from the Phone requests 5V@2A requests the power operating current it needs to charge. from the Hub and It asks for the USB sets the No USB Suspend Suspend bit since it requirement to be needs to charge removed. constantly. It sets the GiveBack flag and sets the Minimum Operating Current to 5V@0A.", "page_start": 560, "page_end": 559, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 53, "tags": []}
{"section_id": "78", "title": "Accept sent to the Accept received by The Hub assesses 21.6", "content": "Phone the Phone that the request is within its Capabilities so it accepts but maintains USB Suspend rules.", "page_start": 560, "page_end": 559, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 18, "tags": []}
{"section_id": "79", "title": "PS_RDY sent to the PS_RDY received by The Hub has 21.6", "content": "Phone. the Phone. The allocated 0.75W phone starts to for itself, 5W for draw 5V@2A but Hard Disk Drive 2, has to follow USB 10W for the Phone Suspend. (including 5W for the Power Reserve), and 5W for Hard Disk Drive", "page_start": 560, "page_end": 559, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 41, "tags": []}
{"section_id": "1", "title": "operation.", "content": "Page 560 USB Power Delivery Specification Revision 3.0, Version 1.1 C. VDM Command Examples C.1 Discover Identity Example C.1.1 Discover Identity Command request Table C-1 below shows the contents of the key fields in the Message Header and VDM header for an Initiator sending a Discover Identity Command request. Table C-1 Discover Identity Command request from Initiator Example Bit(s) Field Value Message Header", "page_start": 560, "page_end": 560, "content_type": "text", "tables": [{"table_id": "Table C-1 below shows the contents of the key fields in the Message Header and VDM header for an Initiator sending a", "caption": "Table C-1 below shows the contents of the key fields in the Message Header and VDM header for an Initiator sending a", "page": 561, "data": []}, {"table_id": "Table C-1 Discover Identity Command request from Initiator Example", "caption": "Table C-1 Discover Identity Command request from Initiator Example", "page": 561, "data": []}], "figures": [], "subsections": [], "word_count": 63, "tags": []}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 1 (VDM Header) 11…9 MessageID 0…7", "page_start": 561, "page_end": 560, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "8", "title": "Port Power Role 0 or 1", "content": "7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 3…0 Message Type 1111b (Vendor Defined Message) VDM Header B31…16 Standard or Vendor ID (SVID) 0xFF00 (PD SID) B15 VDM Type 1 (Structured VDM) B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b B10…8 Object Position 000b B7…6 Command Type 00b (Initiator) B5 Reserved 0 B4…0 Command1 1 (Discover Identity) C.1.2 Discover Identity Command response – Active Cable Table C-2 shows the contents of the key fields in the Message Header and VDM header for a Responder returning VDOs in response to a Discover SVIDs Command request. In this illustration, the responder is an active Gen2 cable which supports Modal Operation. Table C-2 Discover Identity Command response from Active Cable Responder Example Bit(s) Field Value Message Header", "page_start": 561, "page_end": 560, "content_type": "text", "tables": [{"table_id": "Table C-2 shows the contents of the key fields in the Message Header and VDM header for a Responder returning", "caption": "Table C-2 shows the contents of the key fields in the Message Header and VDM header for a Responder returning", "page": 561, "data": []}, {"table_id": "Table C-2 Discover Identity Command response from Active Cable Responder Example", "caption": "Table C-2 Discover Identity Command response from Active Cable Responder Example", "page": 561, "data": []}], "figures": [], "subsections": [], "word_count": 127, "tags": ["power"]}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 5 (VDM Header + ID Header VDO + Cert Stat VDO + Product VDO + Cable VDO) 11…9 MessageID 0…7", "page_start": 561, "page_end": 560, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 25, "tags": []}
{"section_id": "8", "title": "Cable Plug 1", "content": "7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 3…0 Message Type 1111b (Vendor Defined Message) USB Power Delivery Specification Revision 3.0, Version 1.1 Page 561 Bit(s) Field Value VDM Header B31…16 Standard or Vendor ID (SVID) 0xFF00 (PD SID) B15 VDM Type 1 (Structured VDM) B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b B10…8 Object Position 000b B7…6 Command Type 01b (Responder ACK) B5 Reserved 0 B4…0 Command 2 (Discover Identity) ID Header VDO B31 Data Capable as USB Host 0 (not data capable as a Host) B30 Data Capable as a USB Device 0 (not data capable as a Device) B29…27 Product Type 100b (Active Cable) B26 Modal Operation Supported 1 (supports Modes) B25…16 Reserved. Shall be set to zero. 0 B15…0 16-bit unsigned integer. USB Vendor ID USB-IF assigned VID for this cable vendor Cert Stat VDO B31…0 32-bit unsigned integer USB-IF assigned XID for this cable Product VDO B31…16 16-bit unsigned integer. USB Product ID Product ID assigned by the cable vendor B15…0 16-bit unsigned integer. bcdDevice Device version assigned by the cable vendor Cable VDO returned for Product Type “Active Cable” B31…28 HW Version Cable HW version number (vendor defined) B27…24 Firmware Version Cable FW version number (vendor defined) B23…21 VDO Version 00b (Version 1.0) B20 Reserved 0 B19…18 USB Type-C plug to USB Type-C/Captive 10b (USB Type-C) B17 Reserved 0 B16…13 Cable Latency 0001b ( <10ns (~1m)) B12…11 Cable Termination Type 11b (Both ends Active, VCONN required) B10…9 Maximum VBUS Voltage 00b (20V) B8…7 Reserved 0 B6…5 VBUS Current Handling Capability 01b (3A) B4 VBUS through cable 1 (Yes) B3 SOP” controller present? 1 (SOP” controller present) B2…0 USB SuperSpeed Signaling Support 010b ([USB 3.1] Gen1 and Gen2) C.1.3 Discover Identity Command response – Hub Table C-2 shows the contents of the key fields in the Message Header and VDM header for a Responder returning VDOs in response to a Discover SVIDs Command request. In this illustration, the responder is a Hub Page 562 USB Power Delivery Specification Revision 3.0, Version 1.1 Table C-3 Discover Identity Command response from Hub Responder Example Bit(s) Field Value Message Header", "page_start": 561, "page_end": 562, "content_type": "text", "tables": [{"table_id": "Table C-2 shows the contents of the key fields in the Message Header and VDM header for a Responder returning", "caption": "Table C-2 shows the contents of the key fields in the Message Header and VDM header for a Responder returning", "page": 562, "data": []}, {"table_id": "Table C-3 Discover Identity Command response from Hub Responder Example", "caption": "Table C-3 Discover Identity Command response from Hub Responder Example", "page": 563, "data": []}], "figures": [], "subsections": [], "word_count": 355, "tags": ["cable"]}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 4 (VDM Header + ID Header VDO + Cert Stat VDO + Product VDO) 11…9 MessageID 0…7", "page_start": 563, "page_end": 562, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 22, "tags": []}
{"section_id": "8", "title": "Port Power Role 0 or 1", "content": "7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 3…0 Message Type 1111b (Vendor Defined Message) VDM Header B31…16 Standard or Vendor ID (SVID) 0xFF00 (PD SID) B15 VDM Type 1 (Structured VDM) B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b B10…8 Object Position 000b B7…6 Command Type 01b (Responder ACK) B5 Reserved 0 B4…0 Command 2 (Discover Identity) ID Header VDO B31 Data Capable as USB Host 0 (not data capable as a Host) B30 Data Capable as a USB Device 1 (data capable as a Device) B29…27 Product Type 001b (Hub) B26 Modal Operation Supported 0 (doesn’t support Modes) B25…16 Reserved. Shall be set to zero. 0 B15…0 16-bit unsigned integer. USB Vendor ID USB-IF assigned VID for this hub vendor Cert Stat VDO B31…0 32-bit unsigned integer USB-IF assigned XID for this hub Product VDO B31…16 16-bit unsigned integer. USB Product ID Product ID assigned by the hub vendor B15…0 16-bit unsigned integer. bcdDevice Device version assigned by the hub vendor USB Power Delivery Specification Revision 3.0, Version 1.1 Page 563 C.2 Discover SVIDs Example C.2.1 Discover SVIDs Command request Table C-4 below shows the contents of the key fields in the Message Header and VDM header for an Initiator sending a Discover SVIDs Command request. Table C-4 Discover SVIDs Command request from Initiator Example Bit(s) Field Value Message Header", "page_start": 563, "page_end": 563, "content_type": "text", "tables": [{"table_id": "Table C-4 below shows the contents of the key fields in the Message Header and VDM header for an Initiator sending a", "caption": "Table C-4 below shows the contents of the key fields in the Message Header and VDM header for an Initiator sending a", "page": 564, "data": []}, {"table_id": "Table C-4 Discover SVIDs Command request from Initiator Example", "caption": "Table C-4 Discover SVIDs Command request from Initiator Example", "page": 564, "data": []}], "figures": [], "subsections": [], "word_count": 225, "tags": ["power"]}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 1 (VDM Header) 11…9 MessageID 0…7", "page_start": 564, "page_end": 563, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "8", "title": "Port Power Role 0 or 1", "content": "7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 3…0 Message Type 1111b (Vendor Defined Message) VDM Header B31…16 Standard or Vendor ID (SVID) 0xFF00 (PD SID) B15 VDM Type 1 (Structured VDM) B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b B10…8 Object Position 000b B7…6 Command Type 00b (Initiator) B5 Reserved 0 B4…0 Command1 2 (Discover SVIDs) C.2.1 Discover SVIDs Command response Table C-5 shows the contents of the key fields in the Message Header and VDM Header for a Responder returning VDOs in response to a Discover SVIDs Command request. In this illustration, the value 3 in the Message Header indicates that one VDO containing the supported SVIDs would be returned followed by a terminating VDO. Note that the last VDO returned (the terminator of the transmission) contains zero value SVIDs. If a SVID value is zero, it is not used. Table C-5 Discover SVIDs Command response from Responder Example Bit(s) Field Value Message Header", "page_start": 564, "page_end": 563, "content_type": "text", "tables": [{"table_id": "Table C-5 shows the contents of the key fields in the Message Header and VDM Header for a Responder returning", "caption": "Table C-5 shows the contents of the key fields in the Message Header and VDM Header for a Responder returning", "page": 564, "data": []}, {"table_id": "Table C-5 Discover SVIDs Command response from Responder Example", "caption": "Table C-5 Discover SVIDs Command response from Responder Example", "page": 564, "data": []}], "figures": [], "subsections": [], "word_count": 159, "tags": ["power"]}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 3 (VDM Header + 2*VDO) 11…9 MessageID 0…7", "page_start": 564, "page_end": 563, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": []}
{"section_id": "8", "title": "Port Power Role 0 or 1", "content": "7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 3…0 Message Type 1111b (Vendor Defined Message) VDM Header B31…16 Standard or Vendor ID (SVID) 0xFF00 (PD SID) B15 VDM Type 1 (Structured VDM) Page 564 USB Power Delivery Specification Revision 3.0, Version 1.1 Bit(s) Field Value B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b (Reserved) B10…8 Object Position 000b B7…6 Command Type 01b (Responder ACK) B5 Reserved 0 B4…0 Command 2 (Discover SVIDs) VDO 1 B31…16 SVID 0 SVID value B15…0 SVID 1 SVID value VDO 2 B31…16 SVID 2 0x0000 B15…0 SVID 3 0x0000 USB Power Delivery Specification Revision 3.0, Version 1.1 Page 565 C.3 Discover Modes Example C.3.1 Discover Modes Command request Table C-6 shows the contents of the key fields in the Message Header and VDM header for an Initiator sending a Discover Modes Command request. The Initiator of the Discover Modes Command sequence sends a Message Header with the Number of Data Objects field set to 1 followed by a VDM Header with the Command Type (B7…6) set to zero indicating the Command is from an Initiator and the Command (B4…0) is set to 3 indicating Mode discovery. Table C-6 Discover Modes Command request from Initiator Example Bit(s) Field Value Message Header", "page_start": 564, "page_end": 565, "content_type": "text", "tables": [{"table_id": "Table C-6 shows the contents of the key fields in the Message Header and VDM header for an Initiator sending a", "caption": "Table C-6 shows the contents of the key fields in the Message Header and VDM header for an Initiator sending a", "page": 566, "data": []}, {"table_id": "Table C-6 Discover Modes Command request from Initiator Example", "caption": "Table C-6 Discover Modes Command request from Initiator Example", "page": 566, "data": []}], "figures": [], "subsections": [], "word_count": 208, "tags": ["power"]}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 1 (VDM Header) 11…9 MessageID 0…7", "page_start": 566, "page_end": 565, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "8", "title": "Port Power Role 0 or 1", "content": "7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 3…0 Message Type 1111b (Vendor Defined Message) VDM Header B31…16 Standard or Vendor ID (SVID) SVID for which Modes are being requested B15 VDM Type 1 (Structured VDM) B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b B10…8 Object Position 000b B7…6 Command Type 00b (Initiator) B5 Reserved 0 B4…0 Command1 3 (Discover Modes) C.3.2 Discover Modes Command response The Responder to the Discover Modes Command request returns a Message Header with the Number of Data Objects field set to a value of 1 to 7 (the actual value is the number of Mode objects plus one) followed by a VDM Header with the Message Source (B5) set to 1 indicating the Command is from a Responder and the Command (B4…0) set to 2 indicating the following objects describe the Modes the device supports. If the ID is a VID, the structure and content of the VDO is left to the vendor. If the ID is a SID, the structure and content of the VDO is defined by the Standard. Table C-7 shows the contents of the key fields in the Message Header and VDM Header for a Responder returning VDOs in response to a Discover Modes Command request. In this illustration, the value 2 in the Message Header indicates that the device is returning one VDO describing the Mode it supports. It is possible for a Responder to report up to six different Modes. Table C-7 Discover Modes Command response from Responder Example Bit(s) Field Value Message Header", "page_start": 566, "page_end": 565, "content_type": "text", "tables": [{"table_id": "Table C-7 shows the contents of the key fields in the Message Header and VDM Header for a Responder returning", "caption": "Table C-7 shows the contents of the key fields in the Message Header and VDM Header for a Responder returning", "page": 566, "data": []}, {"table_id": "Table C-7 Discover Modes Command response from Responder Example", "caption": "Table C-7 Discover Modes Command response from Responder Example", "page": 566, "data": []}], "figures": [], "subsections": [], "word_count": 259, "tags": ["power"]}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 2 (VDM Header + 1 Mode VDO) 11…9 MessageID 0…7", "page_start": 566, "page_end": 565, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 15, "tags": []}
{"section_id": "8", "title": "Port Power Role 0 or 1", "content": "Page 566 USB Power Delivery Specification Revision 3.0, Version 1.1 Bit(s) Field Value 7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 3…0 Message Type 1111b (Vendor Defined Message) VDM Header B31…16 Standard or Vendor ID (SVID) SVID for which Modes were requested B15 VDM Type 1 (Structured VDM) B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b B10…8 Object Position 000b B7…6 Command Type 01b (Responder ACK) B5 Reserved 0 B4…0 Command 3 (Discover Modes) Mode VDO B31…0 Mode 1 Standard or Vendor defined Mode value USB Power Delivery Specification Revision 3.0, Version 1.1 Page 567 C.4 Enter Mode Example C.4.1 Enter Mode Command request The Initiator of the Enter Mode Command request sends a Message Header with the Number of Data Objects field set to 1 followed by a VDM Header with the Message Source (B5) set to zero indicating the Command is from an Initiator and the Command (B4…0) set to 4 to request the Responder to enter its mode of operation and sets the Object Position field to the desired functional VDO based on its offset as received during Discovery. Table C-8 shows the contents of the key fields in the Message Header and VDM Header for an Initiator sending an Enter Mode Command request. Table C-8 Enter Mode Command request from Initiator Example Bit(s) Field Value Message Header", "page_start": 566, "page_end": 567, "content_type": "text", "tables": [{"table_id": "Table C-8 shows the contents of the key fields in the Message Header and VDM Header for an Initiator sending an", "caption": "Table C-8 shows the contents of the key fields in the Message Header and VDM Header for an Initiator sending an", "page": 568, "data": []}, {"table_id": "Table C-8 Enter Mode Command request from Initiator Example", "caption": "Table C-8 Enter Mode Command request from Initiator Example", "page": 568, "data": []}], "figures": [], "subsections": [], "word_count": 224, "tags": ["power"]}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 1 (VDM Header) 11…9 MessageID 0…7", "page_start": 568, "page_end": 567, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "8", "title": "Port Power Role 0 or 1", "content": "7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 3…0 Message Type 1111b (Vendor Defined Message) VDM Header B31…16 Standard or Vendor ID (SVID) SVID for the Mode being entered B15 VDM Type 1 (Structured VDM) B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b B10…8 Object Position 001b (a one in this field indicates a request to enter the first Mode in list returned by Discover Modes) B7…6 Command Type 00b (Initiator) B5 Reserved 0 B4…0 Command 4 (Enter Mode) C.4.2 Enter Mode Command response The Responder that is the target of the Enter Mode Command request sends a Message Header with the Number of Data Objects field set to a value of 1 followed by a VDM Header with the Command Source (B5) set to 1 indicating the response is from a Responder and the Command (B4…0) set to 4 indicating the Responder has entered the Mode and is ready to operate. Table C-9 shows the contents of the key fields in the Message Header and VDM Header for a Responder sending an Enter Mode Command response with an ACK. Table C-9 Enter Mode Command response from Responder Example Bit(s) Field Value Message Header", "page_start": 568, "page_end": 567, "content_type": "text", "tables": [{"table_id": "Table C-9 shows the contents of the key fields in the Message Header and VDM Header for a Responder sending an", "caption": "Table C-9 shows the contents of the key fields in the Message Header and VDM Header for a Responder sending an", "page": 568, "data": []}, {"table_id": "Table C-9 Enter Mode Command response from Responder Example", "caption": "Table C-9 Enter Mode Command response from Responder Example", "page": 568, "data": []}], "figures": [], "subsections": [], "word_count": 197, "tags": ["power"]}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 1 (VDM Header) 11…9 MessageID 0…7", "page_start": 568, "page_end": 567, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "8", "title": "Port Power Role 0 or 1", "content": "Page 568 USB Power Delivery Specification Revision 3.0, Version 1.1 Bit(s) Field Value 7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 3…0 Message Type 1111b (Vendor Defined Message) VDM Header B31…16 Standard or Vendor ID (SVID) SVID for the Mode entered B15 VDM Type 1 (Structured VDM) B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b B10…8 Object Position 001b (offset of the Mode entered) B7…6 Command Type 01b (Responder ACK) B5 Reserved 0 B4…0 Command 4 (Enter Mode) C.4.1 Enter Mode Command request with additional VDO The Initiator of the Enter Mode Command request sends a Message Header with the Number of Data Objects field set to 2 indicating an additional VDO followed by a VDM Header with the Message Source (B5) set to zero indicating the Command is from an Initiator and the Command (B4…0) set to 4 to request the Responder to enter its mode of operation and sets the Object Position field to the desired functional VDO based on its offset as received during Discovery. Table C-8 shows the contents of the key fields in the Message Header and VDM Header for an Initiator sending an Enter Mode Command request with an additional VDO. Table C-10 Enter Mode Command request from Initiator Example Bit(s) Field Value Message Header", "page_start": 568, "page_end": 568, "content_type": "text", "tables": [{"table_id": "Table C-8 shows the contents of the key fields in the Message Header and VDM Header for an Initiator sending an", "caption": "Table C-8 shows the contents of the key fields in the Message Header and VDM Header for an Initiator sending an", "page": 569, "data": []}, {"table_id": "Table C-10 Enter Mode Command request from Initiator Example", "caption": "Table C-10 Enter Mode Command request from Initiator Example", "page": 569, "data": []}], "figures": [], "subsections": [], "word_count": 214, "tags": ["power"]}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 1 (VDM Header) 11…9 MessageID 0…7", "page_start": 569, "page_end": 568, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "8", "title": "Port Power Role 0 or 1", "content": "7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 3…0 Message Type 1111b (Vendor Defined Message) VDM Header B31…16 Standard or Vendor ID (SVID) SVID for the Mode being entered B15 VDM Type 1 (Structured VDM) B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b B10…8 Object Position 001b (a one in this field indicates a request to enter the first Mode in list returned by Discover Modes) B7…6 Command Type 00b (Initiator) B5 Reserved 0 B4…0 Command 4 (Enter Mode) Including Optional Mode specific VDO B31…0 Mode specific USB Power Delivery Specification Revision 3.0, Version 1.1 Page 569 C.5 Exit Mode Example C.5.1 Exit Mode Command request The Initiator of the Exit Mode Command request sends a Message Header with the Number of Data Objects field set to 1 followed by a VDM Header with the Message Source (B5) set to zero indicating the Command is from an Initiator and the Command (B4…0) set to 5 to request the Responder to exit its Mode of operation. Table C-11 shows the contents of the key fields in the Message Header and VDM header for an Initiator sending an Exit Mode Command request. Table C-11 Exit Mode Command request from Initiator Example Bit(s) Field Value Message Header", "page_start": 569, "page_end": 569, "content_type": "text", "tables": [{"table_id": "Table C-11 shows the contents of the key fields in the Message Header and VDM header for an Initiator sending an", "caption": "Table C-11 shows the contents of the key fields in the Message Header and VDM header for an Initiator sending an", "page": 570, "data": []}, {"table_id": "Table C-11 Exit Mode Command request from Initiator Example", "caption": "Table C-11 Exit Mode Command request from Initiator Example", "page": 570, "data": []}], "figures": [], "subsections": [], "word_count": 207, "tags": ["power"]}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 1 (VDM Header) 11…9 MessageID 0…7", "page_start": 570, "page_end": 569, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "8", "title": "Port Power Role 0 or 1", "content": "7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 3…0 Message Type 1111b (Vendor Defined Message) VDM Header B31…16 Standard or Vendor ID (SVID) SVID for the Mode being exited B15 VDM Type 1 (Structured VDM) B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b B10…8 Object Position 001b (identifies the previously entered Mode by its Object Position that is to be exited) B7…6 Command Type 00b (Initiator) B5 Reserved 0 B4…0 Command 5 (Exit Mode) C.5.2 Exit Mode Command response The Responder that receives the Exit Mode Command request sends a Message Header with the Number of Data Objects field set to a value of 1 followed by a VDM Header with the Message Source (B5) set to 1 indicating the Command is from a Responder and the Command (B4…0) set to 5 indicating the Responder has exited the Mode and has returned to normal USB operation. Table C-12 shows the contents of the key fields in the Message Header and VDM header for a Responder sending an Exit Mode Command ACK response. Table C-12 Exit Mode Command response from Responder Example Bit(s) Field Value Message Header", "page_start": 570, "page_end": 569, "content_type": "text", "tables": [{"table_id": "Table C-12 shows the contents of the key fields in the Message Header and VDM header for a Responder sending an", "caption": "Table C-12 shows the contents of the key fields in the Message Header and VDM header for a Responder sending an", "page": 570, "data": []}, {"table_id": "Table C-12 Exit Mode Command response from Responder Example", "caption": "Table C-12 Exit Mode Command response from Responder Example", "page": 570, "data": []}], "figures": [], "subsections": [], "word_count": 189, "tags": ["power"]}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 1 (VDM Header) 11…9 MessageID 0…7", "page_start": 570, "page_end": 569, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "8", "title": "Port Power Role 0 or 1", "content": "Page 570 USB Power Delivery Specification Revision 3.0, Version 1.1 Bit(s) Field Value 7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 3…0 Message Type 1111b (Vendor Defined Message) VDM Header B31…16 Standard or Vendor ID (SVID) SVID for the Mode exited B15 VDM Type 1 (Structured VDM) B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b B10…8 Object Position 001b (offset of the Mode to be exited) B7…6 Command Type 01b (Responder ACK) B5 Reserved 0 B4…0 Command 5 (Exit Mode) USB Power Delivery Specification Revision 3.0, Version 1.1 Page 571 C.6 Attention Example C.6.1 Attention Command request The Initiator of the Attention Command request sends a Message Header with the Number of Data Objects field set to 1 followed by a VDM Header with the Message Source (B5) set to zero indicating the Command is from an Initiator and the Command (B4…0) set to 6 to request attention from the Responder. Table C-11 shows the contents of the key fields in the Message Header and VDM header for an Initiator sending an Attention Command request. Table C-13 Attention Command request from Initiator Example Bit(s) Field Value Message Header", "page_start": 570, "page_end": 571, "content_type": "text", "tables": [{"table_id": "Table C-11 shows the contents of the key fields in the Message Header and VDM header for an Initiator sending an", "caption": "Table C-11 shows the contents of the key fields in the Message Header and VDM header for an Initiator sending an", "page": 572, "data": []}, {"table_id": "Table C-13 Attention Command request from Initiator Example", "caption": "Table C-13 Attention Command request from Initiator Example", "page": 572, "data": []}], "figures": [], "subsections": [], "word_count": 191, "tags": ["power"]}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 1 (VDM Header) 11…9 MessageID 0…7", "page_start": 572, "page_end": 571, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 11, "tags": []}
{"section_id": "8", "title": "Port Power Role 0 or 1", "content": "7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 3…0 Message Type 1111b (Vendor Defined Message) VDM Header B31…16 Standard or Vendor ID (SVID) SVID for which attention is being requested B15 VDM Type 1 (Structured VDM) B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b B10…8 Object Position 001b (offset of the Mode requesting attention) B7…6 Command Type 000b (Initiator) B5 Reserved 0 B4…0 Command 6 (Attention) C.6.2 Attention Command request with additional VDO The Initiator of the Attention Command request sends a Message Header with the Number of Data Objects field set to 2 indicating an additional VDO followed by a VDM Header with the Message Source (B5) set to zero indicating the Command is from an Initiator and the Command (B4…0) set to 6 to request attention from the Responder. Table C-11 shows the contents of the key fields in the Message Header and VDM header for an Initiator sending an Attention Command request with an additional VDO. Table C-14 Attention Command request from Initiator with additional VDO Example Bit(s) Field Value Message Header", "page_start": 572, "page_end": 571, "content_type": "text", "tables": [{"table_id": "Table C-11 shows the contents of the key fields in the Message Header and VDM header for an Initiator sending an", "caption": "Table C-11 shows the contents of the key fields in the Message Header and VDM header for an Initiator sending an", "page": 572, "data": []}, {"table_id": "Table C-14 Attention Command request from Initiator with additional VDO Example", "caption": "Table C-14 Attention Command request from Initiator with additional VDO Example", "page": 572, "data": []}], "figures": [], "subsections": [], "word_count": 178, "tags": ["power"]}
{"section_id": "15", "title": "Reserved 0", "content": "14…12 Number of Data Objects 2 (VDM Header + VDO) 11…9 MessageID 0…7", "page_start": 572, "page_end": 571, "content_type": "text", "tables": [], "figures": [], "subsections": [], "word_count": 13, "tags": []}
{"section_id": "8", "title": "Port Power Role 0 or 1", "content": "7…6 Specification Revision 10b (Revision 3.0) 5…4 Reserved 0 Page 572 USB Power Delivery Specification Revision 3.0, Version 1.1 Bit(s) Field Value 3…0 Message Type 1111b (Vendor Defined Message) VDM Header B31…16 Standard or Vendor ID (SVID) SVID for which attention is being requested B15 VDM Type 1 (Structured VDM) B14…13 Structured VDM Version 01b (Version 2.0) B12…11 Reserved 00b B10…8 Object Position 001b (offset of the Mode requesting attention) B7…6 Command Type 000b (Initiator) B5 Reserved 0 B4…0 Command 6 (Attention) Including Optional Mode specific VDO B31…0 Mode specific USB Power Delivery Specification Revision 3.0, Version 1.1 Page 573 D. BMC Receiver Design Examples The BMC signal is DC-coupled so that the voltage level is affected by the ground IR drop. The DC offset of the BMC signal at Power Source and Power Sink are in the opposite directions. When the V current is increased from 0A, the BUS BMC signal waveform shifts downward at Power Sink and shifts upward at Power Source. This section introduces two sample BMC receiver circuit implementations, which are immune from DC offset and high current load step. They can be used in Power Source, Power Sink and inside cables. D.1 Finite Difference Scheme D.1.1 Sample Circuitry The sample Finite Difference BMC receiver shown in Figure D-1 consists of the Rx bandwidth limiting filter with the time constant tRxFilter, a sampler with the sampling step Dt , 50ns, a Finite Difference Calculator which calculates the S voltage difference between the time interval of Dt , 300ns, an edge detector controlled by two voltage thresholds, V FD th, and V and a logic block for bit recognition. H th, L Figure D-1 Circuit Block of BMC Finite Difference Receiver D.1.2 Theory This section describes the fundamental theory of Finite Difference Scheme to recover the received BMC signal with the input and output signal waveforms of the circuit blocks shown in Figure D-1. To illustrate the robustness of the implementation, the V current load step rate is intentionally increased to 2A/µs at the sink load. In Figure D-2(a), BUS the red curve represents the V current measured at the Power Sink when the current is increased at 9 µs from 0A to BUS 5A and the blue dash curve represents the V current measured at the USB Type-C connector of the power sink. In BUS this example, the peak current overshoot with larger load step rate is increased to 518 mA which exceeds iOvershoot. Figure D-2(b) shows the total BMC noise at Power Sink, coupled from V and D+/D- through the worst [USB Type-C BUS 1.2] compliant cable, after the Rx bandwidth limiting filter with the time constant tRxFilter is applied. The noise can be decomposed into 3 components. The first is the DC offset, I (t)*R , while I is the V current and R is the VBUS GND VBUS BUS GND ground DC resistance of the cable. The offset is negative in Power Sink and positive at Power Source. The second noise component is the inductive V noise, M*d I (t)/dt, while M is the mutual inductance between the V and CC BUS VBUS BUS wires in the cable and d I (t)/dt is the load step rate. The third component is [USB 2.0] Full Speed SE0 coupling VBUS noise which would normally occur randomly but was assumed to occur periodically in the simulation to account for the crosstalk in any phase between the BMC and [USB 2.0] signals. In Figure D-3, the blue dash curve represents the BMC signal when there is no V current and the red solid curve represents the BMC signal affected by the V BUS BUS coupling noise shown in Figure D-2(b). The green solid curve is the sample [USB 2.0] noise, after the Rx bandwidth limiting filter with the time constant tRxFilter is applied. Page 574 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure D-2 BMC AC and DC noise from VBUS at Power Sink Figure D-3 Sample BMC Signals (a) without [USB 2.0] SE0 Noise (b) with [USB 2.0] SE0 Noise (a) (b) The BMC signals shown in Figure D-3 are sampled every 50ns and the scaled derivative waveforms, Vcc(t) - Vcc(t - 50ns), without and with [USB 2.0] noise are shown in Figure D-4(a) and D-4(b), respectively. In Figure D-4(a), if there is no [USB 2.0] noise, the derivative waveform just changes slightly before and after the V current transition. That BUS means, the slope of the BMC waveform is not sensitive to the DC offset and is very useful to be used to design a robust receiver against a large DC offset. However, the derivative waveforms with [USB 2.0] noise have large perturbation as shown in Figure D-4(b). USB Power Delivery Specification Revision 3.0, Version 1.1 Page 575 Figure D-4 Scaled BMC Signal Derivative with 50ns Sampling Rate (a) without [USB 2.0] Noise (b) with [USB 2.0] Noise (a) (b) To remove the high frequency content of the [USB 2.0] noise, Finite Difference technique with the proper time interval is applied to the BMC waveform with [USB 2.0] noise in Figure D-3(b). Using Backward Finite Difference Calculator, DVcc = Vcc (t) - Vcc(t-Dt), Figure D-5 shows the Finite Difference Output while Dt = 500ns. The larger the time interval Dt is, the larger the peak-to-peak magnitude of the Finite Difference Output will be. However, the time interval is bounded by the rise time of the BMC signal so that 300ns to 500ns is a good range of the time interval. Figure D-5 BMC Signal and Finite Difference Output with Various Time Steps D.1.3 Data Recovery The edge detection is followed by the Finite Difference Calculation. At the input of the edge detector, if the voltage is larger than V at the rising edge, the output will become high voltage level, V , if the voltage is smaller than V at th, H H th, L the falling edge, the output will become low voltage level, V . In this example, V and V are 0.2V and -0.2V, L th, H th, L respectively. The solid curve in Figure D-6 represents the output of the edge detector, where V is 0.5V and V is -0.5V. H L Page 576 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure D-6 Output of Finite Difference in dash line and Edge Detector in solid line The duty cycle of the output signal from the edge detector varies depending on the thresholds, V and V , as well th, H th, L as jitter and noise from silicon and channel. The techniques such as integrating receiver can be used to recover the BMC signal. D.1.4 Noise Zone and Detection Zone Figure D-7 shows the output of Finite Difference when the time interval of Finite Difference is set to 300ns. The noise Zone is defined in between +Vnoise and –Vnoise, in which the noise glitches occur. The detect zone is defined in between +Vdetect and –Vdetect, excluding the noise zone. The thresholds of the edge detectors, V and V , Shall th, H th, L be properly set within the detect zone so that the data can be recovered successfully. In this example, Vdetect is 250mV and Vnoise is 50mV. It is highly recommended that the product implemented with the similar techniques indicates the performance with the range of Vnoise and Vdetect in the electrical specification. Figure D-7 Noise Zone and Detect Zone of BMC Receiver USB Power Delivery Specification Revision 3.0, Version 1.1 Page 577 D.2 Subtraction Scheme D.2.1 Sample Circuitry The sample Subtraction BMC receiver shown in Figure D-8 consists of the two Low Pass Filters (LPF1 and LPF2), a Subtractor, an Edge Detector and a logic block for bit recognition. The time constant of the first and second LPF are 200ns and 300ns, respectively. The Subtractor subtracts the LPF1 output from the LPF2 output. The Edge Detector controlled by two voltage thresholds, V and V to recover the data. th, H th, L Figure D-8 Circuit Block of BMC Subtraction Receiver D.2.2 Output of Each Circuit Block Figure D-9(a) shows the output of LPF1 as the red solid line and LPF2 as the blue dash line as well as the [USB 2.0] noise in green solid line. Figure D-9(b) shows the voltage difference between the two output filters, Vdiff = Vcc_afterLPF1 – Vcc_afterLPF2. The Vdiff waveform looks very similar to the Finite Difference output waveform shown in Figure D-6 so that the data recovery method through the edge detector is the same as described in Section D.1.3. Figure D-9 (a) Output of LPF1 and LPF2 (b) Subtraction of LPF1 and LPF2 Output (a) (b) D.2.3 Subtractor Output at Power Source and Power Sink The following figures shows the example when the VBUS current increases from 0A to 5A and then decreases to 0A with high load step rate. The output of the LPF1 and the Subtractor at Power Source and Power Sink are shown in Figure D-10 (a) and (b), respectively. Although the BMC signals at Power Source and Power Sink shift toward the opposite direction, the Subtractor outputs at Power Source and Power Sink are almost identical disregard of the opposite direction of the DC offset. Page 578 USB Power Delivery Specification Revision 3.0, Version 1.1 Figure D-10 Output of the BMC LPF1 in blue dash curve and the Subtractor in red solid curve (a) at Power Source (b) at Power Sink (a) (b) D.2.4 Noise Zone and Detection Zone The zone definition is the same as defined in Section D.1.7. The sizes of the noise zone and detection zone of the Subtraction Scheme are dependent on the filter time constant. When the time constant of the first and second LPF are 200ns and 300ns, respectively, Vdetect is 250mV and Vnoise is 50mV. It is highly recommended that the product implemented with the similar techniques indicates the performance with the range of Vnoise and Vdetect in the electrical specification. USB Power Delivery Specification Revision 3.0, Version 1.1 Page 579", "page_start": 572, "page_end": 572, "content_type": "text", "tables": [], "figures": [{"figure_id": "The sample Finite Difference BMC receiver shown in Figure D-1 consists of the Rx bandwidth limiting filter with the", "caption": "The sample Finite Difference BMC receiver shown in Figure D-1 consists of the Rx bandwidth limiting filter with the", "page": 574}, {"figure_id": "Figure D-1 Circuit Block of BMC Finite Difference Receiver", "caption": "Figure D-1 Circuit Block of BMC Finite Difference Receiver", "page": 574}, {"figure_id": "the input and output signal waveforms of the circuit blocks shown in Figure D-1. To illustrate the robustness of the", "caption": "the input and output signal waveforms of the circuit blocks shown in Figure D-1. To illustrate the robustness of the", "page": 574}, {"figure_id": "implementation, the V current load step rate is intentionally increased to 2A/µs at the sink load. In Figure D-2(a),", "caption": "implementation, the V current load step rate is intentionally increased to 2A/µs at the sink load. In Figure D-2(a),", "page": 574}, {"figure_id": "Figure D-2(b) shows the total BMC noise at Power Sink, coupled from V and D+/D- through the worst [USB Type-C", "caption": "Figure D-2(b) shows the total BMC noise at Power Sink, coupled from V and D+/D- through the worst [USB Type-C", "page": 574}, {"figure_id": "the crosstalk in any phase between the BMC and [USB 2.0] signals. In Figure D-3, the blue dash curve represents the", "caption": "the crosstalk in any phase between the BMC and [USB 2.0] signals. In Figure D-3, the blue dash curve represents the", "page": 574}, {"figure_id": "coupling noise shown in Figure D-2(b). The green solid curve is the sample [USB 2.0] noise, after the Rx bandwidth", "caption": "coupling noise shown in Figure D-2(b). The green solid curve is the sample [USB 2.0] noise, after the Rx bandwidth", "page": 574}, {"figure_id": "Figure D-2 BMC AC and DC noise from VBUS at Power Sink", "caption": "Figure D-2 BMC AC and DC noise from VBUS at Power Sink", "page": 575}, {"figure_id": "Figure D-3 Sample BMC Signals (a) without [USB 2.0] SE0 Noise (b) with [USB 2.0] SE0 Noise", "caption": "Figure D-3 Sample BMC Signals (a) without [USB 2.0] SE0 Noise (b) with [USB 2.0] SE0 Noise", "page": 575}, {"figure_id": "The BMC signals shown in Figure D-3 are sampled every 50ns and the scaled derivative waveforms, Vcc(t) - Vcc(t -", "caption": "The BMC signals shown in Figure D-3 are sampled every 50ns and the scaled derivative waveforms, Vcc(t) - Vcc(t -", "page": 575}, {"figure_id": "50ns), without and with [USB 2.0] noise are shown in Figure D-4(a) and D-4(b), respectively. In Figure D-4(a), if there", "caption": "50ns), without and with [USB 2.0] noise are shown in Figure D-4(a) and D-4(b), respectively. In Figure D-4(a), if there", "page": 575}, {"figure_id": "shown in Figure D-4(b).", "caption": "shown in Figure D-4(b).", "page": 575}, {"figure_id": "Figure D-4 Scaled BMC Signal Derivative with 50ns Sampling Rate", "caption": "Figure D-4 Scaled BMC Signal Derivative with 50ns Sampling Rate", "page": 576}, {"figure_id": "is applied to the BMC waveform with [USB 2.0] noise in Figure D-3(b). Using Backward Finite Difference Calculator,", "caption": "is applied to the BMC waveform with [USB 2.0] noise in Figure D-3(b). Using Backward Finite Difference Calculator,", "page": 576}, {"figure_id": "DVcc = Vcc (t) - Vcc(t-Dt), Figure D-5 shows the Finite Difference Output while Dt = 500ns. The larger the time interval", "caption": "DVcc = Vcc (t) - Vcc(t-Dt), Figure D-5 shows the Finite Difference Output while Dt = 500ns. The larger the time interval", "page": 576}, {"figure_id": "Figure D-5 BMC Signal and Finite Difference Output with Various Time Steps", "caption": "Figure D-5 BMC Signal and Finite Difference Output with Various Time Steps", "page": 576}, {"figure_id": "respectively. The solid curve in Figure D-6 represents the output of the edge detector, where V is 0.5V and V is -0.5V.", "caption": "respectively. The solid curve in Figure D-6 represents the output of the edge detector, where V is 0.5V and V is -0.5V.", "page": 576}, {"figure_id": "Figure D-6 Output of Finite Difference in dash line and Edge Detector in solid line", "caption": "Figure D-6 Output of Finite Difference in dash line and Edge Detector in solid line", "page": 577}, {"figure_id": "Figure D-7 shows the output of Finite Difference when the time interval of Finite Difference is set to 300ns. The noise", "caption": "Figure D-7 shows the output of Finite Difference when the time interval of Finite Difference is set to 300ns. The noise", "page": 577}, {"figure_id": "Figure D-7 Noise Zone and Detect Zone of BMC Receiver", "caption": "Figure D-7 Noise Zone and Detect Zone of BMC Receiver", "page": 577}, {"figure_id": "The sample Subtraction BMC receiver shown in Figure D-8 consists of the two Low Pass Filters (LPF1 and LPF2), a", "caption": "The sample Subtraction BMC receiver shown in Figure D-8 consists of the two Low Pass Filters (LPF1 and LPF2), a", "page": 578}, {"figure_id": "Figure D-8 Circuit Block of BMC Subtraction Receiver", "caption": "Figure D-8 Circuit Block of BMC Subtraction Receiver", "page": 578}, {"figure_id": "Figure D-9(a) shows the output of LPF1 as the red solid line and LPF2 as the blue dash line as well as the [USB 2.0]", "caption": "Figure D-9(a) shows the output of LPF1 as the red solid line and LPF2 as the blue dash line as well as the [USB 2.0]", "page": 578}, {"figure_id": "noise in green solid line. Figure D-9(b) shows the voltage difference between the two output filters, Vdiff =", "caption": "noise in green solid line. Figure D-9(b) shows the voltage difference between the two output filters, Vdiff =", "page": 578}, {"figure_id": "shown in Figure D-6 so that the data recovery method through the edge detector is the same as described in Section", "caption": "shown in Figure D-6 so that the data recovery method through the edge detector is the same as described in Section", "page": 578}, {"figure_id": "Figure D-9 (a) Output of LPF1 and LPF2 (b) Subtraction of LPF1 and LPF2 Output", "caption": "Figure D-9 (a) Output of LPF1 and LPF2 (b) Subtraction of LPF1 and LPF2 Output", "page": 578}, {"figure_id": "Figure D-10 (a) and (b), respectively. Although the BMC signals at Power Source and Power Sink shift toward the", "caption": "Figure D-10 (a) and (b), respectively. Although the BMC signals at Power Source and Power Sink shift toward the", "page": 578}, {"figure_id": "Figure D-10 Output of the BMC LPF1 in blue dash curve and the Subtractor in red solid curve", "caption": "Figure D-10 Output of the BMC LPF1 in blue dash curve and the Subtractor in red solid curve", "page": 579}], "subsections": [], "word_count": 1663, "tags": ["power"]}
